{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*","webpack:///donut.min.js","webpack:///webpack/bootstrap 55e57523fbdb728288bc?177e*","webpack:///./src/charts/donut.js","webpack:///external \"d3\"?c0c4*","webpack:///./src/charts/helpers/exportChart.js?f69b","webpack:///./src/charts/helpers/serializeWithStyles.js?b833","webpack:///./~/base-64/base64.js?68a6","webpack:///(webpack)/buildin/module.js?c3c2","webpack:///./src/charts/helpers/text.js"],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","d3","exportChart","textHelper","_selection","each","_data","chartWidth","width","margin","left","right","chartHeight","height","top","bottom","data","cleanData","buildLayout","buildColorScale","buildShape","buildSVG","drawSlices","initTooltip","colorScheme","colorScale","scale","ordinal","range","buildContainerGroups","container","svg","append","classed","attr","transform","layout","pie","padAngle","paddingAngle","value","getQuantity","sort","sortComparator","shape","arc","innerRadius","internalRadius","padRadius","externalRadius","select","selectAll","enter","transition","ease","map","d","quantity","quantityLabel","name","String","nameLabel","percentage","percentageLabel","drawLegend","obj","text","wrapText","legendWidth","slices","duration","arcTransitionDuration","attrTween","tweenArc","storeAngle","reduceOuterRadius","on","handleMouseOver","handleMouseOut","getSliceFill","tweenGrowthFactory","radiusHoverOffset","pieHoverTransitionDuration","pieDrawingTransitionDuration","tweenLoading","cleanLegend","datum","dispatch","customMouseOver","customMouseOut","interpolate","_current","t","outerRadius","delay","b","startAngle","endAngle","fontSize","node","category20c","_ref","_ref2","_x","arguments","length","filename","rebind","undefined","d3svg","canvasWidth","canvasHeight","html","convertSvgToHtml","canvas","createCanvas","img","createImage","onload","handleImageLoad","bind","e","preventDefault","drawImageOnCanvas","downloadCanvas","config","defaultFilename","serializer","serializeWithStyles","initializeSerializer","version","xmlns","serialized","replace","styleBackgroundString","document","createElement","svgHtml","Image","src","imageSourceBase","encoder","image","getContext","drawImage","extensionType","url","toDataURL","link","href","download","body","appendChild","click","removeChild","window","btoa","encode","styleClass","chartBackground","computeDefaultStyleByTagName","tagName","defaultStyle","element","computedStyle","getComputedStyle","forEach","style","getDefaultStyleByTagName","toUpperCase","defaultStylesByTagName","elem","cssTexts","elements","result","nodeType","Node","ELEMENT_NODE","querySelectorAll","el","noStyleTags","cssText","cssPropName","outerHTML","console","error","BASE","HEAD","HTML","META","NOFRAME","NOSCRIPT","PARAM","SCRIPT","STYLE","TITLE","tagNames","global","freeExports","freeGlobal","InvalidCharacterError","message","prototype","Error","TABLE","REGEX_SPACE_CHARACTERS","decode","input","test","bitStorage","buffer","bitCounter","output","position","indexOf","charAt","fromCharCode","padding","charCodeAt","base64","webpackPolyfill","deprecate","paths","children","wrapConfig","lineHeight","smallTextOffset","smallTextLineHeightRatio","smallTextRatio","valueClassName","labelClassName","availableWidth","words","split","reverse","word","line","lineNumber","smallLineHeight","y","dy","parseFloat","smallFontSize","tspan","pop","push","join","getComputedTextLength"],"mappings":"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","file":"donut.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"d3\")) : factory(root[\"d3\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"d3\")) : factory(root[\"d3\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3 = __webpack_require__(1);\n\t    var exportChart = __webpack_require__(2);\n\t    var textHelper = __webpack_require__(6);\n\t\n\t    /**\n\t     * @typedef DonutChartData\n\t     * @type {Object[]}\n\t     * @property {Number} quantity     Quantity of the group (required)\n\t     * @property {Number} percentage   Percentage of the total (required)\n\t     * @property {String} name         Name of the group (required)\n\t     * @property {Number} id           Identifier for the group required for legend feature (optional)\n\t     *\n\t     * @example\n\t     * [\n\t     *     {\n\t     *         quantity: 1,\n\t     *         percentage: 50,\n\t     *         name: 'glittering',\n\t     *         id: 1\n\t     *     },\n\t     *     {\n\t     *         quantity: 1,\n\t     *         percentage: 50,\n\t     *         name: 'luminous',\n\t     *         id: 2\n\t     *     }\n\t     * ]\n\t     */\n\t\n\t    /**\n\t     * Reusable Donut Chart API class that renders a\n\t     * simple and configurable donut chart.\n\t     *\n\t     * @module Donut\n\t     * @version 0.0.1\n\t     * @tutorial donut\n\t     * @requires d3\n\t     *\n\t     * @example\n\t     * var donutChart = donut();\n\t     *\n\t     * donutChart\n\t     *     .externalRadius(500)\n\t     *     .internalRadius(200);\n\t     *\n\t     * d3.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(donutChart);\n\t     *\n\t     */\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 60,\n\t            right: 60,\n\t            bottom: 60,\n\t            left: 60\n\t        },\n\t            width = 300,\n\t            height = 300,\n\t            ease = 'cubic-in-out',\n\t            arcTransitionDuration = 750,\n\t            pieDrawingTransitionDuration = 1200,\n\t            pieHoverTransitionDuration = 150,\n\t            radiusHoverOffset = 15,\n\t            paddingAngle = 0.015,\n\t            data = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            externalRadius = 140,\n\t            internalRadius = 45.5,\n\t            legendWidth = externalRadius + internalRadius,\n\t            layout = void 0,\n\t            shape = void 0,\n\t            slices = void 0,\n\t            svg = void 0,\n\t            quantityLabel = 'quantity',\n\t            nameLabel = 'name',\n\t            percentageLabel = 'percentage',\n\t\n\t\n\t        // colors\n\t        colorScale = d3.scale.category20c(),\n\t            colorScheme = ['#00AF38', '#41C2C9', '#F6C664', '#F4693A', '#9A66D7'],\n\t\n\t\n\t        // utils\n\t        storeAngle = function storeAngle(d) {\n\t            this._current = d;\n\t        },\n\t            reduceOuterRadius = function reduceOuterRadius(d) {\n\t            d.outerRadius = externalRadius - radiusHoverOffset;\n\t        },\n\t            sortComparator = function sortComparator(a, b) {\n\t            return b.quantity - a.quantity;\n\t        },\n\t\n\t\n\t        // extractors\n\t        getQuantity = function getQuantity(_ref) {\n\t            var quantity = _ref.quantity;\n\t            return quantity;\n\t        },\n\t            getSliceFill = function getSliceFill(_ref2) {\n\t            var data = _ref2.data;\n\t            return colorScale(data.name);\n\t        },\n\t\n\t\n\t        // events\n\t        dispatch = d3.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\t\n\t        /**\n\t         * This function creates the graph using the selection as container\n\t         *\n\t         * @param {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {DonutChartData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = cleanData(_data);\n\t\n\t                buildLayout();\n\t                buildColorScale();\n\t                buildShape();\n\t                buildSVG(this);\n\t                drawSlices();\n\t                initTooltip();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Builds color scale for chart, if any colorScheme was defined\n\t         * @private\n\t         */\n\t        function buildColorScale() {\n\t            if (colorScheme) {\n\t                colorScale = d3.scale.ordinal().range(colorScheme);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the legend and a wrapper for all of them\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr({\n\t                transform: 'translate(' + width / 2 + ', ' + height / 2 + ')'\n\t            });\n\t\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('legend-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds the pie layout that will produce data ready to draw\n\t         * @private\n\t         */\n\t        function buildLayout() {\n\t            layout = d3.layout.pie().padAngle(paddingAngle).value(getQuantity).sort(sortComparator);\n\t        }\n\t\n\t        /**\n\t         * Builds the shape function\n\t         * @private\n\t         */\n\t        function buildShape() {\n\t            shape = d3.svg.arc().innerRadius(internalRadius).padRadius(externalRadius);\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         *\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            svg = d3.select(container).selectAll('svg').data([data]);\n\t\n\t            svg.enter().append('svg').attr('class', 'britechart donut-chart');\n\t\n\t            buildContainerGroups();\n\t\n\t            svg.transition().ease(ease).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom);\n\t        }\n\t\n\t        /**\n\t         * Cleaning data adding the proper format\n\t         * @param  {DonutChartData} data Data\n\t         * @private\n\t         */\n\t        function cleanData(data) {\n\t            return data.map(function (d) {\n\t                d.quantity = +d[quantityLabel];\n\t                d.name = String(d[nameLabel]);\n\t                d.percentage = String(d[percentageLabel]);\n\t\n\t                return d;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws the values on the donut slice inside the text element\n\t         *\n\t         * @param  {Object} obj Data object\n\t         * @private\n\t         */\n\t        function drawLegend(obj) {\n\t            if (obj.data) {\n\t                svg.select('.donut-text').text(function () {\n\t                    return obj.data.percentage + '% ' + obj.data.name;\n\t                }).attr('dy', '.2em').attr('text-anchor', 'middle');\n\t\n\t                svg.select('.donut-text').call(wrapText, legendWidth);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the slices of the donut\n\t         * @private\n\t         */\n\t        function drawSlices() {\n\t            if (!slices) {\n\t                slices = svg.select('.chart-group').selectAll('g.arc').data(layout(data));\n\t\n\t                slices.enter().append('g').each(storeAngle).each(reduceOuterRadius).classed('arc', true).on('mouseover', handleMouseOver).on('mouseout', handleMouseOut);\n\t\n\t                slices.append('path').attr('fill', getSliceFill).on('mouseover', tweenGrowthFactory(externalRadius, 0)).on('mouseout', tweenGrowthFactory(externalRadius - radiusHoverOffset, pieHoverTransitionDuration)).transition().ease(ease).duration(pieDrawingTransitionDuration).attrTween('d', tweenLoading);\n\t            } else {\n\t                slices = svg.select('.chart-group').selectAll('path').data(layout(data));\n\t\n\t                slices.attr('d', shape);\n\t\n\t                // Redraws the angles of the data\n\t                slices.transition().duration(arcTransitionDuration).attrTween('d', tweenArc);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Cleans any value that could be on the legend text element\n\t         * @private\n\t         */\n\t        function cleanLegend() {\n\t            svg.select('.donut-text').text('');\n\t        }\n\t\n\t        function handleMouseOver(datum) {\n\t            drawLegend(datum);\n\t\n\t            dispatch.customMouseOver(datum);\n\t        }\n\t\n\t        function handleMouseOut() {\n\t            cleanLegend();\n\t\n\t            dispatch.customMouseOut();\n\t        }\n\t\n\t        /**\n\t         * Creates the text element that will hold the legend of the chart\n\t         */\n\t        function initTooltip() {\n\t            svg.select('.legend-group').append('text').attr('class', 'donut-text');\n\t        }\n\t\n\t        /**\n\t         * Stores current angles and interpolates with new angles\n\t         * Check out {@link http://bl.ocks.org/mbostock/1346410| this example}\n\t         *\n\t         * @param  {Object}     a   New data for slice\n\t         * @return {Function}       Tweening function for the donut shape\n\t         * @private\n\t         */\n\t        function tweenArc(a) {\n\t            var i = d3.interpolate(this._current, a);\n\t\n\t            this._current = i(0);\n\t\n\t            return function (t) {\n\t                return shape(i(t));\n\t            };\n\t        }\n\t\n\t        /**\n\t         * Generates animations with tweens depending on the attributes given\n\t         *\n\t         * @param  {Number} outerRadius Final outer radius value\n\t         * @param  {Number} delay       Delay of animation\n\t         * @return {Function}           Function that when called will tween the element\n\t         * @private\n\t         */\n\t        function tweenGrowthFactory(outerRadius, delay) {\n\t            return function () {\n\t                d3.select(this).transition().delay(delay).attrTween('d', function (d) {\n\t                    var i = d3.interpolate(d.outerRadius, outerRadius);\n\t\n\t                    return function (t) {\n\t                        d.outerRadius = i(t);\n\t\n\t                        return shape(d);\n\t                    };\n\t                });\n\t            };\n\t        }\n\t\n\t        /**\n\t         * Animation for chart loading\n\t         * Check out {@link http://bl.ocks.org/mbostock/4341574| this example}\n\t         *\n\t         * @param  {Object} b Data point\n\t         * @return {Function}   Tween function\n\t         * @private\n\t         */\n\t        function tweenLoading(b) {\n\t            var i = void 0;\n\t\n\t            b.innerRadius = 0;\n\t            i = d3.interpolate({ startAngle: 0, endAngle: 0 }, b);\n\t\n\t            return function (t) {\n\t                return shape(i(t));\n\t            };\n\t        }\n\t\n\t        /**\n\t         * Utility function that wraps a text into the given width\n\t         *\n\t         * @param  {D3Selection} text         Text to write\n\t         * @param  {Number} legendWidth Width of the container\n\t         * @private\n\t         */\n\t        function wrapText(text, legendWidth) {\n\t            var fontSize = externalRadius / 5;\n\t\n\t            textHelper.wrapText.call(null, fontSize, legendWidth, text.node());\n\t        }\n\t\n\t        /**\n\t         * Gets or Sets the colorScheme of the chart\n\t         * @param  {Array} _x Color scheme array to get/set\n\t         * @return { (Number | Module) } Current colorScheme or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.colorScheme = function (_x) {\n\t            if (!arguments.length) {\n\t                return colorScheme;\n\t            }\n\t            colorScheme = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the externalRadius of the chart\n\t         * @param  {Number} _x ExternalRadius number to get/set\n\t         * @return { (Number | Module) } Current externalRadius or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.externalRadius = function (_x) {\n\t            if (!arguments.length) {\n\t                return externalRadius;\n\t            }\n\t            externalRadius = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { (Number | Module) } Current height or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            height = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the internalRadius of the chart\n\t         * @param  {Number} _x InternalRadius number to get/set\n\t         * @return { (Number | Module) } Current internalRadius or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.internalRadius = function (_x) {\n\t            if (!arguments.length) {\n\t                return internalRadius;\n\t            }\n\t            internalRadius = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { (Number | Module) } Current margin or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { (Number | Module) } Current width or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            width = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename) {\n\t            exportChart.call(exports, svg, filename);\n\t        };\n\t\n\t        // Rebind 'customHover' event to the \"exports\" function, so it's available \"externally\" under the typical \"on\" method:\n\t        d3.rebind(exports, dispatch, 'on');\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t\n\t    'use strict';\n\t\n\t    var serializeWithStyles = __webpack_require__(3);\n\t\n\t    var encoder = window.btoa;\n\t\n\t    if (!encoder) {\n\t        encoder = __webpack_require__(4).encode;\n\t    }\n\t\n\t    var config = {\n\t        styleClass: 'britechartStyle',\n\t        defaultFilename: 'britechart.png',\n\t        chartBackground: 'white',\n\t        imageSourceBase: 'data:image/svg+xml;base64,',\n\t        get styleBackgroundString() {\n\t            return '<style>svg{background:' + this.chartBackground + ';}</style>';\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Main function to be used as a method by chart instances to export charts to png\n\t     * @param  {array} svgs (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n\t     * @param  {string} filename [download to be called <filename>.png]\n\t     */\n\t    function exportChart(d3svg, filename) {\n\t        var canvasWidth = this.width(),\n\t            canvasHeight = this.height();\n\t\n\t        var html = convertSvgToHtml(d3svg);\n\t\n\t        var canvas = createCanvas(canvasWidth, canvasHeight);\n\t\n\t        var img = createImage(html);\n\t\n\t        img.onload = handleImageLoad.bind(img, canvas, filename);\n\t    }\n\t\n\t    /**\n\t     * Handles on load event fired by img.onload, this=img\n\t     * @param  {object} canvas TYPE: el <canvas>\n\t     * @param  {string} filename\n\t     * @param  {object} e\n\t     */\n\t    function handleImageLoad(canvas, filename, e) {\n\t        e.preventDefault();\n\t        drawImageOnCanvas(this, canvas);\n\t        downloadCanvas(canvas, filename || config.defaultFilename);\n\t    }\n\t\n\t    /**\n\t     * takes d3 svg el, adds proper svg tags, adds inline styles\n\t     * from stylesheets, adds white background and returns string\n\t     * @param  {object} d3svg TYPE d3 svg element\n\t     * @return {string} string of passed d3\n\t     */\n\t    function convertSvgToHtml(d3svg) {\n\t        var serializer = serializeWithStyles.initializeSerializer();\n\t\n\t        if (!d3svg) {\n\t            return;\n\t        }\n\t\n\t        d3svg.attr({ version: 1.1, xmlns: 'http://www.w3.org/2000/svg' });\n\t\n\t        var serialized = serializer(d3svg.node());\n\t\n\t        return serialized.replace('>', '>' + config.styleBackgroundString);\n\t    }\n\t\n\t    /**\n\t     * Create Canvas\n\t     * @param  {number} width\n\t     * @param  {number} height\n\t     * @return {object} TYPE canvas element\n\t     */\n\t    function createCanvas(width, height) {\n\t        var canvas = document.createElement('canvas');\n\t\n\t        canvas.height = height;\n\t        canvas.width = width;\n\t        return canvas;\n\t    }\n\t\n\t    /**\n\t     * Create Image\n\t     * @param  {string} svgHtml string representation of svg el\n\t     * @return {object}  TYPE element <img>, src points at svg\n\t     */\n\t    function createImage(svgHtml) {\n\t        var img = new Image();\n\t\n\t        img.src = '' + config.imageSourceBase + encoder(svgHtml);\n\t        return img;\n\t    };\n\t\n\t    /**\n\t     * Draws image on canvas\n\t     * @param  {object} image TYPE:el <img>, to be drawn\n\t     * @param  {object} canvas TYPE: el <canvas>, to draw on\n\t     */\n\t    function drawImageOnCanvas(image, canvas) {\n\t        canvas.getContext('2d').drawImage(image, 0, 0);\n\t    }\n\t\n\t    /**\n\t     * Triggers browser to download image, convert canvas to url,\n\t     * we need to append the link el to the dom before clicking it for Firefox to register\n\t     * point <a> at it and trigger click\n\t     * @param  {object} canvas TYPE: el <canvas>\n\t     * @param  {string} filename\n\t     * @param  {string} extensionType\n\t     */\n\t    function downloadCanvas(canvas) {\n\t        var filename = arguments.length <= 1 || arguments[1] === undefined ? 'britechart.png' : arguments[1];\n\t        var extensionType = arguments.length <= 2 || arguments[2] === undefined ? 'image/png' : arguments[2];\n\t\n\t        var url = canvas.toDataURL(extensionType);\n\t        var link = document.createElement('a');\n\t\n\t        link.href = url;\n\t        link.download = filename;\n\t        document.body.appendChild(link);\n\t        link.click();\n\t        document.body.removeChild(link);\n\t    }\n\t\n\t    return exportChart;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function () {\n\t\n\t    'use strict';\n\t\n\t    return {\n\t\n\t        /**\n\t         * returns serializer function, only run it when you know you want to serialize your chart\n\t         * @return {func} serializer to add styles in line to dom string\n\t         */\n\t        initializeSerializer: function initializeSerializer() {\n\t\n\t            // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n\t            var defaultStylesByTagName = {};\n\t\n\t            // Styles inherited from style sheets will not be rendered for elements with these tag names\n\t            var noStyleTags = { 'BASE': true, 'HEAD': true, 'HTML': true, 'META': true, 'NOFRAME': true, 'NOSCRIPT': true, 'PARAM': true, 'SCRIPT': true, 'STYLE': true, 'TITLE': true };\n\t\n\t            // This list determines which css default values lookup tables are precomputed at load time\n\t            // Lookup tables for other tag names will be automatically built at runtime if needed\n\t            var tagNames = ['A', 'ABBR', 'ADDRESS', 'AREA', 'ARTICLE', 'ASIDE', 'AUDIO', 'B', 'BASE', 'BDI', 'BDO', 'BLOCKQUOTE', 'BODY', 'BR', 'BUTTON', 'CANVAS', 'CAPTION', 'CENTER', 'CITE', 'CODE', 'COL', 'COLGROUP', 'COMMAND', 'DATALIST', 'DD', 'DEL', 'DETAILS', 'DFN', 'DIV', 'DL', 'DT', 'EM', 'EMBED', 'FIELDSET', 'FIGCAPTION', 'FIGURE', 'FONT', 'FOOTER', 'FORM', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEAD', 'HEADER', 'HGROUP', 'HR', 'HTML', 'I', 'IFRAME', 'IMG', 'INPUT', 'INS', 'KBD', 'LABEL', 'LEGEND', 'LI', 'LINK', 'MAP', 'MARK', 'MATH', 'MENU', 'META', 'METER', 'NAV', 'NOBR', 'NOSCRIPT', 'OBJECT', 'OL', 'OPTION', 'OPTGROUP', 'OUTPUT', 'P', 'PARAM', 'PRE', 'PROGRESS', 'Q', 'RP', 'RT', 'RUBY', 'S', 'SAMP', 'SCRIPT', 'SECTION', 'SELECT', 'SMALL', 'SOURCE', 'SPAN', 'STRONG', 'STYLE', 'SUB', 'SUMMARY', 'SUP', 'SVG', 'TABLE', 'TBODY', 'TD', 'TEXTAREA', 'TFOOT', 'TH', 'THEAD', 'TIME', 'TITLE', 'TR', 'TRACK', 'U', 'UL', 'VAR', 'VIDEO', 'WBR'];\n\t\n\t            // Precompute the lookup tables.\n\t            [].forEach.call(tagNames, function (name) {\n\t                if (!noStyleTags[name]) {\n\t                    defaultStylesByTagName[name] = computeDefaultStyleByTagName(name);\n\t                }\n\t            });\n\t\n\t            function computeDefaultStyleByTagName(tagName) {\n\t                var defaultStyle = {},\n\t                    element = document.body.appendChild(document.createElement(tagName)),\n\t                    computedStyle = window.getComputedStyle(element);\n\t\n\t                [].forEach.call(computedStyle, function (style) {\n\t                    defaultStyle[style] = computedStyle[style];\n\t                });\n\t                document.body.removeChild(element);\n\t                return defaultStyle;\n\t            }\n\t\n\t            function getDefaultStyleByTagName(tagName) {\n\t                tagName = tagName.toUpperCase();\n\t                if (!defaultStylesByTagName[tagName]) {\n\t                    defaultStylesByTagName[tagName] = computeDefaultStyleByTagName(tagName);\n\t                }\n\t                return defaultStylesByTagName[tagName];\n\t            };\n\t\n\t            function serializeWithStyles(elem) {\n\t\n\t                var cssTexts = [],\n\t                    elements = void 0,\n\t                    computedStyle = void 0,\n\t                    defaultStyle = void 0,\n\t                    result = void 0;\n\t\n\t                if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n\t                    console.error('Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE');\n\t                    return;\n\t                }\n\t\n\t                cssTexts = [];\n\t                elements = elem.querySelectorAll('*');\n\t\n\t                [].forEach.call(elements, function (el, i) {\n\t                    if (!noStyleTags[el.tagName]) {\n\t                        computedStyle = window.getComputedStyle(el);\n\t                        defaultStyle = getDefaultStyleByTagName(el.tagName);\n\t                        cssTexts[i] = el.style.cssText;\n\t                        [].forEach.call(computedStyle, function (cssPropName) {\n\t                            if (computedStyle[cssPropName] !== defaultStyle[cssPropName]) {\n\t                                el.style[cssPropName] = computedStyle[cssPropName];\n\t                            }\n\t                        });\n\t                    }\n\t                });\n\t\n\t                result = elem.outerHTML;\n\t                elements = [].map.call(elements, function (el, i) {\n\t                    el.style.cssText = cssTexts[i];\n\t                    return el;\n\t                });\n\t\n\t                return result;\n\t            };\n\t\n\t            return serializeWithStyles;\n\t        }\n\t    };\n\t}();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n\t;(function(root) {\n\t\n\t\t// Detect free variables `exports`.\n\t\tvar freeExports = typeof exports == 'object' && exports;\n\t\n\t\t// Detect free variable `module`.\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\tmodule.exports == freeExports && module;\n\t\n\t\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t\t// it as `root`.\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar InvalidCharacterError = function(message) {\n\t\t\tthis.message = message;\n\t\t};\n\t\tInvalidCharacterError.prototype = new Error;\n\t\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\t\n\t\tvar error = function(message) {\n\t\t\t// Note: the error messages used throughout this file match those used by\n\t\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\t\tthrow new InvalidCharacterError(message);\n\t\t};\n\t\n\t\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\t\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\t\n\t\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t\t// implementation. https://gist.github.com/atk/1020396\n\t\tvar decode = function(input) {\n\t\t\tinput = String(input)\n\t\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\t\tvar length = input.length;\n\t\t\tif (length % 4 == 0) {\n\t\t\t\tinput = input.replace(/==?$/, '');\n\t\t\t\tlength = input.length;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tlength % 4 == 1 ||\n\t\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t\t) {\n\t\t\t\terror(\n\t\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t\t);\n\t\t\t}\n\t\t\tvar bitCounter = 0;\n\t\t\tvar bitStorage;\n\t\t\tvar buffer;\n\t\t\tvar output = '';\n\t\t\tvar position = -1;\n\t\t\twhile (++position < length) {\n\t\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t};\n\t\n\t\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\t\tvar encode = function(input) {\n\t\t\tinput = String(input);\n\t\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\t\terror(\n\t\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t\t'Latin1 range.'\n\t\t\t\t);\n\t\t\t}\n\t\t\tvar padding = input.length % 3;\n\t\t\tvar output = '';\n\t\t\tvar position = -1;\n\t\t\tvar a;\n\t\t\tvar b;\n\t\t\tvar c;\n\t\t\tvar d;\n\t\t\tvar buffer;\n\t\t\t// Make sure any padding is handled outside of the loop.\n\t\t\tvar length = input.length - padding;\n\t\n\t\t\twhile (++position < length) {\n\t\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\t\tc = input.charCodeAt(++position);\n\t\t\t\tbuffer = a + b + c;\n\t\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t\t// matching character for each of them to the output.\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t\t);\n\t\t\t}\n\t\n\t\t\tif (padding == 2) {\n\t\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\t\tb = input.charCodeAt(++position);\n\t\t\t\tbuffer = a + b;\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t\t'='\n\t\t\t\t);\n\t\t\t} else if (padding == 1) {\n\t\t\t\tbuffer = input.charCodeAt(position);\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t\t'=='\n\t\t\t\t);\n\t\t\t}\n\t\n\t\t\treturn output;\n\t\t};\n\t\n\t\tvar base64 = {\n\t\t\t'encode': encode,\n\t\t\t'decode': decode,\n\t\t\t'version': '0.1.0'\n\t\t};\n\t\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn base64;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = base64;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tfor (var key in base64) {\n\t\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.base64 = base64;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module), (function() { return this; }())))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t\n\t    var wrapConfig = {\n\t        lineHeight: 1.2,\n\t        smallTextOffset: 10,\n\t        smallTextLineHeightRatio: 0.9,\n\t        smallTextRatio: 0.4,\n\t        valueClassName: 'value',\n\t        labelClassName: 'label'\n\t    };\n\t\n\t    /**\n\t     * Wraps a selection of text within the available width\n\t     * @param  {Number} fontSize       Size of the base font\n\t     * @param  {Number} availableWidth Width of the container where the text needs to wrap on\n\t     * @param  {D3Selection} node      SVG text element that contains the text to wrap\n\t     *\n\t     * REF: http://bl.ocks.org/mbostock/7555321\n\t     * More discussions on https://github.com/mbostock/d3/issues/1642\n\t     * @return {void}\n\t     */\n\t    var wrapText = function wrapText(fontSize, availableWidth, node, data, i) {\n\t        var text = d3.select(node),\n\t            words = text.text().split(/\\s+/).reverse(),\n\t            word = void 0,\n\t            line = [],\n\t            lineNumber = 0,\n\t            smallLineHeight = wrapConfig.lineHeight * wrapConfig.smallTextLineHeightRatio,\n\t            y = text.attr('y'),\n\t            dy = parseFloat(text.attr('dy')),\n\t            smallFontSize = fontSize * wrapConfig.smallTextRatio,\n\t            tspan = text.text(null).append('tspan').attr('x', 0).attr('y', y - 5).attr('dy', dy + 'em').classed(wrapConfig.valueClassName, true).style('font-size', fontSize + 'px');\n\t\n\t        tspan.text(words.pop());\n\t        tspan = text.append('tspan').classed(wrapConfig.labelClassName, true).attr('x', 0).attr('y', y + wrapConfig.smallTextOffset).attr('dy', ++lineNumber * smallLineHeight + dy + 'em').style('font-size', smallFontSize + 'px');\n\t\n\t        while (word = words.pop()) {\n\t            line.push(word);\n\t            tspan.text(line.join(' '));\n\t            if (tspan.node().getComputedTextLength() > availableWidth - 50) {\n\t                line.pop();\n\t                tspan.text(line.join(' '));\n\t                line = [word];\n\t                tspan = text.append('tspan').classed(wrapConfig.labelClassName, true).attr('x', 0).attr('y', y + wrapConfig.smallTextOffset).attr('dy', ++lineNumber * smallLineHeight + dy + 'em').text(word).style('font-size', smallFontSize + 'px');\n\t            }\n\t        }\n\t    };\n\t\n\t    return {\n\t        wrapText: wrapText\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** donut.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 55e57523fbdb728288bc\n **/","define(function(require){\n    'use strict';\n\n    const d3 = require('d3');\n    const exportChart = require('./helpers/exportChart');\n    const textHelper = require('./helpers/text');\n\n\n    /**\n     * @typedef DonutChartData\n     * @type {Object[]}\n     * @property {Number} quantity     Quantity of the group (required)\n     * @property {Number} percentage   Percentage of the total (required)\n     * @property {String} name         Name of the group (required)\n     * @property {Number} id           Identifier for the group required for legend feature (optional)\n     *\n     * @example\n     * [\n     *     {\n     *         quantity: 1,\n     *         percentage: 50,\n     *         name: 'glittering',\n     *         id: 1\n     *     },\n     *     {\n     *         quantity: 1,\n     *         percentage: 50,\n     *         name: 'luminous',\n     *         id: 2\n     *     }\n     * ]\n     */\n\n    /**\n     * Reusable Donut Chart API class that renders a\n     * simple and configurable donut chart.\n     *\n     * @module Donut\n     * @version 0.0.1\n     * @tutorial donut\n     * @requires d3\n     *\n     * @example\n     * var donutChart = donut();\n     *\n     * donutChart\n     *     .externalRadius(500)\n     *     .internalRadius(200);\n     *\n     * d3.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(donutChart);\n     *\n     */\n    return function module() {\n\n        let margin = {\n                top: 60,\n                right: 60,\n                bottom: 60,\n                left: 60\n            },\n            width = 300,\n            height = 300,\n            ease = 'cubic-in-out',\n            arcTransitionDuration = 750,\n            pieDrawingTransitionDuration = 1200,\n            pieHoverTransitionDuration = 150,\n            radiusHoverOffset = 15,\n            paddingAngle = 0.015,\n            data,\n            chartWidth, chartHeight,\n            externalRadius = 140,\n            internalRadius = 45.5,\n            legendWidth = externalRadius + internalRadius,\n            layout,\n            shape,\n            slices,\n            svg,\n\n            quantityLabel = 'quantity',\n            nameLabel = 'name',\n            percentageLabel = 'percentage',\n\n            // colors\n            colorScale = d3.scale.category20c(),\n            colorScheme = ['#00AF38', '#41C2C9', '#F6C664', '#F4693A', '#9A66D7'],\n\n            // utils\n            storeAngle = function(d) {\n                this._current = d;\n            },\n            reduceOuterRadius = d => {\n                d.outerRadius = externalRadius - radiusHoverOffset;\n            },\n            sortComparator = (a, b) => b.quantity - a.quantity,\n\n            // extractors\n            getQuantity = ({quantity}) => quantity,\n            getSliceFill = ({data}) => colorScale(data.name),\n\n            // events\n            dispatch = d3.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\n        /**\n         * This function creates the graph using the selection as container\n         *\n         * @param {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {DonutChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data) {\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(_data);\n\n                buildLayout();\n                buildColorScale();\n                buildShape();\n                buildSVG(this);\n                drawSlices();\n                initTooltip();\n            });\n        }\n\n        /**\n         * Builds color scale for chart, if any colorScheme was defined\n         * @private\n         */\n        function buildColorScale() {\n            if (colorScheme) {\n                colorScale = d3.scale.ordinal().range(colorScheme);\n            }\n        }\n\n        /**\n         * Builds containers for the chart, the legend and a wrapper for all of them\n         * @private\n         */\n        function buildContainerGroups() {\n            let container = svg\n              .append('g')\n                .classed('container-group', true)\n                .attr({\n                    transform: `translate(${width / 2}, ${height / 2})`\n                });\n\n            container.append('g').classed('chart-group', true);\n            container.append('g').classed('legend-group', true);\n        }\n\n        /**\n         * Builds the pie layout that will produce data ready to draw\n         * @private\n         */\n        function buildLayout() {\n            layout = d3.layout.pie()\n                .padAngle(paddingAngle)\n                .value(getQuantity)\n                .sort(sortComparator);\n        }\n\n        /**\n         * Builds the shape function\n         * @private\n         */\n        function buildShape() {\n            shape = d3.svg.arc()\n                .innerRadius(internalRadius)\n                .padRadius(externalRadius);\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         *\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            svg = d3.select(container)\n                .selectAll('svg')\n                .data([data]);\n\n            svg.enter().append('svg')\n                .attr('class', 'britechart donut-chart');\n\n            buildContainerGroups();\n\n            svg.transition().ease(ease)\n                .attr('width', width + margin.left + margin.right)\n                .attr('height', height + margin.top + margin.bottom);\n        }\n\n        /**\n         * Cleaning data adding the proper format\n         * @param  {DonutChartData} data Data\n         * @private\n         */\n        function cleanData(data) {\n            return data.map((d) => {\n                d.quantity = +d[quantityLabel];\n                d.name = String(d[nameLabel]);\n                d.percentage = String(d[percentageLabel]);\n\n                return d;\n            });\n        }\n\n        /**\n         * Draws the values on the donut slice inside the text element\n         *\n         * @param  {Object} obj Data object\n         * @private\n         */\n        function drawLegend(obj) {\n            if (obj.data) {\n                svg.select('.donut-text')\n                    .text(() => `${obj.data.percentage}% ${ obj.data.name}`)\n                    .attr('dy', '.2em')\n                    .attr('text-anchor', 'middle');\n\n                svg.select('.donut-text').call(wrapText, legendWidth);\n            }\n        }\n\n        /**\n         * Draws the slices of the donut\n         * @private\n         */\n        function drawSlices() {\n            if (!slices) {\n                slices = svg.select('.chart-group')\n                    .selectAll('g.arc')\n                    .data(layout(data));\n\n                slices.enter()\n                  .append('g')\n                    .each(storeAngle)\n                    .each(reduceOuterRadius)\n                    .classed('arc', true)\n                    .on('mouseover', handleMouseOver)\n                    .on('mouseout', handleMouseOut);\n\n                slices\n                  .append('path')\n                    .attr('fill', getSliceFill)\n                    .on('mouseover', tweenGrowthFactory(externalRadius, 0))\n                    .on('mouseout', tweenGrowthFactory(externalRadius - radiusHoverOffset, pieHoverTransitionDuration))\n                  .transition()\n                    .ease(ease)\n                    .duration(pieDrawingTransitionDuration)\n                    .attrTween('d', tweenLoading);\n\n            } else {\n                slices = svg.select('.chart-group')\n                    .selectAll('path')\n                    .data(layout(data));\n\n                slices\n                    .attr('d', shape);\n\n                // Redraws the angles of the data\n                slices\n                    .transition().duration(arcTransitionDuration)\n                    .attrTween('d', tweenArc);\n            }\n        }\n\n        /**\n         * Cleans any value that could be on the legend text element\n         * @private\n         */\n        function cleanLegend() {\n            svg.select('.donut-text').text('');\n        }\n\n        function handleMouseOver(datum) {\n            drawLegend(datum);\n\n            dispatch.customMouseOver(datum);\n        }\n\n        function handleMouseOut() {\n            cleanLegend();\n\n            dispatch.customMouseOut();\n        }\n\n        /**\n         * Creates the text element that will hold the legend of the chart\n         */\n        function initTooltip() {\n            svg.select('.legend-group')\n                .append('text')\n                .attr('class', 'donut-text');\n        }\n\n        /**\n         * Stores current angles and interpolates with new angles\n         * Check out {@link http://bl.ocks.org/mbostock/1346410| this example}\n         *\n         * @param  {Object}     a   New data for slice\n         * @return {Function}       Tweening function for the donut shape\n         * @private\n         */\n        function tweenArc(a) {\n            let i = d3.interpolate(this._current, a);\n\n            this._current = i(0);\n\n            return function(t) {\n                return shape(i(t));\n            };\n        }\n\n        /**\n         * Generates animations with tweens depending on the attributes given\n         *\n         * @param  {Number} outerRadius Final outer radius value\n         * @param  {Number} delay       Delay of animation\n         * @return {Function}           Function that when called will tween the element\n         * @private\n         */\n        function tweenGrowthFactory(outerRadius, delay) {\n            return function() {\n                d3.select(this)\n                    .transition()\n                    .delay(delay)\n                    .attrTween('d', function(d) {\n                        let i = d3.interpolate(d.outerRadius, outerRadius);\n\n                        return (t) => {\n                            d.outerRadius = i(t);\n\n                            return shape(d);\n                        };\n                    });\n            };\n        }\n\n        /**\n         * Animation for chart loading\n         * Check out {@link http://bl.ocks.org/mbostock/4341574| this example}\n         *\n         * @param  {Object} b Data point\n         * @return {Function}   Tween function\n         * @private\n         */\n        function tweenLoading(b) {\n            let i;\n\n            b.innerRadius = 0;\n            i = d3.interpolate({ startAngle: 0, endAngle: 0}, b);\n\n            return function(t) { return shape(i(t)); };\n        }\n\n        /**\n         * Utility function that wraps a text into the given width\n         *\n         * @param  {D3Selection} text         Text to write\n         * @param  {Number} legendWidth Width of the container\n         * @private\n         */\n        function wrapText(text, legendWidth) {\n            let fontSize = externalRadius / 5;\n\n            textHelper.wrapText.call(null, fontSize, legendWidth, text.node());\n        }\n\n        /**\n         * Gets or Sets the colorScheme of the chart\n         * @param  {Array} _x Color scheme array to get/set\n         * @return { (Number | Module) } Current colorScheme or Donut Chart module to chain calls\n         * @public\n         */\n        exports.colorScheme = function(_x) {\n            if (!arguments.length) {\n                return colorScheme;\n            }\n            colorScheme = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the externalRadius of the chart\n         * @param  {Number} _x ExternalRadius number to get/set\n         * @return { (Number | Module) } Current externalRadius or Donut Chart module to chain calls\n         * @public\n         */\n        exports.externalRadius = function(_x) {\n            if (!arguments.length) {\n                return externalRadius;\n            }\n            externalRadius = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { (Number | Module) } Current height or Donut Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the internalRadius of the chart\n         * @param  {Number} _x InternalRadius number to get/set\n         * @return { (Number | Module) } Current internalRadius or Donut Chart module to chain calls\n         * @public\n         */\n        exports.internalRadius = function(_x) {\n            if (!arguments.length) {\n                return internalRadius;\n            }\n            internalRadius = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {Object} _x Margin object to get/set\n         * @return { (Number | Module) } Current margin or Donut Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { (Number | Module) } Current width or Donut Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _x;\n            return this;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename) {\n            exportChart.call(exports, svg, filename);\n        };\n\n        // Rebind 'customHover' event to the \"exports\" function, so it's available \"externally\" under the typical \"on\" method:\n        d3.rebind(exports, dispatch, 'on');\n\n        return exports;\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/donut.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"d3\"\n ** module id = 1\n ** module chunks = 0 1 2 3 4 5 6 7 8\n **/","define(function(require) {\n\n    'use strict';\n\n    const serializeWithStyles = require('./serializeWithStyles.js');\n\n    let encoder = window.btoa;\n\n    if (!encoder) {\n        encoder = require('base-64').encode;\n    }\n\n    const config = {\n        styleClass : 'britechartStyle',\n        defaultFilename: 'britechart.png',\n        chartBackground: 'white',\n        imageSourceBase: 'data:image/svg+xml;base64,',\n        get styleBackgroundString () {\n            return `<style>svg{background:${this.chartBackground};}</style>`;\n        }\n    };\n\n    /**\n     * Main function to be used as a method by chart instances to export charts to png\n     * @param  {array} svgs (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n     * @param  {string} filename [download to be called <filename>.png]\n     */\n    function exportChart(d3svg, filename) {\n        let canvasWidth = this.width(),\n            canvasHeight = this.height();\n\n        let html = convertSvgToHtml(d3svg);\n\n        let canvas = createCanvas(canvasWidth, canvasHeight);\n\n        let img = createImage(html);\n\n        img.onload = handleImageLoad.bind(img, canvas, filename);\n    }\n\n    /**\n     * Handles on load event fired by img.onload, this=img\n     * @param  {object} canvas TYPE: el <canvas>\n     * @param  {string} filename\n     * @param  {object} e\n     */\n    function handleImageLoad(canvas, filename, e) {\n        e.preventDefault();\n        drawImageOnCanvas(this, canvas);\n        downloadCanvas(canvas, filename || config.defaultFilename);\n    }\n\n    /**\n     * takes d3 svg el, adds proper svg tags, adds inline styles\n     * from stylesheets, adds white background and returns string\n     * @param  {object} d3svg TYPE d3 svg element\n     * @return {string} string of passed d3\n     */\n    function convertSvgToHtml (d3svg) {\n        let serializer = serializeWithStyles.initializeSerializer();\n\n        if (!d3svg){ return; }\n\n        d3svg.attr({ version: 1.1, xmlns: 'http://www.w3.org/2000/svg'});\n\n        let serialized = serializer(d3svg.node());\n\n        return serialized.replace('>',`>${config.styleBackgroundString}`);\n    }\n\n    /**\n     * Create Canvas\n     * @param  {number} width\n     * @param  {number} height\n     * @return {object} TYPE canvas element\n     */\n    function createCanvas(width, height) {\n        let canvas = document.createElement('canvas');\n\n        canvas.height = height;\n        canvas.width = width;\n        return canvas;\n    }\n\n    /**\n     * Create Image\n     * @param  {string} svgHtml string representation of svg el\n     * @return {object}  TYPE element <img>, src points at svg\n     */\n    function createImage(svgHtml) {\n        let img = new Image();\n\n        img.src = `${config.imageSourceBase}${encoder(svgHtml)}`;\n        return img;\n    };\n\n    /**\n     * Draws image on canvas\n     * @param  {object} image TYPE:el <img>, to be drawn\n     * @param  {object} canvas TYPE: el <canvas>, to draw on\n     */\n    function drawImageOnCanvas(image, canvas) {\n        canvas.getContext('2d').drawImage(image, 0, 0);\n    }\n\n    /**\n     * Triggers browser to download image, convert canvas to url,\n     * we need to append the link el to the dom before clicking it for Firefox to register\n     * point <a> at it and trigger click\n     * @param  {object} canvas TYPE: el <canvas>\n     * @param  {string} filename\n     * @param  {string} extensionType\n     */\n    function downloadCanvas(canvas, filename='britechart.png', extensionType='image/png') {\n        let url = canvas.toDataURL(extensionType);\n        let link = document.createElement('a');\n\n        link.href = url;\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n    return exportChart;\n});\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/helpers/exportChart.js\n **/","module.exports = (function() {\n\n    'use strict';\n\n    return {\n\n        /**\n         * returns serializer function, only run it when you know you want to serialize your chart\n         * @return {func} serializer to add styles in line to dom string\n         */\n        initializeSerializer() {\n\n            // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n            const defaultStylesByTagName = {};\n\n            // Styles inherited from style sheets will not be rendered for elements with these tag names\n            const noStyleTags = {'BASE':true,'HEAD':true,'HTML':true,'META':true,'NOFRAME':true,'NOSCRIPT':true,'PARAM':true,'SCRIPT':true,'STYLE':true,'TITLE':true};\n\n            // This list determines which css default values lookup tables are precomputed at load time\n            // Lookup tables for other tag names will be automatically built at runtime if needed\n            const tagNames = ['A','ABBR','ADDRESS','AREA','ARTICLE','ASIDE','AUDIO','B','BASE','BDI','BDO','BLOCKQUOTE','BODY','BR','BUTTON','CANVAS','CAPTION','CENTER','CITE','CODE','COL','COLGROUP','COMMAND','DATALIST','DD','DEL','DETAILS','DFN','DIV','DL','DT','EM','EMBED','FIELDSET','FIGCAPTION','FIGURE','FONT','FOOTER','FORM','H1','H2','H3','H4','H5','H6','HEAD','HEADER','HGROUP','HR','HTML','I','IFRAME','IMG','INPUT','INS','KBD','LABEL','LEGEND','LI','LINK','MAP','MARK','MATH','MENU','META','METER','NAV','NOBR','NOSCRIPT','OBJECT','OL','OPTION','OPTGROUP','OUTPUT','P','PARAM','PRE','PROGRESS','Q','RP','RT','RUBY','S','SAMP','SCRIPT','SECTION','SELECT','SMALL','SOURCE','SPAN','STRONG','STYLE','SUB','SUMMARY','SUP','SVG','TABLE','TBODY','TD','TEXTAREA','TFOOT','TH','THEAD','TIME','TITLE','TR','TRACK','U','UL','VAR','VIDEO','WBR'];\n\n            // Precompute the lookup tables.\n            [].forEach.call(tagNames, (name) => {\n                if (!noStyleTags[name]) {\n                    defaultStylesByTagName[name] = computeDefaultStyleByTagName(name);\n                }\n            });\n\n            function computeDefaultStyleByTagName(tagName) {\n                let defaultStyle = {},\n                    element = document.body.appendChild(document.createElement(tagName)),\n                    computedStyle = window.getComputedStyle(element);\n\n                [].forEach.call(computedStyle, (style) => {\n                    defaultStyle[style] = computedStyle[style];\n                });\n                document.body.removeChild(element);\n                return defaultStyle;\n            }\n\n            function getDefaultStyleByTagName (tagName) {\n                tagName = tagName.toUpperCase();\n                if (!defaultStylesByTagName[tagName]) {\n                    defaultStylesByTagName[tagName] = computeDefaultStyleByTagName(tagName);\n                }\n                return defaultStylesByTagName[tagName];\n            };\n\n            function serializeWithStyles(elem) {\n\n                let cssTexts = [],\n                    elements,\n                    computedStyle,\n                    defaultStyle,\n                    result;\n\n                if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n                    console.error('Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE');\n                    return;\n                }\n\n                cssTexts = [];\n                elements = elem.querySelectorAll('*');\n\n                [].forEach.call(elements, (el, i) => {\n                    if (!noStyleTags[el.tagName]) {\n                        computedStyle = window.getComputedStyle(el);\n                        defaultStyle = getDefaultStyleByTagName(el.tagName);\n                        cssTexts[i] = el.style.cssText;\n                        [].forEach.call(computedStyle, (cssPropName) => {\n                            if (computedStyle[cssPropName] !== defaultStyle[cssPropName]) {\n                                el.style[cssPropName] = computedStyle[cssPropName];\n                            }\n                        });\n                    }\n                });\n\n                result = elem.outerHTML;\n                elements = [].map.call(elements, (el, i) => {\n                    el.style.cssText = cssTexts[i];\n                    return el;\n                });\n\n                return result;\n\n            };\n\n            return serializeWithStyles;\n        }\n    }\n})();\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/helpers/serializeWithStyles.js\n **/","/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/base-64/base64.js\n ** module id = 4\n ** module chunks = 0 2 4 5 6 7\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 5\n ** module chunks = 0 2 4 5 6 7\n **/","define(function(require) {\n\n    const wrapConfig = {\n        lineHeight: 1.2,\n        smallTextOffset: 10,\n        smallTextLineHeightRatio: 0.9,\n        smallTextRatio: 0.4,\n        valueClassName: 'value',\n        labelClassName: 'label'\n    };\n\n    /**\n     * Wraps a selection of text within the available width\n     * @param  {Number} fontSize       Size of the base font\n     * @param  {Number} availableWidth Width of the container where the text needs to wrap on\n     * @param  {D3Selection} node      SVG text element that contains the text to wrap\n     *\n     * REF: http://bl.ocks.org/mbostock/7555321\n     * More discussions on https://github.com/mbostock/d3/issues/1642\n     * @return {void}\n     */\n    const wrapText = function(fontSize, availableWidth, node, data, i) {\n        let text = d3.select(node),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            smallLineHeight = wrapConfig.lineHeight * wrapConfig.smallTextLineHeightRatio,\n            y = text.attr('y'),\n            dy = parseFloat(text.attr('dy')),\n            smallFontSize = fontSize * wrapConfig.smallTextRatio,\n            tspan = text.text(null).append('tspan')\n                .attr('x', 0)\n                .attr('y', y - 5)\n                .attr('dy', dy + 'em')\n                .classed(wrapConfig.valueClassName, true)\n                .style('font-size', fontSize + 'px');\n\n        tspan.text(words.pop());\n        tspan = text.append('tspan')\n            .classed(wrapConfig.labelClassName, true)\n            .attr('x', 0)\n            .attr('y', y + wrapConfig.smallTextOffset)\n            .attr('dy', ++lineNumber * smallLineHeight + dy + 'em')\n            .style('font-size', smallFontSize + 'px');\n\n        while (word = words.pop()) {\n            line.push(word);\n            tspan.text(line.join(' '));\n            if (tspan.node().getComputedTextLength() > availableWidth - 50) {\n                line.pop();\n                tspan.text(line.join(' '));\n                line = [word];\n                tspan = text.append('tspan')\n                    .classed(wrapConfig.labelClassName, true)\n                    .attr('x', 0)\n                    .attr('y', y+ wrapConfig.smallTextOffset)\n                    .attr('dy', ++lineNumber * smallLineHeight + dy + 'em')\n                    .text(word)\n                    .style('font-size', smallFontSize + 'px');\n            }\n        }\n    };\n\n    return {\n        wrapText\n    };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/helpers/text.js\n **/"],"sourceRoot":""}