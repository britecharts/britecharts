{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6**","webpack:///legend.min.js","webpack:///webpack/bootstrap 55e57523fbdb728288bc?177e**","webpack:///./src/charts/legend.js","webpack:///external \"d3\"?c0c4**"],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","d3","_selection","each","_data","chartWidth","width","margin","left","right","chartHeight","height","top","bottom","data","buildColorScale","buildSVG","drawEntries","buildContainerGroups","container","svg","append","classed","attr","transform","colorScheme","colorScale","scale","ordinal","range","select","transition","cleanFadedLines","entries","isFadedClassName","selectAll","enter","getId","d","horizontalOffset","circleRadius","lineHeightBis","length","verticalOffset","cx","cy","circleYOffset","r","style","fill","_ref4","quantity","stroke-width","text","getName","x","lineMargin","font-size","textSize","letter-spacing","textLetterSpacing","getFormattedQuantity","valueReservedSpace","numberLetterSpacing","text-anchor","startOffset","exit","opacity","remove","fadeLinesBut","exceptionItemId","numberFormat","format","category20c","_ref","_ref2","name","_ref3","clearHighlight","_x","arguments","highlight","entryId","undefined"],"mappings":"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","file":"legend.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"d3\")) : factory(root[\"d3\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"d3\")) : factory(root[\"d3\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3 = __webpack_require__(1);\n\t\n\t    /**\n\t     * @typedef LegendChartData\n\t     * @type {Object[]}\n\t     * @property {Number} id        Id of the group (required)\n\t     * @property {Number} quantity  Quantity of the group (required)\n\t     * @property {String} name      Name of the group (required)\n\t     *\n\t     * @example\n\t     * [\n\t     *     {\n\t     *         id: 1,\n\t     *         quantity: 2,\n\t     *         name: 'glittering'\n\t     *     },\n\t     *     {\n\t     *         id: 2,\n\t     *         quantity: 3,\n\t     *         name: 'luminous'\n\t     *     }\n\t     */\n\t\n\t    /**\n\t     * @fileOverview Legend Component reusable API class that renders a\n\t     * simple and configurable legend element.\n\t     *\n\t     * @example\n\t     * var donutChart = donut(),\n\t     *     legendBox = legend();\n\t     *\n\t     * donutChart\n\t     *     .externalRadius(500)\n\t     *     .internalRadius(200)\n\t     *     .on('customMouseOver', function(data) {\n\t     *         legendBox.highlight(data.data.id);\n\t     *     })\n\t     *     .on('customMouseOut', function() {\n\t     *         legendBox.clearHighlight();\n\t     *     });\n\t     *\n\t     * d3.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(donutChart);\n\t     *\n\t     * d3.select('.other-css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(legendBox);\n\t     *\n\t     * @module Legend\n\t     * @tutorial legend\n\t     * @exports charts/legend\n\t     * @requires d3\n\t     * @version 0.0.1\n\t     */\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 20,\n\t            right: 10,\n\t            bottom: 10,\n\t            left: 10\n\t        },\n\t            width = 320,\n\t            height = 180,\n\t            lineMargin = 10,\n\t            circleRadius = 8,\n\t            circleYOffset = -5,\n\t            textSize = 12,\n\t            textLetterSpacing = 0.5,\n\t            valueReservedSpace = 40,\n\t            numberLetterSpacing = 0.8,\n\t            numberFormat = d3.format('s'),\n\t            isFadedClassName = 'is-faded',\n\t\n\t\n\t        // colors\n\t        colorScale = d3.scale.category20c(),\n\t            colorScheme = ['#00AF38', '#41C2C9', '#F6C664', '#F4693A', '#9A66D7'],\n\t            getId = function getId(_ref) {\n\t            var id = _ref.id;\n\t            return id;\n\t        },\n\t            getName = function getName(_ref2) {\n\t            var name = _ref2.name;\n\t            return name;\n\t        },\n\t            getFormattedQuantity = function getFormattedQuantity(_ref3) {\n\t            var quantity = _ref3.quantity;\n\t            return numberFormat(quantity);\n\t        },\n\t            entries = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            data = void 0,\n\t            svg = void 0;\n\t\n\t        /**\n\t         * This function creates the graph using the selection as container\n\t         * @param  {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {object} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = _data;\n\t\n\t                buildColorScale();\n\t                buildSVG(this);\n\t                drawEntries();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the legend\n\t         * Also applies the Margin convention\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('legend-container-group', true).attr({\n\t                transform: 'translate(' + margin.left + ',' + margin.top + ')'\n\t            });\n\t\n\t            container.append('g').classed('legend-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds color scale for chart, if any colorScheme was defined\n\t         * @private\n\t         */\n\t        function buildColorScale() {\n\t            if (colorScheme) {\n\t                colorScale = d3.scale.ordinal().range(colorScheme);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3.select(container).append('svg').classed('britechart britechart-legend', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t            svg.transition().attr({\n\t                width: width + margin.left + margin.right,\n\t                height: height + margin.top + margin.bottom\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Removes the faded class from all the entry lines\n\t         */\n\t        function cleanFadedLines() {\n\t            entries.classed(isFadedClassName, false);\n\t        }\n\t\n\t        /**\n\t         * Draws the entries of the legend\n\t         * @private\n\t         */\n\t        function drawEntries() {\n\t            entries = svg.select('.legend-group').selectAll('g.legend-line').data(data);\n\t\n\t            // Enter\n\t            entries.enter().append('g').classed('legend-line', true).attr('data-item', getId).attr('transform', function (d, i) {\n\t                var horizontalOffset = 2 * circleRadius + 10,\n\t                    lineHeightBis = chartHeight / data.length,\n\t                    verticalOffset = i * lineHeightBis;\n\t\n\t                return 'translate(' + horizontalOffset + ',' + verticalOffset + ')';\n\t            });\n\t\n\t            entries.append('circle').classed('legend-circle', true).attr({\n\t                'cx': 0,\n\t                'cy': circleYOffset,\n\t                'r': circleRadius\n\t            }).style({\n\t                'fill': function fill(_ref4) {\n\t                    var quantity = _ref4.quantity;\n\t\n\t                    return colorScale(quantity);\n\t                },\n\t                'stroke-width': 1\n\t            });\n\t\n\t            entries.append('text').classed('legend-entry-name', true).text(getName).attr({\n\t                x: 2 * circleRadius + lineMargin\n\t            }).style({\n\t                'font-size': textSize + 'px',\n\t                'letter-spacing': textLetterSpacing + 'px'\n\t            });\n\t\n\t            entries.append('text').classed('legend-entry-value', true).text(getFormattedQuantity).attr({\n\t                x: chartWidth - valueReservedSpace\n\t            }).style({\n\t                'font-size': textSize + 'px',\n\t                'letter-spacing': numberLetterSpacing + 'px',\n\t                'text-anchor': 'end',\n\t                'startOffset': '100%'\n\t            });\n\t\n\t            // Exit\n\t            entries.exit().transition().style({ opacity: 0 }).remove();\n\t        }\n\t\n\t        /**\n\t         * Applies the faded class to all lines but the one that has the given id\n\t         * @param  {number} exceptionItemId Id of the line that needs to stay the same\n\t         */\n\t        function fadeLinesBut(exceptionItemId) {\n\t            entries.classed(isFadedClassName, true);\n\t            d3.select('[data-item=\"' + exceptionItemId + '\"]').classed(isFadedClassName, false);\n\t        }\n\t\n\t        /**\n\t         * Clears the highlighted line entry\n\t         */\n\t        exports.clearHighlight = function () {\n\t            cleanFadedLines();\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the colorScheme of the chart\n\t         * @param  {Array} _x Color scheme array to get/set\n\t         * @return { (Number | Module) } Current colorScheme or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.colorScheme = function (_x) {\n\t            if (!arguments.length) {\n\t                return colorScheme;\n\t            }\n\t            colorScheme = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the legend chart\n\t         * @param  {number} _x Desired width for the chart\n\t         * @return { height | module} Current height or Legend module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            height = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Highlights a line entry by fading the rest of lines\n\t         * @param  {number} entryId ID of the entry line\n\t         */\n\t        exports.highlight = function (entryId) {\n\t            cleanFadedLines();\n\t            fadeLinesBut(entryId);\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the legend chart\n\t         * @param  {object} _x Margin object to get/set\n\t         * @return { margin | module} Current margin or Legend module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the legend chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { width | module} Current width or Legend module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            width = _x;\n\t            return this;\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** legend.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 55e57523fbdb728288bc\n **/","define(function(require){\n    'use strict';\n\n    const d3 = require('d3');\n\n\n    /**\n     * @typedef LegendChartData\n     * @type {Object[]}\n     * @property {Number} id        Id of the group (required)\n     * @property {Number} quantity  Quantity of the group (required)\n     * @property {String} name      Name of the group (required)\n     *\n     * @example\n     * [\n     *     {\n     *         id: 1,\n     *         quantity: 2,\n     *         name: 'glittering'\n     *     },\n     *     {\n     *         id: 2,\n     *         quantity: 3,\n     *         name: 'luminous'\n     *     }\n     */\n\n\n    /**\n     * @fileOverview Legend Component reusable API class that renders a\n     * simple and configurable legend element.\n     *\n     * @example\n     * var donutChart = donut(),\n     *     legendBox = legend();\n     *\n     * donutChart\n     *     .externalRadius(500)\n     *     .internalRadius(200)\n     *     .on('customMouseOver', function(data) {\n     *         legendBox.highlight(data.data.id);\n     *     })\n     *     .on('customMouseOut', function() {\n     *         legendBox.clearHighlight();\n     *     });\n     *\n     * d3.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(donutChart);\n     *\n     * d3.select('.other-css-selector')\n     *     .datum(dataset)\n     *     .call(legendBox);\n     *\n     * @module Legend\n     * @tutorial legend\n     * @exports charts/legend\n     * @requires d3\n     * @version 0.0.1\n     */\n    return function module() {\n\n        let margin = {\n                top: 20,\n                right: 10,\n                bottom: 10,\n                left: 10\n            },\n            width = 320,\n            height = 180,\n\n            lineMargin = 10,\n\n            circleRadius = 8,\n            circleYOffset = -5,\n\n            textSize = 12,\n            textLetterSpacing = 0.5,\n\n            valueReservedSpace = 40,\n            numberLetterSpacing = 0.8,\n            numberFormat = d3.format('s'),\n\n            isFadedClassName = 'is-faded',\n\n            // colors\n            colorScale = d3.scale.category20c(),\n            colorScheme = ['#00AF38', '#41C2C9', '#F6C664', '#F4693A', '#9A66D7'],\n\n            getId = ({id}) => id,\n            getName = ({name}) => name,\n            getFormattedQuantity = ({quantity}) => numberFormat(quantity),\n\n            entries,\n            chartWidth, chartHeight,\n            data,\n            svg;\n\n\n        /**\n         * This function creates the graph using the selection as container\n         * @param  {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {object} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data){\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = _data;\n\n                buildColorScale();\n                buildSVG(this);\n                drawEntries();\n            });\n        }\n\n        /**\n         * Builds containers for the legend\n         * Also applies the Margin convention\n         * @private\n         */\n        function buildContainerGroups() {\n            let container = svg.append('g')\n                .classed('legend-container-group', true)\n                .attr({\n                    transform: `translate(${margin.left},${margin.top})`\n                });\n\n            container\n                .append('g')\n                .classed('legend-group', true);\n        }\n\n        /**\n         * Builds color scale for chart, if any colorScheme was defined\n         * @private\n         */\n        function buildColorScale() {\n            if (colorScheme) {\n                colorScale = d3.scale.ordinal().range(colorScheme);\n            }\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3.select(container)\n                    .append('svg')\n                    .classed('britechart britechart-legend', true);\n\n                buildContainerGroups();\n            }\n            svg.transition().attr({\n                width: width + margin.left + margin.right,\n                height: height + margin.top + margin.bottom\n            });\n        }\n\n        /**\n         * Removes the faded class from all the entry lines\n         */\n        function cleanFadedLines() {\n            entries.classed(isFadedClassName, false);\n        }\n\n        /**\n         * Draws the entries of the legend\n         * @private\n         */\n        function drawEntries() {\n            entries = svg.select('.legend-group')\n                .selectAll('g.legend-line')\n                .data(data);\n\n            // Enter\n            entries.enter()\n                .append('g')\n                .classed('legend-line', true)\n                .attr('data-item', getId)\n                .attr('transform', function(d, i) {\n                    let horizontalOffset = 2 * circleRadius + 10,\n                        lineHeightBis = chartHeight/data.length,\n                        verticalOffset = i * lineHeightBis;\n\n                    return `translate(${horizontalOffset},${verticalOffset})`;\n                });\n\n            entries\n                .append('circle')\n                .classed('legend-circle', true)\n                .attr({\n                    'cx': 0,\n                    'cy': circleYOffset,\n                    'r': circleRadius\n                })\n                .style({\n                    'fill': function({quantity}) {\n                        return colorScale(quantity);\n                    },\n                    'stroke-width': 1\n                });\n\n            entries\n                .append('text')\n                .classed('legend-entry-name', true)\n                .text(getName)\n                .attr({\n                    x: (2 * circleRadius) + lineMargin\n                })\n                .style({\n                    'font-size': `${textSize}px`,\n                    'letter-spacing': `${textLetterSpacing}px`\n                });\n\n            entries\n                .append('text')\n                .classed('legend-entry-value', true)\n                .text(getFormattedQuantity)\n                .attr({\n                    x: chartWidth - valueReservedSpace\n                })\n                .style({\n                    'font-size': `${textSize}px`,\n                    'letter-spacing': `${numberLetterSpacing}px`,\n                    'text-anchor': 'end',\n                    'startOffset': '100%'\n                });\n\n            // Exit\n            entries.exit()\n                .transition().style({ opacity: 0 }).remove();\n        }\n\n        /**\n         * Applies the faded class to all lines but the one that has the given id\n         * @param  {number} exceptionItemId Id of the line that needs to stay the same\n         */\n        function fadeLinesBut(exceptionItemId) {\n            entries.classed(isFadedClassName, true);\n            d3.select(`[data-item=\"${exceptionItemId}\"]`)\n                .classed(isFadedClassName, false);\n        }\n\n        /**\n         * Clears the highlighted line entry\n         */\n        exports.clearHighlight = function() {\n            cleanFadedLines();\n        };\n\n        /**\n         * Gets or Sets the colorScheme of the chart\n         * @param  {Array} _x Color scheme array to get/set\n         * @return { (Number | Module) } Current colorScheme or Donut Chart module to chain calls\n         * @public\n         */\n        exports.colorScheme = function(_x) {\n            if (!arguments.length) {\n                return colorScheme;\n            }\n            colorScheme = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the legend chart\n         * @param  {number} _x Desired width for the chart\n         * @return { height | module} Current height or Legend module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _x;\n            return this;\n        };\n\n        /**\n         * Highlights a line entry by fading the rest of lines\n         * @param  {number} entryId ID of the entry line\n         */\n        exports.highlight = function(entryId) {\n            cleanFadedLines();\n            fadeLinesBut(entryId);\n        };\n\n        /**\n         * Gets or Sets the margin of the legend chart\n         * @param  {object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Legend module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the legend chart\n         * @param  {number} _x Desired width for the graph\n         * @return { width | module} Current width or Legend module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _x;\n            return this;\n        };\n\n        return exports;\n    };\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/legend.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"d3\"\n ** module id = 1\n ** module chunks = 0 1 2 3 4 5 6 7 8\n **/"],"sourceRoot":""}