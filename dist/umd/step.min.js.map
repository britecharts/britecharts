{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6******","webpack:///step.min.js","webpack:///webpack/bootstrap 55e57523fbdb728288bc?177e******","webpack:///./src/charts/step.js","webpack:///external \"d3\"?c0c4******","webpack:///./src/charts/helpers/exportChart.js?f69b****","webpack:///./src/charts/helpers/serializeWithStyles.js?b833****","webpack:///./~/base-64/base64.js?68a6****","webpack:///(webpack)/buildin/module.js?c3c2****"],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","d3","exportChart","_selection","each","_data","chartWidth","width","margin","left","right","chartHeight","height","top","bottom","data","cleanData","buildScales","buildAxis","buildSVG","drawGridLines","drawSteps","drawAxis","xAxis","svg","axis","scale","xScale","orient","yAxis","yScale","ticks","numOfVerticalTicks","tickFormat","yAxisTickFormat","buildContainerGroups","container","append","classed","attr","ordinal","domain","map","getKey","rangeRoundBands","linear","max","getValue","range","select","transition","ease","d","value","valueLabel","key","String","nameLabel","xAxisLabel","text-anchor","x","y","xAxisLabelOffset","text","yAxisLabel","yAxisLabelOffset","transform","stepW","rangeBand","steps","selectAll","enter","_ref3","on","dispatch","customHover","_ref4","exit","style","opacity","remove","maskGridLines","class","x1","xAxisPadding","x2","y1","y2","baseLine","format","_ref","_ref2","_x","arguments","length","filename","rebind","undefined","d3svg","canvasWidth","canvasHeight","html","convertSvgToHtml","canvas","createCanvas","img","createImage","onload","handleImageLoad","bind","e","preventDefault","drawImageOnCanvas","downloadCanvas","config","defaultFilename","serializer","serializeWithStyles","initializeSerializer","version","xmlns","serialized","node","replace","styleBackgroundString","document","createElement","svgHtml","Image","src","imageSourceBase","encoder","image","getContext","drawImage","extensionType","url","toDataURL","link","href","download","body","appendChild","click","removeChild","window","btoa","encode","styleClass","chartBackground","computeDefaultStyleByTagName","tagName","defaultStyle","element","computedStyle","getComputedStyle","forEach","getDefaultStyleByTagName","toUpperCase","defaultStylesByTagName","elem","cssTexts","elements","result","nodeType","Node","ELEMENT_NODE","querySelectorAll","el","noStyleTags","cssText","cssPropName","outerHTML","console","error","BASE","HEAD","HTML","META","NOFRAME","NOSCRIPT","PARAM","SCRIPT","STYLE","TITLE","tagNames","name","global","freeExports","freeGlobal","InvalidCharacterError","message","prototype","Error","TABLE","REGEX_SPACE_CHARACTERS","decode","input","test","bitStorage","buffer","bitCounter","output","position","indexOf","charAt","fromCharCode","b","padding","charCodeAt","base64","webpackPolyfill","deprecate","paths","children"],"mappings":"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","file":"step.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"d3\")) : factory(root[\"d3\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"d3\")) : factory(root[\"d3\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3 = __webpack_require__(1);\n\t    var exportChart = __webpack_require__(2);\n\t\n\t    /**\n\t     * @typedef StepChartData\n\t     * @type Object[]\n\t     *\n\t     * @property {String} key      Key we measure (required)\n\t     * @property {Number} value    value of the key (required)\n\t     *\n\t     * @example\n\t     * [\n\t     *     {\n\t     *         value: 1,\n\t     *         key: 'glittering'\n\t     *     },\n\t     *     {\n\t     *         value: 1,\n\t     *         key: 'luminous'\n\t     *     }\n\t     * ]\n\t     */\n\t\n\t    /**\n\t     * Step Chart reusable API class that renders a\n\t     * simple and configurable step chart.\n\t     *\n\t     * @module Step\n\t     * @version 0.1.0\n\t     * @tutorial step\n\t     * @requires d3\n\t     *\n\t     * @example\n\t     * var stepChart= step();\n\t     *\n\t     * stepChart\n\t     *     .height(500)\n\t     *     .width(800);\n\t     *\n\t     * d3.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(stepChart);\n\t     *\n\t     */\n\t    return function module() {\n\t\n\t        var margin = { top: 20, right: 20, bottom: 30, left: 40 },\n\t            width = 960,\n\t            height = 500,\n\t            ease = 'ease',\n\t            data = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            xScale = void 0,\n\t            yScale = void 0,\n\t            numOfVerticalTicks = 6,\n\t            xAxis = void 0,\n\t            xAxisLabel = void 0,\n\t            yAxis = void 0,\n\t            yAxisLabel = void 0,\n\t            xAxisLabelOffset = 45,\n\t            yAxisLabelOffset = -40,\n\t            xAxisPadding = {\n\t            top: 0,\n\t            left: 0,\n\t            bottom: 0,\n\t            right: 0\n\t        },\n\t            svg = void 0,\n\t            valueLabel = 'value',\n\t            nameLabel = 'key',\n\t            maskGridLines = void 0,\n\t            baseLine = void 0,\n\t\n\t\n\t        // Dispatcher object to broadcast the 'customHover' event\n\t        // Ref: https://github.com/mbostock/d3/wiki/Internals#d3_dispatch\n\t        dispatch = d3.dispatch('customHover'),\n\t\n\t\n\t        // Formats\n\t        yAxisTickFormat = d3.format('.1f'),\n\t\n\t\n\t        // extractors\n\t        getKey = function getKey(_ref) {\n\t            var key = _ref.key;\n\t            return key;\n\t        },\n\t            getValue = function getValue(_ref2) {\n\t            var value = _ref2.value;\n\t            return value;\n\t        };\n\t\n\t        /**\n\t         * This function creates the graph using the selection as container\n\t         * @param  {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {StepChartData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                // Make space on the left of the graph for the y axis label\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = cleanData(_data);\n\t\n\t                buildScales();\n\t                buildAxis();\n\t                buildSVG(this);\n\t                drawGridLines();\n\t                drawSteps();\n\t                drawAxis();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates the d3 x and y axis, setting orientations\n\t         * @private\n\t         */\n\t        function buildAxis() {\n\t            xAxis = d3.svg.axis().scale(xScale).orient('bottom');\n\t\n\t            yAxis = d3.svg.axis().scale(yScale).orient('left').ticks(numOfVerticalTicks).tickFormat(yAxisTickFormat);\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * Also applies the Margin convention\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');\n\t\n\t            container.append('g').classed('grid-lines-group', true);\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('x-axis-group axis', true).append('g').classed('x-axis-label', true);\n\t            container.append('g').classed('y-axis-group axis', true).append('g').classed('y-axis-label', true);\n\t        }\n\t\n\t        /**\n\t         * Creates the x and y scales of the graph\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t            xScale = d3.scale.ordinal().domain(data.map(getKey)).rangeRoundBands([0, chartWidth]);\n\t\n\t            yScale = d3.scale.linear().domain([0, d3.max(data, getValue)]).range([chartHeight, 0]);\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3.select(container).append('svg').classed('britechart step-chart', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.transition().ease(ease).attr({\n\t                width: width + margin.left + margin.right,\n\t                height: height + margin.top + margin.bottom\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Cleaning data adding the proper format\n\t         * @param  {StepChartData} data Data\n\t         * @private\n\t         */\n\t        function cleanData(data) {\n\t            return data.map(function (d) {\n\t                d.value = +d[valueLabel];\n\t                d.key = String(d[nameLabel]);\n\t\n\t                return d;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws the x and y axis on the svg object within their\n\t         * respective groups\n\t         * @private\n\t         */\n\t        function drawAxis() {\n\t            svg.select('.x-axis-group.axis').attr('transform', 'translate(0, ' + chartHeight + ')').call(xAxis);\n\t\n\t            if (xAxisLabel) {\n\t                svg.select('.x-axis-label').append('text').attr({\n\t                    'text-anchor': 'middle',\n\t                    'x': chartWidth / 2,\n\t                    'y': xAxisLabelOffset\n\t                }).text(xAxisLabel);\n\t            }\n\t\n\t            svg.select('.y-axis-group.axis').call(yAxis);\n\t\n\t            if (yAxisLabel) {\n\t                svg.select('.y-axis-label').append('text').attr({\n\t                    'x': chartHeight / -2,\n\t                    'y': yAxisLabelOffset,\n\t                    'text-anchor': 'middle',\n\t                    'transform': 'rotate(270 0 0)'\n\t                }).text(yAxisLabel);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the step elements within the chart group\n\t         * @private\n\t         */\n\t        function drawSteps() {\n\t            var stepW = xScale.rangeBand(),\n\t                steps = svg.select('.chart-group').selectAll('.step').data(data);\n\t\n\t            // Enter\n\t            steps.enter().append('rect').classed('step', true).attr({\n\t                width: stepW,\n\t                x: chartWidth, // Initially drawing the steps at the end of Y axis\n\t                y: function y(_ref3) {\n\t                    var value = _ref3.value;\n\t                    return yScale(value);\n\t                },\n\t                height: function height(d) {\n\t                    return chartHeight - yScale(d.value);\n\t                }\n\t            }).on('mouseover', dispatch.customHover);\n\t\n\t            // Update\n\t            steps.transition().ease(ease).attr({\n\t                width: stepW,\n\t                x: function x(_ref4) {\n\t                    var key = _ref4.key;\n\t                    return xScale(key);\n\t                },\n\t                y: function y(d) {\n\t                    return yScale(d.value);\n\t                },\n\t                height: function height(d) {\n\t                    return chartHeight - yScale(d.value);\n\t                }\n\t            });\n\t\n\t            // Exit\n\t            steps.exit().transition().style({ opacity: 0 }).remove();\n\t        }\n\t\n\t        /**\n\t         * Draws grid lines on the background of the chart\n\t         * @return void\n\t         */\n\t        function drawGridLines() {\n\t            maskGridLines = svg.select('.grid-lines-group').selectAll('line.horizontal-grid-line').data(yScale.ticks(numOfVerticalTicks)).enter().append('line').attr({\n\t                class: 'horizontal-grid-line',\n\t                x1: xAxisPadding.left,\n\t                x2: chartWidth,\n\t                y1: function y1(d) {\n\t                    return yScale(d);\n\t                },\n\t                y2: function y2(d) {\n\t                    return yScale(d);\n\t                }\n\t            });\n\t\n\t            //draw a horizontal line to extend x-axis till the edges\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-x-line').data([0]).enter().append('line').attr({\n\t                class: 'extended-x-line',\n\t                x1: xAxisPadding.left,\n\t                x2: chartWidth,\n\t                y1: height - margin.bottom - margin.top,\n\t                y2: height - margin.bottom - margin.top\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {object} _x Margin object to get/set\n\t         * @return { margin | module} Current margin or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { width | module} Current width or step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            width = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            height = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the number of vertical ticks on the chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.numOfVerticalTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return numOfVerticalTicks;\n\t            }\n\t            numOfVerticalTicks = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the text of the xAxisLabel on the chart\n\t         * @param  {text} _x Desired text for the label\n\t         * @return { text | module} label or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.xAxisLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return xAxisLabel;\n\t            }\n\t            xAxisLabel = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the offset of the xAxisLabel on the chart\n\t         * @param  {integer} _x Desired offset for the label\n\t         * @return { integer | module} label or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.xAxisLabelOffset = function (_x) {\n\t            if (!arguments.length) {\n\t                return xAxisLabelOffset;\n\t            }\n\t            xAxisLabelOffset = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the text of the yAxisLabel on the chart\n\t         * @param  {text} _x Desired text for the label\n\t         * @return { text | module} label or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.yAxisLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return yAxisLabel;\n\t            }\n\t            yAxisLabel = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the offset of the yAxisLabel on the chart\n\t         * @param  {integer} _x Desired offset for the label\n\t         * @return { integer | module} label or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.yAxisLabelOffset = function (_x) {\n\t            if (!arguments.length) {\n\t                return yAxisLabelOffset;\n\t            }\n\t            yAxisLabelOffset = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename) {\n\t            exportChart.call(exports, svg, filename);\n\t        };\n\t\n\t        // Copies the method \"on\" from dispatch to exports, making it accesible\n\t        // from outside\n\t        // Reference: https://github.com/mbostock/d3/wiki/Internals#rebind\n\t        d3.rebind(exports, dispatch, 'on');\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t\n\t    'use strict';\n\t\n\t    var serializeWithStyles = __webpack_require__(3);\n\t\n\t    var encoder = window.btoa;\n\t\n\t    if (!encoder) {\n\t        encoder = __webpack_require__(4).encode;\n\t    }\n\t\n\t    var config = {\n\t        styleClass: 'britechartStyle',\n\t        defaultFilename: 'britechart.png',\n\t        chartBackground: 'white',\n\t        imageSourceBase: 'data:image/svg+xml;base64,',\n\t        get styleBackgroundString() {\n\t            return '<style>svg{background:' + this.chartBackground + ';}</style>';\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Main function to be used as a method by chart instances to export charts to png\n\t     * @param  {array} svgs (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n\t     * @param  {string} filename [download to be called <filename>.png]\n\t     */\n\t    function exportChart(d3svg, filename) {\n\t        var canvasWidth = this.width(),\n\t            canvasHeight = this.height();\n\t\n\t        var html = convertSvgToHtml(d3svg);\n\t\n\t        var canvas = createCanvas(canvasWidth, canvasHeight);\n\t\n\t        var img = createImage(html);\n\t\n\t        img.onload = handleImageLoad.bind(img, canvas, filename);\n\t    }\n\t\n\t    /**\n\t     * Handles on load event fired by img.onload, this=img\n\t     * @param  {object} canvas TYPE: el <canvas>\n\t     * @param  {string} filename\n\t     * @param  {object} e\n\t     */\n\t    function handleImageLoad(canvas, filename, e) {\n\t        e.preventDefault();\n\t        drawImageOnCanvas(this, canvas);\n\t        downloadCanvas(canvas, filename || config.defaultFilename);\n\t    }\n\t\n\t    /**\n\t     * takes d3 svg el, adds proper svg tags, adds inline styles\n\t     * from stylesheets, adds white background and returns string\n\t     * @param  {object} d3svg TYPE d3 svg element\n\t     * @return {string} string of passed d3\n\t     */\n\t    function convertSvgToHtml(d3svg) {\n\t        var serializer = serializeWithStyles.initializeSerializer();\n\t\n\t        if (!d3svg) {\n\t            return;\n\t        }\n\t\n\t        d3svg.attr({ version: 1.1, xmlns: 'http://www.w3.org/2000/svg' });\n\t\n\t        var serialized = serializer(d3svg.node());\n\t\n\t        return serialized.replace('>', '>' + config.styleBackgroundString);\n\t    }\n\t\n\t    /**\n\t     * Create Canvas\n\t     * @param  {number} width\n\t     * @param  {number} height\n\t     * @return {object} TYPE canvas element\n\t     */\n\t    function createCanvas(width, height) {\n\t        var canvas = document.createElement('canvas');\n\t\n\t        canvas.height = height;\n\t        canvas.width = width;\n\t        return canvas;\n\t    }\n\t\n\t    /**\n\t     * Create Image\n\t     * @param  {string} svgHtml string representation of svg el\n\t     * @return {object}  TYPE element <img>, src points at svg\n\t     */\n\t    function createImage(svgHtml) {\n\t        var img = new Image();\n\t\n\t        img.src = '' + config.imageSourceBase + encoder(svgHtml);\n\t        return img;\n\t    };\n\t\n\t    /**\n\t     * Draws image on canvas\n\t     * @param  {object} image TYPE:el <img>, to be drawn\n\t     * @param  {object} canvas TYPE: el <canvas>, to draw on\n\t     */\n\t    function drawImageOnCanvas(image, canvas) {\n\t        canvas.getContext('2d').drawImage(image, 0, 0);\n\t    }\n\t\n\t    /**\n\t     * Triggers browser to download image, convert canvas to url,\n\t     * we need to append the link el to the dom before clicking it for Firefox to register\n\t     * point <a> at it and trigger click\n\t     * @param  {object} canvas TYPE: el <canvas>\n\t     * @param  {string} filename\n\t     * @param  {string} extensionType\n\t     */\n\t    function downloadCanvas(canvas) {\n\t        var filename = arguments.length <= 1 || arguments[1] === undefined ? 'britechart.png' : arguments[1];\n\t        var extensionType = arguments.length <= 2 || arguments[2] === undefined ? 'image/png' : arguments[2];\n\t\n\t        var url = canvas.toDataURL(extensionType);\n\t        var link = document.createElement('a');\n\t\n\t        link.href = url;\n\t        link.download = filename;\n\t        document.body.appendChild(link);\n\t        link.click();\n\t        document.body.removeChild(link);\n\t    }\n\t\n\t    return exportChart;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function () {\n\t\n\t    'use strict';\n\t\n\t    return {\n\t\n\t        /**\n\t         * returns serializer function, only run it when you know you want to serialize your chart\n\t         * @return {func} serializer to add styles in line to dom string\n\t         */\n\t        initializeSerializer: function initializeSerializer() {\n\t\n\t            // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n\t            var defaultStylesByTagName = {};\n\t\n\t            // Styles inherited from style sheets will not be rendered for elements with these tag names\n\t            var noStyleTags = { 'BASE': true, 'HEAD': true, 'HTML': true, 'META': true, 'NOFRAME': true, 'NOSCRIPT': true, 'PARAM': true, 'SCRIPT': true, 'STYLE': true, 'TITLE': true };\n\t\n\t            // This list determines which css default values lookup tables are precomputed at load time\n\t            // Lookup tables for other tag names will be automatically built at runtime if needed\n\t            var tagNames = ['A', 'ABBR', 'ADDRESS', 'AREA', 'ARTICLE', 'ASIDE', 'AUDIO', 'B', 'BASE', 'BDI', 'BDO', 'BLOCKQUOTE', 'BODY', 'BR', 'BUTTON', 'CANVAS', 'CAPTION', 'CENTER', 'CITE', 'CODE', 'COL', 'COLGROUP', 'COMMAND', 'DATALIST', 'DD', 'DEL', 'DETAILS', 'DFN', 'DIV', 'DL', 'DT', 'EM', 'EMBED', 'FIELDSET', 'FIGCAPTION', 'FIGURE', 'FONT', 'FOOTER', 'FORM', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEAD', 'HEADER', 'HGROUP', 'HR', 'HTML', 'I', 'IFRAME', 'IMG', 'INPUT', 'INS', 'KBD', 'LABEL', 'LEGEND', 'LI', 'LINK', 'MAP', 'MARK', 'MATH', 'MENU', 'META', 'METER', 'NAV', 'NOBR', 'NOSCRIPT', 'OBJECT', 'OL', 'OPTION', 'OPTGROUP', 'OUTPUT', 'P', 'PARAM', 'PRE', 'PROGRESS', 'Q', 'RP', 'RT', 'RUBY', 'S', 'SAMP', 'SCRIPT', 'SECTION', 'SELECT', 'SMALL', 'SOURCE', 'SPAN', 'STRONG', 'STYLE', 'SUB', 'SUMMARY', 'SUP', 'SVG', 'TABLE', 'TBODY', 'TD', 'TEXTAREA', 'TFOOT', 'TH', 'THEAD', 'TIME', 'TITLE', 'TR', 'TRACK', 'U', 'UL', 'VAR', 'VIDEO', 'WBR'];\n\t\n\t            // Precompute the lookup tables.\n\t            [].forEach.call(tagNames, function (name) {\n\t                if (!noStyleTags[name]) {\n\t                    defaultStylesByTagName[name] = computeDefaultStyleByTagName(name);\n\t                }\n\t            });\n\t\n\t            function computeDefaultStyleByTagName(tagName) {\n\t                var defaultStyle = {},\n\t                    element = document.body.appendChild(document.createElement(tagName)),\n\t                    computedStyle = window.getComputedStyle(element);\n\t\n\t                [].forEach.call(computedStyle, function (style) {\n\t                    defaultStyle[style] = computedStyle[style];\n\t                });\n\t                document.body.removeChild(element);\n\t                return defaultStyle;\n\t            }\n\t\n\t            function getDefaultStyleByTagName(tagName) {\n\t                tagName = tagName.toUpperCase();\n\t                if (!defaultStylesByTagName[tagName]) {\n\t                    defaultStylesByTagName[tagName] = computeDefaultStyleByTagName(tagName);\n\t                }\n\t                return defaultStylesByTagName[tagName];\n\t            };\n\t\n\t            function serializeWithStyles(elem) {\n\t\n\t                var cssTexts = [],\n\t                    elements = void 0,\n\t                    computedStyle = void 0,\n\t                    defaultStyle = void 0,\n\t                    result = void 0;\n\t\n\t                if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n\t                    console.error('Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE');\n\t                    return;\n\t                }\n\t\n\t                cssTexts = [];\n\t                elements = elem.querySelectorAll('*');\n\t\n\t                [].forEach.call(elements, function (el, i) {\n\t                    if (!noStyleTags[el.tagName]) {\n\t                        computedStyle = window.getComputedStyle(el);\n\t                        defaultStyle = getDefaultStyleByTagName(el.tagName);\n\t                        cssTexts[i] = el.style.cssText;\n\t                        [].forEach.call(computedStyle, function (cssPropName) {\n\t                            if (computedStyle[cssPropName] !== defaultStyle[cssPropName]) {\n\t                                el.style[cssPropName] = computedStyle[cssPropName];\n\t                            }\n\t                        });\n\t                    }\n\t                });\n\t\n\t                result = elem.outerHTML;\n\t                elements = [].map.call(elements, function (el, i) {\n\t                    el.style.cssText = cssTexts[i];\n\t                    return el;\n\t                });\n\t\n\t                return result;\n\t            };\n\t\n\t            return serializeWithStyles;\n\t        }\n\t    };\n\t}();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n\t;(function(root) {\n\t\n\t\t// Detect free variables `exports`.\n\t\tvar freeExports = typeof exports == 'object' && exports;\n\t\n\t\t// Detect free variable `module`.\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\tmodule.exports == freeExports && module;\n\t\n\t\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t\t// it as `root`.\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar InvalidCharacterError = function(message) {\n\t\t\tthis.message = message;\n\t\t};\n\t\tInvalidCharacterError.prototype = new Error;\n\t\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\t\n\t\tvar error = function(message) {\n\t\t\t// Note: the error messages used throughout this file match those used by\n\t\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\t\tthrow new InvalidCharacterError(message);\n\t\t};\n\t\n\t\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\t\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\t\n\t\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t\t// implementation. https://gist.github.com/atk/1020396\n\t\tvar decode = function(input) {\n\t\t\tinput = String(input)\n\t\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\t\tvar length = input.length;\n\t\t\tif (length % 4 == 0) {\n\t\t\t\tinput = input.replace(/==?$/, '');\n\t\t\t\tlength = input.length;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tlength % 4 == 1 ||\n\t\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t\t) {\n\t\t\t\terror(\n\t\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t\t);\n\t\t\t}\n\t\t\tvar bitCounter = 0;\n\t\t\tvar bitStorage;\n\t\t\tvar buffer;\n\t\t\tvar output = '';\n\t\t\tvar position = -1;\n\t\t\twhile (++position < length) {\n\t\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t};\n\t\n\t\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\t\tvar encode = function(input) {\n\t\t\tinput = String(input);\n\t\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\t\terror(\n\t\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t\t'Latin1 range.'\n\t\t\t\t);\n\t\t\t}\n\t\t\tvar padding = input.length % 3;\n\t\t\tvar output = '';\n\t\t\tvar position = -1;\n\t\t\tvar a;\n\t\t\tvar b;\n\t\t\tvar c;\n\t\t\tvar d;\n\t\t\tvar buffer;\n\t\t\t// Make sure any padding is handled outside of the loop.\n\t\t\tvar length = input.length - padding;\n\t\n\t\t\twhile (++position < length) {\n\t\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\t\tc = input.charCodeAt(++position);\n\t\t\t\tbuffer = a + b + c;\n\t\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t\t// matching character for each of them to the output.\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t\t);\n\t\t\t}\n\t\n\t\t\tif (padding == 2) {\n\t\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\t\tb = input.charCodeAt(++position);\n\t\t\t\tbuffer = a + b;\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t\t'='\n\t\t\t\t);\n\t\t\t} else if (padding == 1) {\n\t\t\t\tbuffer = input.charCodeAt(position);\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t\t'=='\n\t\t\t\t);\n\t\t\t}\n\t\n\t\t\treturn output;\n\t\t};\n\t\n\t\tvar base64 = {\n\t\t\t'encode': encode,\n\t\t\t'decode': decode,\n\t\t\t'version': '0.1.0'\n\t\t};\n\t\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn base64;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = base64;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tfor (var key in base64) {\n\t\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.base64 = base64;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module), (function() { return this; }())))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** step.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 55e57523fbdb728288bc\n **/","define(function(require) {\n    'use strict';\n\n    const d3 = require('d3');\n    const exportChart = require('./helpers/exportChart');\n\n\n    /**\n     * @typedef StepChartData\n     * @type Object[]\n     *\n     * @property {String} key      Key we measure (required)\n     * @property {Number} value    value of the key (required)\n     *\n     * @example\n     * [\n     *     {\n     *         value: 1,\n     *         key: 'glittering'\n     *     },\n     *     {\n     *         value: 1,\n     *         key: 'luminous'\n     *     }\n     * ]\n     */\n\n    /**\n     * Step Chart reusable API class that renders a\n     * simple and configurable step chart.\n     *\n     * @module Step\n     * @version 0.1.0\n     * @tutorial step\n     * @requires d3\n     *\n     * @example\n     * var stepChart= step();\n     *\n     * stepChart\n     *     .height(500)\n     *     .width(800);\n     *\n     * d3.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(stepChart);\n     *\n     */\n    return function module() {\n\n        let margin = {top: 20, right: 20, bottom: 30, left: 40},\n            width = 960,\n            height = 500,\n            ease = 'ease',\n            data,\n            chartWidth, chartHeight,\n            xScale, yScale,\n            numOfVerticalTicks = 6,\n            xAxis, xAxisLabel,\n            yAxis, yAxisLabel,\n            xAxisLabelOffset = 45,\n            yAxisLabelOffset = -40,\n            xAxisPadding = {\n                top: 0,\n                left: 0,\n                bottom: 0,\n                right: 0\n            },\n            svg,\n\n            valueLabel = 'value',\n            nameLabel = 'key',\n\n            maskGridLines,\n            baseLine,\n\n            // Dispatcher object to broadcast the 'customHover' event\n            // Ref: https://github.com/mbostock/d3/wiki/Internals#d3_dispatch\n            dispatch = d3.dispatch('customHover'),\n\n            // Formats\n            yAxisTickFormat = d3.format('.1f'),\n\n            // extractors\n            getKey = ({key}) => key,\n            getValue = ({value}) => value;\n\n\n        /**\n         * This function creates the graph using the selection as container\n         * @param  {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {StepChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection){\n            _selection.each(function(_data){\n                // Make space on the left of the graph for the y axis label\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(_data);\n\n                buildScales();\n                buildAxis();\n                buildSVG(this);\n                drawGridLines();\n                drawSteps();\n                drawAxis();\n            });\n        }\n\n        /**\n         * Creates the d3 x and y axis, setting orientations\n         * @private\n         */\n        function buildAxis(){\n            xAxis = d3.svg.axis()\n                .scale(xScale)\n                .orient('bottom');\n\n            yAxis = d3.svg.axis()\n                .scale(yScale)\n                .orient('left')\n                .ticks(numOfVerticalTicks)\n                .tickFormat(yAxisTickFormat);\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * Also applies the Margin convention\n         * @private\n         */\n        function buildContainerGroups(){\n            let container = svg.append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n            container\n                .append('g').classed('grid-lines-group', true);\n            container\n                .append('g').classed('chart-group', true);\n            container\n                .append('g').classed('x-axis-group axis', true)\n                .append('g').classed('x-axis-label', true);\n            container\n                .append('g').classed('y-axis-group axis', true)\n                .append('g').classed('y-axis-label', true);\n        }\n\n        /**\n         * Creates the x and y scales of the graph\n         * @private\n         */\n        function buildScales(){\n            xScale = d3.scale.ordinal()\n                .domain(data.map(getKey))\n                .rangeRoundBands([0, chartWidth]);\n\n            yScale = d3.scale.linear()\n                .domain([0, d3.max(data, getValue)])\n                .range([chartHeight, 0]);\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container){\n            if (!svg) {\n                svg = d3.select(container)\n                    .append('svg')\n                    .classed('britechart step-chart', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .transition()\n                .ease(ease)\n                .attr({\n                    width: width + margin.left + margin.right,\n                    height: height + margin.top + margin.bottom\n                });\n        }\n\n        /**\n         * Cleaning data adding the proper format\n         * @param  {StepChartData} data Data\n         * @private\n         */\n        function cleanData(data) {\n            return data.map((d) => {\n                d.value = +d[valueLabel];\n                d.key = String(d[nameLabel]);\n\n                return d;\n            });\n        }\n\n        /**\n         * Draws the x and y axis on the svg object within their\n         * respective groups\n         * @private\n         */\n        function drawAxis(){\n            svg.select('.x-axis-group.axis')\n                .attr('transform', `translate(0, ${chartHeight})`)\n                .call(xAxis);\n\n            if (xAxisLabel) {\n                svg.select('.x-axis-label')\n                    .append('text')\n                    .attr({\n                        'text-anchor': 'middle',\n                        'x': chartWidth/2,\n                        'y': xAxisLabelOffset\n                    })\n                    .text(xAxisLabel);\n            }\n\n            svg.select('.y-axis-group.axis')\n                .call(yAxis);\n\n            if (yAxisLabel) {\n                svg.select('.y-axis-label')\n                    .append('text')\n                    .attr({\n                        'x': chartHeight/-2,\n                        'y': yAxisLabelOffset,\n                        'text-anchor': 'middle',\n                        'transform': 'rotate(270 0 0)'\n                    })\n                    .text(yAxisLabel);\n            }\n        }\n\n        /**\n         * Draws the step elements within the chart group\n         * @private\n         */\n        function drawSteps(){\n            let stepW = xScale.rangeBand(),\n                steps = svg.select('.chart-group').selectAll('.step').data(data);\n\n            // Enter\n            steps.enter()\n                .append('rect')\n                .classed('step', true)\n                .attr({\n                    width: stepW,\n                    x: chartWidth, // Initially drawing the steps at the end of Y axis\n                    y: ({value}) => yScale(value),\n                    height: function(d) { return chartHeight - yScale(d.value); }\n                })\n                .on('mouseover', dispatch.customHover);\n\n            // Update\n            steps.transition()\n                .ease(ease)\n                .attr({\n                    width: stepW,\n                    x: ({key}) => xScale(key),\n                    y: function(d) { return yScale(d.value); },\n                    height: function(d) { return chartHeight - yScale(d.value); }\n                });\n\n            // Exit\n            steps.exit()\n                .transition().style({ opacity: 0 }).remove();\n        }\n\n        /**\n         * Draws grid lines on the background of the chart\n         * @return void\n         */\n        function drawGridLines(){\n            maskGridLines = svg.select('.grid-lines-group')\n                .selectAll('line.horizontal-grid-line')\n                .data(yScale.ticks(numOfVerticalTicks))\n                .enter()\n                    .append('line')\n                    .attr({\n                        class: 'horizontal-grid-line',\n                        x1: (xAxisPadding.left),\n                        x2: chartWidth,\n                        y1: (d) => yScale(d),\n                        y2: (d) => yScale(d)\n                    });\n\n            //draw a horizontal line to extend x-axis till the edges\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-x-line')\n                .data([0])\n                .enter()\n                    .append('line')\n                    .attr({\n                        class: 'extended-x-line',\n                        x1: (xAxisPadding.left),\n                        x2: chartWidth,\n                        y1: height - margin.bottom - margin.top,\n                        y2: height - margin.bottom - margin.top\n                    });\n        }\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Step Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { width | module} Current width or step Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { height | module} Current height or Step Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the number of vertical ticks on the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { height | module} Current height or Step Chart module to chain calls\n         * @public\n         */\n        exports.numOfVerticalTicks = function(_x) {\n            if (!arguments.length) {\n                return numOfVerticalTicks;\n            }\n            numOfVerticalTicks = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the text of the xAxisLabel on the chart\n         * @param  {text} _x Desired text for the label\n         * @return { text | module} label or Step Chart module to chain calls\n         * @public\n         */\n        exports.xAxisLabel = function(_x) {\n            if (!arguments.length) {\n                return xAxisLabel;\n            }\n            xAxisLabel = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the offset of the xAxisLabel on the chart\n         * @param  {integer} _x Desired offset for the label\n         * @return { integer | module} label or Step Chart module to chain calls\n         * @public\n         */\n        exports.xAxisLabelOffset = function(_x) {\n            if (!arguments.length) {\n                return xAxisLabelOffset;\n            }\n            xAxisLabelOffset = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the text of the yAxisLabel on the chart\n         * @param  {text} _x Desired text for the label\n         * @return { text | module} label or Step Chart module to chain calls\n         * @public\n         */\n        exports.yAxisLabel = function(_x) {\n            if (!arguments.length) {\n                return yAxisLabel;\n            }\n            yAxisLabel = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the offset of the yAxisLabel on the chart\n         * @param  {integer} _x Desired offset for the label\n         * @return { integer | module} label or Step Chart module to chain calls\n         * @public\n         */\n        exports.yAxisLabelOffset = function(_x) {\n            if (!arguments.length) {\n                return yAxisLabelOffset;\n            }\n            yAxisLabelOffset = _x;\n            return this;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename) {\n            exportChart.call(exports, svg, filename);\n        };\n\n        // Copies the method \"on\" from dispatch to exports, making it accesible\n        // from outside\n        // Reference: https://github.com/mbostock/d3/wiki/Internals#rebind\n        d3.rebind(exports, dispatch, 'on');\n\n        return exports;\n    };\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/step.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"d3\"\n ** module id = 1\n ** module chunks = 0 1 2 3 4 5 6 7 8\n **/","define(function(require) {\n\n    'use strict';\n\n    const serializeWithStyles = require('./serializeWithStyles.js');\n\n    let encoder = window.btoa;\n\n    if (!encoder) {\n        encoder = require('base-64').encode;\n    }\n\n    const config = {\n        styleClass : 'britechartStyle',\n        defaultFilename: 'britechart.png',\n        chartBackground: 'white',\n        imageSourceBase: 'data:image/svg+xml;base64,',\n        get styleBackgroundString () {\n            return `<style>svg{background:${this.chartBackground};}</style>`;\n        }\n    };\n\n    /**\n     * Main function to be used as a method by chart instances to export charts to png\n     * @param  {array} svgs (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n     * @param  {string} filename [download to be called <filename>.png]\n     */\n    function exportChart(d3svg, filename) {\n        let canvasWidth = this.width(),\n            canvasHeight = this.height();\n\n        let html = convertSvgToHtml(d3svg);\n\n        let canvas = createCanvas(canvasWidth, canvasHeight);\n\n        let img = createImage(html);\n\n        img.onload = handleImageLoad.bind(img, canvas, filename);\n    }\n\n    /**\n     * Handles on load event fired by img.onload, this=img\n     * @param  {object} canvas TYPE: el <canvas>\n     * @param  {string} filename\n     * @param  {object} e\n     */\n    function handleImageLoad(canvas, filename, e) {\n        e.preventDefault();\n        drawImageOnCanvas(this, canvas);\n        downloadCanvas(canvas, filename || config.defaultFilename);\n    }\n\n    /**\n     * takes d3 svg el, adds proper svg tags, adds inline styles\n     * from stylesheets, adds white background and returns string\n     * @param  {object} d3svg TYPE d3 svg element\n     * @return {string} string of passed d3\n     */\n    function convertSvgToHtml (d3svg) {\n        let serializer = serializeWithStyles.initializeSerializer();\n\n        if (!d3svg){ return; }\n\n        d3svg.attr({ version: 1.1, xmlns: 'http://www.w3.org/2000/svg'});\n\n        let serialized = serializer(d3svg.node());\n\n        return serialized.replace('>',`>${config.styleBackgroundString}`);\n    }\n\n    /**\n     * Create Canvas\n     * @param  {number} width\n     * @param  {number} height\n     * @return {object} TYPE canvas element\n     */\n    function createCanvas(width, height) {\n        let canvas = document.createElement('canvas');\n\n        canvas.height = height;\n        canvas.width = width;\n        return canvas;\n    }\n\n    /**\n     * Create Image\n     * @param  {string} svgHtml string representation of svg el\n     * @return {object}  TYPE element <img>, src points at svg\n     */\n    function createImage(svgHtml) {\n        let img = new Image();\n\n        img.src = `${config.imageSourceBase}${encoder(svgHtml)}`;\n        return img;\n    };\n\n    /**\n     * Draws image on canvas\n     * @param  {object} image TYPE:el <img>, to be drawn\n     * @param  {object} canvas TYPE: el <canvas>, to draw on\n     */\n    function drawImageOnCanvas(image, canvas) {\n        canvas.getContext('2d').drawImage(image, 0, 0);\n    }\n\n    /**\n     * Triggers browser to download image, convert canvas to url,\n     * we need to append the link el to the dom before clicking it for Firefox to register\n     * point <a> at it and trigger click\n     * @param  {object} canvas TYPE: el <canvas>\n     * @param  {string} filename\n     * @param  {string} extensionType\n     */\n    function downloadCanvas(canvas, filename='britechart.png', extensionType='image/png') {\n        let url = canvas.toDataURL(extensionType);\n        let link = document.createElement('a');\n\n        link.href = url;\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n    return exportChart;\n});\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/helpers/exportChart.js\n **/","module.exports = (function() {\n\n    'use strict';\n\n    return {\n\n        /**\n         * returns serializer function, only run it when you know you want to serialize your chart\n         * @return {func} serializer to add styles in line to dom string\n         */\n        initializeSerializer() {\n\n            // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n            const defaultStylesByTagName = {};\n\n            // Styles inherited from style sheets will not be rendered for elements with these tag names\n            const noStyleTags = {'BASE':true,'HEAD':true,'HTML':true,'META':true,'NOFRAME':true,'NOSCRIPT':true,'PARAM':true,'SCRIPT':true,'STYLE':true,'TITLE':true};\n\n            // This list determines which css default values lookup tables are precomputed at load time\n            // Lookup tables for other tag names will be automatically built at runtime if needed\n            const tagNames = ['A','ABBR','ADDRESS','AREA','ARTICLE','ASIDE','AUDIO','B','BASE','BDI','BDO','BLOCKQUOTE','BODY','BR','BUTTON','CANVAS','CAPTION','CENTER','CITE','CODE','COL','COLGROUP','COMMAND','DATALIST','DD','DEL','DETAILS','DFN','DIV','DL','DT','EM','EMBED','FIELDSET','FIGCAPTION','FIGURE','FONT','FOOTER','FORM','H1','H2','H3','H4','H5','H6','HEAD','HEADER','HGROUP','HR','HTML','I','IFRAME','IMG','INPUT','INS','KBD','LABEL','LEGEND','LI','LINK','MAP','MARK','MATH','MENU','META','METER','NAV','NOBR','NOSCRIPT','OBJECT','OL','OPTION','OPTGROUP','OUTPUT','P','PARAM','PRE','PROGRESS','Q','RP','RT','RUBY','S','SAMP','SCRIPT','SECTION','SELECT','SMALL','SOURCE','SPAN','STRONG','STYLE','SUB','SUMMARY','SUP','SVG','TABLE','TBODY','TD','TEXTAREA','TFOOT','TH','THEAD','TIME','TITLE','TR','TRACK','U','UL','VAR','VIDEO','WBR'];\n\n            // Precompute the lookup tables.\n            [].forEach.call(tagNames, (name) => {\n                if (!noStyleTags[name]) {\n                    defaultStylesByTagName[name] = computeDefaultStyleByTagName(name);\n                }\n            });\n\n            function computeDefaultStyleByTagName(tagName) {\n                let defaultStyle = {},\n                    element = document.body.appendChild(document.createElement(tagName)),\n                    computedStyle = window.getComputedStyle(element);\n\n                [].forEach.call(computedStyle, (style) => {\n                    defaultStyle[style] = computedStyle[style];\n                });\n                document.body.removeChild(element);\n                return defaultStyle;\n            }\n\n            function getDefaultStyleByTagName (tagName) {\n                tagName = tagName.toUpperCase();\n                if (!defaultStylesByTagName[tagName]) {\n                    defaultStylesByTagName[tagName] = computeDefaultStyleByTagName(tagName);\n                }\n                return defaultStylesByTagName[tagName];\n            };\n\n            function serializeWithStyles(elem) {\n\n                let cssTexts = [],\n                    elements,\n                    computedStyle,\n                    defaultStyle,\n                    result;\n\n                if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n                    console.error('Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE');\n                    return;\n                }\n\n                cssTexts = [];\n                elements = elem.querySelectorAll('*');\n\n                [].forEach.call(elements, (el, i) => {\n                    if (!noStyleTags[el.tagName]) {\n                        computedStyle = window.getComputedStyle(el);\n                        defaultStyle = getDefaultStyleByTagName(el.tagName);\n                        cssTexts[i] = el.style.cssText;\n                        [].forEach.call(computedStyle, (cssPropName) => {\n                            if (computedStyle[cssPropName] !== defaultStyle[cssPropName]) {\n                                el.style[cssPropName] = computedStyle[cssPropName];\n                            }\n                        });\n                    }\n                });\n\n                result = elem.outerHTML;\n                elements = [].map.call(elements, (el, i) => {\n                    el.style.cssText = cssTexts[i];\n                    return el;\n                });\n\n                return result;\n\n            };\n\n            return serializeWithStyles;\n        }\n    }\n})();\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/helpers/serializeWithStyles.js\n **/","/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/base-64/base64.js\n ** module id = 4\n ** module chunks = 0 2 4 5 6 7\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 5\n ** module chunks = 0 2 4 5 6 7\n **/"],"sourceRoot":""}