{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*****","webpack:///stacked-area.min.js","webpack:///webpack/bootstrap 55e57523fbdb728288bc?177e*****","webpack:///./src/charts/stacked-area.js","webpack:///external \"d3\"?c0c4*****","webpack:///./src/charts/helpers/exportChart.js?f69b***","webpack:///./src/charts/helpers/serializeWithStyles.js?b833***","webpack:///./~/base-64/base64.js?68a6***","webpack:///(webpack)/buildin/module.js?c3c2***","webpack:///external \"underscore\""],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_7__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","d3","exportChart","_","_selection","each","_data","chartWidth","width","margin","left","right","chartHeight","height","top","bottom","data","cleanData","dataByDate","nest","key","getDate","entries","sortBy","buildLayers","buildScales","buildAxis","buildSVG","drawStackedAreas","drawAxis","drawDataReferencePoints","shouldShowTooltip","drawHoverOverlay","drawVerticalMarker","addMouseEvents","svg","on","handleMouseOver","handleMouseOut","handleMouseMove","getMaxNumOfHorizontalTicks","dataPointNumber","singleTickWidth","spacing","ticksForWidth","Math","ceil","min","xAxis","axis","scale","xScale","ticks","length","tickFormat","xTickFormat","tickSize","outerTickSize","tickPadding","orient","xMonthAxis","time","months","xTickMonthFormat","yAxis","yScale","numVerticalTicks","yTickFormat","buildContainerGroups","container","append","classed","attr","selectAll","stack","layout","offset","values","getValues","x","y","getValueLabel","getName","layersInitial","createEmptyInitialSet","layers","domain","extent","_ref5","date","range","linear","max","_ref6","y0","nice","colorScale","ordinal","colors","map","categoryColorMap","reduce","memo","item","select","transition","ease","d","parseUTC","dateLabel","valueLabel","eraseDataPointHighlights","verticalMarkerContainer","remove","JSON","parse","stringify","value","monthAxisPadding","yTickTextYOffset","points","enter","class","_ref7","area","clip-path","_ref8","index","point","pointsSize","pointsColor","pointsBorderColor","dataPoints","push","overlay","y1","y2","fill","style","areas","interpolate","_ref9","_ref10","_ref11","_ref12","_ref13","delay","areaAnimationDelays","duration","areaAnimationDuration","_ref14","areaOpacity","_ref15","exit","opacity","verticalMarker","x1","x2","getMouseXPosition","event","mouse","getNearestDataPoint","mouseX","epsilon","nearest","dataByDateParsed","Date","find","_ref16","abs","dataPoint","dataPointXPosition","moveVerticalMarker","highlightDataPoints","dispatch","customMouseMove","customMouseOut","customMouseOver","accumulator","filter","v","sort","b","colorOrder","el","forEach","_ref17","name","marker","circleSize","cx","cy","r","stroke-width","stroke","verticalMarkerXPosition","tooltipThreshold","#051C48","#9963D5","#FF4D7C","#E5C400","#4DDB86","#4DC2F5","maxAreaNumber","areaAnimationDelayStep","_ref","_ref3","_ref4","utc","format","_x","arguments","filename","rebind","undefined","d3svg","canvasWidth","canvasHeight","html","convertSvgToHtml","canvas","createCanvas","img","createImage","onload","handleImageLoad","bind","e","preventDefault","drawImageOnCanvas","downloadCanvas","config","defaultFilename","serializer","serializeWithStyles","initializeSerializer","version","xmlns","serialized","node","replace","styleBackgroundString","document","createElement","svgHtml","Image","src","imageSourceBase","encoder","image","getContext","drawImage","extensionType","url","toDataURL","link","href","download","body","appendChild","click","removeChild","window","btoa","encode","styleClass","chartBackground","computeDefaultStyleByTagName","tagName","defaultStyle","element","computedStyle","getComputedStyle","getDefaultStyleByTagName","toUpperCase","defaultStylesByTagName","elem","cssTexts","elements","result","nodeType","Node","ELEMENT_NODE","querySelectorAll","noStyleTags","cssText","cssPropName","outerHTML","console","error","BASE","HEAD","HTML","META","NOFRAME","NOSCRIPT","PARAM","SCRIPT","STYLE","TITLE","tagNames","global","freeExports","freeGlobal","InvalidCharacterError","message","prototype","Error","TABLE","REGEX_SPACE_CHARACTERS","decode","input","String","test","bitStorage","buffer","bitCounter","output","position","indexOf","charAt","fromCharCode","padding","charCodeAt","base64","webpackPolyfill","deprecate","paths","children"],"mappings":"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","file":"stacked-area.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"), require(\"underscore\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\", \"underscore\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"d3\"), require(\"underscore\")) : factory(root[\"d3\"], root[\"underscore\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"), require(\"underscore\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\", \"underscore\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"d3\"), require(\"underscore\")) : factory(root[\"d3\"], root[\"underscore\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3 = __webpack_require__(1);\n\t    var exportChart = __webpack_require__(2);\n\t    var _ = __webpack_require__(7);\n\t\n\t    /**\n\t     * @typdef D3Layout\n\t     * @type function\n\t     */\n\t\n\t    /**\n\t     * Stacked Area Chart reusable API module that allows us\n\t     * rendering a multi area and configurable chart.\n\t     *\n\t     * @module Stacked Area\n\t     * @version 0.0.1\n\t     * @tutorial stacked-area\n\t     * @requires d3\n\t     *\n\t     */\n\t\n\t    return function module() {\n\t        var margin = {\n\t            left: 40,\n\t            right: 20,\n\t            top: 60,\n\t            bottom: 40\n\t        },\n\t            width = 960,\n\t            height = 500,\n\t            xScale = void 0,\n\t            xAxis = void 0,\n\t            xMonthAxis = void 0,\n\t            yScale = void 0,\n\t            yAxis = void 0,\n\t            monthAxisPadding = 30,\n\t            numVerticalTicks = 5,\n\t            yTickTextYOffset = -8,\n\t            colors = ['#051C48', '#9963D5', '#FF4D7C', '#E5C400', '#4DDB86', '#4DC2F5'],\n\t            colorOrder = {\n\t            '#051C48': 0,\n\t            '#9963D5': 1,\n\t            '#FF4D7C': 2,\n\t            '#E5C400': 3,\n\t            '#4DDB86': 4,\n\t            '#4DC2F5': 5\n\t        },\n\t            areaOpacity = 0.8,\n\t            colorScale = void 0,\n\t            categoryColorMap = void 0,\n\t            layers = void 0,\n\t            layersInitial = void 0,\n\t            area = void 0,\n\t\n\t\n\t        // Area Animation\n\t        maxAreaNumber = 8,\n\t            areaAnimationDelayStep = 20,\n\t            areaAnimationDelays = d3.range(areaAnimationDelayStep, maxAreaNumber * areaAnimationDelayStep, areaAnimationDelayStep),\n\t            overlay = void 0,\n\t            verticalMarkerContainer = void 0,\n\t            verticalMarker = void 0,\n\t            dataPoints = {},\n\t            pointsSize = 1.5,\n\t            pointsColor = '#c0c6cc',\n\t            pointsBorderColor = '#ffffff',\n\t            ease = 'quad-out',\n\t            areaAnimationDuration = 1000,\n\t            svg = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            data = void 0,\n\t            dataByDate = void 0,\n\t            tooltipThreshold = 480,\n\t            dateLabel = 'dateUTC',\n\t            valueLabel = 'views',\n\t\n\t\n\t        // getters\n\t        getValueLabel = function getValueLabel(d) {\n\t            return d[valueLabel];\n\t        },\n\t            getValues = function getValues(_ref) {\n\t            var values = _ref.values;\n\t            return values;\n\t        },\n\t            getKey = function getKey(_ref2) {\n\t            var key = _ref2.key;\n\t            return key;\n\t        },\n\t            getName = function getName(_ref3) {\n\t            var name = _ref3.name;\n\t            return name;\n\t        },\n\t            getDate = function getDate(_ref4) {\n\t            var date = _ref4.date;\n\t            return date;\n\t        },\n\t\n\t\n\t        // formats\n\t        utc = d3.time.format.utc('%Y-%m-%dT%H:%M:%SZ'),\n\t            parseUTC = utc.parse,\n\t            yTickFormat = d3.format('s'),\n\t            xTickFormat = d3.time.format('%e'),\n\t            xTickMonthFormat = d3.time.format('%b'),\n\t\n\t\n\t        // events\n\t        dispatch = d3.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\t\n\t        /**\n\t          * This function creates the graph using the selection and data provided\n\t          * @param {D3Selection} _selection A d3 selection that represents\n\t          * the container(s) where the chart(s) will be rendered\n\t          * @param {Object} _data The data to attach and generate the chart\n\t          */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = cleanData(_data);\n\t                dataByDate = d3.nest().key(getDate).entries(_(_data).sortBy('date'));\n\t                buildLayers();\n\t                buildScales();\n\t                buildAxis();\n\t                buildSVG(this);\n\t                drawStackedAreas();\n\t                drawAxis();\n\t                drawDataReferencePoints();\n\t\n\t                if (shouldShowTooltip()) {\n\t                    drawHoverOverlay();\n\t                    drawVerticalMarker();\n\t                    addMouseEvents();\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Adds events to the container group if the environment is not mobile\n\t         * Adding: mouseover, mouseout and mousemove\n\t         */\n\t        function addMouseEvents() {\n\t            svg.on('mouseover', handleMouseOver).on('mouseout', handleMouseOut).on('mousemove', handleMouseMove);\n\t        }\n\t\n\t        /**\n\t         * Calculates the maximum number of ticks for the x axis\n\t         * @param  {Number} width Chart width\n\t         * @param  {Number} dataPointNumber  Number of entries on the data\n\t         * @return {Number}       Number of ticks to render\n\t         */\n\t        function getMaxNumOfHorizontalTicks(width, dataPointNumber) {\n\t            var singleTickWidth = 30,\n\t                spacing = 30,\n\t                ticksForWidth = Math.ceil(width / (singleTickWidth + spacing));\n\t\n\t            return Math.min(dataPointNumber, ticksForWidth);\n\t        }\n\t\n\t        /**\n\t         * Creates the d3 x and y axis, setting orientations\n\t         * @private\n\t         */\n\t        function buildAxis() {\n\t            xAxis = d3.svg.axis().scale(xScale).ticks(getMaxNumOfHorizontalTicks(chartWidth, dataByDate.length)).tickFormat(xTickFormat).tickSize(10, 0, 0).outerTickSize([50]).tickPadding([10]).orient('bottom');\n\t\n\t            //TODO: Review this axis with real data\n\t            xMonthAxis = d3.svg.axis().scale(xScale).ticks(d3.time.months).tickFormat(xTickMonthFormat).tickSize(10, 0, 0).tickPadding([10]).orient('bottom');\n\t\n\t            yAxis = d3.svg.axis().scale(yScale).ticks(numVerticalTicks).tickFormat(yTickFormat).tickSize(width, 0, 0).outerTickSize([50]).tickPadding([4]).orient('right');\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * NOTE: The order of drawing of this group elements is really important,\n\t         * as everything else will be drawn on top of them\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container.append('g').classed('x-axis-group', true).append('g').classed('x axis', true);\n\t            container.selectAll('.x-axis-group').append('g').classed('month-axis', true);\n\t            container.append('g').classed('y-axis-group axis', true);\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('metadata-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds the stacked layers layout\n\t         * @return {D3Layout} Layout for drawing the chart\n\t         * @private\n\t         */\n\t        function buildLayers() {\n\t            var stack = d3.layout.stack().offset('zero').values(getValues).x(getDate).y(getValueLabel);\n\t\n\t            var nest = d3.nest().key(getName);\n\t\n\t            layersInitial = stack(nest.entries(createEmptyInitialSet(data)));\n\t            layers = stack(nest.entries(data));\n\t        }\n\t\n\t        /**\n\t         * Creates the x, y and color scales of the chart\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t            xScale = d3.time.scale().domain(d3.extent(data, function (_ref5) {\n\t                var date = _ref5.date;\n\t                return date;\n\t            })).range([0, chartWidth]);\n\t\n\t            yScale = d3.scale.linear().domain([0, d3.max(data, function (_ref6) {\n\t                var y0 = _ref6.y0;\n\t                var y = _ref6.y;\n\t                return y0 + y;\n\t            })]).range([chartHeight, 0]).nice([numVerticalTicks + 1]);\n\t\n\t            colorScale = d3.scale.ordinal().range(colors).domain(data.map(getName));\n\t\n\t            // TODO add spread and rest operators to britecharts\n\t            /*\n\t                let range = colorScale.range();\n\t                categoryColorMap = colorScale.domain().reduce((memo, item, i) => ({...memo, [item]: range[i], }), {});\n\t             */\n\t\n\t            var range = colorScale.range();\n\t            categoryColorMap = colorScale.domain().reduce(function (memo, item, i) {\n\t                memo[item] = range[i];\n\t                return memo;\n\t            }, {});\n\t        }\n\t\n\t        /**\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3.select(container).append('svg').classed('britechart stacked-area', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.transition().ease(ease).attr({ width: width, height: height });\n\t        }\n\t\n\t        /**\n\t         * Parses dates and values into JS Date objects and numbers\n\t         * @param  {obj} data Raw data from JSON file\n\t         * @return {obj}      Parsed data with values and dates\n\t         */\n\t        function cleanData(data) {\n\t\n\t            // could be rewritten using spread operator\n\t            /*\n\t                return data.map((d) => {...d, date: parseUTC(d[dateLabel], [valueLabel] : +d[valueLabel]})\n\t             */\n\t            return data.map(function (d) {\n\t                d.date = parseUTC(d[dateLabel]);\n\t                d[valueLabel] = +d[valueLabel];\n\t                return d;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Removes all the datapoints highlighter circles added to the marker container\n\t         * @return void\n\t         */\n\t        function eraseDataPointHighlights() {\n\t            verticalMarkerContainer.selectAll('.circle-container').remove();\n\t        }\n\t\n\t        /**\n\t         * Creates a copy of the data with values set to 0\n\t         * @param  {obj[]} data Array of objects with the original data\n\t         * @return {obj[]}      Array of objects with the original data and 0 values\n\t         */\n\t        function createEmptyInitialSet(data) {\n\t            // Parsing and stringify is a way of duplicating an array of objects\n\t            // spread could refactor this .map((value) => ({ ...value, [valueLabel]: 0}))\n\t            return cleanData(JSON.parse(JSON.stringify(data)).map(function (value) {\n\t                value[valueLabel] = 0;\n\t                // value.date = parseUTC(value)\n\t                return value;\n\t            }));\n\t        }\n\t\n\t        /**\n\t         * Draws the x and y axis on the svg object within their\n\t         * respective groups\n\t         * @private\n\t         */\n\t        function drawAxis() {\n\t            svg.select('.x-axis-group .axis.x').attr('transform', 'translate( 0, ' + chartHeight + ' )').call(xAxis);\n\t\n\t            svg.select('.x-axis-group .month-axis').attr('transform', 'translate(0, ' + (chartHeight + monthAxisPadding) + ')').call(xMonthAxis);\n\t\n\t            svg.select('.y-axis-group.axis').attr('transform', 'translate( ' + -margin.left + ', 0)').call(yAxis);\n\t\n\t            // Moving the YAxis tick labels to the right side\n\t            d3.selectAll('.y-axis-group .tick text').attr('transform', 'translate( ' + -width + ', ' + yTickTextYOffset + ')');\n\t        }\n\t\n\t        /**\n\t         * Creates SVG dot elements for each data entry and draws them\n\t         */\n\t        function drawDataReferencePoints() {\n\t            // Creates Dots on Data points\n\t            var points = svg.select('.chart-group').selectAll('.dots').data(layers).enter().append('g').attr({\n\t                'class': 'dots',\n\t                'd': function d(_ref7) {\n\t                    var values = _ref7.values;\n\t                    return area(values);\n\t                },\n\t                'clip-path': 'url(#clip)'\n\t            });\n\t\n\t            // Processes the points\n\t            // TODO: Optimize this code\n\t            points.selectAll('.dot').data(function (_ref8, index) {\n\t                var values = _ref8.values;\n\t                return values.map(function (point) {\n\t                    return { index: index, point: point };\n\t                });\n\t            }).enter().append('circle').attr('class', 'dot').attr('r', function () {\n\t                return pointsSize;\n\t            }).attr('fill', function () {\n\t                return pointsColor;\n\t            }).attr('stroke-width', '0').attr('stroke', pointsBorderColor).attr('transform', function (d) {\n\t                var point = d.point;\n\t\n\t                var key = xScale(point.date);\n\t\n\t                dataPoints[key] = dataPoints[key] || [];\n\t                dataPoints[key].push(d);\n\t\n\t                var date = point.date;\n\t                var y = point.y;\n\t                var y0 = point.y0;\n\t\n\t                return 'translate( ' + xScale(date) + ', ' + yScale(y + y0) + ' )';\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws an overlay element over the graph\n\t         * @private\n\t         */\n\t        function drawHoverOverlay() {\n\t            overlay = svg.select('.metadata-group').append('rect').attr({\n\t                class: 'overlay',\n\t                y1: 0,\n\t                y2: chartHeight,\n\t                height: chartHeight,\n\t                width: chartWidth,\n\t                fill: 'rgba(0,0,0,0)'\n\t            }).style('display', 'none');\n\t        }\n\t\n\t        /**\n\t         * Draws the different areas into the chart-group element\n\t         * @private\n\t         */\n\t        function drawStackedAreas() {\n\t            var areas = svg.select('.chart-group').selectAll('.layer').data(layersInitial);\n\t\n\t            // Creating Area function\n\t            area = d3.svg.area().interpolate('cardinal').x(function (_ref9) {\n\t                var date = _ref9.date;\n\t                return xScale(date);\n\t            }).y0(function (_ref10) {\n\t                var y0 = _ref10.y0;\n\t                return yScale(y0);\n\t            }).y1(function (_ref11) {\n\t                var y0 = _ref11.y0;\n\t                var y = _ref11.y;\n\t                return yScale(y0 + y);\n\t            });\n\t\n\t            // Enter\n\t            areas.enter().append('path').attr('class', 'layer').attr('d', function (_ref12) {\n\t                var values = _ref12.values;\n\t                return area(values);\n\t            }).style('fill', function (_ref13) {\n\t                var key = _ref13.key;\n\t                return categoryColorMap[key];\n\t            });\n\t\n\t            // Update\n\t            svg.select('.chart-group').selectAll('.layer').data(layers).transition().delay(function (_, i) {\n\t                return areaAnimationDelays[i];\n\t            }).duration(areaAnimationDuration).ease(ease).attr('d', function (_ref14) {\n\t                var values = _ref14.values;\n\t                return area(values);\n\t            }).style('opacity', areaOpacity).style('fill', function (_ref15) {\n\t                var key = _ref15.key;\n\t                return categoryColorMap[key];\n\t            });\n\t\n\t            // Exit\n\t            areas.exit().transition().style({ opacity: 0 }).remove();\n\t        }\n\t\n\t        /**\n\t         * Creates the vertical marker\n\t         * @return void\n\t         */\n\t        function drawVerticalMarker() {\n\t            verticalMarkerContainer = svg.select('.metadata-group').append('g').attr('class', 'vertical-marker-container').attr('transform', 'translate(9999, 0)');\n\t\n\t            verticalMarker = verticalMarkerContainer.selectAll('path').data([{\n\t                x1: 0,\n\t                y1: 0,\n\t                x2: 0,\n\t                y2: 0\n\t            }]).enter().append('line').classed('vertical-marker', true).attr({\n\t                x1: 0,\n\t                y1: chartHeight,\n\t                x2: 0,\n\t                y2: 0\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Extract X position on the chart from a given mouse event\n\t         * @param  {obj} event D3 mouse event\n\t         * @return {Number}       Position on the x axis of the mouse\n\t         * @private\n\t         */\n\t        function getMouseXPosition(event) {\n\t            return d3.mouse(event)[0];\n\t        }\n\t\n\t        /**\n\t         * Finds out the data entry that is closer to the given position on pixels\n\t         * @param  {Number} mouseX X position of the mouse\n\t         * @return {obj}        Data entry that is closer to that x axis position\n\t         */\n\t        function getNearestDataPoint(mouseX) {\n\t            var epsilon = void 0,\n\t                nearest = void 0;\n\t\n\t            //could use spread operator, would prevent mutation of original data\n\t            /*\n\t                let dataByDateParsed = dataByDate.map((item) => ({...item, key: new Date(item.key)}))\n\t             */\n\t            var dataByDateParsed = dataByDate.map(function (item) {\n\t                item.key = new Date(item.key);\n\t                return item;\n\t            });\n\t\n\t            epsilon = (xScale(dataByDateParsed[1].key) - xScale(dataByDateParsed[0].key)) / 2;\n\t            nearest = dataByDateParsed.find(function (_ref16) {\n\t                var key = _ref16.key;\n\t                return Math.abs(xScale(key) - mouseX) <= epsilon;\n\t            });\n\t\n\t            return nearest;\n\t        }\n\t\n\t        /**\n\t         * MouseMove handler, calculates the nearest dataPoint to the cursor\n\t         * and updates metadata related to it\n\t         * @private\n\t         */\n\t        function handleMouseMove() {\n\t            var dataPoint = getNearestDataPoint(getMouseXPosition(this) - margin.left),\n\t                dataPointXPosition = void 0;\n\t\n\t            if (dataPoint) {\n\t                dataPointXPosition = xScale(new Date(dataPoint.key));\n\t                // Move verticalMarker to that datapoint\n\t                moveVerticalMarker(dataPointXPosition);\n\t                // Add data points highlighting\n\t                highlightDataPoints(dataPoint);\n\t                // Emit event with xPosition for tooltip or similar feature\n\t                dispatch.customMouseMove(dataPoint, categoryColorMap, dataPointXPosition);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n\t         * It also resets the container of the vertical marker\n\t         * @private\n\t         */\n\t        function handleMouseOut(data) {\n\t            overlay.style('display', 'none');\n\t            verticalMarker.classed('bc-is-active', false);\n\t            verticalMarkerContainer.attr('transform', 'translate(9999, 0)');\n\t\n\t            dispatch.customMouseOut(data);\n\t        }\n\t\n\t        /**\n\t         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n\t         * @private\n\t         */\n\t        function handleMouseOver(data) {\n\t            overlay.style('display', 'block');\n\t            verticalMarker.classed('bc-is-active', true);\n\t\n\t            dispatch.customMouseOver(data);\n\t        }\n\t\n\t        /**\n\t         * Creates coloured circles marking where the exact data y value is for a given data point\n\t         * @param  {obj} dataPoint Data point to extract info from\n\t         * @private\n\t         */\n\t        function highlightDataPoints(dataPoint) {\n\t            var accumulator = 0;\n\t\n\t            eraseDataPointHighlights();\n\t\n\t            // sorting the values based on the order of the colors,\n\t            // so that the order always stays constant\n\t            dataPoint.values = dataPoint.values.filter(function (v) {\n\t                return !!v;\n\t            }).sort(function (a, b) {\n\t                return colorOrder[a.el] > colorOrder[b.el];\n\t            });\n\t\n\t            dataPoint.values.forEach(function (_ref17, index) {\n\t                var name = _ref17.name;\n\t\n\t                var marker = verticalMarkerContainer.append('g').classed('circle-container', true),\n\t                    circleSize = 12;\n\t\n\t                accumulator = accumulator + dataPoint.values[index][valueLabel];\n\t\n\t                marker.append('circle').classed('data-point-highlighter', true).attr({\n\t                    'cx': circleSize,\n\t                    'cy': 0,\n\t                    'r': 5\n\t                }).style({\n\t                    'stroke-width': 3,\n\t                    'stroke': categoryColorMap[name]\n\t                });\n\t\n\t                marker.attr('transform', 'translate( ' + -circleSize + ', ' + yScale(accumulator) + ' )');\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Helper method to update the x position of the vertical marker\n\t         * @param  {obj} dataPoint Data entry to extract info\n\t         * @return void\n\t         */\n\t        function moveVerticalMarker(verticalMarkerXPosition) {\n\t            verticalMarkerContainer.attr('transform', 'translate(' + verticalMarkerXPosition + ',0)');\n\t        }\n\t\n\t        /**\n\t         * Determines if we should add the tooltip related logic depending on the\n\t         * size of the chart and the tooltipThreshold variable value\n\t         * @return {boolean} Should we build the tooltip?\n\t         * @private\n\t         */\n\t        function shouldShowTooltip() {\n\t            return width > tooltipThreshold;\n\t        }\n\t\n\t        // Accessors\n\t        /**\n\t         * Gets or Sets the ease of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { ease | module} Current ease animation or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.ease = function (_x) {\n\t            if (!arguments.length) {\n\t                return ease;\n\t            }\n\t            ease = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            height = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { margin | module} Current margin or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the tooltipThreshold of the chart\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { tooltipThreshold | module} Current tooltipThreshold or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.tooltipThreshold = function (_x) {\n\t            if (!arguments.length) {\n\t                return tooltipThreshold;\n\t            }\n\t            tooltipThreshold = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { width | module} Current width or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            width = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabel of the chart\n\t         * @param  {Number} _x Desired valueLabel for the graph\n\t         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabel;\n\t            }\n\t            valueLabel = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the dateLabel of the chart\n\t         * @param  {Number} _x Desired dateLabel for the graph\n\t         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.dateLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return dateLabel;\n\t            }\n\t            dateLabel = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename) {\n\t            exportChart.call(exports, svg, filename);\n\t        };\n\t\n\t        // Rebind 'customHover' event to the \"exports\" function, so it's available \"externally\" under the typical \"on\" method:\n\t        d3.rebind(exports, dispatch, 'on');\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t\n\t    'use strict';\n\t\n\t    var serializeWithStyles = __webpack_require__(3);\n\t\n\t    var encoder = window.btoa;\n\t\n\t    if (!encoder) {\n\t        encoder = __webpack_require__(4).encode;\n\t    }\n\t\n\t    var config = {\n\t        styleClass: 'britechartStyle',\n\t        defaultFilename: 'britechart.png',\n\t        chartBackground: 'white',\n\t        imageSourceBase: 'data:image/svg+xml;base64,',\n\t        get styleBackgroundString() {\n\t            return '<style>svg{background:' + this.chartBackground + ';}</style>';\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Main function to be used as a method by chart instances to export charts to png\n\t     * @param  {array} svgs (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n\t     * @param  {string} filename [download to be called <filename>.png]\n\t     */\n\t    function exportChart(d3svg, filename) {\n\t        var canvasWidth = this.width(),\n\t            canvasHeight = this.height();\n\t\n\t        var html = convertSvgToHtml(d3svg);\n\t\n\t        var canvas = createCanvas(canvasWidth, canvasHeight);\n\t\n\t        var img = createImage(html);\n\t\n\t        img.onload = handleImageLoad.bind(img, canvas, filename);\n\t    }\n\t\n\t    /**\n\t     * Handles on load event fired by img.onload, this=img\n\t     * @param  {object} canvas TYPE: el <canvas>\n\t     * @param  {string} filename\n\t     * @param  {object} e\n\t     */\n\t    function handleImageLoad(canvas, filename, e) {\n\t        e.preventDefault();\n\t        drawImageOnCanvas(this, canvas);\n\t        downloadCanvas(canvas, filename || config.defaultFilename);\n\t    }\n\t\n\t    /**\n\t     * takes d3 svg el, adds proper svg tags, adds inline styles\n\t     * from stylesheets, adds white background and returns string\n\t     * @param  {object} d3svg TYPE d3 svg element\n\t     * @return {string} string of passed d3\n\t     */\n\t    function convertSvgToHtml(d3svg) {\n\t        var serializer = serializeWithStyles.initializeSerializer();\n\t\n\t        if (!d3svg) {\n\t            return;\n\t        }\n\t\n\t        d3svg.attr({ version: 1.1, xmlns: 'http://www.w3.org/2000/svg' });\n\t\n\t        var serialized = serializer(d3svg.node());\n\t\n\t        return serialized.replace('>', '>' + config.styleBackgroundString);\n\t    }\n\t\n\t    /**\n\t     * Create Canvas\n\t     * @param  {number} width\n\t     * @param  {number} height\n\t     * @return {object} TYPE canvas element\n\t     */\n\t    function createCanvas(width, height) {\n\t        var canvas = document.createElement('canvas');\n\t\n\t        canvas.height = height;\n\t        canvas.width = width;\n\t        return canvas;\n\t    }\n\t\n\t    /**\n\t     * Create Image\n\t     * @param  {string} svgHtml string representation of svg el\n\t     * @return {object}  TYPE element <img>, src points at svg\n\t     */\n\t    function createImage(svgHtml) {\n\t        var img = new Image();\n\t\n\t        img.src = '' + config.imageSourceBase + encoder(svgHtml);\n\t        return img;\n\t    };\n\t\n\t    /**\n\t     * Draws image on canvas\n\t     * @param  {object} image TYPE:el <img>, to be drawn\n\t     * @param  {object} canvas TYPE: el <canvas>, to draw on\n\t     */\n\t    function drawImageOnCanvas(image, canvas) {\n\t        canvas.getContext('2d').drawImage(image, 0, 0);\n\t    }\n\t\n\t    /**\n\t     * Triggers browser to download image, convert canvas to url,\n\t     * we need to append the link el to the dom before clicking it for Firefox to register\n\t     * point <a> at it and trigger click\n\t     * @param  {object} canvas TYPE: el <canvas>\n\t     * @param  {string} filename\n\t     * @param  {string} extensionType\n\t     */\n\t    function downloadCanvas(canvas) {\n\t        var filename = arguments.length <= 1 || arguments[1] === undefined ? 'britechart.png' : arguments[1];\n\t        var extensionType = arguments.length <= 2 || arguments[2] === undefined ? 'image/png' : arguments[2];\n\t\n\t        var url = canvas.toDataURL(extensionType);\n\t        var link = document.createElement('a');\n\t\n\t        link.href = url;\n\t        link.download = filename;\n\t        document.body.appendChild(link);\n\t        link.click();\n\t        document.body.removeChild(link);\n\t    }\n\t\n\t    return exportChart;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function () {\n\t\n\t    'use strict';\n\t\n\t    return {\n\t\n\t        /**\n\t         * returns serializer function, only run it when you know you want to serialize your chart\n\t         * @return {func} serializer to add styles in line to dom string\n\t         */\n\t        initializeSerializer: function initializeSerializer() {\n\t\n\t            // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n\t            var defaultStylesByTagName = {};\n\t\n\t            // Styles inherited from style sheets will not be rendered for elements with these tag names\n\t            var noStyleTags = { 'BASE': true, 'HEAD': true, 'HTML': true, 'META': true, 'NOFRAME': true, 'NOSCRIPT': true, 'PARAM': true, 'SCRIPT': true, 'STYLE': true, 'TITLE': true };\n\t\n\t            // This list determines which css default values lookup tables are precomputed at load time\n\t            // Lookup tables for other tag names will be automatically built at runtime if needed\n\t            var tagNames = ['A', 'ABBR', 'ADDRESS', 'AREA', 'ARTICLE', 'ASIDE', 'AUDIO', 'B', 'BASE', 'BDI', 'BDO', 'BLOCKQUOTE', 'BODY', 'BR', 'BUTTON', 'CANVAS', 'CAPTION', 'CENTER', 'CITE', 'CODE', 'COL', 'COLGROUP', 'COMMAND', 'DATALIST', 'DD', 'DEL', 'DETAILS', 'DFN', 'DIV', 'DL', 'DT', 'EM', 'EMBED', 'FIELDSET', 'FIGCAPTION', 'FIGURE', 'FONT', 'FOOTER', 'FORM', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEAD', 'HEADER', 'HGROUP', 'HR', 'HTML', 'I', 'IFRAME', 'IMG', 'INPUT', 'INS', 'KBD', 'LABEL', 'LEGEND', 'LI', 'LINK', 'MAP', 'MARK', 'MATH', 'MENU', 'META', 'METER', 'NAV', 'NOBR', 'NOSCRIPT', 'OBJECT', 'OL', 'OPTION', 'OPTGROUP', 'OUTPUT', 'P', 'PARAM', 'PRE', 'PROGRESS', 'Q', 'RP', 'RT', 'RUBY', 'S', 'SAMP', 'SCRIPT', 'SECTION', 'SELECT', 'SMALL', 'SOURCE', 'SPAN', 'STRONG', 'STYLE', 'SUB', 'SUMMARY', 'SUP', 'SVG', 'TABLE', 'TBODY', 'TD', 'TEXTAREA', 'TFOOT', 'TH', 'THEAD', 'TIME', 'TITLE', 'TR', 'TRACK', 'U', 'UL', 'VAR', 'VIDEO', 'WBR'];\n\t\n\t            // Precompute the lookup tables.\n\t            [].forEach.call(tagNames, function (name) {\n\t                if (!noStyleTags[name]) {\n\t                    defaultStylesByTagName[name] = computeDefaultStyleByTagName(name);\n\t                }\n\t            });\n\t\n\t            function computeDefaultStyleByTagName(tagName) {\n\t                var defaultStyle = {},\n\t                    element = document.body.appendChild(document.createElement(tagName)),\n\t                    computedStyle = window.getComputedStyle(element);\n\t\n\t                [].forEach.call(computedStyle, function (style) {\n\t                    defaultStyle[style] = computedStyle[style];\n\t                });\n\t                document.body.removeChild(element);\n\t                return defaultStyle;\n\t            }\n\t\n\t            function getDefaultStyleByTagName(tagName) {\n\t                tagName = tagName.toUpperCase();\n\t                if (!defaultStylesByTagName[tagName]) {\n\t                    defaultStylesByTagName[tagName] = computeDefaultStyleByTagName(tagName);\n\t                }\n\t                return defaultStylesByTagName[tagName];\n\t            };\n\t\n\t            function serializeWithStyles(elem) {\n\t\n\t                var cssTexts = [],\n\t                    elements = void 0,\n\t                    computedStyle = void 0,\n\t                    defaultStyle = void 0,\n\t                    result = void 0;\n\t\n\t                if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n\t                    console.error('Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE');\n\t                    return;\n\t                }\n\t\n\t                cssTexts = [];\n\t                elements = elem.querySelectorAll('*');\n\t\n\t                [].forEach.call(elements, function (el, i) {\n\t                    if (!noStyleTags[el.tagName]) {\n\t                        computedStyle = window.getComputedStyle(el);\n\t                        defaultStyle = getDefaultStyleByTagName(el.tagName);\n\t                        cssTexts[i] = el.style.cssText;\n\t                        [].forEach.call(computedStyle, function (cssPropName) {\n\t                            if (computedStyle[cssPropName] !== defaultStyle[cssPropName]) {\n\t                                el.style[cssPropName] = computedStyle[cssPropName];\n\t                            }\n\t                        });\n\t                    }\n\t                });\n\t\n\t                result = elem.outerHTML;\n\t                elements = [].map.call(elements, function (el, i) {\n\t                    el.style.cssText = cssTexts[i];\n\t                    return el;\n\t                });\n\t\n\t                return result;\n\t            };\n\t\n\t            return serializeWithStyles;\n\t        }\n\t    };\n\t}();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n\t;(function(root) {\n\t\n\t\t// Detect free variables `exports`.\n\t\tvar freeExports = typeof exports == 'object' && exports;\n\t\n\t\t// Detect free variable `module`.\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\tmodule.exports == freeExports && module;\n\t\n\t\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t\t// it as `root`.\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar InvalidCharacterError = function(message) {\n\t\t\tthis.message = message;\n\t\t};\n\t\tInvalidCharacterError.prototype = new Error;\n\t\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\t\n\t\tvar error = function(message) {\n\t\t\t// Note: the error messages used throughout this file match those used by\n\t\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\t\tthrow new InvalidCharacterError(message);\n\t\t};\n\t\n\t\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\t\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\t\n\t\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t\t// implementation. https://gist.github.com/atk/1020396\n\t\tvar decode = function(input) {\n\t\t\tinput = String(input)\n\t\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\t\tvar length = input.length;\n\t\t\tif (length % 4 == 0) {\n\t\t\t\tinput = input.replace(/==?$/, '');\n\t\t\t\tlength = input.length;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tlength % 4 == 1 ||\n\t\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t\t) {\n\t\t\t\terror(\n\t\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t\t);\n\t\t\t}\n\t\t\tvar bitCounter = 0;\n\t\t\tvar bitStorage;\n\t\t\tvar buffer;\n\t\t\tvar output = '';\n\t\t\tvar position = -1;\n\t\t\twhile (++position < length) {\n\t\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t};\n\t\n\t\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\t\tvar encode = function(input) {\n\t\t\tinput = String(input);\n\t\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\t\terror(\n\t\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t\t'Latin1 range.'\n\t\t\t\t);\n\t\t\t}\n\t\t\tvar padding = input.length % 3;\n\t\t\tvar output = '';\n\t\t\tvar position = -1;\n\t\t\tvar a;\n\t\t\tvar b;\n\t\t\tvar c;\n\t\t\tvar d;\n\t\t\tvar buffer;\n\t\t\t// Make sure any padding is handled outside of the loop.\n\t\t\tvar length = input.length - padding;\n\t\n\t\t\twhile (++position < length) {\n\t\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\t\tc = input.charCodeAt(++position);\n\t\t\t\tbuffer = a + b + c;\n\t\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t\t// matching character for each of them to the output.\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t\t);\n\t\t\t}\n\t\n\t\t\tif (padding == 2) {\n\t\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\t\tb = input.charCodeAt(++position);\n\t\t\t\tbuffer = a + b;\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t\t'='\n\t\t\t\t);\n\t\t\t} else if (padding == 1) {\n\t\t\t\tbuffer = input.charCodeAt(position);\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t\t'=='\n\t\t\t\t);\n\t\t\t}\n\t\n\t\t\treturn output;\n\t\t};\n\t\n\t\tvar base64 = {\n\t\t\t'encode': encode,\n\t\t\t'decode': decode,\n\t\t\t'version': '0.1.0'\n\t\t};\n\t\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn base64;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = base64;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tfor (var key in base64) {\n\t\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.base64 = base64;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module), (function() { return this; }())))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 6 */,\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** stacked-area.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 55e57523fbdb728288bc\n **/","define(function(require){\n    'use strict';\n\n    const d3 = require('d3');\n    const exportChart = require('./helpers/exportChart');\n    const _ = require('underscore');\n\n    /**\n     * @typdef D3Layout\n     * @type function\n     */\n\n    /**\n     * Stacked Area Chart reusable API module that allows us\n     * rendering a multi area and configurable chart.\n     *\n     * @module Stacked Area\n     * @version 0.0.1\n     * @tutorial stacked-area\n     * @requires d3\n     *\n     */\n\n    return function module() {\n        let margin = {\n                left: 40,\n                right: 20,\n                top: 60,\n                bottom: 40\n            },\n            width = 960,\n            height = 500,\n\n            xScale, xAxis, xMonthAxis,\n            yScale, yAxis,\n\n            monthAxisPadding = 30,\n            numVerticalTicks = 5,\n            yTickTextYOffset = -8,\n\n            colors = [\n                '#051C48',\n                '#9963D5',\n                '#FF4D7C',\n                '#E5C400',\n                '#4DDB86',\n                '#4DC2F5'\n            ],\n            colorOrder = {\n                '#051C48': 0,\n                '#9963D5': 1,\n                '#FF4D7C': 2,\n                '#E5C400': 3,\n                '#4DDB86': 4,\n                '#4DC2F5': 5\n            },\n            areaOpacity = 0.8,\n            colorScale,\n            categoryColorMap,\n\n            layers,\n            layersInitial,\n            area,\n\n            // Area Animation\n            maxAreaNumber = 8,\n            areaAnimationDelayStep = 20,\n            areaAnimationDelays = d3.range(areaAnimationDelayStep, maxAreaNumber* areaAnimationDelayStep, areaAnimationDelayStep),\n\n            overlay,\n\n            verticalMarkerContainer,\n            verticalMarker,\n\n            dataPoints            = {},\n            pointsSize            = 1.5,\n            pointsColor           = '#c0c6cc',\n            pointsBorderColor     = '#ffffff',\n\n            ease = 'quad-out',\n            areaAnimationDuration = 1000,\n\n            svg,\n            chartWidth, chartHeight,\n            data,\n            dataByDate,\n\n            tooltipThreshold = 480,\n\n            dateLabel = 'dateUTC',\n            valueLabel = 'views',\n\n            // getters\n            getValueLabel = d => d[valueLabel],\n            getValues = ({values}) => values,\n            getKey = ({key}) => key,\n            getName = ({name}) => name,\n            getDate = ({date}) => date,\n\n\n            // formats\n            utc = d3.time.format.utc('%Y-%m-%dT%H:%M:%SZ'),\n            parseUTC = utc.parse,\n\n            yTickFormat = d3.format('s'),\n            xTickFormat = d3.time.format('%e'),\n            xTickMonthFormat = d3.time.format('%b'),\n\n            // events\n            dispatch = d3.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\n\n       /**\n         * This function creates the graph using the selection and data provided\n         * @param {D3Selection} _selection A d3 selection that represents\n         * the container(s) where the chart(s) will be rendered\n         * @param {Object} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data){\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(_data);\n                dataByDate = d3.nest()\n                    .key( getDate )\n                    .entries(\n                         _(_data).sortBy('date')\n                    );\n                buildLayers();\n                buildScales();\n                buildAxis();\n                buildSVG(this);\n                drawStackedAreas();\n                drawAxis();\n                drawDataReferencePoints();\n\n                if(shouldShowTooltip()){\n                    drawHoverOverlay();\n                    drawVerticalMarker();\n                    addMouseEvents();\n                }\n            });\n        }\n\n        /**\n         * Adds events to the container group if the environment is not mobile\n         * Adding: mouseover, mouseout and mousemove\n         */\n        function addMouseEvents() {\n            svg\n                .on('mouseover', handleMouseOver)\n                .on('mouseout', handleMouseOut)\n                .on('mousemove', handleMouseMove);\n        }\n\n        /**\n         * Calculates the maximum number of ticks for the x axis\n         * @param  {Number} width Chart width\n         * @param  {Number} dataPointNumber  Number of entries on the data\n         * @return {Number}       Number of ticks to render\n         */\n        function getMaxNumOfHorizontalTicks(width, dataPointNumber) {\n            let singleTickWidth = 30,\n                spacing = 30,\n                ticksForWidth = Math.ceil(width / (singleTickWidth + spacing));\n\n            return Math.min(dataPointNumber, ticksForWidth);\n        }\n\n        /**\n         * Creates the d3 x and y axis, setting orientations\n         * @private\n         */\n        function buildAxis(){\n            xAxis = d3.svg.axis()\n                .scale(xScale)\n                .ticks(getMaxNumOfHorizontalTicks(chartWidth, dataByDate.length))\n                .tickFormat(xTickFormat)\n                .tickSize(10, 0, 0)\n                .outerTickSize([50])\n                .tickPadding([10])\n                .orient('bottom');\n\n            //TODO: Review this axis with real data\n            xMonthAxis = d3.svg.axis()\n                .scale(xScale)\n                .ticks(d3.time.months)\n                .tickFormat(xTickMonthFormat)\n                .tickSize(10, 0, 0)\n                .tickPadding([10])\n                .orient('bottom');\n\n            yAxis = d3.svg.axis()\n                .scale(yScale)\n                .ticks(numVerticalTicks)\n                .tickFormat(yTickFormat)\n                .tickSize(width, 0, 0)\n                .outerTickSize([50])\n                .tickPadding([4])\n                .orient('right');\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * NOTE: The order of drawing of this group elements is really important,\n         * as everything else will be drawn on top of them\n         * @private\n         */\n        function buildContainerGroups(){\n           let container = svg.append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${margin.left},${margin.top})`);\n\n            container\n                .append('g').classed('x-axis-group', true)\n                .append('g').classed('x axis', true);\n            container.selectAll('.x-axis-group')\n                .append('g').classed('month-axis', true);\n            container\n                .append('g').classed('y-axis-group axis', true);\n            container\n                .append('g').classed('chart-group', true);\n            container\n                .append('g').classed('metadata-group', true);\n        }\n\n        /**\n         * Builds the stacked layers layout\n         * @return {D3Layout} Layout for drawing the chart\n         * @private\n         */\n        function buildLayers(){\n            let stack = d3.layout.stack()\n                    .offset('zero')\n                    .values(getValues)\n                    .x(getDate)\n                    .y(getValueLabel);\n\n            let nest = d3.nest()\n                    .key(getName);\n\n            layersInitial = stack(nest.entries(createEmptyInitialSet(data)));\n            layers = stack(nest.entries(data));\n        }\n\n        /**\n         * Creates the x, y and color scales of the chart\n         * @private\n         */\n        function buildScales(){\n            xScale = d3.time.scale()\n                .domain(d3.extent(data, ({date}) => date))\n                .range([0, chartWidth]);\n\n            yScale = d3.scale.linear()\n                .domain([0, d3.max(data, ({y0, y}) => (y0 + y) )])\n                .range([chartHeight, 0])\n                .nice([numVerticalTicks + 1]);\n\n            colorScale = d3.scale.ordinal()\n                  .range(colors)\n                  .domain(data.map(getName));\n\n            // TODO add spread and rest operators to britecharts\n            /*\n                let range = colorScale.range();\n                categoryColorMap = colorScale.domain().reduce((memo, item, i) => ({...memo, [item]: range[i], }), {});\n             */\n\n            let range = colorScale.range();\n            categoryColorMap = colorScale.domain().reduce((memo, item, i) => {\n                memo[item] = range[i];\n                return memo;\n            }, {});\n        }\n\n        /**\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container){\n            if (!svg) {\n                svg = d3.select(container)\n                    .append('svg')\n                    .classed('britechart stacked-area', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .transition()\n                .ease(ease)\n                .attr({width, height});\n        }\n\n        /**\n         * Parses dates and values into JS Date objects and numbers\n         * @param  {obj} data Raw data from JSON file\n         * @return {obj}      Parsed data with values and dates\n         */\n        function cleanData(data) {\n\n            // could be rewritten using spread operator\n            /*\n                return data.map((d) => {...d, date: parseUTC(d[dateLabel], [valueLabel] : +d[valueLabel]})\n             */\n            return data.map((d) => {\n                d.date = parseUTC(d[dateLabel]);\n                d[valueLabel] = +d[valueLabel];\n                return d;\n            });\n        }\n\n        /**\n         * Removes all the datapoints highlighter circles added to the marker container\n         * @return void\n         */\n        function eraseDataPointHighlights() {\n            verticalMarkerContainer.selectAll('.circle-container').remove();\n        }\n\n        /**\n         * Creates a copy of the data with values set to 0\n         * @param  {obj[]} data Array of objects with the original data\n         * @return {obj[]}      Array of objects with the original data and 0 values\n         */\n        function createEmptyInitialSet(data) {\n            // Parsing and stringify is a way of duplicating an array of objects\n            // spread could refactor this .map((value) => ({ ...value, [valueLabel]: 0}))\n            return cleanData(\n                JSON.parse(JSON.stringify(data))\n                    .map(function(value){\n                        value[valueLabel] = 0;\n                        // value.date = parseUTC(value)\n                        return value;\n                    })\n                );\n        }\n\n        /**\n         * Draws the x and y axis on the svg object within their\n         * respective groups\n         * @private\n         */\n        function drawAxis(){\n            svg.select('.x-axis-group .axis.x')\n                .attr('transform', `translate( 0, ${chartHeight} )`)\n                .call(xAxis);\n\n            svg.select('.x-axis-group .month-axis')\n                .attr('transform', `translate(0, ${(chartHeight + monthAxisPadding)})`)\n                .call(xMonthAxis);\n\n            svg.select('.y-axis-group.axis')\n                .attr('transform', `translate( ${-margin.left}, 0)`)\n                .call(yAxis);\n\n            // Moving the YAxis tick labels to the right side\n            d3.selectAll('.y-axis-group .tick text')\n                .attr('transform', `translate( ${- width}, ${yTickTextYOffset})` );\n        }\n\n        /**\n         * Creates SVG dot elements for each data entry and draws them\n         */\n        function drawDataReferencePoints() {\n            // Creates Dots on Data points\n            var points = svg.select('.chart-group').selectAll('.dots')\n                .data(layers)\n              .enter().append('g')\n                .attr({\n                    'class': 'dots',\n                    'd': ({values}) => area(values),\n                    'clip-path': 'url(#clip)'\n                });\n\n            // Processes the points\n            // TODO: Optimize this code\n            points.selectAll('.dot')\n                .data(({values}, index) => values.map((point) => ({index, point})))\n                .enter()\n                .append('circle')\n                .attr('class','dot')\n                .attr('r', () => pointsSize)\n                .attr('fill', () => pointsColor)\n                .attr('stroke-width', '0')\n                .attr('stroke', pointsBorderColor)\n                .attr('transform', function(d) {\n                    let {point} = d;\n                    let key = xScale(point.date);\n\n                    dataPoints[key] = dataPoints[key] || [];\n                    dataPoints[key].push(d);\n\n                    let {date, y, y0} = point;\n                    return `translate( ${xScale(date)}, ${yScale(y + y0)} )`;\n                });\n        }\n\n        /**\n         * Draws an overlay element over the graph\n         * @private\n         */\n        function drawHoverOverlay(){\n            overlay = svg.select('.metadata-group')\n                .append('rect')\n                .attr({\n                    class: 'overlay',\n                    y1: 0,\n                    y2: chartHeight,\n                    height: chartHeight,\n                    width: chartWidth,\n                    fill: 'rgba(0,0,0,0)'\n                })\n                .style('display', 'none');\n        }\n\n        /**\n         * Draws the different areas into the chart-group element\n         * @private\n         */\n        function drawStackedAreas(){\n            let areas =  svg.select('.chart-group').selectAll('.layer')\n                .data(layersInitial);\n\n            // Creating Area function\n            area = d3.svg.area()\n                .interpolate('cardinal')\n                .x( ({date}) => xScale(date) )\n                .y0( ({y0}) => yScale(y0) )\n                .y1( ({y0, y}) => yScale(y0 + y) );\n\n            // Enter\n            areas.enter()\n                .append('path')\n                .attr('class', 'layer')\n                .attr('d', ({values}) => area(values))\n                .style('fill', ({key}) => categoryColorMap[key]);\n\n            // Update\n            svg.select('.chart-group').selectAll('.layer')\n                .data(layers)\n                .transition()\n                .delay( (_, i) => areaAnimationDelays[i])\n                .duration(areaAnimationDuration)\n                .ease(ease)\n                .attr('d', ({values}) => area(values))\n                .style('opacity', areaOpacity)\n                .style('fill', ({key}) => categoryColorMap[key]);\n\n            // Exit\n            areas.exit()\n                .transition().style({ opacity: 0 }).remove();\n        }\n\n        /**\n         * Creates the vertical marker\n         * @return void\n         */\n        function drawVerticalMarker(){\n            verticalMarkerContainer = svg.select('.metadata-group')\n                .append('g')\n                .attr('class', 'vertical-marker-container')\n                .attr('transform', 'translate(9999, 0)');\n\n            verticalMarker = verticalMarkerContainer.selectAll('path')\n                .data([{\n                    x1: 0,\n                    y1: 0,\n                    x2: 0,\n                    y2: 0\n                }])\n                .enter()\n                .append('line')\n                .classed('vertical-marker', true)\n                .attr({\n                    x1: 0,\n                    y1: chartHeight,\n                    x2: 0,\n                    y2: 0\n                });\n        }\n\n        /**\n         * Extract X position on the chart from a given mouse event\n         * @param  {obj} event D3 mouse event\n         * @return {Number}       Position on the x axis of the mouse\n         * @private\n         */\n        function getMouseXPosition(event) {\n            return d3.mouse(event)[0];\n        }\n\n        /**\n         * Finds out the data entry that is closer to the given position on pixels\n         * @param  {Number} mouseX X position of the mouse\n         * @return {obj}        Data entry that is closer to that x axis position\n         */\n        function getNearestDataPoint(mouseX) {\n            let epsilon,\n                nearest;\n\n            //could use spread operator, would prevent mutation of original data\n            /*\n                let dataByDateParsed = dataByDate.map((item) => ({...item, key: new Date(item.key)}))\n             */\n            let dataByDateParsed = dataByDate.map((item) => {\n                item.key = new Date(item.key);\n                return item;\n            });\n\n            epsilon = (xScale(dataByDateParsed[1].key) - xScale(dataByDateParsed[0].key)) / 2;\n            nearest = dataByDateParsed.find(({key}) => Math.abs(xScale(key) - mouseX) <= epsilon);\n\n            return nearest;\n        }\n\n        /**\n         * MouseMove handler, calculates the nearest dataPoint to the cursor\n         * and updates metadata related to it\n         * @private\n         */\n        function handleMouseMove(){\n            let dataPoint = getNearestDataPoint(getMouseXPosition(this) - margin.left),\n                dataPointXPosition;\n\n            if(dataPoint) {\n                dataPointXPosition = xScale(new Date( dataPoint.key ));\n                // Move verticalMarker to that datapoint\n                moveVerticalMarker(dataPointXPosition);\n                // Add data points highlighting\n                highlightDataPoints(dataPoint);\n                // Emit event with xPosition for tooltip or similar feature\n                dispatch.customMouseMove(dataPoint, categoryColorMap, dataPointXPosition);\n            }\n        }\n\n        /**\n         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n         * It also resets the container of the vertical marker\n         * @private\n         */\n        function handleMouseOut(data){\n            overlay.style('display', 'none');\n            verticalMarker.classed('bc-is-active', false);\n            verticalMarkerContainer.attr('transform', 'translate(9999, 0)');\n\n            dispatch.customMouseOut(data);\n        }\n\n        /**\n         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n         * @private\n         */\n        function handleMouseOver(data){\n            overlay.style('display', 'block');\n            verticalMarker.classed('bc-is-active', true);\n\n            dispatch.customMouseOver(data);\n        }\n\n        /**\n         * Creates coloured circles marking where the exact data y value is for a given data point\n         * @param  {obj} dataPoint Data point to extract info from\n         * @private\n         */\n        function highlightDataPoints(dataPoint) {\n            let accumulator = 0;\n\n            eraseDataPointHighlights();\n\n            // sorting the values based on the order of the colors,\n            // so that the order always stays constant\n            dataPoint.values = dataPoint.values\n                                    .filter(v => !!v)\n                                    .sort((a, b) => colorOrder[a.el] > colorOrder[b.el]);\n\n            dataPoint.values.forEach(({name}, index) => {\n                let marker = verticalMarkerContainer\n                                .append('g')\n                                .classed('circle-container', true),\n                    circleSize = 12;\n\n                accumulator = accumulator + dataPoint.values[index][valueLabel];\n\n                marker.append('circle')\n                    .classed('data-point-highlighter', true)\n                    .attr({\n                        'cx': circleSize,\n                        'cy': 0,\n                        'r': 5\n                    })\n                    .style({\n                        'stroke-width': 3,\n                        'stroke': categoryColorMap[name]\n                    });\n\n                marker.attr('transform', `translate( ${(- circleSize)}, ${(yScale(accumulator))} )` );\n            });\n        }\n\n        /**\n         * Helper method to update the x position of the vertical marker\n         * @param  {obj} dataPoint Data entry to extract info\n         * @return void\n         */\n        function moveVerticalMarker(verticalMarkerXPosition){\n            verticalMarkerContainer.attr('transform', `translate(${verticalMarkerXPosition},0)`);\n        }\n\n        /**\n         * Determines if we should add the tooltip related logic depending on the\n         * size of the chart and the tooltipThreshold variable value\n         * @return {boolean} Should we build the tooltip?\n         * @private\n         */\n        function shouldShowTooltip() {\n            return width > tooltipThreshold;\n        }\n\n        // Accessors\n        /**\n         * Gets or Sets the ease of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { ease | module} Current ease animation or Area Chart module to chain calls\n         * @public\n         */\n        exports.ease = function(_x) {\n            if (!arguments.length) {\n                return ease;\n            }\n            ease = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { height | module} Current height or Area Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {Object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Area Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the tooltipThreshold of the chart\n         * @param  {Object} _x Margin object to get/set\n         * @return { tooltipThreshold | module} Current tooltipThreshold or Area Chart module to chain calls\n         * @public\n         */\n        exports.tooltipThreshold = function(_x) {\n            if (!arguments.length) {\n                return tooltipThreshold;\n            }\n            tooltipThreshold = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { width | module} Current width or Area Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabel of the chart\n         * @param  {Number} _x Desired valueLabel for the graph\n         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabel = function(_x) {\n            if (!arguments.length) {\n                return valueLabel;\n            }\n            valueLabel = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the dateLabel of the chart\n         * @param  {Number} _x Desired dateLabel for the graph\n         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n         * @public\n         */\n        exports.dateLabel = function(_x) {\n            if (!arguments.length) {\n                return dateLabel;\n            }\n            dateLabel = _x;\n            return this;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename) {\n            exportChart.call(exports, svg, filename);\n        };\n\n        // Rebind 'customHover' event to the \"exports\" function, so it's available \"externally\" under the typical \"on\" method:\n        d3.rebind(exports, dispatch, 'on');\n\n        return exports;\n    };\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/stacked-area.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"d3\"\n ** module id = 1\n ** module chunks = 0 1 2 3 4 5 6 7 8\n **/","define(function(require) {\n\n    'use strict';\n\n    const serializeWithStyles = require('./serializeWithStyles.js');\n\n    let encoder = window.btoa;\n\n    if (!encoder) {\n        encoder = require('base-64').encode;\n    }\n\n    const config = {\n        styleClass : 'britechartStyle',\n        defaultFilename: 'britechart.png',\n        chartBackground: 'white',\n        imageSourceBase: 'data:image/svg+xml;base64,',\n        get styleBackgroundString () {\n            return `<style>svg{background:${this.chartBackground};}</style>`;\n        }\n    };\n\n    /**\n     * Main function to be used as a method by chart instances to export charts to png\n     * @param  {array} svgs (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n     * @param  {string} filename [download to be called <filename>.png]\n     */\n    function exportChart(d3svg, filename) {\n        let canvasWidth = this.width(),\n            canvasHeight = this.height();\n\n        let html = convertSvgToHtml(d3svg);\n\n        let canvas = createCanvas(canvasWidth, canvasHeight);\n\n        let img = createImage(html);\n\n        img.onload = handleImageLoad.bind(img, canvas, filename);\n    }\n\n    /**\n     * Handles on load event fired by img.onload, this=img\n     * @param  {object} canvas TYPE: el <canvas>\n     * @param  {string} filename\n     * @param  {object} e\n     */\n    function handleImageLoad(canvas, filename, e) {\n        e.preventDefault();\n        drawImageOnCanvas(this, canvas);\n        downloadCanvas(canvas, filename || config.defaultFilename);\n    }\n\n    /**\n     * takes d3 svg el, adds proper svg tags, adds inline styles\n     * from stylesheets, adds white background and returns string\n     * @param  {object} d3svg TYPE d3 svg element\n     * @return {string} string of passed d3\n     */\n    function convertSvgToHtml (d3svg) {\n        let serializer = serializeWithStyles.initializeSerializer();\n\n        if (!d3svg){ return; }\n\n        d3svg.attr({ version: 1.1, xmlns: 'http://www.w3.org/2000/svg'});\n\n        let serialized = serializer(d3svg.node());\n\n        return serialized.replace('>',`>${config.styleBackgroundString}`);\n    }\n\n    /**\n     * Create Canvas\n     * @param  {number} width\n     * @param  {number} height\n     * @return {object} TYPE canvas element\n     */\n    function createCanvas(width, height) {\n        let canvas = document.createElement('canvas');\n\n        canvas.height = height;\n        canvas.width = width;\n        return canvas;\n    }\n\n    /**\n     * Create Image\n     * @param  {string} svgHtml string representation of svg el\n     * @return {object}  TYPE element <img>, src points at svg\n     */\n    function createImage(svgHtml) {\n        let img = new Image();\n\n        img.src = `${config.imageSourceBase}${encoder(svgHtml)}`;\n        return img;\n    };\n\n    /**\n     * Draws image on canvas\n     * @param  {object} image TYPE:el <img>, to be drawn\n     * @param  {object} canvas TYPE: el <canvas>, to draw on\n     */\n    function drawImageOnCanvas(image, canvas) {\n        canvas.getContext('2d').drawImage(image, 0, 0);\n    }\n\n    /**\n     * Triggers browser to download image, convert canvas to url,\n     * we need to append the link el to the dom before clicking it for Firefox to register\n     * point <a> at it and trigger click\n     * @param  {object} canvas TYPE: el <canvas>\n     * @param  {string} filename\n     * @param  {string} extensionType\n     */\n    function downloadCanvas(canvas, filename='britechart.png', extensionType='image/png') {\n        let url = canvas.toDataURL(extensionType);\n        let link = document.createElement('a');\n\n        link.href = url;\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n    return exportChart;\n});\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/helpers/exportChart.js\n **/","module.exports = (function() {\n\n    'use strict';\n\n    return {\n\n        /**\n         * returns serializer function, only run it when you know you want to serialize your chart\n         * @return {func} serializer to add styles in line to dom string\n         */\n        initializeSerializer() {\n\n            // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n            const defaultStylesByTagName = {};\n\n            // Styles inherited from style sheets will not be rendered for elements with these tag names\n            const noStyleTags = {'BASE':true,'HEAD':true,'HTML':true,'META':true,'NOFRAME':true,'NOSCRIPT':true,'PARAM':true,'SCRIPT':true,'STYLE':true,'TITLE':true};\n\n            // This list determines which css default values lookup tables are precomputed at load time\n            // Lookup tables for other tag names will be automatically built at runtime if needed\n            const tagNames = ['A','ABBR','ADDRESS','AREA','ARTICLE','ASIDE','AUDIO','B','BASE','BDI','BDO','BLOCKQUOTE','BODY','BR','BUTTON','CANVAS','CAPTION','CENTER','CITE','CODE','COL','COLGROUP','COMMAND','DATALIST','DD','DEL','DETAILS','DFN','DIV','DL','DT','EM','EMBED','FIELDSET','FIGCAPTION','FIGURE','FONT','FOOTER','FORM','H1','H2','H3','H4','H5','H6','HEAD','HEADER','HGROUP','HR','HTML','I','IFRAME','IMG','INPUT','INS','KBD','LABEL','LEGEND','LI','LINK','MAP','MARK','MATH','MENU','META','METER','NAV','NOBR','NOSCRIPT','OBJECT','OL','OPTION','OPTGROUP','OUTPUT','P','PARAM','PRE','PROGRESS','Q','RP','RT','RUBY','S','SAMP','SCRIPT','SECTION','SELECT','SMALL','SOURCE','SPAN','STRONG','STYLE','SUB','SUMMARY','SUP','SVG','TABLE','TBODY','TD','TEXTAREA','TFOOT','TH','THEAD','TIME','TITLE','TR','TRACK','U','UL','VAR','VIDEO','WBR'];\n\n            // Precompute the lookup tables.\n            [].forEach.call(tagNames, (name) => {\n                if (!noStyleTags[name]) {\n                    defaultStylesByTagName[name] = computeDefaultStyleByTagName(name);\n                }\n            });\n\n            function computeDefaultStyleByTagName(tagName) {\n                let defaultStyle = {},\n                    element = document.body.appendChild(document.createElement(tagName)),\n                    computedStyle = window.getComputedStyle(element);\n\n                [].forEach.call(computedStyle, (style) => {\n                    defaultStyle[style] = computedStyle[style];\n                });\n                document.body.removeChild(element);\n                return defaultStyle;\n            }\n\n            function getDefaultStyleByTagName (tagName) {\n                tagName = tagName.toUpperCase();\n                if (!defaultStylesByTagName[tagName]) {\n                    defaultStylesByTagName[tagName] = computeDefaultStyleByTagName(tagName);\n                }\n                return defaultStylesByTagName[tagName];\n            };\n\n            function serializeWithStyles(elem) {\n\n                let cssTexts = [],\n                    elements,\n                    computedStyle,\n                    defaultStyle,\n                    result;\n\n                if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n                    console.error('Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE');\n                    return;\n                }\n\n                cssTexts = [];\n                elements = elem.querySelectorAll('*');\n\n                [].forEach.call(elements, (el, i) => {\n                    if (!noStyleTags[el.tagName]) {\n                        computedStyle = window.getComputedStyle(el);\n                        defaultStyle = getDefaultStyleByTagName(el.tagName);\n                        cssTexts[i] = el.style.cssText;\n                        [].forEach.call(computedStyle, (cssPropName) => {\n                            if (computedStyle[cssPropName] !== defaultStyle[cssPropName]) {\n                                el.style[cssPropName] = computedStyle[cssPropName];\n                            }\n                        });\n                    }\n                });\n\n                result = elem.outerHTML;\n                elements = [].map.call(elements, (el, i) => {\n                    el.style.cssText = cssTexts[i];\n                    return el;\n                });\n\n                return result;\n\n            };\n\n            return serializeWithStyles;\n        }\n    }\n})();\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/helpers/serializeWithStyles.js\n **/","/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/base-64/base64.js\n ** module id = 4\n ** module chunks = 0 2 4 5 6 7\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 5\n ** module chunks = 0 2 4 5 6 7\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 7\n ** module chunks = 6\n **/"],"sourceRoot":""}