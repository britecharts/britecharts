<<<<<<< HEAD
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///britecharts.min.js","webpack:///webpack/bootstrap 8b068d1e0532bdcb1907","webpack:///./src/bundle.js","webpack:///./src/charts/bar.js","webpack:///./~/d3-array/build/d3-array.js","webpack:///./~/d3-ease/build/d3-ease.js","webpack:///./~/d3-axis/build/d3-axis.js","webpack:///./~/d3-color/build/d3-color.js","webpack:///./~/d3-dispatch/build/d3-dispatch.js","webpack:///./~/d3-format/build/d3-format.js","webpack:///./~/d3-scale/build/d3-scale.js","webpack:///./~/d3-collection/build/d3-collection.js","webpack:///./~/d3-interpolate/build/d3-interpolate.js","webpack:///./~/d3-time/build/d3-time.js","webpack:///./~/d3-time-format/build/d3-time-format.js","webpack:///./~/d3-selection/build/d3-selection.js","webpack:///./~/d3-transition/build/d3-transition.js","webpack:///./~/d3-timer/build/d3-timer.js","webpack:///./src/charts/helpers/text.js","webpack:///./src/charts/helpers/exportChart.js","webpack:///./src/charts/helpers/colors.js","webpack:///./src/charts/helpers/constants.js","webpack:///./src/charts/helpers/serializeWithStyles.js","webpack:///./~/base-64/base64.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/charts/donut.js","webpack:///./~/d3-shape/build/d3-shape.js","webpack:///./~/d3-path/build/d3-path.js","webpack:///./src/charts/helpers/common.js","webpack:///./src/charts/legend.js","webpack:///./src/charts/line.js","webpack:///./src/charts/helpers/timeAxis.js","webpack:///./src/charts/helpers/formatHelpers.js","webpack:///./src/charts/tooltip.js","webpack:///./src/charts/mini-tooltip.js","webpack:///./src/charts/sparkline.js","webpack:///./src/charts/stacked-area.js","webpack:///./~/lodash.assign/index.js","webpack:///./src/charts/grouped-bar.js","webpack:///./src/charts/stacked-bar.js","webpack:///./src/charts/step.js","webpack:///./src/charts/brush.js","webpack:///./~/d3-brush/build/d3-brush.js","webpack:///./~/d3-drag/build/d3-drag.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","colors","brush","step","stackedBar","groupedBar","stackedArea","sparkline","miniTooltip","tooltip","line","legend","donut","bar","undefined","_bar","_bar2","_donut","_donut2","_legend","_legend2","_line","_line2","_tooltip","_tooltip2","_miniTooltip","_miniTooltip2","_sparkline","_sparkline2","_stackedArea","_stackedArea2","_groupedBar","_groupedBar2","_stackedBar","_stackedBar2","_step","_step2","_brush","_brush2","_colors","_colors2","__WEBPACK_AMD_DEFINE_RESULT__","require","d3Array","d3Ease","d3Axis","d3Color","d3Dispatch","d3Format","d3Scale","d3Selection","textHelper","_require","exportChart","colorHelper","PERCENTAGE_FORMAT","NUMBER_FORMAT","_selection","each","_data","chartWidth","width","margin","left","right","yAxisPaddingBetweenChart","chartHeight","height","top","bottom","_cleanData","cleanData","data","dataZeroed","buildScales","buildAxis","buildSVG","drawGridLines","drawBars","drawAxis","enablePercentageLabels","drawPercentageLabels","horizontal","xAxis","axisBottom","xScale","ticks","numOfHorizontalTicks","valueLabelFormat","tickSizeInner","yAxis","axisLeft","yScale","numOfVerticalTicks","buildContainerGroups","container","svg","append","classed","attr","percentageAxis","Math","min","percentageAxisToMaxRatio","max","getValue","scaleLinear","domain","rangeRound","scaleBand","map","getName","padding","colorList","reverseColorList","d","reverse","_ref9","i","name","color","colorSchema","length","_ref10","colorMap","item","filter","_ref11","select","originalData","valueLabel","String","nameLabel","wrapText","text","containerWidth","wrapTextWithEllipses","yAxisLineWrapLimit","selectAll","drawHorizontalBars","bars","enter","bandwidth","_ref12","_ref13","on","customOnMouseOver","customOnMouseMove","customOnMouseOut","merge","_ref14","_ref15","drawAnimatedHorizontalBars","_ref16","_ref17","_ref18","transition","duration","animationDuration","delay","interBarDelay","ease","_ref19","drawAnimatedVerticalBars","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","drawVerticalBars","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","labelXPosition","_percentageLabelHorizontalX","_percentageLabelVerticalX","labelYPosition","_percentageLabelHorizontalY","_percentageLabelVerticalY","_percentageLabelHorizontalFormatValue","_percentageLabelVerticalFormatValue","percentageLabels","percentageLabelSize","isAnimated","exit","style","remove","drawHorizontalGridLines","drawVerticalGridLines","maskGridLines","xAxisPadding","drawVerticalExtendedLine","baseLine","drawHorizontalExtendedLine","ev","dispatcher","mouse","_ref32","darker","_ref33","singleColors","aloeGreen","percentageLabelMargin","horizontalLabelFormat","verticalLabelFormat","easeQuadInOut","dispatch","_ref","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","format","_ref8","parseFloat","_x","arguments","filename","title","apply","usePercentage","global","ascendingComparator","f","x","ascending","pair","a","b","tickIncrement","start","stop","count","power","floor","log","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","NaN","bisector","compare","lo","hi","mid","ascendingBisect","bisectRight","bisectLeft","pairs","array","n","Array","cross","values0","values1","reduce","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","sum","isNaN","deviation","v","sqrt","extent","prototype","slice","constant","identity","range","ceil","isFinite","sturges","LN2","histogram","xz","x0","x1","tz","threshold","isArray","shift","pop","bin","bins","push","_","thresholds","quantile","value1","freedmanDiaconis","sort","scott","median","numbers","arrays","merged","j","permute","indexes","permutes","scan","xi","xj","shuffle","t","random","transpose","matrix","row","zip","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","exponent","polyIn","custom","e","polyOut","polyInOut","PI","overshoot","backIn","s","backOut","backInOut","tau","amplitude","period","elasticIn","asin","elasticOut","elasticInOut","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","translateX","translateY","y","scale","center","offset","round","entering","__axis","axis","orient","context","tickValues","tickArguments","tickFormat","spacing","tickPadding","range0","range1","position","copy","selection","path","tick","order","tickExit","tickEnter","insert","k","epsilon","transform","getAttribute","parentNode","tickSizeOuter","tickSize","axisTop","axisRight","extend","parent","definition","create","key","Color","trim","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","hasOwnProperty","r","g","rgbConvert","o","rgb","opacity","h","l","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","constructor","brighter","reI","reN","reP","RegExp","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","toString","Kn","A","B","cosh","sinh","Error","Dispatch","parseTypenames","typenames","types","split","indexOf","type","get","set","callback","noop","concat","typename","T","that","args","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","zero","comma","precision","formatTypes","defaultLocale","locale","formatLocale","formatPrefix","prefixExponent","formatDecimal","toExponential","coefficient","formatGroup","grouping","thousands","substring","join","formatNumerals","numerals","replace","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","%","toFixed","X","toUpperCase","prefixes","newFormat","valuePrefix","prefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","charCodeAt","decimal","group","Infinity","currency","test","percent","precisionFixed","precisionPrefix","precisionRound","formatDefaultLocale","d3Collection","d3Interpolate","d3Time","d3TimeFormat","ordinal","range$$1","index","unknown","implicit","has","band","rescale","paddingInner","paddingOuter","ordinalRange","pointish","point","deinterpolateLinear","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","d0","d1","r0","r1","polymap","source","target","interpolate","clamp","continuous","piecewise","output","input","interpolate$$1","unit","invert","map$1","interpolateRound","linearish","nice","interpolateNumber","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","u","raise","quantile$1","invertExtent","quantiles","quantize","date","Date","number$1","calendar","year","month","week","day","hour","minute","second","millisecond","format$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickInterval","interval","tickIntervals","durationYear","every","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","time","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeMillisecond","timeFormat","utcTime","utcYear","utcMonth","utcWeek","utcDay","utcHour","utcMinute","utcSecond","utcMillisecond","utcFormat","UTC","category10","category20b","category20c","category20","cubehelix$1","interpolateCubehelixLong","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","scalePoint","scaleIdentity","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","Map","object","createObject","setObject","createMap","setMap","map$$1","Set","add","property","clear","keys","entries","size","empty","nest","depth","createResult","setResult","sortValues","rollup","keyValue","valuesByKey","result","sortKey","sortKeys","proto","basis","v0","v1","v2","v3","exponential","hue","gamma","nogamma","rgbSpline","spline","color$$1","one","parseCss","cssNode","document","createElement","cssRoot","documentElement","cssView","defaultView","getComputedStyle","appendChild","getPropertyValue","removeChild","decompose","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","interpolateTransform","parse","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","q","rotate","skewX","scaleX","scaleY","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelixGamma","cubehelix$$1","basis$1","basisClosed","rgb$1","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","nb","na","setTime","reA","reB","string","am","bm","bs","bi","lastIndex","valueOf","degrees","atan","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","zoom","p0","p1","S","ux0","uy0","w0","ux1","uy1","w1","dx","dy","d2","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","samples","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateObject","interpolateString","interpolateZoom","interpolateRgb","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","newInterval","floori","offseti","field","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","milliseconds","getUTCSeconds","seconds","getMinutes","minutes","getHours","hours","days","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","setMonth","getMonth","getFullYear","months","setFullYear","years","setUTCSeconds","getUTCMinutes","utcMinutes","setUTCMinutes","getUTCHours","utcHours","utcDays","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","setUTCMonth","getUTCMonth","getUTCFullYear","utcMonths","setUTCFullYear","utcYears","timeInterval","timeMilliseconds","utcMilliseconds","timeSeconds","utcSeconds","timeMinutes","timeHours","timeDays","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonths","timeYears","utcWeeks","localDate","H","M","L","utcDate","newYear","formats","pad","pads","charAt","newParse","newDate","parseSpecifier","w","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","locale_months","formatPeriod","locale_periods","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","dateTime","periods","shortDays","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","Y","formatFullYear","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcParse","requote","requoteRe","names","numberRe","percentRe","getMilliseconds","getSeconds","getUTCMilliseconds","locale$1","timeParse","formatIsoNative","toISOString","parseIsoNative","-","0","isoSpecifier","formatIso","parseIso","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","Local","nextId","filterContextListener","listener","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","onRemove","__on","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","sourceEvent","none","EnterNode","datum","_next","_parent","bindIndex","update","node","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","keyPrefix","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","nextSibling","lower","previousSibling","insertBefore","firstChild","constantNull","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","namespaces","xlink","xml","xmlns","namespace","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","changedTouches","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","child","next","selection_data","bind","enterGroup","updateGroup","exitGroup","previous","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","getAttributeNS","selection_style","selection_property","splice","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","before","selection_remove","selection_datum","selection_dispatch","html","touch","touches","identifier","points","d3Timer","init","schedule","__transition","state","CREATED","STARTING","self","elapsed","SCHEDULED","timer","restart","schedules","STARTED","timeout","RUNNING","ENDED","tween","ENDING","tweenRemove","tween0","tween1","tweenFunction","tweenValue","_id","value00","interpolate0","value10","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","onFunction","on0","on1","sit","removeFunction","styleRemoveEnd","styleTween","Transition","_name","newId","inherit","timing","defaultTiming","now","emptyOn","emptyTween","interrupt","active","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","transition_selectAll","children","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","selection_transition","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timerFlush","frame","taskHead","wake","clockLast","nap","poke","pokeDelay","taskTail","sleep","clearTimeout","setTimeout","clearInterval","setInterval","performance","requestAnimationFrame","TypeError","timeout$1","interval$1","total","wrapConfig","lineHeight","smallTextOffset","smallTextLineHeightRatio","smallTextRatio","valueClassName","labelClassName","defaultTextSize","defaultFontFace","xOffset","fontSize","availableWidth","words","word","lineNumber","smallLineHeight","smallFontSize","tspan","getComputedTextLength","xpos","limit","getTextWidth","fontFace","getContext","font","measureText","d3svg","img","createImage","convertSvgToHtml","onload","handleImageLoad","createCanvas","addBackground","config","styleBackgroundString","serializer","serializeWithStyles","initializeSerializer","formatHtmlByBrowser","prependTitle","canvas","svgHtml","Image","src","imageSourceBase","b64EncodeUnicode","drawImageOnCanvas","image","drawImage","downloadCanvas","defaultFilename","extensionType","url","toDataURL","link","href","download","body","click","navigator","userAgent","search","constants","lineGradientId","preventDefault","svgWidth","britechartsGreySchema","colorSchemas","titleTopOffset","titleFontFamily","titleFontSize","encoder","btoa","encode","str","encodeURIComponent","fromCharCode","styleClass","chartBackground","britechartGradients","greenBlueGradient","orangePinkGradient","bluePurpleGradient","britechartsColorSchema","extendedOrangeColorSchema","extendedBlueColorSchema","extendedLightBlueColorSchema","extendedGreenColorSchema","extendedYellowColorSchema","extendedPinkColorSchema","extendedPurpleColorSchema","extendedRedColorSchema","colorSchemasHuman","colorGradients","colorGradientsHuman","axisTimeCombinations","MINUTE_HOUR","HOUR_DAY","DAY_MONTH","MONTH_YEAR","timeBenchmarks","ONE_AND_A_HALF_YEARS","ONE_YEAR","ONE_DAY","computeDefaultStyleByTagName","tagName","defaultStyle","computedStyle","forEach","getDefaultStyleByTagName","defaultStylesByTagName","elem","cssTexts","elements","nodeType","Node","ELEMENT_NODE","el","noStyleTags","cssText","cssPropName","outerHTML","console","BASE","HEAD","HTML","META","NOFRAME","NOSCRIPT","PARAM","SCRIPT","STYLE","TITLE","tagNames","freeExports","freeGlobal","InvalidCharacterError","message","TABLE","REGEX_SPACE_CHARACTERS","decode","bitStorage","buffer","bitCounter","base64","version","webpackPolyfill","deprecate","paths","d3Shape","_require2","calculatePercent","buildLayout","buildColorScale","buildShape","drawSlices","initTooltip","highlightedSliceId","initHighlightSlice","colorScale","layout","pie","padAngle","paddingAngle","getQuantity","sortComparator","shape","arc","innerRadius","internalRadius","padRadius","externalRadius","acc","quantityLabel","quantity","percentage","percentageLabel","totalQuantity","sumValues","dataWithPercentages","percentageFormat","cleanLegend","drawLegend","legendWidth","slices","arcTransitionDuration","tweenArc","newSlices","storeAngle","reduceOuterRadius","getSliceFill","handleMouseOver","handleMouseOut","pieDrawingTransitionDuration","tweenLoading","filterHighlightedSlice","highlightedSlice","tweenGrowth","radiusHoverOffset","hasFixedHighlightedSlice","pieHoverTransitionDuration","_current","outerRadius","startAngle","endAngle","highlightSliceById","d3Path","acos","arcInnerRadius","arcOuterRadius","arcStartAngle","arcEndAngle","arcPadAngle","intersect","y0","y1","x2","y2","x3","y3","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","ox","oy","x11","y11","x00","y00","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","_context","Radial","curve","_curve","curveRadial","radial","lineRadial","angle","radius","linkSource","linkTarget","argv","x$$1","y$$1","curveHorizontal","moveTo","bezierCurveTo","curveVertical","curveRadial$1","pointRadial","p2","p3","linkHorizontal","linkVertical","linkRadial","_x0","_x1","_y0","_y1","Basis","BasisClosed","BasisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","s1","slope2","point$3","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","series","a0","a1","da","a01","a11","a00","a10","da0","da1","ap","rp","cornerRadius","rc0","rc1","oc","ax","ay","bx","by","kc","lc","lineTo","closePath","centroid","areaStart","areaEnd","lineStart","_point","lineEnd","curveLinear","defined0","defined","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","arcs","pa","curveRadialLinear","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle","draw","tan30","tan30_2","diamond","ka","kr","kx","ky","star","square","sqrt3","triangle","wye","symbols","_x3","_x4","_y3","_y4","basisOpen","_y","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","none$1","stack","oz","kz","sz","sij","ki","si","expand","diverging","yp","yn","silhouette","wiggle","s2","sij0","sij1","s3","sk","skj0","skj1","sums","descending$1","insideOut","tops","bottoms","radialArea","radialLine","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","Path","tauEpsilon","quadraticCurveTo","arcTo","x21","y21","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","decimals","isInteger","drawHorizontalLegend","drawVerticalLegend","adjustLines","lineWidth","lineWidthSpace","centerLegendOnSVG","splitInLines","legendGroupSize","emptySpace","cleanFadedLines","isFadedClassName","markerSize","getId","horizontalOffset","verticalOffset","labelWidth","textSize","getLineElementMargin","markerYOffset","getCircleFill","textLetterSpacing","getFormattedQuantity","valueReservedSpace","numberLetterSpacing","fadeLinesBut","exceptionItemId","classToFade","marginRatio","legendEntries","numberOfEntries","newLine","lastEntry","numberFormat","clearHighlight","highlight","entryId","_require3","getXAxisSettings","_require4","getLocaleDateFormatter","_require5","formatIntegerValue","formatDecimalValue","dataByTopic","dataByDate","buildGradient","drawLines","createMaskingClip","shouldShowTooltip","drawVerticalMarker","drawHoverOverlay","addMouseEvents","handleMouseMove","adjustYTickLabels","getFormattedValue","dataTimeSpan","yTickNumber","verticalTicks","minor","major","forceAxisSettings","forcedXFormat","forcedXTicks","_getXAxisSettings","xMonthAxis","singleLineGradientColors","minX","dates","maxX","maxY","minY","yScaleBottomValue","getTopic","topicColorMap","memo","flatData","topic","topicName","topicNameLabel","topicLabel","dateLabel","topics","kv","cleanDataPointHighlights","verticalMarkerContainer","maskingRectangle","monthAxisPadding","lines","topicLine","getLineColor","xTicks","yTicks","grid","horizontalGridLines","verticalGridLines","overlay","overlayColor","verticalMarkerLine","findOutNearestDate","getTime","getMouseXPosition","getNearestDataPoint","mouseX","dateFromInvertedX","bisectDate","dataEntryIndex","dataEntryForXPosition","previousDataEntryForXPosition","nearestDataPoint","xPositionOffset","dataPoint","dataPointXPosition","moveVerticalMarker","highlightDataPoints","marker","circleSize","verticalMarkerXPosition","tooltipThreshold","aspectRatio","forceAxisFormat","lineGradient","_defineProperty","enumerable","configurable","writable","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Symbol","iterator","done","err","_typeof","_settingsToMajorTickM","singleTickWidth","horizontalTickSpacing","minEntryNumForDayFormat","formatMap","daymonth","localeTimeMap","settingsToMajorTickMap","getAxisSettingsFromTimeSpan","timeSpan","settings","getMaxNumOfHorizontalTicks","dataPointNumber","ticksForWidth","timeUnit","options","formatter","Intl","DateTimeFormat","firstDate","lastDate","dateTimeSpan","_settings$split","_settings$split2","majorTickValue","minorTickValue","getValueSize","limits","small","medium","integerValueFormats","decimalValueFormats","large","drawTooltip","hide","cleanContent","tooltipBody","tooltipTextContainer","tooltipWidth","tooltipHeight","tooltipBorderRadius","bodyFillColor","borderStrokeColor","tooltipTitle","titleFillColor","tooltipDivider","textFillColor","getTooltipPosition","mouseY","tooltipX","tooltipY","tooltipOffset","getValueText","valueText","missingValue","resetSizeAndPositionPointers","ttTextY","ttTextX","updateTopicContent","tooltipRight","tooltipLeftText","tooltipRightText","elementText","tooltipTextColor","textWrap","tooltipMaxTopicLength","getBBox","circleYOffset","updatePositionAndSize","xPosition","yPosition","_getTooltipPosition","_getTooltipPosition2","mouseChaseDuration","updateTitle","tooltipTitleText","formatDate","defaultAxisSettings","localeOptions","monthDayYearFormat","monthDayHourFormat","_sortByForceOrder","forceOrder","orderName","_sortByAlpha","entryLineLimit","updateContent","updateTooltip","show","colorMapping","forceDateRange","tooltipBackground","backgroundBorderRadius","getMaxLengthLine","_len","texts","_key","textSizes","parentChartWidth","parentChartHeight","hasEnoughHorizontalRoom","hasEnoughVerticalRoom","positionX","positionY","hideTooltip","showTooltip","textLineHeight","valueLineHeight","valueTextSize","valueTextLineHeight","defaultDy","temporalHeight","tooltipValue","tooltipName","nameTextFillColor","valueTextFillColor","valueTextWeight","tooltipValueFormat","mousePosition","parentChartSize","chartSize","createGradients","drawLine","drawArea","drawEndMarker","metadataGroup","areaGradient","clipDuration","assign","uniq","arrArg","pos","getDataByDate","buildLayers","drawStackedAreas","dataSpan","dataByDateFormatted","entry","dataByDateZeroed","initialTotalsObject","totals","formatOrder","stack3","layersInitial","layers","otherIndex","other","getMaxValueByDate","categoryColorMap","yTickTextXOffset","yTickTextYOffset","areaAnimationDelays","areaAnimationDuration","areaOpacity","verticalMarker","eraseDataPointHighlights","maxValueByDate","vals","setEpsilon","accumulator","maxAreaNumber","areaAnimationDelayStep","keyLabel","func","thisArg","baseTimes","iteratee","overArg","arg","arrayLikeKeys","inherited","isArguments","skipIndexes","isIndex","assignValue","objValue","eq","baseKeys","isPrototype","nativeKeys","baseRest","nativeMax","otherArgs","copyObject","props","customizer","newValue","createAssigner","assigner","sources","guard","isIterateeCall","MAX_SAFE_INTEGER","reIsUint","isObject","isArrayLike","Ctor","objectProto","isArrayLikeObject","propertyIsEnumerable","objectToString","argsTag","isLength","isFunction","isObjectLike","tag","funcTag","genTag","nonEnumShadows","prepareData","drawGroupedBar","handleBarsMouseOver","handleBarsMouseOut","transformedData","ret","yMax","yScale2","getGroup","xScale2","groupLabel","animationDelays","horizontalBarsTween","verticalBarsTween","getMousePosition","adjustedMouseX","nearest","found","find","getNearestDataPoint2","adjustedMouseY","_getMousePosition","_getMousePosition2","moveTooltipOriginXY","originXPosition","originYPosition","maxBarNumber","animationDelayStep","drawStackedBar","stacks","dataInitial","getStack","stackLabel","dataByValueParsed","stackedArray","_this","_this2","nameLabelFormat","drawSteps","yTickPadding","yAxisTickFormat","getKey","xAxisLabel","xAxisLabelOffset","yAxisLabel","yAxisLabelOffset","steps","_toConsumableArray","arr2","from","d3Brush","timeAxisHelper","cloneData","buildBrush","drawBrush","drawHandles","_timeAxisHelper$getXA","brushX","handleBrush","handleBrushEnded","gradient","dataToClone","JSON","stringify","chartBrush","handleFillColor","handle","dateExtent","onBrush","move","setBrushByDates","dateA","dateB","dateRange","d3Drag","d3Transition","nopropagation","stopImmediatePropagation","defaultFilter","button","defaultExtent","__brush","brushSelection","dim","brush$1","brushY","initialize","cursors","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","shifting","lockX","lockY","moving","noevent","point0","mode","MODE_SPACE","MODE_DRAG","signX","e0","e1","signY","N","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touchending","dragEnable","view","keydowned","keyCode","keyupped","altKey","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","listeners","selection1","selection0","starting","BrushEvent","xy","XY","nw","ne","se","sw","yesdrag","noclick","MozUserSelect","__noselect","DragEvent","subject","dispatch$$1","defaultContainer","defaultSubject","touchable","nodrag","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","mousemoving","mousedownx","mousedowny","clickDistance2","gestures","sublisteners","clickDistance"],"mappings":"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A,UACA,UACA,UACA,UACA,WAGFC,GACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGFC,GACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGFC,GACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGFC,GACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGFC,GACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGFC,GACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGFC,GACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGF/8C,GACE,UAGR,QACIu7C,cACIgB,yBACAjB,wBACAkB,4BACAC,0BACAC,+BACAC,2BACAC,4BACAC,0BACAC,4BACAC,0BAEJC,mBACIT,uBAA0B,sBAC1BjB,sBAAyB,mBACzBkB,0BAA6B,SAC7BC,wBAA2B,OAC3BC,6BAAgC,aAChCC,yBAA4B,QAC5BC,0BAA6B,SAC7BC,wBAA2B,OAC3BC,0BAA6B,SAC7BC,uBAA0B,OAE9Bh9C,cACIC,aAEJi9C,eAAgBd,EAChBe,qBACId,kBAAmB,gBACnBC,mBAAoB,iBACpBC,mBAAoB,oBAtKhC7pD,KAAAX,EAAAM,EAAAN,EAAAC,KAAAkC,SAAA2B,IAAA7D,EAAAD,QAAA8D,KpBg2PM,SAAU7D,EAAQD,EAASM,GAEhC,GAAIwD,EqBl2PLA,GAAO,SAASC,GACZ,GAAMsnD,IACFC,YAAa,cACbC,SAAU,gBACVC,UAAW,YACXC,WAAY,cAGVC,GACFC,qBAAsB,QACtBC,SAAU,YACVC,QAAS,SAGb,QACIR,uBACAK,iBACArC,eAAgB,mBAjBxB1oD,KAAAX,EAAAM,EAAAN,EAAAC,KAAAkC,SAAA2B,IAAA7D,EAAAD,QAAA8D,KrB23PM,SAAU7D,EAAQD,GAEvB,YsB73PDC,GAAOD,QAAW,WAId,OAMI2nD,qBANG,WAyBC,QAASmE,GAA6BC,GAClC,GAAIC,MACA3S,EAAU1b,SAASorB,KAAK7qB,YAAYP,SAASC,cAAcmuB,IAC3DE,EAAgBn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","file":"britecharts.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"britecharts\"] = factory();\n\telse\n\t\troot[\"britecharts\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"britecharts\"] = factory();\n\telse\n\t\troot[\"britecharts\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t        value: true\n\t});\n\texports.colors = exports.brush = exports.step = exports.stackedBar = exports.groupedBar = exports.stackedArea = exports.sparkline = exports.miniTooltip = exports.tooltip = exports.line = exports.legend = exports.donut = exports.bar = undefined;\n\t\n\tvar _bar = __webpack_require__(1);\n\t\n\tvar _bar2 = _interopRequireDefault(_bar);\n\t\n\tvar _donut = __webpack_require__(23);\n\t\n\tvar _donut2 = _interopRequireDefault(_donut);\n\t\n\tvar _legend = __webpack_require__(27);\n\t\n\tvar _legend2 = _interopRequireDefault(_legend);\n\t\n\tvar _line = __webpack_require__(28);\n\t\n\tvar _line2 = _interopRequireDefault(_line);\n\t\n\tvar _tooltip = __webpack_require__(31);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tvar _miniTooltip = __webpack_require__(32);\n\t\n\tvar _miniTooltip2 = _interopRequireDefault(_miniTooltip);\n\t\n\tvar _sparkline = __webpack_require__(33);\n\t\n\tvar _sparkline2 = _interopRequireDefault(_sparkline);\n\t\n\tvar _stackedArea = __webpack_require__(34);\n\t\n\tvar _stackedArea2 = _interopRequireDefault(_stackedArea);\n\t\n\tvar _groupedBar = __webpack_require__(36);\n\t\n\tvar _groupedBar2 = _interopRequireDefault(_groupedBar);\n\t\n\tvar _stackedBar = __webpack_require__(37);\n\t\n\tvar _stackedBar2 = _interopRequireDefault(_stackedBar);\n\t\n\tvar _step = __webpack_require__(38);\n\t\n\tvar _step2 = _interopRequireDefault(_step);\n\t\n\tvar _brush = __webpack_require__(39);\n\t\n\tvar _brush2 = _interopRequireDefault(_brush);\n\t\n\tvar _colors = __webpack_require__(18);\n\t\n\tvar _colors2 = _interopRequireDefault(_colors);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.bar = _bar2.default;\n\texports.donut = _donut2.default;\n\texports.legend = _legend2.default;\n\texports.line = _line2.default;\n\texports.tooltip = _tooltip2.default;\n\texports.miniTooltip = _miniTooltip2.default;\n\texports.sparkline = _sparkline2.default;\n\texports.stackedArea = _stackedArea2.default;\n\texports.groupedBar = _groupedBar2.default;\n\texports.stackedBar = _stackedBar2.default;\n\texports.step = _step2.default;\n\texports.brush = _brush2.default;\n\texports.colors = _colors2.default;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Axis = __webpack_require__(4);\n\t    var d3Color = __webpack_require__(5);\n\t    var d3Dispatch = __webpack_require__(6);\n\t    var d3Format = __webpack_require__(7);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t\n\t    var textHelper = __webpack_require__(16);\n\t\n\t    var _require = __webpack_require__(17),\n\t        exportChart = _require.exportChart;\n\t\n\t    var colorHelper = __webpack_require__(18);\n\t\n\t    var PERCENTAGE_FORMAT = '%';\n\t    var NUMBER_FORMAT = ',f';\n\t\n\t    /**\n\t     * @typedef BarChartData\n\t     * @type {Object[]}\n\t     * @property {Number} value        Value of the group (required)\n\t     * @property {String} name         Name of the group (required)\n\t     *\n\t     * @example\n\t     * [\n\t     *     {\n\t     *         value: 1,\n\t     *         name: 'glittering'\n\t     *     },\n\t     *     {\n\t     *         value: 1,\n\t     *         name: 'luminous'\n\t     *     }\n\t     * ]\n\t     */\n\t\n\t    /**\n\t     * Bar Chart reusable API class that renders a\n\t     * simple and configurable bar chart.\n\t     *\n\t     * @module Bar\n\t     * @tutorial bar\n\t     * @requires d3-array, d3-axis, d3-dispatch, d3-scale, d3-selection\n\t     *\n\t     * @example\n\t     * var barChart = bar();\n\t     *\n\t     * barChart\n\t     *     .height(500)\n\t     *     .width(800);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(barChart);\n\t     *\n\t     */\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 20,\n\t            right: 20,\n\t            bottom: 30,\n\t            left: 40\n\t        },\n\t            width = 960,\n\t            height = 500,\n\t            data = void 0,\n\t            dataZeroed = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            xScale = void 0,\n\t            yScale = void 0,\n\t            colorSchema = colorHelper.singleColors.aloeGreen,\n\t            colorList = void 0,\n\t            colorMap = void 0,\n\t            numOfVerticalTicks = 5,\n\t            numOfHorizontalTicks = 5,\n\t            percentageAxisToMaxRatio = 1,\n\t            enablePercentageLabels = false,\n\t            percentageLabelMargin = 7,\n\t            percentageLabelSize = 12,\n\t            horizontalLabelFormat = '.0%',\n\t            verticalLabelFormat = '.0f',\n\t            valueLabelFormat = NUMBER_FORMAT,\n\t            xAxis = void 0,\n\t            yAxis = void 0,\n\t            xAxisPadding = {\n\t            top: 0,\n\t            left: 0,\n\t            bottom: 0,\n\t            right: 0\n\t        },\n\t            yAxisPaddingBetweenChart = 10,\n\t            yAxisLineWrapLimit = 1,\n\t            horizontal = false,\n\t            svg = void 0,\n\t            isAnimated = false,\n\t            ease = d3Ease.easeQuadInOut,\n\t            animationDuration = 800,\n\t            interBarDelay = function interBarDelay(d, i) {\n\t            return 70 * i;\n\t        },\n\t            valueLabel = 'value',\n\t            nameLabel = 'name',\n\t            maskGridLines = void 0,\n\t            baseLine = void 0,\n\t            reverseColorList = true,\n\t\n\t\n\t        // Dispatcher object to broadcast the mouse events\n\t        // Ref: https://github.com/mbostock/d3/wiki/Internals#d3_dispatch\n\t        dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove'),\n\t\n\t\n\t        // extractors\n\t        getName = function getName(_ref) {\n\t            var name = _ref.name;\n\t            return name;\n\t        },\n\t            getValue = function getValue(_ref2) {\n\t            var value = _ref2.value;\n\t            return value;\n\t        },\n\t            _percentageLabelHorizontalX = function _percentageLabelHorizontalX(_ref3) {\n\t            var value = _ref3.value;\n\t            return xScale(value) + percentageLabelMargin;\n\t        },\n\t            _percentageLabelHorizontalY = function _percentageLabelHorizontalY(_ref4) {\n\t            var name = _ref4.name;\n\t            return yScale(name) + yScale.bandwidth() / 2 + percentageLabelSize * (3 / 8);\n\t        },\n\t            _percentageLabelVerticalX = function _percentageLabelVerticalX(_ref5) {\n\t            var name = _ref5.name;\n\t            return xScale(name);\n\t        },\n\t            _percentageLabelVerticalY = function _percentageLabelVerticalY(_ref6) {\n\t            var value = _ref6.value;\n\t            return yScale(value) - percentageLabelMargin;\n\t        },\n\t            _percentageLabelHorizontalFormatValue = function _percentageLabelHorizontalFormatValue(_ref7) {\n\t            var value = _ref7.value;\n\t            return d3Format.format(horizontalLabelFormat)(value);\n\t        },\n\t            _percentageLabelVerticalFormatValue = function _percentageLabelVerticalFormatValue(_ref8) {\n\t            var value = _ref8.value;\n\t            return d3Format.format(verticalLabelFormat)(parseFloat(value) * 100);\n\t        };\n\t\n\t        /**\n\t         * This function creates the graph using the selection as container\n\t         * @param  {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {BarChartData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right - yAxisPaddingBetweenChart * 1.2;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t\n\t                var _cleanData = cleanData(_data);\n\t\n\t                data = _cleanData.data;\n\t                dataZeroed = _cleanData.dataZeroed;\n\t\n\t\n\t                buildScales();\n\t                buildAxis();\n\t                buildSVG(this);\n\t                drawGridLines();\n\t                drawBars();\n\t                drawAxis();\n\t                if (enablePercentageLabels) {\n\t                    drawPercentageLabels();\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates the d3 x and y axis, setting orientations\n\t         * @private\n\t         */\n\t        function buildAxis() {\n\t            if (horizontal) {\n\t                xAxis = d3Axis.axisBottom(xScale).ticks(numOfHorizontalTicks, valueLabelFormat).tickSizeInner([-chartHeight]);\n\t\n\t                yAxis = d3Axis.axisLeft(yScale);\n\t            } else {\n\t                xAxis = d3Axis.axisBottom(xScale);\n\t\n\t                yAxis = d3Axis.axisLeft(yScale).ticks(numOfVerticalTicks, valueLabelFormat);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * Also applies the Margin convention\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + (margin.left + yAxisPaddingBetweenChart) + ', ' + margin.top + ')');\n\t\n\t            container.append('g').classed('grid-lines-group', true);\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('x-axis-group axis', true);\n\t            container.append('g').attr('transform', 'translate(' + -1 * yAxisPaddingBetweenChart + ', 0)').classed('y-axis-group axis', true);\n\t            container.append('g').classed('metadata-group', true);\n\t        }\n\t\n\t        /**\n\t         * Creates the x and y scales of the graph\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t            var percentageAxis = Math.min(percentageAxisToMaxRatio * d3Array.max(data, getValue));\n\t\n\t            if (horizontal) {\n\t                xScale = d3Scale.scaleLinear().domain([0, percentageAxis]).rangeRound([0, chartWidth]);\n\t\n\t                yScale = d3Scale.scaleBand().domain(data.map(getName)).rangeRound([chartHeight, 0]).padding(0.1);\n\t            } else {\n\t                xScale = d3Scale.scaleBand().domain(data.map(getName)).rangeRound([0, chartWidth]).padding(0.1);\n\t\n\t                yScale = d3Scale.scaleLinear().domain([0, percentageAxis]).rangeRound([chartHeight, 0]);\n\t            }\n\t\n\t            if (reverseColorList) {\n\t                colorList = data.map(function (d) {\n\t                    return d;\n\t                }).reverse().map(function (_ref9, i) {\n\t                    var name = _ref9.name;\n\t                    return {\n\t                        name: name,\n\t                        color: colorSchema[i % colorSchema.length] };\n\t                });\n\t            } else {\n\t                colorList = data.map(function (d) {\n\t                    return d;\n\t                }).map(function (_ref10, i) {\n\t                    var name = _ref10.name;\n\t                    return {\n\t                        name: name,\n\t                        color: colorSchema[i % colorSchema.length] };\n\t                });\n\t            }\n\t\n\t            colorMap = function colorMap(item) {\n\t                return colorList.filter(function (_ref11) {\n\t                    var name = _ref11.name;\n\t                    return name === item;\n\t                })[0].color;\n\t            };\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart bar-chart', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Cleaning data adding the proper format\n\t         * @param  {BarChartData} originalData Data\n\t         * @private\n\t         */\n\t        function cleanData(originalData) {\n\t            var data = originalData.map(function (d) {\n\t                return {\n\t                    value: +d[valueLabel],\n\t                    name: String(d[nameLabel])\n\t                };\n\t            });\n\t            var dataZeroed = data.map(function (d) {\n\t                return {\n\t                    value: 0,\n\t                    name: String(d[nameLabel])\n\t                };\n\t            });\n\t\n\t            return { data: data, dataZeroed: dataZeroed };\n\t        }\n\t\n\t        /**\n\t         * Utility function that wraps a text into the given width\n\t         * @param  {D3Selection} text         Text to write\n\t         * @param  {Number} containerWidth\n\t         * @private\n\t         */\n\t        function wrapText(text, containerWidth) {\n\t            textHelper.wrapTextWithEllipses(text, containerWidth, 0, yAxisLineWrapLimit);\n\t        }\n\t\n\t        /**\n\t         * Draws the x and y axis on the svg object within their\n\t         * respective groups\n\t         * @private\n\t         */\n\t        function drawAxis() {\n\t            svg.select('.x-axis-group.axis').attr('transform', 'translate(0, ' + chartHeight + ')').call(xAxis);\n\t\n\t            svg.select('.y-axis-group.axis').call(yAxis);\n\t\n\t            svg.selectAll('.y-axis-group .tick text').call(wrapText, margin.left - yAxisPaddingBetweenChart);\n\t        }\n\t\n\t        /**\n\t         * Draws the bars along the x axis\n\t         * @param  {D3Selection} bars Selection of bars\n\t         * @return {void}\n\t         */\n\t        function drawHorizontalBars(bars) {\n\t            // Enter + Update\n\t            bars.enter().append('rect').classed('bar', true).attr('y', chartHeight).attr('x', 0).attr('height', yScale.bandwidth()).attr('width', function (_ref12) {\n\t                var value = _ref12.value;\n\t                return xScale(value);\n\t            }).attr('fill', function (_ref13) {\n\t                var name = _ref13.name;\n\t                return colorMap(name);\n\t            }).on('mouseover', function (d) {\n\t                customOnMouseOver(this, d, chartWidth, chartHeight);\n\t            }).on('mousemove', function (d) {\n\t                customOnMouseMove(this, d, chartWidth, chartHeight);\n\t            }).on('mouseout', function (d) {\n\t                customOnMouseOut(this, d, chartWidth, chartHeight);\n\t            }).merge(bars).attr('x', 0).attr('y', function (_ref14) {\n\t                var name = _ref14.name;\n\t                return yScale(name);\n\t            }).attr('height', yScale.bandwidth()).attr('width', function (_ref15) {\n\t                var value = _ref15.value;\n\t                return xScale(value);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws and animates the bars along the x axis\n\t         * @param  {D3Selection} bars Selection of bars\n\t         * @return {void}\n\t         */\n\t        function drawAnimatedHorizontalBars(bars) {\n\t            // Enter + Update\n\t            bars.enter().append('rect').classed('bar', true).attr('x', 0).attr('y', chartHeight).attr('height', yScale.bandwidth()).attr('width', function (_ref16) {\n\t                var value = _ref16.value;\n\t                return xScale(value);\n\t            }).attr('fill', function (_ref17) {\n\t                var name = _ref17.name;\n\t                return colorMap(name);\n\t            }).on('mouseover', function (d) {\n\t                customOnMouseOver(this, d, chartWidth, chartHeight);\n\t            }).on('mousemove', function (d) {\n\t                customOnMouseMove(this, d, chartWidth, chartHeight);\n\t            }).on('mouseout', function (d) {\n\t                customOnMouseOut(this, d, chartWidth, chartHeight);\n\t            });\n\t\n\t            bars.attr('x', 0).attr('y', function (_ref18) {\n\t                var name = _ref18.name;\n\t                return yScale(name);\n\t            }).attr('height', yScale.bandwidth()).transition().duration(animationDuration).delay(interBarDelay).ease(ease).attr('width', function (_ref19) {\n\t                var value = _ref19.value;\n\t                return xScale(value);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws and animates the bars along the y axis\n\t         * @param  {D3Selection} bars Selection of bars\n\t         * @return {void}\n\t         */\n\t        function drawAnimatedVerticalBars(bars) {\n\t            // Enter + Update\n\t            bars.enter().append('rect').classed('bar', true).attr('x', chartWidth).attr('y', function (_ref20) {\n\t                var value = _ref20.value;\n\t                return yScale(value);\n\t            }).attr('width', xScale.bandwidth()).attr('height', function (_ref21) {\n\t                var value = _ref21.value;\n\t                return chartHeight - yScale(value);\n\t            }).attr('fill', function (_ref22) {\n\t                var name = _ref22.name;\n\t                return colorMap(name);\n\t            }).on('mouseover', function (d) {\n\t                customOnMouseOver(this, d, chartWidth, chartHeight);\n\t            }).on('mousemove', function (d) {\n\t                customOnMouseMove(this, d, chartWidth, chartHeight);\n\t            }).on('mouseout', function (d) {\n\t                customOnMouseOut(this, d, chartWidth, chartHeight);\n\t            }).merge(bars).attr('x', function (_ref23) {\n\t                var name = _ref23.name;\n\t                return xScale(name);\n\t            }).attr('width', xScale.bandwidth()).transition().duration(animationDuration).delay(interBarDelay).ease(ease).attr('y', function (_ref24) {\n\t                var value = _ref24.value;\n\t                return yScale(value);\n\t            }).attr('height', function (_ref25) {\n\t                var value = _ref25.value;\n\t                return chartHeight - yScale(value);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws the bars along the y axis\n\t         * @param  {D3Selection} bars Selection of bars\n\t         * @return {void}\n\t         */\n\t        function drawVerticalBars(bars) {\n\t            // Enter + Update\n\t            bars.enter().append('rect').classed('bar', true).attr('x', chartWidth).attr('y', function (_ref26) {\n\t                var value = _ref26.value;\n\t                return yScale(value);\n\t            }).attr('width', xScale.bandwidth()).attr('height', function (_ref27) {\n\t                var value = _ref27.value;\n\t                return chartHeight - yScale(value);\n\t            }).attr('fill', function (_ref28) {\n\t                var name = _ref28.name;\n\t                return colorMap(name);\n\t            }).on('mouseover', function (d) {\n\t                customOnMouseOver(this, d, chartWidth, chartHeight);\n\t            }).on('mousemove', function (d) {\n\t                customOnMouseMove(this, d, chartWidth, chartHeight);\n\t            }).on('mouseout', function (d) {\n\t                customOnMouseOut(this, d, chartWidth, chartHeight);\n\t            }).merge(bars).attr('x', function (_ref29) {\n\t                var name = _ref29.name;\n\t                return xScale(name);\n\t            }).attr('y', function (_ref30) {\n\t                var value = _ref30.value;\n\t                return yScale(value);\n\t            }).attr('width', xScale.bandwidth()).attr('height', function (_ref31) {\n\t                var value = _ref31.value;\n\t                return chartHeight - yScale(value);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws percentage labels at the end of each bar\n\t         * @private\n\t         * @return {void}\n\t         */\n\t        function drawPercentageLabels() {\n\t            var labelXPosition = horizontal ? _percentageLabelHorizontalX : _percentageLabelVerticalX;\n\t            var labelYPosition = horizontal ? _percentageLabelHorizontalY : _percentageLabelVerticalY;\n\t            var text = horizontal ? _percentageLabelHorizontalFormatValue : _percentageLabelVerticalFormatValue;\n\t\n\t            var percentageLabels = svg.select('.metadata-group').append('g').classed('percentage-label-group', true).selectAll('text').data(data.reverse()).enter().append('text');\n\t\n\t            percentageLabels.classed('percentage-label', true).attr('x', labelXPosition).attr('y', labelYPosition).text(text).attr('font-size', percentageLabelSize + 'px');\n\t        }\n\t\n\t        /**\n\t         * Draws the bar elements within the chart group\n\t         * @private\n\t         */\n\t        function drawBars() {\n\t            var bars = void 0;\n\t\n\t            if (isAnimated) {\n\t                bars = svg.select('.chart-group').selectAll('.bar').data(dataZeroed);\n\t\n\t                if (!horizontal) {\n\t                    drawVerticalBars(bars);\n\t                } else {\n\t                    drawHorizontalBars(bars);\n\t                }\n\t\n\t                bars = svg.select('.chart-group').selectAll('.bar').data(data);\n\t\n\t                if (!horizontal) {\n\t                    drawAnimatedVerticalBars(bars);\n\t                } else {\n\t                    drawAnimatedHorizontalBars(bars);\n\t                }\n\t            } else {\n\t                bars = svg.select('.chart-group').selectAll('.bar').data(data);\n\t\n\t                if (!horizontal) {\n\t                    drawVerticalBars(bars);\n\t                } else {\n\t                    drawHorizontalBars(bars);\n\t                }\n\t            }\n\t\n\t            // Exit\n\t            bars.exit().transition().style('opacity', 0).remove();\n\t        }\n\t\n\t        /**\n\t         * Draws grid lines on the background of the chart\n\t         * @return void\n\t         */\n\t        function drawGridLines() {\n\t            if (!horizontal) {\n\t                drawVerticalGridLines();\n\t            } else {\n\t                drawHorizontalGridLines();\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the grid lines for an horizontal bar chart\n\t         * @return {void}\n\t         */\n\t        function drawHorizontalGridLines() {\n\t            maskGridLines = svg.select('.grid-lines-group').selectAll('line.vertical-grid-line').data(xScale.ticks(4)).enter().append('line').attr('class', 'vertical-grid-line').attr('y1', xAxisPadding.left).attr('y2', chartHeight).attr('x1', function (d) {\n\t                return xScale(d);\n\t            }).attr('x2', function (d) {\n\t                return xScale(d);\n\t            });\n\t\n\t            drawVerticalExtendedLine();\n\t        }\n\t\n\t        /**\n\t         * Draws a vertical line to extend y-axis till the edges\n\t         * @return {void}\n\t         */\n\t        function drawVerticalExtendedLine() {\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-y-line').data([0]).enter().append('line').attr('class', 'extended-y-line').attr('y1', xAxisPadding.bottom).attr('y2', chartHeight).attr('x1', 0).attr('x2', 0);\n\t        }\n\t\n\t        /**\n\t         * Draws the grid lines for a vertical bar chart\n\t         * @return {void}\n\t         */\n\t        function drawVerticalGridLines() {\n\t            maskGridLines = svg.select('.grid-lines-group').selectAll('line.horizontal-grid-line').data(yScale.ticks(4)).enter().append('line').attr('class', 'horizontal-grid-line').attr('x1', xAxisPadding.left).attr('x2', chartWidth).attr('y1', function (d) {\n\t                return yScale(d);\n\t            }).attr('y2', function (d) {\n\t                return yScale(d);\n\t            });\n\t\n\t            drawHorizontalExtendedLine();\n\t        }\n\t\n\t        /**\n\t         * Draws a vertical line to extend x-axis till the edges\n\t         * @return {void}\n\t         */\n\t        function drawHorizontalExtendedLine() {\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-x-line').data([0]).enter().append('line').attr('class', 'extended-x-line').attr('x1', xAxisPadding.left).attr('x2', chartWidth).attr('y1', chartHeight).attr('y2', chartHeight);\n\t        }\n\t\n\t        /**\n\t         * Custom OnMouseOver event handler\n\t         * @return {void}\n\t         * @private\n\t         */\n\t        function customOnMouseOver(ev, d, chartWidth, chartHeight) {\n\t            dispatcher.call('customMouseOver', ev, d, d3Selection.mouse(ev), [chartWidth, chartHeight]);\n\t            d3Selection.select(ev).attr('fill', function (_ref32) {\n\t                var name = _ref32.name;\n\t                return d3Color.color(colorMap(name)).darker();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Custom OnMouseMove event handler\n\t         * @return {void}\n\t         * @private\n\t         */\n\t        function customOnMouseMove(ev, d, chartWidth, chartHeight) {\n\t            dispatcher.call('customMouseMove', ev, d, d3Selection.mouse(ev), [chartWidth, chartHeight]);\n\t        }\n\t\n\t        /**\n\t         * Custom OnMouseOver event handler\n\t         * @return {void}\n\t         * @private\n\t         */\n\t        function customOnMouseOut(ev, d, chartWidth, chartHeight) {\n\t            dispatcher.call('customMouseOut', ev, d, d3Selection.mouse(ev), [chartWidth, chartHeight]);\n\t            d3Selection.select(ev).attr('fill', function (_ref33) {\n\t                var name = _ref33.name;\n\t                return colorMap(name);\n\t            });\n\t        }\n\t\n\t        // API\n\t\n\t        /**\n\t         * Gets or Sets the colorSchema of the chart\n\t         * @param  {String[]} _x Desired colorSchema for the graph\n\t         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.colorSchema = function (_x) {\n\t            if (!arguments.length) {\n\t                return colorSchema;\n\t            }\n\t            colorSchema = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Default false. If true, adds percentage labels at the end of the bars\n\t         * @param  {Boolean} _x\n\t         * @return {Boolean | module}    Current value of enablePercentageLables or Bar Chart module to chain calls\n\t         */\n\t        exports.enablePercentageLabels = function (_x) {\n\t            if (!arguments.length) {\n\t                return enablePercentageLabels;\n\t            }\n\t            enablePercentageLabels = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename, title) {\n\t            exportChart.call(exports, svg, filename, title);\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Bar Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            height = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the horizontal direction of the chart\n\t         * @param  {number} _x Desired horizontal direction for the graph\n\t         * @return { horizontal | module} Current horizontal direction or Bar Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.horizontal = function (_x) {\n\t            if (!arguments.length) {\n\t                return horizontal;\n\t            }\n\t            horizontal = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n\t         * By default this is 'false'\n\t         *\n\t         * @param  {Boolean} _x Desired animation flag\n\t         * @return { isAnimated | module} Current isAnimated flag or Chart module\n\t         * @public\n\t         */\n\t        exports.isAnimated = function (_x) {\n\t            if (!arguments.length) {\n\t                return isAnimated;\n\t            }\n\t            isAnimated = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {object} _x Margin object to get/set\n\t         * @return { margin | module} Current margin or Bar Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the nameLabel of the chart\n\t         * @param  {Number} _x Desired nameLabel for the graph\n\t         * @return { nameLabel | module} Current nameLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.nameLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return nameLabel;\n\t            }\n\t            nameLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n\t         * We are going to expose this events:\n\t         * customMouseOver, customMouseMove and customMouseOut\n\t         *\n\t         * @return {module} Bar Chart\n\t         * @public\n\t         */\n\t        exports.on = function () {\n\t            var value = dispatcher.on.apply(dispatcher, arguments);\n\t\n\t            return value === dispatcher ? exports : value;\n\t        };\n\t\n\t        /**\n\t         * Configurable extension of the x axis\n\t         * if your max point was 50% you might want to show x axis to 60%, pass 1.2\n\t         * @param  {number} _x ratio to max data point to add to the x axis\n\t         * @return { ratio | module} Current ratio or Bar Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.percentageAxisToMaxRatio = function (_x) {\n\t            if (!arguments.length) {\n\t                return percentageAxisToMaxRatio;\n\t            }\n\t            percentageAxisToMaxRatio = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Default 10px. Offset between end of bar and start of the percentage bars\n\t         * @param  {number} _x percentage margin offset from end of bar\n\t         * @return {number | module}    Currnet offset or Bar Chart module to chain calls\n\t         */\n\t        exports.percentageLabelMargin = function (_x) {\n\t            if (!arguments.length) {\n\t                return percentageLabelMargin;\n\t            }\n\t            percentageLabelMargin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets whether the color list should be reversed or not\n\t         * @param  {boolean} _x     Should reverse the color list\n\t         * @return { boolean | module} Is color list being reversed\n\t         * @public\n\t         */\n\t        exports.reverseColorList = function (_x) {\n\t            if (!arguments.length) {\n\t                return reverseColorList;\n\t            }\n\t            reverseColorList = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabelFormat to a percentage format if true (default false)\n\t         * @param  {boolean} _x     Should use percentage as value format\n\t         * @return { valueLabelFormat | module} Is percentage value format used or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.usePercentage = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabelFormat === PERCENTAGE_FORMAT;\n\t            }\n\t            if (_x) {\n\t                valueLabelFormat = PERCENTAGE_FORMAT;\n\t            } else {\n\t                valueLabelFormat = NUMBER_FORMAT;\n\t            }\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabel of the chart\n\t         * @param  {Number} _x Desired valueLabel for the graph\n\t         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabel;\n\t            }\n\t            valueLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { width | module} Current width or Bar Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            width = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Default 10. Space between y axis and chart\n\t         * @param  {number} _x space between y axis and chart\n\t         * @return {number| module}    Current value of yAxisPaddingBetweenChart or Bar Chart module to chain calls\n\t         */\n\t        exports.yAxisPaddingBetweenChart = function (_x) {\n\t            if (!arguments.length) {\n\t                return yAxisPaddingBetweenChart;\n\t            }\n\t            yAxisPaddingBetweenChart = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-array/ Version 1.2.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse = stop < start,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  if (reverse) n = start, start = stop, stop = n;\n\t\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar quantile = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return quantile(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = quantile;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-ease/ Version 1.0.3. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tfunction linear(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\texports.easeLinear = linear;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-axis/ Version 1.0.8. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar slice = Array.prototype.slice;\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon = 1e-6;\n\t\n\tfunction translateX(x) {\n\t  return \"translate(\" + (x + 0.5) + \",0)\";\n\t}\n\t\n\tfunction translateY(y) {\n\t  return \"translate(0,\" + (y + 0.5) + \")\";\n\t}\n\t\n\tfunction number(scale) {\n\t  return function(d) {\n\t    return +scale(d);\n\t  };\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return +scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3,\n\t      k = orient === top || orient === left ? -1 : 1,\n\t      x = orient === left || orient === right ? \"x\" : \"y\",\n\t      transform = orient === top || orient === bottom ? translateX : translateY;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        range = scale.range(),\n\t        range0 = +range[0] + 0.5,\n\t        range1 = +range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : number)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position(d)); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-color/ Version 1.0.3. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-dispatch/ Version 1.0.3. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar noop = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\texports.dispatch = dispatch;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-format/ Version 1.2.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatNumerals = function(numerals) {\n\t  return function(value) {\n\t    return value.replace(/[0-9]/g, function(i) {\n\t      return numerals[+i];\n\t    });\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tfunction formatSpecifier(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal,\n\t      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n\t      percent = locale.percent || \"%\";\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Perform the initial formatting.\n\t        var valueNegative = value < 0;\n\t        value = formatType(Math.abs(value), precision);\n\t\n\t        // If a negative value rounds to zero during formatting, treat as positive.\n\t        if (valueNegative && +value === 0) valueNegative = false;\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n\t        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n\t        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n\t        default: value = padding + valuePrefix + value + valueSuffix; break;\n\t      }\n\t\n\t      return numerals(value);\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale = formatLocale(definition);\n\t  exports.format = locale.format;\n\t  exports.formatPrefix = locale.formatPrefix;\n\t  return locale;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent(max) - exponent(step)) + 1;\n\t};\n\t\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-scale/ Version 1.0.6. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(2), __webpack_require__(9), __webpack_require__(10), __webpack_require__(7), __webpack_require__(11), __webpack_require__(12), __webpack_require__(5)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n\t}(this, (function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\t\n\tvar array = Array.prototype;\n\t\n\tvar map$1 = array.map;\n\tvar slice = array.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range$$1) {\n\t  var index = d3Collection.map(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range$$1 = range$$1 == null ? [] : slice.call(range$$1);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range$$1[(i - 1) % range$$1.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = d3Collection.map();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range$$1)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = d3Array.bisect(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = d3Interpolate.interpolate,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice.call(_), interpolate$$1 = d3Interpolate.interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n\t      return d3Format.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return d3Format.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    if (count == null) count = 10;\n\t\n\t    var d = domain(),\n\t        i0 = 0,\n\t        i1 = d.length - 1,\n\t        start = d[i0],\n\t        stop = d[i1],\n\t        step;\n\t\n\t    if (stop < start) {\n\t      step = start, start = stop, stop = step;\n\t      step = i0, i0 = i1, i1 = step;\n\t    }\n\t\n\t    step = d3Array.tickIncrement(start, stop, count);\n\t\n\t    if (step > 0) {\n\t      start = Math.floor(start / step) * step;\n\t      stop = Math.ceil(stop / step) * step;\n\t      step = d3Array.tickIncrement(start, stop, count);\n\t    } else if (step < 0) {\n\t      start = Math.ceil(start * step) / step;\n\t      stop = Math.floor(stop * step) / step;\n\t      step = d3Array.tickIncrement(start, stop, count);\n\t    }\n\t\n\t    if (step > 0) {\n\t      d[i0] = Math.floor(start / step) * step;\n\t      d[i1] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    } else if (step < 0) {\n\t      d[i0] = Math.ceil(start * step) / step;\n\t      d[i1] = Math.floor(stop * step) / step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear() {\n\t  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant(b);\n\t}\n\t\n\tfunction reinterpolate(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log() {\n\t  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t        ? function(x) { return (raise(x, exponent) - a) / b; }\n\t        : constant(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise(b, exponent) - (a = raise(a, exponent));\n\t    return function(t) { return raise(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt() {\n\t  return pow().exponent(0.5);\n\t}\n\t\n\tfunction quantile$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[d3Array.bisect(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(d3Array.ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$1(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year, month, week, day, hour, minute, second, millisecond, format$$1) {\n\t  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format$$1(\".%L\"),\n\t      formatSecond = format$$1(\":%S\"),\n\t      formatMinute = format$$1(\"%I:%M\"),\n\t      formatHour = format$$1(\"%I %p\"),\n\t      formatDay = format$$1(\"%a %d\"),\n\t      formatWeek = format$$1(\"%b %d\"),\n\t      formatMonth = format$$1(\"%B\"),\n\t      formatYear = format$$1(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second,  1,      durationSecond],\n\t    [second,  5,  5 * durationSecond],\n\t    [second, 15, 15 * durationSecond],\n\t    [second, 30, 30 * durationSecond],\n\t    [minute,  1,      durationMinute],\n\t    [minute,  5,  5 * durationMinute],\n\t    [minute, 15, 15 * durationMinute],\n\t    [minute, 30, 30 * durationMinute],\n\t    [  hour,  1,      durationHour  ],\n\t    [  hour,  3,  3 * durationHour  ],\n\t    [  hour,  6,  6 * durationHour  ],\n\t    [  hour, 12, 12 * durationHour  ],\n\t    [   day,  1,      durationDay   ],\n\t    [   day,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month,  1,      durationMonth ],\n\t    [ month,  3,  3 * durationMonth ],\n\t    [  year,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second(date) < date ? formatMillisecond\n\t        : minute(date) < date ? formatSecond\n\t        : hour(date) < date ? formatMinute\n\t        : day(date) < date ? formatHour\n\t        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = d3Array.tickStep(start, stop, interval);\n\t        interval = millisecond;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format$$1(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format$$1));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = d3Color.cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range$$1) {\n\t  var n = range$$1.length;\n\t  return function(t) {\n\t    return range$$1[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\texports.scaleBand = band;\n\texports.scalePoint = point;\n\texports.scaleIdentity = identity;\n\texports.scaleLinear = linear;\n\texports.scaleLog = log;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow;\n\texports.scaleSqrt = sqrt;\n\texports.scaleQuantile = quantile$1;\n\texports.scaleQuantize = quantize;\n\texports.scaleThreshold = threshold;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$1;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-collection/ Version 1.0.4. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) {\n\t      if (sortValues != null) array.sort(sortValues);\n\t      return rollup != null ? rollup(array) : array;\n\t    }\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map$$1, depth) {\n\t    if (++depth > keys.length) return map$$1;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n\t    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map();\n\t}\n\t\n\tfunction setMap(map$$1, key, value) {\n\t  map$$1.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map.prototype;\n\t\n\tSet.prototype = set.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\texports.nest = nest;\n\texports.set = set;\n\texports.map = map;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-interpolate/ Version 1.1.5. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(5)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Color) { 'use strict';\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$1 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n\t}\n\t\n\tvar rgb$1 = ((function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t}))(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = d3Color.rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tvar array = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar number = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = value(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar string = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: number(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar value = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant(b)\n\t      : (t === \"number\" ? number\n\t      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)\n\t      : b instanceof d3Color.color ? rgb$1\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array\n\t      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n\t      : number)(a, b);\n\t};\n\t\n\tvar round = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar zoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\texports.interpolate = value;\n\texports.interpolateArray = array;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = number;\n\texports.interpolateObject = object;\n\texports.interpolateRound = round;\n\texports.interpolateString = string;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = zoom;\n\texports.interpolateRgb = rgb$1;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-time/ Version 1.0.7. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar t0 = new Date;\n\tvar t1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) {\n\t        if (step < 0) while (++step <= 0) {\n\t          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\t        } else while (--step >= 0) {\n\t          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\t        }\n\t      }\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0.setTime(+start), t1.setTime(+end);\n\t      floori(t0), floori(t1);\n\t      return Math.floor(count(t0, t1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond = 1e3;\n\tvar durationMinute = 6e4;\n\tvar durationHour = 36e5;\n\tvar durationDay = 864e5;\n\tvar durationWeek = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t  if (offset < 0) offset += durationHour;\n\t  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-time-format/ Version 2.0.5. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(11)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Time) { 'use strict';\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.timeFormat = locale$1.format;\n\t  exports.timeParse = locale$1.parse;\n\t  exports.utcFormat = locale$1.utcFormat;\n\t  exports.utcParse = locale$1.utcParse;\n\t  return locale$1;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\texports.timeFormatDefaultLocale = defaultLocale;\n\texports.timeFormatLocale = formatLocale;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-selection/ Version 1.1.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t};\n\t\n\tfunction none() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar defaultView = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : styleValue(this.node(), name);\n\t};\n\t\n\tfunction styleValue(node, name) {\n\t  return node.style.getPropertyValue(name)\n\t      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n\t}\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window = defaultView(node),\n\t      event = window.CustomEvent;\n\t\n\t  if (typeof event === \"function\") {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\texports.creator = creator;\n\texports.local = local;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.style = styleValue;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = defaultView;\n\texports.customEvent = customEvent;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-transition/ Version 1.1.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(13), __webpack_require__(6), __webpack_require__(15), __webpack_require__(10), __webpack_require__(5), __webpack_require__(3)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-timer', 'd3-interpolate', 'd3-color', 'd3-ease'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n\t}(this, (function (exports,d3Selection,d3Dispatch,d3Timer,d3Interpolate,d3Color,d3Ease) { 'use strict';\n\t\n\tvar emptyOn = d3Dispatch.dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = d3Timer.timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return d3Timer.timeout(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    d3Timer.timeout(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state > STARTING && schedule.state < ENDING;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? d3Interpolate.interpolateNumber\n\t      : b instanceof d3Color.color ? d3Interpolate.interpolateRgb\n\t      : (c = d3Color.color(b)) ? (b = c, d3Interpolate.interpolateRgb)\n\t      : d3Interpolate.interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = d3Selection.namespace(name), i = fullname === \"transform\" ? d3Interpolate.interpolateTransformSvg : interpolate;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n\t      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = d3Selection.namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = d3Selection.matcher(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start(name) ? init : set;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = d3Selection.selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = d3Selection.selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection = d3Selection.selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = d3Selection.style(this, name),\n\t        value1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = d3Selection.style(this, name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = d3Selection.style(this, name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? d3Interpolate.interpolateTransformCss : interpolate;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant(name, i, value + \"\"), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction(tweenValue(this, \"text\", value))\n\t      : textConstant(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return d3Selection.selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = d3Selection.selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: d3Ease.easeCubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = d3Timer.now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = d3Timer.now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\td3Selection.selection.prototype.interrupt = selection_interrupt;\n\td3Selection.selection.prototype.transition = selection_transition;\n\t\n\tvar root = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\texports.transition = transition;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-timer/ Version 1.0.6. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t\n\t    var d3Selection = __webpack_require__(13);\n\t\n\t    var wrapConfig = {\n\t        lineHeight: 1.2,\n\t        smallTextOffset: 10,\n\t        smallTextLineHeightRatio: 0.9,\n\t        smallTextRatio: 0.6,\n\t        valueClassName: 'value',\n\t        labelClassName: 'label'\n\t    };\n\t\n\t    var defaultTextSize = 12;\n\t    var defaultFontFace = 'Arial';\n\t\n\t    /**\n\t     * Wraps a selection of text within the available width\n\t     * @param  {Number} fontSize       Size of the base font\n\t     * @param  {Number} availableWidth Width of the container where the text needs to wrap on\n\t     * @param  {D3Selection} node      SVG text element that contains the text to wrap\n\t     *\n\t     * REF: http://bl.ocks.org/mbostock/7555321\n\t     * More discussions on https://github.com/mbostock/d3/issues/1642\n\t     * @return {void}\n\t     */\n\t    var wrapText = function wrapText(xOffset, fontSize, availableWidth, node, data, i) {\n\t        var text = d3Selection.select(node),\n\t            words = text.text().split(/\\s+/).reverse(),\n\t            word = void 0,\n\t            line = [],\n\t            lineNumber = 0,\n\t            smallLineHeight = wrapConfig.lineHeight * wrapConfig.smallTextLineHeightRatio,\n\t            y = text.attr('y'),\n\t            dy = parseFloat(text.attr('dy')),\n\t            smallFontSize = fontSize * wrapConfig.smallTextRatio,\n\t            tspan = text.text(null).append('tspan').attr('x', xOffset).attr('y', y - 5).attr('dy', dy + 'em').classed(wrapConfig.valueClassName, true).style('font-size', fontSize + 'px');\n\t\n\t        tspan.text(words.pop());\n\t        tspan = text.append('tspan').classed(wrapConfig.labelClassName, true).attr('x', xOffset).attr('y', y + wrapConfig.smallTextOffset).attr('dy', ++lineNumber * smallLineHeight + dy + 'em').style('font-size', smallFontSize + 'px');\n\t\n\t        while (word = words.pop()) {\n\t            line.push(word);\n\t            tspan.text(line.join(' '));\n\t            if (tspan.node().getComputedTextLength() > availableWidth - 50) {\n\t                line.pop();\n\t                tspan.text(line.join(' '));\n\t                line = [word];\n\t                tspan = text.append('tspan').classed(wrapConfig.labelClassName, true).attr('x', xOffset).attr('y', y + wrapConfig.smallTextOffset).attr('dy', ++lineNumber * smallLineHeight + dy + 'em').text(word).style('font-size', smallFontSize + 'px');\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Wraps a selection of text within the available width, also adds class .adjust-upwards\n\t     * to configure a y offset for entries with multiple rows\n\t     * @param  {D3Sekectuib} text       d3 text element\n\t     * @param  {Number} width           Width of the container where the text needs to wrap on\n\t     * @param  {Number} xpos            number passed to determine the x offset\n\t     * @param  {Number} limit           number of lines before an ellipses is added and the rest of the text is cut off\n\t     *\n\t     * REF: http://bl.ocks.org/mbostock/7555321\n\t     * More discussions on https://github.com/mbostock/d3/issues/1642\n\t     * @return {void}\n\t     */\n\t    var wrapTextWithEllipses = function wrapTextWithEllipses(text, width) {\n\t        var xpos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\t        var limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n\t\n\t\n\t        text.each(function () {\n\t            var words, word, line, lineNumber, lineHeight, y, dy, tspan;\n\t\n\t            text = d3Selection.select(this);\n\t\n\t            words = text.text().split(/\\s+/).reverse();\n\t            line = [];\n\t            lineNumber = 0;\n\t            lineHeight = 1.2;\n\t            y = text.attr('y');\n\t            dy = parseFloat(text.attr('dy'));\n\t            tspan = text.text(null).append('tspan').attr('x', xpos).attr('y', y).attr('dy', dy + 'em');\n\t\n\t            while (word = words.pop()) {\n\t                line.push(word);\n\t                tspan.text(line.join(' '));\n\t\n\t                if (tspan.node().getComputedTextLength() > width) {\n\t                    line.pop();\n\t                    tspan.text(line.join(' '));\n\t\n\t                    if (lineNumber < limit - 1) {\n\t                        line = [word];\n\t                        tspan = text.append('tspan').attr('x', xpos).attr('y', y).attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n\t                        // if we need two lines for the text, move them both up to center them\n\t                        text.classed('adjust-upwards', true);\n\t                    } else {\n\t                        line.push('...');\n\t                        tspan.text(line.join(' '));\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t        });\n\t    };\n\t\n\t    /**\n\t     * Figures out an approximate of the text width by using a canvas element\n\t     * This avoids having to actually render the text to measure it from the DOM itself\n\t     * @param  {String} text     Text to measure\n\t     * @param  {Number} fontSize Fontsize (or default)\n\t     * @param  {String} fontFace Font familty (or default)\n\t     * @return {String}          Approximate font size of the text\n\t     */\n\t    var getTextWidth = function getTextWidth(text) {\n\t        var fontSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultTextSize;\n\t        var fontFace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultFontFace;\n\t\n\t        var a = document.createElement('canvas'),\n\t            b = a.getContext('2d');\n\t\n\t        b.font = fontSize + 'px ' + fontFace;\n\t\n\t        return b.measureText(text).width;\n\t    };\n\t\n\t    return {\n\t        getTextWidth: getTextWidth,\n\t        wrapText: wrapText,\n\t        wrapTextWithEllipses: wrapTextWithEllipses\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var _require = __webpack_require__(18),\n\t        colorSchemas = _require.colorSchemas;\n\t\n\t    var constants = __webpack_require__(19);\n\t    var serializeWithStyles = __webpack_require__(20);\n\t\n\t    var encoder = window.btoa;\n\t\n\t    if (!encoder) {\n\t        encoder = __webpack_require__(21).encode;\n\t    }\n\t\n\t    // Base64 doesn't work really well with Unicode strings, so we need to use this function\n\t    // Ref: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n\t    var b64EncodeUnicode = function b64EncodeUnicode(str) {\n\t        return encoder(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (match, p1) {\n\t            return String.fromCharCode('0x' + p1);\n\t        }));\n\t    };\n\t\n\t    var config = {\n\t        styleClass: 'britechartStyle',\n\t        defaultFilename: 'britechart.png',\n\t        chartBackground: 'white',\n\t        imageSourceBase: 'data:image/svg+xml;base64,',\n\t        titleFontSize: '15px',\n\t        titleFontFamily: '\\'Benton Sans\\', sans-serif',\n\t        titleTopOffset: 30,\n\t        get styleBackgroundString() {\n\t            return '<style>svg{background:' + this.chartBackground + ';}</style>';\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Main function to be used as a method by chart instances to export charts to png\n\t     * @param  {array} svgs         (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n\t     * @param  {string} filename    [download to be called <filename>.png]\n\t     * @param  {string} title       Title for the image\n\t     */\n\t    function exportChart(d3svg, filename, title) {\n\t        var img = createImage(convertSvgToHtml.call(this, d3svg, title));\n\t\n\t        img.onload = handleImageLoad.bind(img, createCanvas(this.width(), this.height()), filename);\n\t    }\n\t\n\t    /**\n\t     * adds background styles to raw html\n\t     * @param {string} html raw html\n\t     */\n\t    function addBackground(html) {\n\t        return html.replace('>', '>' + config.styleBackgroundString);\n\t    }\n\t\n\t    /**\n\t     * takes d3 svg el, adds proper svg tags, adds inline styles\n\t     * from stylesheets, adds white background and returns string\n\t     * @param  {object} d3svg TYPE d3 svg element\n\t     * @return {string} string of passed d3\n\t     */\n\t    function convertSvgToHtml(d3svg, title) {\n\t        if (!d3svg) {\n\t            return;\n\t        }\n\t\n\t        d3svg.attr('version', 1.1).attr('xmlns', 'http://www.w3.org/2000/svg');\n\t        var serializer = serializeWithStyles.initializeSerializer();\n\t        var html = serializer(d3svg.node());\n\t        html = formatHtmlByBrowser(html);\n\t        html = prependTitle.call(this, html, title, parseInt(d3svg.attr('width')));\n\t        html = addBackground(html);\n\t\n\t        return html;\n\t    }\n\t\n\t    /**\n\t     * Create Canvas\n\t     * @param  {number} width\n\t     * @param  {number} height\n\t     * @return {object} TYPE canvas element\n\t     */\n\t    function createCanvas(width, height) {\n\t        var canvas = document.createElement('canvas');\n\t\n\t        canvas.height = height;\n\t        canvas.width = width;\n\t\n\t        return canvas;\n\t    }\n\t\n\t    /**\n\t     * Create Image\n\t     * @param  {string} svgHtml string representation of svg el\n\t     * @return {object}  TYPE element <img>, src points at svg\n\t     */\n\t    function createImage(svgHtml) {\n\t        var img = new Image();\n\t\n\t        img.src = '' + config.imageSourceBase + b64EncodeUnicode(svgHtml);\n\t\n\t        return img;\n\t    };\n\t\n\t    /**\n\t     * Draws image on canvas\n\t     * @param  {object} image TYPE:el <img>, to be drawn\n\t     * @param  {object} canvas TYPE: el <canvas>, to draw on\n\t     */\n\t    function drawImageOnCanvas(image, canvas) {\n\t        canvas.getContext('2d').drawImage(image, 0, 0);\n\t\n\t        return canvas;\n\t    }\n\t\n\t    /**\n\t     * Triggers browser to download image, convert canvas to url,\n\t     * we need to append the link el to the dom before clicking it for Firefox to register\n\t     * point <a> at it and trigger click\n\t     * @param  {object} canvas TYPE: el <canvas>\n\t     * @param  {string} filename\n\t     * @param  {string} extensionType\n\t     */\n\t    function downloadCanvas(canvas) {\n\t        var filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.defaultFilename;\n\t        var extensionType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'image/png';\n\t\n\t        var url = canvas.toDataURL(extensionType);\n\t        var link = document.createElement('a');\n\t\n\t        link.href = url;\n\t        link.download = filename;\n\t        document.body.appendChild(link);\n\t        link.click();\n\t        document.body.removeChild(link);\n\t    }\n\t\n\t    /**\n\t     * Some browsers need special formatting, we handle that here\n\t     * @param  {string} html string of svg html\n\t     * @return {string} string of svg html\n\t     */\n\t    function formatHtmlByBrowser(html) {\n\t        if (navigator.userAgent.search('FireFox') > -1) {\n\t            return html.replace(/url.*&quot;\\)/, 'url(&quot;#' + constants.lineGradientId + '&quot;);');\n\t        }\n\t\n\t        return html;\n\t    }\n\t\n\t    /**\n\t     * Handles on load event fired by img.onload, this=img\n\t     * @param  {object} canvas TYPE: el <canvas>\n\t     * @param  {string} filename\n\t     * @param  {object} e\n\t     */\n\t    function handleImageLoad(canvas, filename, e) {\n\t        e.preventDefault();\n\t\n\t        downloadCanvas(drawImageOnCanvas(this, canvas), filename);\n\t    }\n\t\n\t    /**\n\t     * if passed, append title to the raw html to appear on graph\n\t     * @param  {string} html     raw html string\n\t     * @param  {string} title    title of the graph\n\t     * @param  {number} svgWidth width of graph container\n\t     * @return {string}         raw html with title prepended\n\t     */\n\t    function prependTitle(html, title, svgWidth) {\n\t        if (!title || !svgWidth) {\n\t            return html;\n\t        }\n\t        var britechartsGreySchema = colorSchemas.britechartsGreySchema;\n\t\n\t        html = html.replace(/<g/, '<text x=\"' + this.margin().left + '\" y=\"' + config.titleTopOffset + '\" font-family=\"' + config.titleFontFamily + '\" font-size=\"' + config.titleFontSize + '\" fill=\"' + britechartsGreySchema[6] + '\"> ' + title + ' </text><g ');\n\t\n\t        return html;\n\t    }\n\t\n\t    return {\n\t        exportChart: exportChart,\n\t        convertSvgToHtml: convertSvgToHtml,\n\t        createImage: createImage,\n\t        drawImageOnCanvas: drawImageOnCanvas\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t\n\t    // Color Gradients\n\t    var britechartGradients = {\n\t        greenBlueGradient: ['#39C7EA', '#4CDCBA'],\n\t        orangePinkGradient: ['#FBC670', '#F766B8'],\n\t        bluePurpleGradient: ['#3DC3C9', '#824a9e']\n\t    };\n\t\n\t    // Color Schemas\n\t    // Standard Color Schema for Britecharts\n\t    var britechartsColorSchema = ['#6aedc7', //green\n\t    '#39c2c9', //blue\n\t    '#ffce00', //yellow\n\t    '#ffa71a', //orange\n\t    '#f866b9', //pink\n\t    '#998ce3' //purple\n\t    ];\n\t\n\t    // Grey Schema for Britecharts\n\t    var britechartsGreySchema = ['#F8F8FA', '#EFF2F5', '#D2D6DF', '#C3C6CF', '#ADB0B6', '#666A73', '#45494E', '#363A43', '#282C35'];\n\t\n\t    // Extended Orange Palette\n\t    var extendedOrangeColorSchema = ['#fcc870', '#ffa71a', '#fb8825', '#f6682f', '#db5a2c', '#bf4c28', '#a43b1c', '#892a10', '#f9e9c5'];\n\t    // Extended Blue Palette\n\t    var extendedBlueColorSchema = ['#ccf7f6', '#70e4e0', '#00d8d2', '#00acaf', '#007f8c', '#005e66', '#003c3f', '#002d2f', '#0d2223'];\n\t    // Extended LightBlue Palette\n\t    var extendedLightBlueColorSchema = ['#ccfffe', '#94f7f4', '#00fff8', '#1de1e1', '#39c2c9', '#2e9a9d', '#227270', '#1a5957', '#133f3e'];\n\t    // Extended Green Palette\n\t    var extendedGreenColorSchema = ['#edfff7', '#d7ffef', '#c0ffe7', '#95f5d7', '#6aedc7', '#59c3a3', '#479980', '#34816a', '#206953'];\n\t    // Extended Yellow Palette\n\t    var extendedYellowColorSchema = ['#f9f2b3', '#fbe986', '#fce05a', '#fed72d', '#ffce00', '#fcc11c', '#f9b438', '#eda629', '#e09819'];\n\t    // Extended Pink Palette\n\t    var extendedPinkColorSchema = ['#fdd1ea', '#fb9cd2', '#f866b9', '#fc40b6', '#ff1ab3', '#e3239d', '#c62c86', '#a62073', '#85135f'];\n\t    // Extended Purple Palette\n\t    var extendedPurpleColorSchema = ['#ddd6fc', '#bbb1f0', '#998ce3', '#8e6bc1', '#824a9e', '#77337f', '#6b1c60', '#591650', '#470f3f'];\n\t    // Extended Red Palette\n\t    var extendedRedColorSchema = ['#ffd8d4', '#ffb5b0', '#ff938c', '#ff766c', '#ff584c', '#f04b42', '#e03d38', '#be2e29', '#9c1e19'];\n\t\n\t    var aloeGreen = ['#7bdcc0'];\n\t\n\t    return {\n\t        colorSchemas: {\n\t            britechartsColorSchema: britechartsColorSchema,\n\t            britechartsGreySchema: britechartsGreySchema,\n\t            extendedOrangeColorSchema: extendedOrangeColorSchema,\n\t            extendedBlueColorSchema: extendedBlueColorSchema,\n\t            extendedLightBlueColorSchema: extendedLightBlueColorSchema,\n\t            extendedGreenColorSchema: extendedGreenColorSchema,\n\t            extendedYellowColorSchema: extendedYellowColorSchema,\n\t            extendedPinkColorSchema: extendedPinkColorSchema,\n\t            extendedPurpleColorSchema: extendedPurpleColorSchema,\n\t            extendedRedColorSchema: extendedRedColorSchema\n\t        },\n\t        colorSchemasHuman: {\n\t            'britechartsColorSchema': 'Britecharts Default',\n\t            'britechartsGreySchema': 'Britecharts Grey',\n\t            'extendedOrangeColorSchema': 'Orange',\n\t            'extendedBlueColorSchema': 'Blue',\n\t            'extendedLightBlueColorSchema': 'Light Blue',\n\t            'extendedGreenColorSchema': 'Green',\n\t            'extendedYellowColorSchema': 'Yellow',\n\t            'extendedPinkColorSchema': 'Pink',\n\t            'extendedPurpleColorSchema': 'Purple',\n\t            'extendedRedColorSchema': 'Red'\n\t        },\n\t        singleColors: {\n\t            aloeGreen: aloeGreen\n\t        },\n\t        colorGradients: britechartGradients,\n\t        colorGradientsHuman: {\n\t            greenBlueGradient: 'Green To Blue',\n\t            orangePinkGradient: 'Orange to Pink',\n\t            bluePurpleGradient: 'Blue to Purple'\n\t        }\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    var axisTimeCombinations = {\n\t        MINUTE_HOUR: 'minute-hour',\n\t        HOUR_DAY: 'hour-daymonth',\n\t        DAY_MONTH: 'day-month',\n\t        MONTH_YEAR: 'month-year'\n\t    };\n\t\n\t    var timeBenchmarks = {\n\t        ONE_AND_A_HALF_YEARS: 47304000000,\n\t        ONE_YEAR: 31536000365,\n\t        ONE_DAY: 86400001\n\t    };\n\t\n\t    return {\n\t        axisTimeCombinations: axisTimeCombinations,\n\t        timeBenchmarks: timeBenchmarks,\n\t        lineGradientId: 'lineGradientId'\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function () {\n\t\n\t    'use strict';\n\t\n\t    return {\n\t\n\t        /**\n\t         * returns serializer function, only run it when you know you want to serialize your chart\n\t         * @return {func} serializer to add styles in line to dom string\n\t         */\n\t        initializeSerializer: function initializeSerializer() {\n\t\n\t            // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n\t            var defaultStylesByTagName = {};\n\t\n\t            // Styles inherited from style sheets will not be rendered for elements with these tag names\n\t            var noStyleTags = { 'BASE': true, 'HEAD': true, 'HTML': true, 'META': true, 'NOFRAME': true, 'NOSCRIPT': true, 'PARAM': true, 'SCRIPT': true, 'STYLE': true, 'TITLE': true };\n\t\n\t            // This list determines which css default values lookup tables are precomputed at load time\n\t            // Lookup tables for other tag names will be automatically built at runtime if needed\n\t            var tagNames = ['A', 'ABBR', 'ADDRESS', 'AREA', 'ARTICLE', 'ASIDE', 'AUDIO', 'B', 'BASE', 'BDI', 'BDO', 'BLOCKQUOTE', 'BODY', 'BR', 'BUTTON', 'CANVAS', 'CAPTION', 'CENTER', 'CITE', 'CODE', 'COL', 'COLGROUP', 'COMMAND', 'DATALIST', 'DD', 'DEL', 'DETAILS', 'DFN', 'DIV', 'DL', 'DT', 'EM', 'EMBED', 'FIELDSET', 'FIGCAPTION', 'FIGURE', 'FONT', 'FOOTER', 'FORM', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEAD', 'HEADER', 'HGROUP', 'HR', 'HTML', 'I', 'IFRAME', 'IMG', 'INPUT', 'INS', 'KBD', 'LABEL', 'LEGEND', 'LI', 'LINK', 'MAP', 'MARK', 'MATH', 'MENU', 'META', 'METER', 'NAV', 'NOBR', 'NOSCRIPT', 'OBJECT', 'OL', 'OPTION', 'OPTGROUP', 'OUTPUT', 'P', 'PARAM', 'PRE', 'PROGRESS', 'Q', 'RP', 'RT', 'RUBY', 'S', 'SAMP', 'SCRIPT', 'SECTION', 'SELECT', 'SMALL', 'SOURCE', 'SPAN', 'STRONG', 'STYLE', 'SUB', 'SUMMARY', 'SUP', 'SVG', 'TABLE', 'TBODY', 'TD', 'TEXTAREA', 'TFOOT', 'TH', 'THEAD', 'TIME', 'TITLE', 'TR', 'TRACK', 'U', 'UL', 'VAR', 'VIDEO', 'WBR'];\n\t\n\t            // Precompute the lookup tables.\n\t            [].forEach.call(tagNames, function (name) {\n\t                if (!noStyleTags[name]) {\n\t                    defaultStylesByTagName[name] = computeDefaultStyleByTagName(name);\n\t                }\n\t            });\n\t\n\t            function computeDefaultStyleByTagName(tagName) {\n\t                var defaultStyle = {},\n\t                    element = document.body.appendChild(document.createElement(tagName)),\n\t                    computedStyle = window.getComputedStyle(element);\n\t\n\t                [].forEach.call(computedStyle, function (style) {\n\t                    defaultStyle[style] = computedStyle[style];\n\t                });\n\t                document.body.removeChild(element);\n\t                return defaultStyle;\n\t            }\n\t\n\t            function getDefaultStyleByTagName(tagName) {\n\t                tagName = tagName.toUpperCase();\n\t                if (!defaultStylesByTagName[tagName]) {\n\t                    defaultStylesByTagName[tagName] = computeDefaultStyleByTagName(tagName);\n\t                }\n\t                return defaultStylesByTagName[tagName];\n\t            };\n\t\n\t            function serializeWithStyles(elem) {\n\t\n\t                var cssTexts = [],\n\t                    elements = void 0,\n\t                    computedStyle = void 0,\n\t                    defaultStyle = void 0,\n\t                    result = void 0;\n\t\n\t                if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n\t                    console.error('Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE');\n\t                    return;\n\t                }\n\t\n\t                cssTexts = [];\n\t                elements = elem.querySelectorAll('*');\n\t\n\t                [].forEach.call(elements, function (el, i) {\n\t                    if (!noStyleTags[el.tagName]) {\n\t                        computedStyle = window.getComputedStyle(el);\n\t                        defaultStyle = getDefaultStyleByTagName(el.tagName);\n\t                        cssTexts[i] = el.style.cssText;\n\t                        [].forEach.call(computedStyle, function (cssPropName) {\n\t                            if (computedStyle[cssPropName] !== defaultStyle[cssPropName]) {\n\t                                el.style[cssPropName] = computedStyle[cssPropName];\n\t                            }\n\t                        });\n\t                    }\n\t                });\n\t\n\t                result = elem.outerHTML;\n\t                elements = [].map.call(elements, function (el, i) {\n\t                    el.style.cssText = cssTexts[i];\n\t                    return el;\n\t                });\n\t\n\t                return result;\n\t            };\n\t\n\t            return serializeWithStyles;\n\t        }\n\t    };\n\t}();\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n\t;(function(root) {\n\t\n\t\t// Detect free variables `exports`.\n\t\tvar freeExports = typeof exports == 'object' && exports;\n\t\n\t\t// Detect free variable `module`.\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\tmodule.exports == freeExports && module;\n\t\n\t\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t\t// it as `root`.\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar InvalidCharacterError = function(message) {\n\t\t\tthis.message = message;\n\t\t};\n\t\tInvalidCharacterError.prototype = new Error;\n\t\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\t\n\t\tvar error = function(message) {\n\t\t\t// Note: the error messages used throughout this file match those used by\n\t\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\t\tthrow new InvalidCharacterError(message);\n\t\t};\n\t\n\t\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\t\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\t\n\t\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t\t// implementation. https://gist.github.com/atk/1020396\n\t\tvar decode = function(input) {\n\t\t\tinput = String(input)\n\t\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\t\tvar length = input.length;\n\t\t\tif (length % 4 == 0) {\n\t\t\t\tinput = input.replace(/==?$/, '');\n\t\t\t\tlength = input.length;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tlength % 4 == 1 ||\n\t\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t\t) {\n\t\t\t\terror(\n\t\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t\t);\n\t\t\t}\n\t\t\tvar bitCounter = 0;\n\t\t\tvar bitStorage;\n\t\t\tvar buffer;\n\t\t\tvar output = '';\n\t\t\tvar position = -1;\n\t\t\twhile (++position < length) {\n\t\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t};\n\t\n\t\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\t\tvar encode = function(input) {\n\t\t\tinput = String(input);\n\t\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\t\terror(\n\t\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t\t'Latin1 range.'\n\t\t\t\t);\n\t\t\t}\n\t\t\tvar padding = input.length % 3;\n\t\t\tvar output = '';\n\t\t\tvar position = -1;\n\t\t\tvar a;\n\t\t\tvar b;\n\t\t\tvar c;\n\t\t\tvar d;\n\t\t\tvar buffer;\n\t\t\t// Make sure any padding is handled outside of the loop.\n\t\t\tvar length = input.length - padding;\n\t\n\t\t\twhile (++position < length) {\n\t\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\t\tc = input.charCodeAt(++position);\n\t\t\t\tbuffer = a + b + c;\n\t\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t\t// matching character for each of them to the output.\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t\t);\n\t\t\t}\n\t\n\t\t\tif (padding == 2) {\n\t\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\t\tb = input.charCodeAt(++position);\n\t\t\t\tbuffer = a + b;\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t\t'='\n\t\t\t\t);\n\t\t\t} else if (padding == 1) {\n\t\t\t\tbuffer = input.charCodeAt(position);\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t\t'=='\n\t\t\t\t);\n\t\t\t}\n\t\n\t\t\treturn output;\n\t\t};\n\t\n\t\tvar base64 = {\n\t\t\t'encode': encode,\n\t\t\t'decode': decode,\n\t\t\t'version': '0.1.0'\n\t\t};\n\t\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn base64;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = base64;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tfor (var key in base64) {\n\t\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.base64 = base64;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)(module), (function() { return this; }())))\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Dispatch = __webpack_require__(6);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Interpolate = __webpack_require__(10);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Shape = __webpack_require__(24);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t\n\t    var _require = __webpack_require__(17),\n\t        exportChart = _require.exportChart;\n\t\n\t    var textHelper = __webpack_require__(16);\n\t    var colorHelper = __webpack_require__(18);\n\t\n\t    var _require2 = __webpack_require__(26),\n\t        calculatePercent = _require2.calculatePercent;\n\t\n\t    /**\n\t     * @typedef DonutChartData\n\t     * @type {Object[]}\n\t     * @property {Number} quantity     Quantity of the group (required)\n\t     * @property {Number} percentage   Percentage of the total (optional)\n\t     * @property {String} name         Name of the group (required)\n\t     * @property {Number} id           Identifier for the group required for legend feature (optional)\n\t     *\n\t     * @example\n\t     * [\n\t     *     {\n\t     *         quantity: 1,\n\t     *         percentage: 50,\n\t     *         name: 'glittering',\n\t     *         id: 1\n\t     *     },\n\t     *     {\n\t     *         quantity: 1,\n\t     *         percentage: 50,\n\t     *         name: 'luminous',\n\t     *         id: 2\n\t     *     }\n\t     * ]\n\t     */\n\t\n\t    /**\n\t     * Reusable Donut Chart API class that renders a\n\t     * simple and configurable donut chart.\n\t     *\n\t     * @module Donut\n\t     * @tutorial donut\n\t     * @requires d3-dispatch, d3-ease, d3-interpolate, d3-scale, d3-shape, d3-selection\n\t     *\n\t     * @example\n\t     * var donutChart = donut();\n\t     *\n\t     * donutChart\n\t     *     .externalRadius(500)\n\t     *     .internalRadius(200);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(donutChart);\n\t     *\n\t     */\n\t\n\t\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 0,\n\t            right: 0,\n\t            bottom: 0,\n\t            left: 0\n\t        },\n\t            width = 300,\n\t            height = 300,\n\t            ease = d3Ease.easeCubicInOut,\n\t            arcTransitionDuration = 750,\n\t            pieDrawingTransitionDuration = 1200,\n\t            pieHoverTransitionDuration = 150,\n\t            radiusHoverOffset = 12,\n\t            paddingAngle = 0,\n\t            data = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            externalRadius = 140,\n\t            internalRadius = 45.5,\n\t            legendWidth = externalRadius + internalRadius,\n\t            layout = void 0,\n\t            shape = void 0,\n\t            slices = void 0,\n\t            svg = void 0,\n\t            isAnimated = false,\n\t            highlightedSliceId = void 0,\n\t            highlightedSlice = void 0,\n\t            hasFixedHighlightedSlice = false,\n\t            quantityLabel = 'quantity',\n\t            nameLabel = 'name',\n\t            percentageLabel = 'percentage',\n\t            percentageFormat = '.1f',\n\t\n\t\n\t        // colors\n\t        colorScale = void 0,\n\t            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\t\n\t\n\t        // utils\n\t        storeAngle = function storeAngle(d) {\n\t            this._current = d;\n\t        },\n\t            reduceOuterRadius = function reduceOuterRadius(d) {\n\t            d.outerRadius = externalRadius - radiusHoverOffset;\n\t        },\n\t            sortComparator = function sortComparator(a, b) {\n\t            return b.quantity - a.quantity;\n\t        },\n\t            sumValues = function sumValues(data) {\n\t            return data.reduce(function (total, d) {\n\t                return d.quantity + total;\n\t            }, 0);\n\t        },\n\t\n\t\n\t        // extractors\n\t        getQuantity = function getQuantity(_ref) {\n\t            var quantity = _ref.quantity;\n\t            return quantity;\n\t        },\n\t            getSliceFill = function getSliceFill(_ref2) {\n\t            var data = _ref2.data;\n\t            return colorScale(data.name);\n\t        },\n\t\n\t\n\t        // events\n\t        dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\t\n\t        /**\n\t         * This function creates the graph using the selection as container\n\t         *\n\t         * @param {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {DonutChartData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = cleanData(_data);\n\t\n\t                buildLayout();\n\t                buildColorScale();\n\t                buildShape();\n\t                buildSVG(this);\n\t                drawSlices();\n\t                initTooltip();\n\t\n\t                if (highlightedSliceId) {\n\t                    initHighlightSlice();\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Builds color scale for chart, if any colorSchema was defined\n\t         * @private\n\t         */\n\t        function buildColorScale() {\n\t            if (colorSchema) {\n\t                colorScale = d3Scale.scaleOrdinal().range(colorSchema);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the legend and a wrapper for all of them\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + width / 2 + ', ' + height / 2 + ')');\n\t\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('legend-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds the pie layout that will produce data ready to draw\n\t         * @private\n\t         */\n\t        function buildLayout() {\n\t            layout = d3Shape.pie().padAngle(paddingAngle).value(getQuantity).sort(sortComparator);\n\t        }\n\t\n\t        /**\n\t         * Builds the shape function\n\t         * @private\n\t         */\n\t        function buildShape() {\n\t            shape = d3Shape.arc().innerRadius(internalRadius).padRadius(externalRadius);\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         *\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart donut-chart', true).data([data]); //TO REVIEW\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Cleaning data adding the proper format\n\t         * @param  {DonutChartData} data Data\n\t         * @private\n\t         */\n\t        function cleanData(data) {\n\t            var cleanData = data.reduce(function (acc, d) {\n\t                // Skip data without quantity\n\t                if (!d[quantityLabel]) {\n\t                    return acc;\n\t                }\n\t\n\t                d.quantity = +d[quantityLabel];\n\t                d.name = String(d[nameLabel]);\n\t                d.percentage = d[percentageLabel] || null;\n\t                acc.push(d);\n\t\n\t                return acc;\n\t            }, []);\n\t            var totalQuantity = sumValues(cleanData);\n\t            var dataWithPercentages = cleanData.map(function (d) {\n\t                d.percentage = String(d.percentage || calculatePercent(d[quantityLabel], totalQuantity, percentageFormat));\n\t\n\t                return d;\n\t            });\n\t\n\t            return dataWithPercentages;\n\t        }\n\t\n\t        /**\n\t         * Cleans any value that could be on the legend text element\n\t         * @private\n\t         */\n\t        function cleanLegend() {\n\t            svg.select('.donut-text').text('');\n\t        }\n\t\n\t        /**\n\t         * Draws the values on the donut slice inside the text element\n\t         *\n\t         * @param  {Object} obj Data object\n\t         * @private\n\t         */\n\t        function drawLegend(obj) {\n\t            if (obj.data) {\n\t                svg.select('.donut-text').text(function () {\n\t                    return obj.data.percentage + '% ' + obj.data.name;\n\t                }).attr('dy', '.2em').attr('text-anchor', 'middle');\n\t\n\t                svg.select('.donut-text').call(wrapText, legendWidth);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the slices of the donut\n\t         * @private\n\t         */\n\t        function drawSlices() {\n\t            if (!slices) {\n\t                slices = svg.select('.chart-group').selectAll('g.arc').data(layout(data));\n\t\n\t                var newSlices = slices.enter().append('g').each(storeAngle).each(reduceOuterRadius).classed('arc', true);\n\t\n\t                if (isAnimated) {\n\t                    newSlices.merge(slices).append('path').attr('fill', getSliceFill).on('mouseover', handleMouseOver).on('mouseout', handleMouseOut).transition().ease(ease).duration(pieDrawingTransitionDuration).attrTween('d', tweenLoading);\n\t                } else {\n\t                    newSlices.merge(slices).append('path').attr('fill', getSliceFill).attr('d', shape).on('mouseover', handleMouseOver).on('mouseout', handleMouseOut);\n\t                }\n\t            } else {\n\t                slices = svg.select('.chart-group').selectAll('path').data(layout(data));\n\t\n\t                slices.attr('d', shape);\n\t\n\t                // Redraws the angles of the data\n\t                slices.transition().duration(arcTransitionDuration).attrTween('d', tweenArc);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Checks if the given element id is the same as the highlightedSliceId and returns the\n\t         * element if that's the case\n\t         * @param  {DOMElement} options.data Dom element to check\n\t         * @return {DOMElement}              Dom element if it has the same id\n\t         */\n\t        function filterHighlightedSlice(_ref3) {\n\t            var data = _ref3.data;\n\t\n\t            if (data.id === highlightedSliceId) {\n\t                return this;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Handles a path mouse over\n\t         * @return {void}\n\t         * @private\n\t         */\n\t        function handleMouseOver(datum) {\n\t            drawLegend(datum);\n\t            dispatcher.call('customMouseOver', this, datum);\n\t\n\t            if (highlightedSlice && this !== highlightedSlice) {\n\t                tweenGrowth(highlightedSlice, externalRadius - radiusHoverOffset);\n\t            }\n\t            tweenGrowth(this, externalRadius);\n\t        }\n\t\n\t        /**\n\t         * Handles a path mouse out\n\t         * @return {void}\n\t         * @private\n\t         */\n\t        function handleMouseOut() {\n\t            if (highlightedSlice && hasFixedHighlightedSlice) {\n\t                drawLegend(highlightedSlice.__data__);\n\t            } else {\n\t                cleanLegend();\n\t            }\n\t            dispatcher.call('customMouseOut', this);\n\t\n\t            if (highlightedSlice && hasFixedHighlightedSlice && this !== highlightedSlice) {\n\t                tweenGrowth(highlightedSlice, externalRadius);\n\t            }\n\t            tweenGrowth(this, externalRadius - radiusHoverOffset, pieHoverTransitionDuration);\n\t        }\n\t\n\t        /**\n\t         * Find the slice by id and growth it if needed\n\t         * @private\n\t         */\n\t        function initHighlightSlice() {\n\t            highlightedSlice = svg.selectAll('.chart-group .arc path').select(filterHighlightedSlice).node();\n\t\n\t            if (highlightedSlice) {\n\t                drawLegend(highlightedSlice.__data__);\n\t                tweenGrowth(highlightedSlice, externalRadius, pieDrawingTransitionDuration);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Creates the text element that will hold the legend of the chart\n\t         */\n\t        function initTooltip() {\n\t            svg.select('.legend-group').append('text').attr('class', 'donut-text');\n\t        }\n\t\n\t        /**\n\t         * Stores current angles and interpolates with new angles\n\t         * Check out {@link http://bl.ocks.org/mbostock/1346410| this example}\n\t         *\n\t         * @param  {Object}     a   New data for slice\n\t         * @return {Function}       Tweening function for the donut shape\n\t         * @private\n\t         */\n\t        function tweenArc(a) {\n\t            var i = d3Interpolate.interpolate(this._current, a);\n\t\n\t            this._current = i(0);\n\t\n\t            return function (t) {\n\t                return shape(i(t));\n\t            };\n\t        }\n\t\n\t        /**\n\t         * Animate slice with tweens depending on the attributes given\n\t         *\n\t         * @param  {DOMElement} slice   Slice to growth\n\t         * @param  {Number} outerRadius Final outer radius value\n\t         * @param  {Number} delay       Delay of animation\n\t         * @private\n\t         */\n\t        function tweenGrowth(slice, outerRadius) {\n\t            var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\t\n\t            d3Selection.select(slice).transition().delay(delay).attrTween('d', function (d) {\n\t                var i = d3Interpolate.interpolate(d.outerRadius, outerRadius);\n\t\n\t                return function (t) {\n\t                    d.outerRadius = i(t);\n\t\n\t                    return shape(d);\n\t                };\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Animation for chart loading\n\t         * Check out {@link http://bl.ocks.org/mbostock/4341574| this example}\n\t         *\n\t         * @param  {Object} b Data point\n\t         * @return {Function}   Tween function\n\t         * @private\n\t         */\n\t        function tweenLoading(b) {\n\t            var i = void 0;\n\t\n\t            b.innerRadius = 0;\n\t            i = d3Interpolate.interpolate({ startAngle: 0, endAngle: 0 }, b);\n\t\n\t            return function (t) {\n\t                return shape(i(t));\n\t            };\n\t        }\n\t\n\t        /**\n\t         * Utility function that wraps a text into the given width\n\t         *\n\t         * @param  {D3Selection} text         Text to write\n\t         * @param  {Number} legendWidth Width of the container\n\t         * @private\n\t         */\n\t        function wrapText(text, legendWidth) {\n\t            var fontSize = externalRadius / 5;\n\t\n\t            textHelper.wrapText.call(null, 0, fontSize, legendWidth, text.node());\n\t        }\n\t\n\t        /**\n\t         * Gets or Sets the colorSchema of the chart\n\t         * @param  {String[]} _x Desired colorSchema for the graph\n\t         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.colorSchema = function (_x) {\n\t            if (!arguments.length) {\n\t                return colorSchema;\n\t            }\n\t            colorSchema = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the externalRadius of the chart\n\t         * @param  {Number} _x ExternalRadius number to get/set\n\t         * @return { (Number | Module) } Current externalRadius or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.externalRadius = function (_x) {\n\t            if (!arguments.length) {\n\t                return externalRadius;\n\t            }\n\t            externalRadius = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the hasFixedHighlightedSlice property of the chart, making it to\n\t         * highlight the selected slice id set with `highlightSliceById` all the time.\n\t         *\n\t         * @param  {Boolean} _x                         If we want to make the highlighted slice permanently highlighted\n\t         * @return { hasFixedHighlightedSlice | module} Current hasFixedHighlightedSlice flag or Chart module\n\t         * @public\n\t         */\n\t        exports.hasFixedHighlightedSlice = function (_x) {\n\t            if (!arguments.length) {\n\t                return hasFixedHighlightedSlice;\n\t            }\n\t            hasFixedHighlightedSlice = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { (Number | Module) } Current height or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            height = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n\t         * By default this is 'false'\n\t         *\n\t         * @param  {Boolean} _x Desired animation flag\n\t         * @return { isAnimated | module} Current isAnimated flag or Chart module\n\t         * @public\n\t         */\n\t        exports.isAnimated = function (_x) {\n\t            if (!arguments.length) {\n\t                return isAnimated;\n\t            }\n\t            isAnimated = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the internalRadius of the chart\n\t         * @param  {Number} _x InternalRadius number to get/set\n\t         * @return { (Number | Module) } Current internalRadius or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.internalRadius = function (_x) {\n\t            if (!arguments.length) {\n\t                return internalRadius;\n\t            }\n\t            internalRadius = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { (Number | Module) } Current margin or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { (Number | Module) } Current width or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            width = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename, title) {\n\t            exportChart.call(exports, svg, filename, title);\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the id of the slice to highlight\n\t         * @param  {Number} _x Slice id\n\t         * @return { (Number | Module) } Current highlighted slice id or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.highlightSliceById = function (_x) {\n\t            if (!arguments.length) {\n\t                return highlightedSliceId;\n\t            }\n\t            highlightedSliceId = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n\t         * We are going to expose this events:\n\t         * customMouseOver, customMouseMove and customMouseOut\n\t         *\n\t         * @return {module} Bar Chart\n\t         * @public\n\t         */\n\t        exports.on = function () {\n\t            var value = dispatcher.on.apply(dispatcher, arguments);\n\t\n\t            return value === dispatcher ? exports : value;\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-shape/ Version 1.2.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(25)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Path) { 'use strict';\n\t\n\tvar constant = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar abs = Math.abs;\n\tvar atan2 = Math.atan2;\n\tvar cos = Math.cos;\n\tvar max = Math.max;\n\tvar min = Math.min;\n\tvar sin = Math.sin;\n\tvar sqrt = Math.sqrt;\n\t\n\tvar epsilon = 1e-12;\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\tvar tau = 2 * pi;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n\t}\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi,\n\t        a1 = endAngle.apply(this, arguments) - halfPi,\n\t        da = abs(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = d3Path.path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau - epsilon) {\n\t      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon) {\n\t        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n\t          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon) {\n\t        var p0 = asin(rp / r0 * sin(ap)),\n\t            p1 = asin(rp / r1 * sin(ap));\n\t        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * cos(a01),\n\t          y01 = r1 * sin(a01),\n\t          x10 = r0 * cos(a10),\n\t          y10 = r0 * sin(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon) {\n\t        var x11 = r1 * cos(a11),\n\t            y11 = r1 * sin(a11),\n\t            x00 = r0 * cos(a00),\n\t            y00 = r0 * sin(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi) {\n\t          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n\t              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n\t    return [cos(a) * r, sin(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x,\n\t      y$$1 = y,\n\t      defined = constant(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = d3Path.path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area = function() {\n\t  var x0 = x,\n\t      x1 = null,\n\t      y0 = constant(0),\n\t      y1 = y,\n\t      defined = constant(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = d3Path.path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity,\n\t      sortValues = descending,\n\t      sort = null,\n\t      startAngle = constant(0),\n\t      endAngle = constant(tau),\n\t      padAngle = constant(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction lineRadial(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar lineRadial$1 = function() {\n\t  return lineRadial(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar areaRadial = function() {\n\t  var a = area().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar pointRadial = function(x, y) {\n\t  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n\t};\n\t\n\tvar slice = Array.prototype.slice;\n\t\n\tfunction linkSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction linkTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction link(curve) {\n\t  var source = linkSource,\n\t      target = linkTarget,\n\t      x$$1 = x,\n\t      y$$1 = y,\n\t      context = null;\n\t\n\t  function link() {\n\t    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n\t    if (!context) context = buffer = d3Path.path();\n\t    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  link.source = function(_) {\n\t    return arguments.length ? (source = _, link) : source;\n\t  };\n\t\n\t  link.target = function(_) {\n\t    return arguments.length ? (target = _, link) : target;\n\t  };\n\t\n\t  link.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : x$$1;\n\t  };\n\t\n\t  link.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : y$$1;\n\t  };\n\t\n\t  link.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n\t  };\n\t\n\t  return link;\n\t}\n\t\n\tfunction curveHorizontal(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n\t}\n\t\n\tfunction curveVertical(context, x0, y0, x1, y1) {\n\t  context.moveTo(x0, y0);\n\t  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n\t}\n\t\n\tfunction curveRadial$1(context, x0, y0, x1, y1) {\n\t  var p0 = pointRadial(x0, y0),\n\t      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n\t      p2 = pointRadial(x1, y0),\n\t      p3 = pointRadial(x1, y1);\n\t  context.moveTo(p0[0], p0[1]);\n\t  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n\t}\n\t\n\tfunction linkHorizontal() {\n\t  return link(curveHorizontal);\n\t}\n\t\n\tfunction linkVertical() {\n\t  return link(curveVertical);\n\t}\n\t\n\tfunction linkRadial() {\n\t  var l = link(curveRadial$1);\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t  return l;\n\t}\n\t\n\tvar circle = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau);\n\t  }\n\t};\n\t\n\tvar cross = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);\n\tvar kx = Math.sin(tau / 10) * kr;\n\tvar ky = -Math.cos(tau / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle,\n\t  cross,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant(circle),\n\t      size = constant(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = d3Path.path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop = function() {};\n\t\n\tfunction point(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = ((function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t}))(0.85);\n\t\n\tfunction point$1(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$1(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction point$2(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$3(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar none = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$1 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant([]),\n\t      order = none$1,\n\t      offset = none,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar diverging = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n\t    for (yp = yn = 0, i = 0; i < n; ++i) {\n\t      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n\t        d[0] = yp, d[1] = yp += dy;\n\t      } else if (dy < 0) {\n\t        d[1] = yn, d[0] = yn += dy;\n\t      } else {\n\t        d[0] = yp;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none(series, order);\n\t};\n\t\n\tvar ascending = function(series) {\n\t  var sums = series.map(sum);\n\t  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$1 = function(series) {\n\t  return ascending(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum),\n\t      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$1(series).reverse();\n\t};\n\t\n\texports.arc = arc;\n\texports.area = area;\n\texports.line = line;\n\texports.pie = pie;\n\texports.areaRadial = areaRadial;\n\texports.radialArea = areaRadial;\n\texports.lineRadial = lineRadial$1;\n\texports.radialLine = lineRadial$1;\n\texports.pointRadial = pointRadial;\n\texports.linkHorizontal = linkHorizontal;\n\texports.linkVertical = linkVertical;\n\texports.linkRadial = linkRadial;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle;\n\texports.symbolCross = cross;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetDiverging = diverging;\n\texports.stackOffsetNone = none;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending;\n\texports.stackOrderDescending = descending$1;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$1;\n\texports.stackOrderReverse = reverse;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-path/ Version 1.0.5. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar pi = Math.PI;\n\tvar tau = 2 * pi;\n\tvar epsilon = 1e-6;\n\tvar tauEpsilon = tau - epsilon;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Does the angle go the wrong way? Flip the direction.\n\t    if (da < 0) da = da % tau + tau;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Is this arc non-empty? Draw an arc!\n\t    else if (da > epsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\texports.path = path;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Format = __webpack_require__(7);\n\t\n\t    /**\n\t     * Calculates percentage of value from total\n\t     * @param  {Number}  value    Value to check\n\t     * @param  {Number}  total    Sum of values\n\t     * @param  {String}  decimals Specifies number of decimals https://github.com/d3/d3-format\n\t     * @return {String}           Percentage\n\t     */\n\t    function calculatePercent(value, total, decimals) {\n\t        return d3Format.format(decimals)(value / total * 100);\n\t    }\n\t\n\t    /**\n\t     * Checks if a number is an integer of has decimal values\n\t     * @param  {Number}  value Value to check\n\t     * @return {Boolean}       If it is an iteger\n\t     */\n\t    function isInteger(value) {\n\t        return value % 1 === 0;\n\t    }\n\t\n\t    return {\n\t        calculatePercent: calculatePercent,\n\t        isInteger: isInteger\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Format = __webpack_require__(7);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t\n\t    var textHelper = __webpack_require__(16);\n\t    var colorHelper = __webpack_require__(18);\n\t\n\t    /**\n\t     * @typedef LegendChartData\n\t     * @type {Object[]}\n\t     * @property {Number} id        Id of the group (required)\n\t     * @property {Number} quantity  Quantity of the group (required)\n\t     * @property {String} name      Name of the group (required)\n\t     *\n\t     * @example\n\t     * [\n\t     *     {\n\t     *         id: 1,\n\t     *         quantity: 2,\n\t     *         name: 'glittering'\n\t     *     },\n\t     *     {\n\t     *         id: 2,\n\t     *         quantity: 3,\n\t     *         name: 'luminous'\n\t     *     }\n\t     */\n\t\n\t    /**\n\t     * @fileOverview Legend Component reusable API class that renders a\n\t     * simple and configurable legend element.\n\t     *\n\t     * @example\n\t     * var donutChart = donut(),\n\t     *     legendBox = legend();\n\t     *\n\t     * donutChart\n\t     *     .externalRadius(500)\n\t     *     .internalRadius(200)\n\t     *     .on('customMouseOver', function(data) {\n\t     *         legendBox.highlight(data.data.id);\n\t     *     })\n\t     *     .on('customMouseOut', function() {\n\t     *         legendBox.clearHighlight();\n\t     *     });\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(donutChart);\n\t     *\n\t     * d3Selection.select('.other-css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(legendBox);\n\t     *\n\t     * @module Legend\n\t     * @tutorial legend\n\t     * @exports charts/legend\n\t     * @requires d3\n\t     */\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 5,\n\t            right: 5,\n\t            bottom: 5,\n\t            left: 5\n\t        },\n\t            width = 320,\n\t            height = 180,\n\t            textSize = 12,\n\t            textLetterSpacing = 0.5,\n\t            markerSize = 16,\n\t            markerYOffset = -(textSize - 2) / 2,\n\t            marginRatio = 1.5,\n\t            valueReservedSpace = 40,\n\t            numberLetterSpacing = 0.8,\n\t            numberFormat = 's',\n\t            isFadedClassName = 'is-faded',\n\t            horizontal = false,\n\t\n\t\n\t        // colors\n\t        colorScale = void 0,\n\t            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\t            getId = function getId(_ref) {\n\t            var id = _ref.id;\n\t            return id;\n\t        },\n\t            getName = function getName(_ref2) {\n\t            var name = _ref2.name;\n\t            return name;\n\t        },\n\t            getFormattedQuantity = function getFormattedQuantity(_ref3) {\n\t            var quantity = _ref3.quantity;\n\t            return d3Format.format(numberFormat)(quantity);\n\t        },\n\t            getCircleFill = function getCircleFill(_ref4) {\n\t            var name = _ref4.name;\n\t            return colorScale(name);\n\t        },\n\t            entries = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            data = void 0,\n\t            svg = void 0;\n\t\n\t        /**\n\t         * This function creates the graph using the selection as container\n\t         * @param  {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {object} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = _data;\n\t\n\t                buildColorScale();\n\t                buildSVG(this);\n\t                if (horizontal) {\n\t                    drawHorizontalLegend();\n\t                } else {\n\t                    drawVerticalLegend();\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Depending on the size of the horizontal legend, we are going to either\n\t         * center the legend or add a new line with the last entry of the legend\n\t         * @return {void}\n\t         */\n\t        function adjustLines() {\n\t            var lineWidth = svg.select('.legend-line').node().getBoundingClientRect().width;\n\t            var lineWidthSpace = chartWidth - lineWidth;\n\t\n\t            if (lineWidthSpace > 0) {\n\t                centerLegendOnSVG();\n\t            } else {\n\t                splitInLines();\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the legend\n\t         * Also applies the Margin convention\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('legend-container-group', true).attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container.append('g').classed('legend-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds color scale for chart, if any colorSchema was defined\n\t         * @private\n\t         */\n\t        function buildColorScale() {\n\t            if (colorSchema) {\n\t                colorScale = d3Scale.scaleOrdinal().range(colorSchema);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart britechart-legend', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Centers the legend on the chart given that is a single line of labels\n\t         * @return {void}\n\t         */\n\t        function centerLegendOnSVG() {\n\t            var legendGroupSize = svg.select('g.legend-container-group').node().getBoundingClientRect().width;\n\t            var emptySpace = width - legendGroupSize;\n\t\n\t            if (emptySpace > 0) {\n\t                svg.select('g.legend-container-group').attr('transform', 'translate(' + emptySpace / 2 + ',0)');\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Removes the faded class from all the entry lines\n\t         */\n\t        function cleanFadedLines() {\n\t            svg.select('.legend-group').selectAll('g.legend-entry').classed(isFadedClassName, false);\n\t        }\n\t\n\t        /**\n\t         * Draws the entries of the legend within a single line\n\t         * @private\n\t         */\n\t        function drawHorizontalLegend() {\n\t            var xOffset = markerSize;\n\t\n\t            // We want a single line\n\t            svg.select('.legend-group').append('g').classed('legend-line', true);\n\t\n\t            // And one entry per data item\n\t            entries = svg.select('.legend-line').selectAll('g.legend-entry').data(data);\n\t\n\t            // Enter\n\t            entries.enter().append('g').classed('legend-entry', true).attr('data-item', getId).attr('transform', function (d, i) {\n\t                var horizontalOffset = xOffset,\n\t                    lineHeight = chartHeight / 2,\n\t                    verticalOffset = lineHeight,\n\t                    labelWidth = textHelper.getTextWidth(d.name, textSize);\n\t\n\t                xOffset += markerSize + 2 * getLineElementMargin() + labelWidth;\n\t\n\t                return 'translate(' + horizontalOffset + ',' + verticalOffset + ')';\n\t            }).merge(entries).append('circle').classed('legend-circle', true).attr('cx', markerSize / 2).attr('cy', markerYOffset).attr('r', markerSize / 2).style('fill', getCircleFill).style('stroke-width', 1);\n\t\n\t            svg.select('.legend-group').selectAll('g.legend-entry').append('text').classed('legend-entry-name', true).text(getName).attr('x', getLineElementMargin()).style('font-size', textSize + 'px').style('letter-spacing', textLetterSpacing + 'px');\n\t\n\t            // Exit\n\t            svg.select('.legend-group').selectAll('g.legend-entry').exit().transition().style('opacity', 0).remove();\n\t\n\t            adjustLines();\n\t        }\n\t\n\t        /**\n\t         * Draws the entries of the legend\n\t         * @private\n\t         */\n\t        function drawVerticalLegend() {\n\t            entries = svg.select('.legend-group').selectAll('g.legend-line').data(data);\n\t\n\t            // Enter\n\t            entries.enter().append('g').classed('legend-line', true).append('g').classed('legend-entry', true).attr('data-item', getId).attr('transform', function (d, i) {\n\t                var horizontalOffset = markerSize + getLineElementMargin(),\n\t                    lineHeight = chartHeight / (data.length + 1),\n\t                    verticalOffset = (i + 1) * lineHeight;\n\t\n\t                return 'translate(' + horizontalOffset + ',' + verticalOffset + ')';\n\t            }).merge(entries).append('circle').classed('legend-circle', true).attr('cx', markerSize / 2).attr('cy', markerYOffset).attr('r', markerSize / 2).style('fill', getCircleFill).style('stroke-width', 1);\n\t\n\t            svg.select('.legend-group').selectAll('g.legend-line').selectAll('g.legend-entry').append('text').classed('legend-entry-name', true).text(getName).attr('x', getLineElementMargin()).style('font-size', textSize + 'px').style('letter-spacing', textLetterSpacing + 'px');\n\t\n\t            svg.select('.legend-group').selectAll('g.legend-line').selectAll('g.legend-entry').append('text').classed('legend-entry-value', true).text(getFormattedQuantity).attr('x', chartWidth - valueReservedSpace).style('font-size', textSize + 'px').style('letter-spacing', numberLetterSpacing + 'px').style('text-anchor', 'end').style('startOffset', '100%');\n\t\n\t            // Exit\n\t            svg.select('.legend-group').selectAll('g.legend-line').exit().transition().style('opacity', 0).remove();\n\t        }\n\t\n\t        /**\n\t         * Applies the faded class to all lines but the one that has the given id\n\t         * @param  {number} exceptionItemId Id of the line that needs to stay the same\n\t         */\n\t        function fadeLinesBut(exceptionItemId) {\n\t            var classToFade = 'g.legend-entry';\n\t\n\t            svg.select('.legend-group').selectAll(classToFade).classed(isFadedClassName, true);\n\t\n\t            svg.select('[data-item=\"' + exceptionItemId + '\"]').classed(isFadedClassName, false);\n\t        }\n\t\n\t        /**\n\t         * Calculates the margin between elements of the legend\n\t         * @return {Number} Margin to apply between elements\n\t         */\n\t        function getLineElementMargin() {\n\t            return marginRatio * markerSize;\n\t        }\n\t\n\t        /**\n\t         * Simple method to move the last item of an overflowing legend into the next line\n\t         * @return {void}\n\t         * @private\n\t         */\n\t        function splitInLines() {\n\t            var legendEntries = svg.selectAll('.legend-entry');\n\t            var numberOfEntries = legendEntries.size();\n\t            var lineHeight = chartHeight / 2 * 1.7;\n\t\n\t            var newLine = svg.select('.legend-group').append('g').classed('legend-line', true).attr('transform', 'translate(0, ' + lineHeight + ')');\n\t\n\t            var lastEntry = legendEntries.filter(':nth-child(' + numberOfEntries + ')');\n\t            lastEntry.attr('transform', 'translate(' + markerSize + ',0)');\n\t            newLine.append(function () {\n\t                return lastEntry.node();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Clears the highlighted line entry\n\t         */\n\t        exports.clearHighlight = function () {\n\t            cleanFadedLines();\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the colorSchema of the chart\n\t         * @param  {array} _x Color scheme array to get/set\n\t         * @return {number | module} Current colorSchema or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.colorSchema = function (_x) {\n\t            if (!arguments.length) {\n\t                return colorSchema;\n\t            }\n\t            colorSchema = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the legend chart\n\t         * @param  {number} _x Desired width for the chart\n\t         * @return {height | module} Current height or Legend module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            height = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Highlights a line entry by fading the rest of lines\n\t         * @param  {number} entryId ID of the entry line\n\t         */\n\t        exports.highlight = function (entryId) {\n\t            cleanFadedLines();\n\t            fadeLinesBut(entryId);\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the horizontal mode on the legend\n\t         * @param  {boolean} _x Desired horizontal mode for the graph\n\t         * @return {horizontal | module} Current horizontal mode or Legend module to chain calls\n\t         * @public\n\t         */\n\t        exports.horizontal = function (_x) {\n\t            if (!arguments.length) {\n\t                return horizontal;\n\t            }\n\t            horizontal = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the legend chart\n\t         * @param  {object} _x Margin object to get/set\n\t         * @return {margin | module} Current margin or Legend module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the markerSize of the legend chart.\n\t         * This markerSize will determine the horizontal and vertical size of the colored marks\n\t         * added as color identifiers for the chart's categories.\n\t         *\n\t         * @param  {object} _x Margin object to get/set\n\t         * @return {markerSize | module} Current markerSize or Legend module to chain calls\n\t         * @public\n\t         */\n\t        exports.markerSize = function (_x) {\n\t            if (!arguments.length) {\n\t                return markerSize;\n\t            }\n\t            markerSize = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the legend chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return {width | module} Current width or Legend module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            width = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the number format of the legend chart\n\t         * @param  {string} _x Desired number format for the legend chart\n\t         * @return {numberFormat | module} Current number format or Legend module to chain calls\n\t         * @public\n\t         */\n\t        exports.numberFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return numberFormat;\n\t            }\n\t            numberFormat = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Axis = __webpack_require__(4);\n\t    var d3Collection = __webpack_require__(9);\n\t    var d3Dispatch = __webpack_require__(6);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Shape = __webpack_require__(24);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t    var d3TimeFormat = __webpack_require__(12);\n\t\n\t    var _require = __webpack_require__(17),\n\t        exportChart = _require.exportChart;\n\t\n\t    var colorHelper = __webpack_require__(18);\n\t\n\t    var _require2 = __webpack_require__(26),\n\t        isInteger = _require2.isInteger;\n\t\n\t    var _require3 = __webpack_require__(29),\n\t        getXAxisSettings = _require3.getXAxisSettings,\n\t        getLocaleDateFormatter = _require3.getLocaleDateFormatter;\n\t\n\t    var _require4 = __webpack_require__(19),\n\t        axisTimeCombinations = _require4.axisTimeCombinations,\n\t        lineGradientId = _require4.lineGradientId;\n\t\n\t    var _require5 = __webpack_require__(30),\n\t        formatIntegerValue = _require5.formatIntegerValue,\n\t        formatDecimalValue = _require5.formatDecimalValue;\n\t\n\t    /**\n\t     * @typedef D3Selection\n\t     * @type {Array[]}\n\t     * @property {Number} length            Size of the selection\n\t     * @property {DOMElement} parentNode    Parent of the selection\n\t     */\n\t\n\t    /**\n\t     * @typedef lineChartDataByTopic\n\t     * @type {Object}\n\t     * @property {String} topicName    Topic name (required)\n\t     * @property {Number} topic        Topic identifier (required)\n\t     * @property {Object[]} dates      All date entries with values for that topic (required)\n\t     *\n\t     * @example\n\t     * {\n\t     *     topicName: 'San Francisco',\n\t     *     topic: 123,\n\t     *     dates: [\n\t     *         {\n\t     *             date: '2017-01-16T16:00:00-08:00',\n\t     *             value: 1\n\t     *         },\n\t     *         {\n\t     *             date: '2017-01-16T17:00:00-08:00',\n\t     *             value: 2\n\t     *         }\n\t     *     ]\n\t     * }\n\t     */\n\t\n\t    /**\n\t     * @typedef LineChartData\n\t     * @type {Object[]}\n\t     * @property {lineChartDataByTopic[]} dataByTopic  Data values to chart (required)\n\t     *\n\t     * @example\n\t     * {\n\t     *     dataByTopic: [\n\t     *         {\n\t     *             topicName: 'San Francisco',\n\t     *             topic: 123,\n\t     *             dates: [\n\t     *                 {\n\t     *                     date: '2017-01-16T16:00:00-08:00',\n\t     *                     value: 1\n\t     *                 },\n\t     *                 {\n\t     *                     date: '2017-01-16T17:00:00-08:00',\n\t     *                     value: 2\n\t     *                 }\n\t     *             ]\n\t     *         },\n\t     *         {\n\t     *             topicName: 'Other',\n\t     *             topic: 345,\n\t     *             dates: [\n\t     *                 {...},\n\t     *                 {...}\n\t     *             ]\n\t     *         }\n\t     *     ]\n\t     * }\n\t     */\n\t\n\t    /**\n\t     * Line Chart reusable API module that allows us\n\t     * rendering a multi line and configurable chart.\n\t     *\n\t     * @module Line\n\t     * @tutorial line\n\t     * @requires d3-array, d3-axis, d3-brush, d3-ease, d3-format, d3-scale, d3-shape, d3-selection, d3-time, d3-time-format\n\t     *\n\t     * @example\n\t     * let lineChart = line();\n\t     *\n\t     * lineChart\n\t     *     .aspectRatio(0.5)\n\t     *     .width(500);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(lineChart);\n\t     *\n\t     */\n\t\n\t\n\t    return function line() {\n\t\n\t        var margin = {\n\t            top: 60,\n\t            right: 30,\n\t            bottom: 40,\n\t            left: 70\n\t        },\n\t            width = 960,\n\t            height = 500,\n\t            aspectRatio = null,\n\t            tooltipThreshold = 480,\n\t            svg = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            xScale = void 0,\n\t            yScale = void 0,\n\t            colorScale = void 0,\n\t            xAxis = void 0,\n\t            xMonthAxis = void 0,\n\t            yAxis = void 0,\n\t            xAxisPadding = {\n\t            top: 0,\n\t            left: 15,\n\t            bottom: 0,\n\t            right: 0\n\t        },\n\t            monthAxisPadding = 28,\n\t            tickPadding = 5,\n\t            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\t            singleLineGradientColors = colorHelper.colorGradients.greenBlueGradient,\n\t            topicColorMap = void 0,\n\t            forceAxisSettings = null,\n\t            forcedXTicks = null,\n\t            forcedXFormat = null,\n\t            locale = void 0,\n\t            isAnimated = false,\n\t            ease = d3Ease.easeQuadInOut,\n\t            animationDuration = 1500,\n\t            maskingRectangle = void 0,\n\t            dataByTopic = void 0,\n\t            dataByDate = void 0,\n\t            dateLabel = 'date',\n\t            valueLabel = 'value',\n\t            topicLabel = 'topic',\n\t            topicNameLabel = 'topicName',\n\t            verticalTicks = 5,\n\t            overlay = void 0,\n\t            overlayColor = 'rgba(0, 0, 0, 0)',\n\t            verticalMarkerContainer = void 0,\n\t            verticalMarkerLine = void 0,\n\t            verticalGridLines = void 0,\n\t            horizontalGridLines = void 0,\n\t            grid = null,\n\t            baseLine = void 0,\n\t\n\t\n\t        // extractors\n\t        getDate = function getDate(_ref) {\n\t            var date = _ref.date;\n\t            return date;\n\t        },\n\t            getValue = function getValue(_ref2) {\n\t            var value = _ref2.value;\n\t            return value;\n\t        },\n\t            getTopic = function getTopic(_ref3) {\n\t            var topic = _ref3.topic;\n\t            return topic;\n\t        },\n\t            getLineColor = function getLineColor(_ref4) {\n\t            var topic = _ref4.topic;\n\t            return colorScale(topic);\n\t        },\n\t\n\t\n\t        // events\n\t        dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\t\n\t        /**\n\t         * This function creates the graph using the selection and data provided\n\t         *\n\t         * @param {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {LineChartData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                var _cleanData = cleanData(_data);\n\t\n\t                dataByTopic = _cleanData.dataByTopic;\n\t                dataByDate = _cleanData.dataByDate;\n\t\n\t\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t\n\t                buildScales();\n\t                buildSVG(this);\n\t                buildAxis();\n\t                drawAxis();\n\t                buildGradient();\n\t                drawLines();\n\t                createMaskingClip();\n\t\n\t                if (shouldShowTooltip()) {\n\t                    drawVerticalMarker();\n\t                    drawHoverOverlay();\n\t                    addMouseEvents();\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Adds events to the container group if the environment is not mobile\n\t         * Adding: mouseover, mouseout and mousemove\n\t         */\n\t        function addMouseEvents() {\n\t            svg.on('mouseover', handleMouseOver).on('mouseout', handleMouseOut).on('mousemove', handleMouseMove);\n\t        }\n\t\n\t        /**\n\t         * Adjusts the position of the y axis' ticks\n\t         * @param  {D3Selection} selection Y axis group\n\t         * @return void\n\t         */\n\t        function adjustYTickLabels(selection) {\n\t            selection.selectAll('.tick text').attr('transform', 'translate(0, -7)');\n\t        }\n\t\n\t        /**\n\t         * Formats the value depending on its characteristics\n\t         * @param  {Number} value Value to format\n\t         * @return {Number}       Formatted value\n\t         */\n\t        function getFormattedValue(value) {\n\t            var format = void 0;\n\t\n\t            if (isInteger(value)) {\n\t                format = formatIntegerValue;\n\t            } else {\n\t                format = formatDecimalValue;\n\t            }\n\t\n\t            return format(value);\n\t        }\n\t\n\t        /**\n\t         * Creates the d3 x and y axis, setting orientations\n\t         * @private\n\t         */\n\t        function buildAxis() {\n\t            var dataTimeSpan = yScale.domain()[1] - yScale.domain()[0];\n\t            var yTickNumber = dataTimeSpan < verticalTicks - 1 ? dataTimeSpan : verticalTicks;\n\t            var minor = void 0,\n\t                major = void 0;\n\t\n\t            if (forceAxisSettings === 'custom' && typeof forcedXFormat === 'string') {\n\t                minor = {\n\t                    tick: forcedXTicks,\n\t                    format: d3TimeFormat.timeFormat(forcedXFormat)\n\t                };\n\t                major = null;\n\t            } else {\n\t                var _getXAxisSettings = getXAxisSettings(dataByDate, width, forceAxisSettings, locale);\n\t\n\t                minor = _getXAxisSettings.minor;\n\t                major = _getXAxisSettings.major;\n\t\n\t\n\t                xMonthAxis = d3Axis.axisBottom(xScale).ticks(major.tick).tickSize(0, 0).tickFormat(major.format);\n\t            }\n\t\n\t            xAxis = d3Axis.axisBottom(xScale).ticks(minor.tick).tickSize(10, 0).tickPadding(tickPadding).tickFormat(minor.format);\n\t\n\t            yAxis = d3Axis.axisLeft(yScale).ticks(yTickNumber).tickSize([0]).tickPadding(tickPadding).tickFormat(getFormattedValue);\n\t\n\t            drawGridLines(minor.tick, yTickNumber);\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * NOTE: The order of drawing of this group elements is really important,\n\t         * as everything else will be drawn on top of them\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container.append('g').classed('x-axis-group', true).append('g').classed('axis x', true);\n\t            container.selectAll('.x-axis-group').append('g').classed('month-axis', true);\n\t            container.append('g').classed('y-axis-group axis y', true);\n\t            container.append('g').classed('grid-lines-group', true);\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('metadata-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds the gradient element to be used later\n\t         * @return {void}\n\t         */\n\t        function buildGradient() {\n\t            svg.select('.metadata-group').append('linearGradient').attr('id', lineGradientId).attr('x1', '0%').attr('y1', '0%').attr('x2', '100%').attr('y2', '0%').selectAll('stop').data([{ offset: '0%', color: singleLineGradientColors[0] }, { offset: '100%', color: singleLineGradientColors[1] }]).enter().append('stop').attr('offset', function (_ref5) {\n\t                var offset = _ref5.offset;\n\t                return offset;\n\t            }).attr('stop-color', function (_ref6) {\n\t                var color = _ref6.color;\n\t                return color;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates the x and y scales of the graph\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t            var minX = d3Array.min(dataByTopic, function (_ref7) {\n\t                var dates = _ref7.dates;\n\t                return d3Array.min(dates, getDate);\n\t            }),\n\t                maxX = d3Array.max(dataByTopic, function (_ref8) {\n\t                var dates = _ref8.dates;\n\t                return d3Array.max(dates, getDate);\n\t            }),\n\t                maxY = d3Array.max(dataByTopic, function (_ref9) {\n\t                var dates = _ref9.dates;\n\t                return d3Array.max(dates, getValue);\n\t            }),\n\t                minY = d3Array.min(dataByTopic, function (_ref10) {\n\t                var dates = _ref10.dates;\n\t                return d3Array.min(dates, getValue);\n\t            });\n\t            var yScaleBottomValue = Math.abs(minY) < 0 ? Math.abs(minY) : 0;\n\t\n\t            xScale = d3Scale.scaleTime().domain([minX, maxX]).rangeRound([0, chartWidth]);\n\t\n\t            yScale = d3Scale.scaleLinear().domain([yScaleBottomValue, Math.abs(maxY)]).rangeRound([chartHeight, 0]).nice();\n\t\n\t            colorScale = d3Scale.scaleOrdinal().range(colorSchema).domain(dataByTopic.map(getTopic));\n\t\n\t            var range = colorScale.range();\n\t            topicColorMap = colorScale.domain().reduce(function (memo, item, i) {\n\t                memo[item] = range[i];\n\t\n\t                return memo;\n\t            }, {});\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         *\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart line-chart', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Parses dates and values into JS Date objects and numbers\n\t         * @param  {obj} dataByTopic    Raw data grouped by topic\n\t         * @return {obj}                Parsed data with dataByTopic and dataByDate\n\t         */\n\t        function cleanData(_ref11) {\n\t            var dataByTopic = _ref11.dataByTopic,\n\t                dataByDate = _ref11.dataByDate;\n\t\n\t\n\t            if (dataByTopic) {\n\t                var flatData = [];\n\t\n\t                dataByTopic.forEach(function (topic) {\n\t                    topic.dates.forEach(function (date) {\n\t                        flatData.push({\n\t                            topicName: topic[topicNameLabel],\n\t                            name: topic[topicLabel],\n\t                            date: date[dateLabel],\n\t                            value: date[valueLabel]\n\t                        });\n\t                    });\n\t                });\n\t\n\t                // Nest data by date and format\n\t                dataByDate = d3Collection.nest().key(getDate).entries(flatData).map(function (d) {\n\t                    return {\n\t                        date: new Date(d.key),\n\t                        topics: d.values\n\t                    };\n\t                });\n\t\n\t                // Normalize dates in keys\n\t                dataByDate = dataByDate.map(function (d) {\n\t                    d.date = new Date(d.date);\n\t\n\t                    return d;\n\t                });\n\t\n\t                // Normalize dataByTopic\n\t                dataByTopic.forEach(function (kv) {\n\t                    kv.dates.forEach(function (d) {\n\t                        d.date = new Date(d[dateLabel]);\n\t                        d.value = +d[valueLabel];\n\t                    });\n\t                });\n\t            }\n\t\n\t            return { dataByTopic: dataByTopic, dataByDate: dataByDate };\n\t        }\n\t\n\t        /**\n\t         * Removes all the datapoints highlighter circles added to the marker container\n\t         * @return void\n\t         */\n\t        function cleanDataPointHighlights() {\n\t            verticalMarkerContainer.selectAll('.circle-container').remove();\n\t        }\n\t\n\t        /**\n\t         * Creates a masking clip that would help us fake an animation if the\n\t         * proper flag is true\n\t         *\n\t         * @return {void}\n\t         */\n\t        function createMaskingClip() {\n\t            if (isAnimated) {\n\t                // We use a white rectangle to simulate the line drawing animation\n\t                maskingRectangle = svg.append('rect').attr('class', 'masking-rectangle').attr('width', width).attr('height', height).attr('x', 0).attr('y', 0);\n\t\n\t                maskingRectangle.transition().duration(animationDuration).ease(ease).attr('x', width).on('end', function () {\n\t                    return maskingRectangle.remove();\n\t                });\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the x and y axis on the svg object within their\n\t         * respective groups\n\t         * @private\n\t         */\n\t        function drawAxis() {\n\t            svg.select('.x-axis-group .axis.x').attr('transform', 'translate(0, ' + chartHeight + ')').call(xAxis);\n\t\n\t            if (forceAxisSettings !== 'custom') {\n\t                svg.select('.x-axis-group .month-axis').attr('transform', 'translate(0, ' + (chartHeight + monthAxisPadding) + ')').call(xMonthAxis);\n\t            }\n\t\n\t            svg.select('.y-axis-group.axis.y').transition().ease(ease).attr('transform', 'translate(' + -xAxisPadding.left + ', 0)').call(yAxis).call(adjustYTickLabels);\n\t        }\n\t\n\t        /**\n\t         * Draws the line elements within the chart group\n\t         * @private\n\t         */\n\t        function drawLines() {\n\t            var lines = void 0,\n\t                topicLine = void 0;\n\t\n\t            topicLine = d3Shape.line().x(function (_ref12) {\n\t                var date = _ref12.date;\n\t                return xScale(date);\n\t            }).y(function (_ref13) {\n\t                var value = _ref13.value;\n\t                return yScale(value);\n\t            });\n\t\n\t            lines = svg.select('.chart-group').selectAll('.line').data(dataByTopic);\n\t\n\t            lines.enter().append('g').attr('class', 'topic').append('path').attr('class', 'line').attr('d', function (_ref14) {\n\t                var dates = _ref14.dates;\n\t                return topicLine(dates);\n\t            }).style('stroke', function (d) {\n\t                return dataByTopic.length === 1 ? 'url(#' + lineGradientId + ')' : getLineColor(d);\n\t            });\n\t\n\t            lines.exit().remove();\n\t        }\n\t\n\t        /**\n\t         * Draws grid lines on the background of the chart\n\t         * @return void\n\t         */\n\t        function drawGridLines(xTicks, yTicks) {\n\t            if (grid === 'horizontal' || grid === 'full') {\n\t                horizontalGridLines = svg.select('.grid-lines-group').selectAll('line.horizontal-grid-line').data(yScale.ticks(yTicks)).enter().append('line').attr('class', 'horizontal-grid-line').attr('x1', -xAxisPadding.left - 30).attr('x2', chartWidth).attr('y1', function (d) {\n\t                    return yScale(d);\n\t                }).attr('y2', function (d) {\n\t                    return yScale(d);\n\t                });\n\t            }\n\t\n\t            if (grid === 'vertical' || grid === 'full') {\n\t                verticalGridLines = svg.select('.grid-lines-group').selectAll('line.vertical-grid-line').data(xScale.ticks(xTicks)).enter().append('line').attr('class', 'vertical-grid-line').attr('y1', 0).attr('y2', chartHeight).attr('x1', function (d) {\n\t                    return xScale(d);\n\t                }).attr('x2', function (d) {\n\t                    return xScale(d);\n\t                });\n\t            }\n\t\n\t            //draw a horizontal line to extend x-axis till the edges\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-x-line').data([0]).enter().append('line').attr('class', 'extended-x-line').attr('x1', -xAxisPadding.left - 30).attr('x2', chartWidth).attr('y1', height - margin.bottom - margin.top).attr('y2', height - margin.bottom - margin.top);\n\t        }\n\t\n\t        /**\n\t         * Draws an overlay element over the graph\n\t         * @inner\n\t         * @return void\n\t         */\n\t        function drawHoverOverlay() {\n\t            overlay = svg.select('.metadata-group').append('rect').attr('class', 'overlay').attr('y1', 0).attr('y2', height).attr('height', chartHeight).attr('width', chartWidth).attr('fill', overlayColor).style('display', 'none');\n\t        }\n\t\n\t        /**\n\t         * Creates the vertical marker\n\t         * @return void\n\t         */\n\t        function drawVerticalMarker() {\n\t            verticalMarkerContainer = svg.select('.metadata-group').append('g').attr('class', 'hover-marker vertical-marker-container').attr('transform', 'translate(9999, 0)');\n\t\n\t            verticalMarkerLine = verticalMarkerContainer.selectAll('path').data([{\n\t                x1: 0,\n\t                y1: 0,\n\t                x2: 0,\n\t                y2: 0\n\t            }]).enter().append('line').classed('vertical-marker', true).attr('x1', 0).attr('y1', chartHeight).attr('x2', 0).attr('y2', 0);\n\t        }\n\t\n\t        /**\n\t         * Finds out which datapoint is closer to the given x position\n\t         * @param  {Number} x0 Date value for data point\n\t         * @param  {Object} d0 Previous datapoint\n\t         * @param  {Object} d1 Next datapoint\n\t         * @return {Object}    d0 or d1, the datapoint with closest date to x0\n\t         */\n\t        function findOutNearestDate(x0, d0, d1) {\n\t            return new Date(x0).getTime() - new Date(d0.date).getTime() > new Date(d1.date).getTime() - new Date(x0).getTime() ? d0 : d1;\n\t        }\n\t\n\t        /**\n\t         * Extract X position on the graph from a given mouse event\n\t         * @param  {Object} event D3 mouse event\n\t         * @return {Number}       Position on the x axis of the mouse\n\t         */\n\t        function getMouseXPosition(event) {\n\t            return d3Selection.mouse(event)[0];\n\t        }\n\t\n\t        /**\n\t         * Finds out the data entry that is closer to the given position on pixels\n\t         * @param  {Number} mouseX X position of the mouse\n\t         * @return {Object}        Data entry that is closer to that x axis position\n\t         */\n\t        function getNearestDataPoint(mouseX) {\n\t            var dateFromInvertedX = xScale.invert(mouseX);\n\t            var bisectDate = d3Array.bisector(getDate).left;\n\t            var dataEntryIndex = bisectDate(dataByDate, dateFromInvertedX, 1);\n\t            var dataEntryForXPosition = dataByDate[dataEntryIndex];\n\t            var previousDataEntryForXPosition = dataByDate[dataEntryIndex - 1];\n\t            var nearestDataPoint = void 0;\n\t\n\t            if (previousDataEntryForXPosition && dataEntryForXPosition) {\n\t                nearestDataPoint = findOutNearestDate(dateFromInvertedX, dataEntryForXPosition, previousDataEntryForXPosition);\n\t            } else {\n\t                nearestDataPoint = dataEntryForXPosition;\n\t            }\n\t\n\t            return nearestDataPoint;\n\t        }\n\t\n\t        /**\n\t         * MouseMove handler, calculates the nearest dataPoint to the cursor\n\t         * and updates metadata related to it\n\t         * @private\n\t         */\n\t        function handleMouseMove() {\n\t            var xPositionOffset = -margin.left,\n\t                //Arbitrary number, will love to know how to assess it\n\t            dataPoint = getNearestDataPoint(getMouseXPosition(this) + xPositionOffset),\n\t                dataPointXPosition = void 0;\n\t\n\t            if (dataPoint) {\n\t                dataPointXPosition = xScale(new Date(dataPoint.date));\n\t                // More verticalMarker to that datapoint\n\t                moveVerticalMarker(dataPointXPosition);\n\t                // Add data points highlighting\n\t                highlightDataPoints(dataPoint);\n\t                // Emit event with xPosition for tooltip or similar feature\n\t                dispatcher.call('customMouseMove', this, dataPoint, topicColorMap, dataPointXPosition);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n\t         * It also resets the container of the vertical marker\n\t         * @private\n\t         */\n\t        function handleMouseOut(data) {\n\t            overlay.style('display', 'none');\n\t            verticalMarkerLine.classed('bc-is-active', false);\n\t            verticalMarkerContainer.attr('transform', 'translate(9999, 0)');\n\t\n\t            dispatcher.call('customMouseOut', this, data);\n\t        }\n\t\n\t        /**\n\t         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n\t         * @private\n\t         */\n\t        function handleMouseOver(data) {\n\t            overlay.style('display', 'block');\n\t            verticalMarkerLine.classed('bc-is-active', true);\n\t\n\t            dispatcher.call('customMouseOver', this, data);\n\t        }\n\t\n\t        /**\n\t         * Creates coloured circles marking where the exact data y value is for a given data point\n\t         * @param  {Object} dataPoint Data point to extract info from\n\t         * @private\n\t         */\n\t        function highlightDataPoints(dataPoint) {\n\t            cleanDataPointHighlights();\n\t\n\t            // sorting the topics based on the order of the colors,\n\t            // so that the order always stays constant\n\t            dataPoint.topics = dataPoint.topics.filter(function (t) {\n\t                return !!t;\n\t            }).sort(function (a, b) {\n\t                return topicColorMap[a.name] < topicColorMap[b.name];\n\t            });\n\t\n\t            dataPoint.topics.forEach(function (_ref15, index) {\n\t                var name = _ref15.name;\n\t\n\t                var marker = verticalMarkerContainer.append('g').classed('circle-container', true),\n\t                    circleSize = 12;\n\t\n\t                marker.append('circle').classed('data-point-highlighter', true).attr('cx', circleSize).attr('cy', 0).attr('r', 5).style('stroke', topicColorMap[name]);\n\t\n\t                marker.attr('transform', 'translate( ' + -circleSize + ', ' + yScale(dataPoint.topics[index].value) + ' )');\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Helper method to update the x position of the vertical marker\n\t         * @param  {Object} dataPoint Data entry to extract info\n\t         * @return void\n\t         */\n\t        function moveVerticalMarker(verticalMarkerXPosition) {\n\t            verticalMarkerContainer.attr('transform', 'translate(' + verticalMarkerXPosition + ',0)');\n\t        }\n\t\n\t        /**\n\t         * Determines if we should add the tooltip related logic depending on the\n\t         * size of the chart and the tooltipThreshold variable value\n\t         * @return {Boolean} Should we build the tooltip?\n\t         */\n\t        function shouldShowTooltip() {\n\t            return width > tooltipThreshold;\n\t        }\n\t\n\t        // API Methods\n\t\n\t        /**\n\t         * Gets or Sets the aspect ratio of the chart\n\t         * @param  {Number} _x Desired aspect ratio for the graph\n\t         * @return { (Number | Module) } Current aspect ratio or Line Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.aspectRatio = function (_x) {\n\t            if (!arguments.length) {\n\t                return aspectRatio;\n\t            }\n\t            aspectRatio = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the colorSchema of the chart\n\t         * @param  {String[]} _x Desired colorSchema for the graph\n\t         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.colorSchema = function (_x) {\n\t            if (!arguments.length) {\n\t                return colorSchema;\n\t            }\n\t            colorSchema = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the dateLabel of the chart\n\t         * @param  {Number} _x Desired dateLabel for the graph\n\t         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.dateLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return dateLabel;\n\t            }\n\t            dateLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x axis grouping\n\t         * @param  {String} _x Desired format\n\t         * @return { (String|Module) }    Current format or module to chain calls\n\t         * @example\n\t         *     line.forceAxisFormat(line.axisTimeCombinations.HOUR_DAY)\n\t         */\n\t        exports.forceAxisFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return forceAxisSettings;\n\t            }\n\t            forceAxisSettings = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x format\n\t         * It requires a `forceAxisFormat` of 'custom' in order to work.\n\t         * NOTE: localization not supported\n\t         * @param  {String} _x              Desired format for x axis\n\t         * @return { (String|Module) }      Current format or module to chain calls\n\t         */\n\t        exports.forcedXFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return forcedXFormat;\n\t            }\n\t            forcedXFormat = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x ticks. It requires a `forceAxisFormat` of 'custom' in order to work.\n\t         * NOTE: This value needs to be a multiple of 2, 5 or 10. They won't always work as expected, as D3 decides at the end\n\t         * how many and where the ticks will appear.\n\t         *\n\t         * @param  {Number} _x              Desired number of x axis ticks (multiple of 2, 5 or 10)\n\t         * @return { (Number|Module) }      Current number or ticks or module to chain calls\n\t         */\n\t        exports.forcedXTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return forcedXTicks;\n\t            }\n\t            forcedXTicks = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the grid mode.\n\t         *\n\t         * @param  {String} _x Desired mode for the grid ('vertical'|'horizontal'|'full')\n\t         * @return { String | module} Current mode of the grid or Line Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.grid = function (_x) {\n\t            if (!arguments.length) {\n\t                return grid;\n\t            }\n\t            grid = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { (Number | Module) } Current height or Line Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            if (aspectRatio) {\n\t                width = Math.ceil(_x / aspectRatio);\n\t            }\n\t            height = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n\t         * By default this is 'false'\n\t         *\n\t         * @param  {Boolean} _x Desired animation flag\n\t         * @return { isAnimated | module} Current isAnimated flag or Chart module\n\t         * @public\n\t         */\n\t        exports.isAnimated = function (_x) {\n\t            if (!arguments.length) {\n\t                return isAnimated;\n\t            }\n\t            isAnimated = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { (Number | Module) } Current margin or Line Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the gradient colors of the line chart when there is only one line\n\t         * @param  {String[]} _x Desired color gradient for the line (array of two hexadecimal numbers)\n\t         * @return { (Number | Module) } Current color gradient or Line Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.lineGradient = function (_x) {\n\t            if (!arguments.length) {\n\t                return singleLineGradientColors;\n\t            }\n\t            singleLineGradientColors = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the minimum width of the graph in order to show the tooltip\n\t         * NOTE: This could also depend on the aspect ratio\n\t         * @param  {Number} _x Desired tooltip threshold for the graph\n\t         * @return { (Number | Module) } Current tooltip threshold or Line Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.tooltipThreshold = function (_x) {\n\t            if (!arguments.length) {\n\t                return tooltipThreshold;\n\t            }\n\t            tooltipThreshold = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the topicLabel of the chart\n\t         * @param  {Number} _x Desired topicLabel for the graph\n\t         * @return { topicLabel | module} Current topicLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.topicLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return topicLabel;\n\t            }\n\t            topicLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabel of the chart\n\t         * @param  {Number} _x Desired valueLabel for the graph\n\t         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabel;\n\t            }\n\t            valueLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the number of verticalTicks of the yAxis on the chart\n\t         * @param  {Number} _x Desired verticalTicks\n\t         * @return { verticalTicks | module} Current verticalTicks or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.verticalTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return verticalTicks;\n\t            }\n\t            verticalTicks = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { (Number | Module) } Current width or Line Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            if (aspectRatio) {\n\t                height = Math.ceil(_x * aspectRatio);\n\t            }\n\t            width = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Pass language tag for the tooltip to localize the date.\n\t         * Feature uses Intl.DateTimeFormat, for compatability and support, refer to\n\t         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n\t         * @param  {String} _x  must be a language tag (BCP 47) like 'en-US' or 'fr-FR'\n\t         * @return { (String|Module) }    Current locale or module to chain calls\n\t         */\n\t        exports.locale = function (_x) {\n\t            if (!arguments.length) {\n\t                return locale;\n\t            }\n\t            locale = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename, title) {\n\t            exportChart.call(exports, svg, filename, title);\n\t        };\n\t\n\t        /**\n\t         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n\t         * We are going to expose this events:\n\t         * customMouseHover, customMouseMove and customMouseOut\n\t         *\n\t         * @return {module} Bar Chart\n\t         * @public\n\t         */\n\t        exports.on = function () {\n\t            var value = dispatcher.on.apply(dispatcher, arguments);\n\t\n\t            return value === dispatcher ? exports : value;\n\t        };\n\t\n\t        /**\n\t         * Exposes the constants to be used to force the x axis to respect a certain granularity\n\t         * current options: MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR\n\t         * @example\n\t         *     line.forceAxisFormat(line.axisTimeCombinations.HOUR_DAY)\n\t         */\n\t        exports.axisTimeCombinations = axisTimeCombinations;\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var _settingsToMajorTickM;\n\t\n\t    var d3Time = __webpack_require__(11);\n\t    var d3TimeFormat = __webpack_require__(12);\n\t\n\t    var _require = __webpack_require__(19),\n\t        axisTimeCombinations = _require.axisTimeCombinations,\n\t        timeBenchmarks = _require.timeBenchmarks;\n\t\n\t    var singleTickWidth = 20;\n\t    var horizontalTickSpacing = 50;\n\t    var minEntryNumForDayFormat = 5;\n\t\n\t    var formatMap = {\n\t        minute: d3TimeFormat.timeFormat('%M m'),\n\t        hour: d3TimeFormat.timeFormat('%H %p'),\n\t        day: d3TimeFormat.timeFormat('%e'),\n\t        daymonth: d3TimeFormat.timeFormat('%d %b'),\n\t        month: d3TimeFormat.timeFormat('%b'),\n\t        year: d3TimeFormat.timeFormat('%Y')\n\t    };\n\t    var localeTimeMap = {\n\t        minute: { minute: 'numeric' },\n\t        hour: { hour: 'numeric' },\n\t        day: { day: 'numeric' },\n\t        daymonth: { day: 'numeric', month: 'short' },\n\t        month: { month: 'short' },\n\t        year: { year: 'numeric' }\n\t    };\n\t    var settingsToMajorTickMap = (_settingsToMajorTickM = {}, _defineProperty(_settingsToMajorTickM, axisTimeCombinations.MINUTE_HOUR, d3Time.timeHour.every(1)), _defineProperty(_settingsToMajorTickM, axisTimeCombinations.HOUR_DAY, d3Time.timeDay.every(1)), _defineProperty(_settingsToMajorTickM, axisTimeCombinations.DAY_MONTH, d3Time.timeMonth.every(1)), _defineProperty(_settingsToMajorTickM, axisTimeCombinations.MONTH_YEAR, d3Time.timeYear.every(1)), _settingsToMajorTickM);\n\t\n\t    /**\n\t     * Figures out the proper settings from the current time span\n\t     * @param  {Number} timeSpan    Span of time charted by the graph in milliseconds\n\t     * @return {String}             Type of settings for the given timeSpan\n\t     */\n\t    var getAxisSettingsFromTimeSpan = function getAxisSettingsFromTimeSpan(timeSpan) {\n\t        var ONE_YEAR = timeBenchmarks.ONE_YEAR,\n\t            ONE_DAY = timeBenchmarks.ONE_DAY;\n\t\n\t        var settings = void 0;\n\t\n\t        if (timeSpan < ONE_DAY) {\n\t            settings = axisTimeCombinations.HOUR_DAY;\n\t        } else if (timeSpan < ONE_YEAR) {\n\t            settings = axisTimeCombinations.DAY_MONTH;\n\t        } else {\n\t            settings = axisTimeCombinations.MONTH_YEAR;\n\t        }\n\t\n\t        return settings;\n\t    };\n\t\n\t    /**\n\t     * Calculates the maximum number of ticks for the x axis\n\t     * @param  {Number} width Chart width\n\t     * @param  {Number} dataPointNumber  Number of entries on the data\n\t     * @return {Number}       Number of ticks to render\n\t     */\n\t    var getMaxNumOfHorizontalTicks = function getMaxNumOfHorizontalTicks(width, dataPointNumber) {\n\t        var ticksForWidth = Math.ceil(width / (singleTickWidth + horizontalTickSpacing));\n\t\n\t        return dataPointNumber < minEntryNumForDayFormat ? d3Time.timeDay : Math.min(dataPointNumber, ticksForWidth);\n\t    };\n\t\n\t    /**\n\t     * Takes a locale (string) and the format to return and returns a function to format dates\n\t     * @param  {String} locale    locale tag eg. en-US, fr-FR, ru-RU\n\t     * @param  {string} timeUnit  minute, hour, day, dayMonth, month, year\n\t     * @return {function}         function that formats dates in the proper locale\n\t     */\n\t    var getLocaleDateFormatter = function getLocaleDateFormatter(locale) {\n\t        var timeUnit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'day';\n\t\n\t        var options = localeTimeMap[timeUnit];\n\t        var formatter = new Intl.DateTimeFormat(locale, options);\n\t\n\t        return function (date) {\n\t            return formatter.format(date);\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Returns tick object to be used when building the x axis\n\t     * @param {dataByDate} dataByDate       Chart data ordered by Date\n\t     * @param {Number} width                Chart width\n\t     * @param {String} settings             Optional forced settings for axis\n\t     * @return {object} tick settings for major and minr axis\n\t     */\n\t    var getXAxisSettings = function getXAxisSettings(dataByDate, width) {\n\t        var settings = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\t        var locale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\t\n\t        var firstDate = new Date(dataByDate[0].date);\n\t        var lastDate = new Date(dataByDate[dataByDate.length - 1].date);\n\t        var dateTimeSpan = lastDate - firstDate;\n\t\n\t        if (locale && (typeof Intl === 'undefined' || (typeof Intl === 'undefined' ? 'undefined' : _typeof(Intl)) === 'object' && !Intl.DateTimeFormat)) {\n\t            locale = null;\n\t        }\n\t\n\t        if (!settings) {\n\t            settings = getAxisSettingsFromTimeSpan(dateTimeSpan);\n\t        }\n\t\n\t        var _settings$split = settings.split('-'),\n\t            _settings$split2 = _slicedToArray(_settings$split, 2),\n\t            minor = _settings$split2[0],\n\t            major = _settings$split2[1];\n\t\n\t        var majorTickValue = settingsToMajorTickMap[settings];\n\t        var minorTickValue = getMaxNumOfHorizontalTicks(width, dataByDate.length);\n\t\n\t        return {\n\t            minor: {\n\t                format: locale ? getLocaleDateFormatter(locale, minor) : formatMap[minor],\n\t                tick: minorTickValue\n\t            },\n\t            major: {\n\t                format: locale ? getLocaleDateFormatter(locale, major) : formatMap[major],\n\t                tick: majorTickValue\n\t            }\n\t        };\n\t    };\n\t\n\t    return {\n\t        getXAxisSettings: getXAxisSettings,\n\t        getLocaleDateFormatter: getLocaleDateFormatter\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Format = __webpack_require__(7);\n\t\n\t    var integerValueFormats = {\n\t        small: {\n\t            limit: 10,\n\t            format: d3Format.format('')\n\t        },\n\t        medium: {\n\t            limit: 1000,\n\t            format: d3Format.format('')\n\t        },\n\t        large: {\n\t            limit: null,\n\t            format: d3Format.format('.2s')\n\t        }\n\t    };\n\t    var decimalValueFormats = {\n\t        small: {\n\t            limit: 10,\n\t            format: d3Format.format('.3f')\n\t        },\n\t        medium: {\n\t            limit: 100,\n\t            format: d3Format.format('.1f')\n\t        },\n\t        large: {\n\t            limit: null,\n\t            format: d3Format.format('.2s')\n\t        }\n\t    };\n\t\n\t    function getValueSize(value, limits) {\n\t        var size = 'large';\n\t\n\t        if (value < limits.small.limit) {\n\t            size = 'small';\n\t        } else if (value < limits.medium.limit) {\n\t            size = 'medium';\n\t        }\n\t        return size;\n\t    }\n\t\n\t    /**\n\t     * Formats an integer value depending on its value range\n\t     * @param  {Number} value Decimal point value to format\n\t     * @return {Number}       Formatted value to show\n\t     */\n\t    function formatIntegerValue(value) {\n\t        var size = getValueSize(value, integerValueFormats);\n\t        var format = integerValueFormats[size].format;\n\t\n\t        return format(value);\n\t    }\n\t\n\t    /**\n\t     * Formats a floating point value depending on its value range\n\t     * @param  {Number} value Decimal point value to format\n\t     * @return {Number}       Formatted value to show\n\t     */\n\t    function formatDecimalValue(value) {\n\t        var size = getValueSize(value, decimalValueFormats);\n\t        var format = decimalValueFormats[size].format;\n\t\n\t        return format(value);\n\t    }\n\t\n\t    return {\n\t        formatDecimalValue: formatDecimalValue,\n\t        formatIntegerValue: formatIntegerValue\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Format = __webpack_require__(7);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t    var d3TimeFormat = __webpack_require__(12);\n\t\n\t    var _require = __webpack_require__(19),\n\t        axisTimeCombinations = _require.axisTimeCombinations;\n\t\n\t    var _require2 = __webpack_require__(30),\n\t        formatIntegerValue = _require2.formatIntegerValue,\n\t        formatDecimalValue = _require2.formatDecimalValue;\n\t\n\t    var _require3 = __webpack_require__(26),\n\t        isInteger = _require3.isInteger;\n\t\n\t    /**\n\t     * Tooltip Component reusable API class that renders a\n\t     * simple and configurable tooltip element for Britechart's\n\t     * line chart or stacked area chart.\n\t     *\n\t     * @module Tooltip\n\t     * @tutorial tooltip\n\t     * @requires d3-array, d3-axis, d3-dispatch, d3-format, d3-scale, d3-selection, d3-transition\n\t     *\n\t     * @example\n\t     * var lineChart = line(),\n\t     *     tooltip = tooltip();\n\t     *\n\t     * tooltip\n\t     *     .title('Tooltip title');\n\t     *\n\t     * lineChart\n\t     *     .width(500)\n\t     *     .on('customMouseOver', function() {\n\t     *          tooltip.show();\n\t     *     })\n\t     *     .on('customMouseMove', function(dataPoint, topicColorMap, dataPointXPosition) {\n\t     *          tooltip.update(dataPoint, topicColorMap, dataPointXPosition);\n\t     *     })\n\t     *     .on('customMouseOut', function() {\n\t     *          tooltip.hide();\n\t     *     });\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(lineChart);\n\t     *\n\t     * d3Selection.select('.metadata-group .hover-marker')\n\t     *     .datum([])\n\t     *     .call(tooltip);\n\t     *\n\t     */\n\t\n\t\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 2,\n\t            right: 2,\n\t            bottom: 2,\n\t            left: 2\n\t        },\n\t            width = 250,\n\t            height = 45,\n\t            title = 'Tooltip title',\n\t\n\t\n\t        // tooltip\n\t        tooltip = void 0,\n\t            tooltipOffset = {\n\t            y: -55,\n\t            x: 0\n\t        },\n\t            tooltipMaxTopicLength = 170,\n\t            tooltipTextContainer = void 0,\n\t            tooltipDivider = void 0,\n\t            tooltipBody = void 0,\n\t            tooltipTitle = void 0,\n\t            tooltipWidth = 250,\n\t            tooltipHeight = 48,\n\t            tooltipBorderRadius = 3,\n\t            ttTextX = 0,\n\t            ttTextY = 37,\n\t            textSize = void 0,\n\t            entryLineLimit = 3,\n\t\n\t\n\t        // Animations\n\t        mouseChaseDuration = 100,\n\t            ease = d3Ease.easeQuadInOut,\n\t            circleYOffset = 8,\n\t            colorMap = void 0,\n\t            bodyFillColor = '#FFFFFF',\n\t            borderStrokeColor = '#D2D6DF',\n\t            titleFillColor = '#6D717A',\n\t            textFillColor = '#282C35',\n\t            tooltipTextColor = '#000000',\n\t            dateLabel = 'date',\n\t            valueLabel = 'value',\n\t            nameLabel = 'name',\n\t            topicLabel = 'topics',\n\t            defaultAxisSettings = axisTimeCombinations.DAY_MONTH,\n\t            forceAxisSettings = null,\n\t            forceOrder = [],\n\t\n\t\n\t        // formats\n\t        monthDayYearFormat = d3TimeFormat.timeFormat('%b %d, %Y'),\n\t            monthDayHourFormat = d3TimeFormat.timeFormat('%b %d, %I %p'),\n\t            locale = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            data = void 0,\n\t            svg = void 0;\n\t\n\t        /**\n\t         * This function creates the graph using the selection as container\n\t         * @param {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {Object} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = _data;\n\t\n\t                buildSVG(this);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the tooltip\n\t         * Also applies the Margin convention\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('tooltip-container-group', true).attr('transform', 'translate( ' + margin.left + ', ' + margin.top + ')');\n\t\n\t            container.append('g').classed('tooltip-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('g').classed('britechart britechart-tooltip', true);\n\t\n\t                buildContainerGroups();\n\t                drawTooltip();\n\t            }\n\t            svg.transition().attr('width', width).attr('height', height);\n\t\n\t            // Hidden by default\n\t            exports.hide();\n\t        }\n\t\n\t        /**\n\t         * Resets the tooltipBody content\n\t         * @return void\n\t         */\n\t        function cleanContent() {\n\t            tooltipBody.selectAll('text').remove();\n\t            tooltipBody.selectAll('circle').remove();\n\t        }\n\t\n\t        /**\n\t         * Draws the different elements of the Tooltip box\n\t         * @return void\n\t         */\n\t        function drawTooltip() {\n\t            tooltipTextContainer = svg.selectAll('.tooltip-group').append('g').classed('tooltip-text', true);\n\t\n\t            tooltip = tooltipTextContainer.append('rect').classed('tooltip-text-container', true).attr('x', -tooltipWidth / 4 + 8).attr('y', 0).attr('width', tooltipWidth).attr('height', tooltipHeight).attr('rx', tooltipBorderRadius).attr('ry', tooltipBorderRadius).style('fill', bodyFillColor).style('stroke', borderStrokeColor).style('stroke-width', 1);\n\t\n\t            tooltipTitle = tooltipTextContainer.append('text').classed('tooltip-title', true).attr('x', -tooltipWidth / 4 + 17).attr('dy', '.35em').attr('y', 16).style('fill', titleFillColor);\n\t\n\t            tooltipDivider = tooltipTextContainer.append('line').classed('tooltip-divider', true).attr('x1', -tooltipWidth / 4 + 15).attr('x2', 265).attr('y1', 31).attr('y2', 31).style('stroke', borderStrokeColor);\n\t\n\t            tooltipBody = tooltipTextContainer.append('g').classed('tooltip-body', true).style('transform', 'translateY(8px)').style('fill', textFillColor);\n\t        }\n\t\n\t        /**\n\t         * Formats the value depending on its characteristics\n\t         * @param  {Number} value Value to format\n\t         * @return {Number}       Formatted value\n\t         */\n\t        function getFormattedValue(value) {\n\t            if (!value) {\n\t                return 0;\n\t            }\n\t\n\t            if (isInteger(value)) {\n\t                value = formatIntegerValue(value);\n\t            } else {\n\t                value = formatDecimalValue(value);\n\t            }\n\t\n\t            return value;\n\t        }\n\t\n\t        /**\n\t         * Calculates the desired position for the tooltip\n\t         * @param  {Number} mouseX             Current horizontal mouse position\n\t         * @param  {Number} mouseY             Current vertical mouse position\n\t         * @return {Number[]}                  X and Y position\n\t         */\n\t        function getTooltipPosition(_ref) {\n\t            var _ref2 = _slicedToArray(_ref, 2),\n\t                mouseX = _ref2[0],\n\t                mouseY = _ref2[1];\n\t\n\t            var tooltipX = void 0,\n\t                tooltipY = void 0;\n\t\n\t            // show tooltip to the right\n\t            if (mouseX - tooltipWidth < 0) {\n\t                // Tooltip on the right\n\t                tooltipX = tooltipWidth - 185;\n\t            } else {\n\t                // Tooltip on the left\n\t                tooltipX = -205;\n\t            }\n\t\n\t            if (mouseY) {\n\t                tooltipY = tooltipOffset.y;\n\t                // tooltipY = mouseY + tooltipOffset.y;\n\t            } else {\n\t                tooltipY = tooltipOffset.y;\n\t            }\n\t\n\t            return [tooltipX, tooltipY];\n\t        }\n\t\n\t        /**\n\t         * Extracts the value from the data object\n\t         * @param  {Object} data Data value containing the info\n\t         * @return {String}      Value to show\n\t         */\n\t        function getValueText(data) {\n\t            var value = data[valueLabel];\n\t            var valueText = void 0;\n\t\n\t            if (data.missingValue) {\n\t                valueText = '-';\n\t            } else {\n\t                valueText = getFormattedValue(value).toString();\n\t            }\n\t\n\t            return valueText;\n\t        }\n\t\n\t        /**\n\t         * Resets the height of the tooltip and the pointer for the text\n\t         * position\n\t         */\n\t        function resetSizeAndPositionPointers() {\n\t            tooltipHeight = 48;\n\t            ttTextY = 37;\n\t            ttTextX = 0;\n\t        }\n\t\n\t        /**\n\t         * Draws the data entries inside the tooltip for a given topic\n\t         * @param  {Object} topic Topic to extract data from\n\t         * @return void\n\t         */\n\t        function updateTopicContent(topic) {\n\t            var name = topic[nameLabel],\n\t                tooltipRight = void 0,\n\t                tooltipLeftText = void 0,\n\t                tooltipRightText = void 0,\n\t                elementText = void 0;\n\t\n\t            tooltipLeftText = topic.topicName || name;\n\t            tooltipRightText = getValueText(topic);\n\t\n\t            elementText = tooltipBody.append('text').classed('tooltip-left-text', true).attr('dy', '1em').attr('x', ttTextX - 20).attr('y', ttTextY).style('fill', tooltipTextColor).text(tooltipLeftText).call(textWrap, tooltipMaxTopicLength, -25);\n\t\n\t            tooltipRight = tooltipBody.append('text').classed('tooltip-right-text', true).attr('dy', '1em').attr('x', ttTextX + 8).attr('y', ttTextY).style('fill', tooltipTextColor).text(tooltipRightText);\n\t\n\t            textSize = elementText.node().getBBox();\n\t            tooltipHeight += textSize.height + 5;\n\t\n\t            // Not sure if necessary\n\t            tooltipRight.attr('x', tooltipWidth - tooltipRight.node().getBBox().width - 10 - tooltipWidth / 4);\n\t\n\t            tooltipBody.append('circle').classed('tooltip-circle', true).attr('cx', 23 - tooltipWidth / 4).attr('cy', ttTextY + circleYOffset).attr('r', 5).style('fill', colorMap[name]).style('stroke-width', 1);\n\t\n\t            ttTextY += textSize.height + 7;\n\t        }\n\t\n\t        /**\n\t         * Updates size and position of tooltip depending on the side of the chart we are in\n\t         * TODO: This needs a refactor, following the mini-tooltip code.\n\t         *\n\t         * @param  {Object} dataPoint DataPoint of the tooltip\n\t         * @param  {Number} xPosition DataPoint's x position in the chart\n\t         * @param  {Number} xPosition DataPoint's y position in the chart\n\t         * @return void\n\t         */\n\t        function updatePositionAndSize(dataPoint, xPosition, yPosition) {\n\t            var _getTooltipPosition = getTooltipPosition([xPosition, yPosition]),\n\t                _getTooltipPosition2 = _slicedToArray(_getTooltipPosition, 2),\n\t                tooltipX = _getTooltipPosition2[0],\n\t                tooltipY = _getTooltipPosition2[1];\n\t\n\t            tooltip.attr('width', tooltipWidth).attr('height', tooltipHeight + 10);\n\t\n\t            tooltipTextContainer.transition().duration(mouseChaseDuration).ease(ease).attr('transform', 'translate(' + tooltipX + ', ' + tooltipY + ')');\n\t\n\t            tooltipDivider.attr('x2', tooltipWidth - 60);\n\t        }\n\t\n\t        /**\n\t         * Updates value of tooltipTitle with the data meaning and the date\n\t         * @param  {Object} dataPoint Point of data to use as source\n\t         * @return void\n\t         */\n\t        function updateTitle(dataPoint) {\n\t            var date = new Date(dataPoint[dateLabel]),\n\t                tooltipTitleText = title + ' - ' + formatDate(date);\n\t\n\t            tooltipTitle.text(tooltipTitleText);\n\t        }\n\t\n\t        /**\n\t         * Figures out which date format to use when showing the date of the current data entry\n\t         * @return {Function} The proper date formatting function\n\t         */\n\t        function formatDate(date) {\n\t            var settings = forceAxisSettings || defaultAxisSettings;\n\t            var format = null;\n\t            var localeOptions = { month: 'short', day: 'numeric' };\n\t\n\t            if (settings === axisTimeCombinations.DAY_MONTH || settings === axisTimeCombinations.MONTH_YEAR) {\n\t                format = monthDayYearFormat;\n\t                localeOptions.year = 'numeric';\n\t            } else if (settings === axisTimeCombinations.HOUR_DAY || settings === axisTimeCombinations.MINUTE_HOUR) {\n\t                format = monthDayHourFormat;\n\t                localeOptions.hour = 'numeric';\n\t            }\n\t\n\t            if (locale && typeof Intl !== 'undefined' && (typeof Intl === 'undefined' ? 'undefined' : _typeof(Intl)) === 'object' && Intl.DateTimeFormat) {\n\t                var f = Intl.DateTimeFormat(locale, localeOptions);\n\t\n\t                return f.format(date);\n\t            }\n\t\n\t            return format(date);\n\t        }\n\t\n\t        /**\n\t         * Helper method to sort the passed topics array by the names passed int he order arary\n\t         * @param  {Object[]} topics    Topics data, retrieved from datapoint passed by line chart\n\t         * @param  {Object[]} order     Array of names in the order to sort topics by\n\t         * @return {Object[]}           sorted topics object\n\t         */\n\t        function _sortByForceOrder(topics) {\n\t            var order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : forceOrder;\n\t\n\t            return forceOrder.map(function (orderName) {\n\t                return topics.filter(function (_ref3) {\n\t                    var name = _ref3.name;\n\t                    return name === orderName;\n\t                })[0];\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Sorts topic by alphabetical order for arrays of objects with a name proeprty\n\t         * @param  {Array} topics   List of topic objects\n\t         * @return {Array}          List of topic name strings\n\t         */\n\t        function _sortByAlpha(topics) {\n\t            return topics.map(function (d) {\n\t                return d;\n\t            }).sort(function (a, b) {\n\t                if (a.name > b.name) return 1;\n\t                if (a.name === b.name) return 0;\n\t                return -1;\n\t            });\n\t\n\t            var otherIndex = topics.map(function (_ref4) {\n\t                var name = _ref4.name;\n\t                return name;\n\t            }).indexOf('Other');\n\t\n\t            if (otherIndex >= 0) {\n\t                var other = topics.splice(otherIndex, 1);\n\t\n\t                topics = topics.concat(other);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Wraps a text given the text, width, x position and textFormatter function\n\t         * @param  {D3Selection} text  Selection with the text to wrap inside\n\t         * @param  {Number} width Desired max width for that line\n\t         * @param  {Number} xpos  Initial x position of the text\n\t         *\n\t         * REF: http://bl.ocks.org/mbostock/7555321\n\t         * More discussions on https://github.com/mbostock/d3/issues/1642\n\t         */\n\t        function textWrap(text, width, xpos) {\n\t            xpos = xpos || 0;\n\t\n\t            text.each(function () {\n\t                var words, word, line, lineNumber, lineHeight, y, dy, tspan;\n\t\n\t                text = d3Selection.select(this);\n\t\n\t                words = text.text().split(/\\s+/).reverse();\n\t                line = [];\n\t                lineNumber = 0;\n\t                lineHeight = 1.2;\n\t                y = text.attr('y');\n\t                dy = parseFloat(text.attr('dy'));\n\t                tspan = text.text(null).append('tspan').attr('x', xpos).attr('y', y).attr('dy', dy + 'em');\n\t\n\t                while (word = words.pop()) {\n\t                    line.push(word);\n\t                    tspan.text(line.join(' '));\n\t\n\t                    if (tspan.node().getComputedTextLength() > width) {\n\t                        line.pop();\n\t                        tspan.text(line.join(' '));\n\t\n\t                        if (lineNumber < entryLineLimit - 1) {\n\t                            line = [word];\n\t                            tspan = text.append('tspan').attr('x', xpos).attr('y', y).attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws the data entries inside the tooltip\n\t         * @param  {Object} dataPoint   Data entry from to take the info\n\t         * @return void\n\t         */\n\t        function updateContent(dataPoint) {\n\t            var topics = dataPoint[topicLabel];\n\t\n\t            // sort order by forceOrder array if passed\n\t            if (forceOrder.length) {\n\t                topics = _sortByForceOrder(topics);\n\t            } else if (topics.length && topics[0].name) {\n\t                topics = _sortByAlpha(topics);\n\t            }\n\t\n\t            cleanContent();\n\t            updateTitle(dataPoint);\n\t            resetSizeAndPositionPointers();\n\t            topics.forEach(updateTopicContent);\n\t        }\n\t\n\t        /**\n\t         * Updates tooltip title, content, size and position\n\t         * sorts by alphatical name order if not forced order given\n\t         *\n\t         * @param  {lineChartPointByDate} dataPoint  Current datapoint to show info about\n\t         * @param  {Number} xPosition           Position of the mouse on the X axis\n\t         * @return void\n\t         */\n\t        function updateTooltip(dataPoint, xPosition, yPosition) {\n\t            updateContent(dataPoint);\n\t            updatePositionAndSize(dataPoint, xPosition, yPosition);\n\t        }\n\t\n\t        // API\n\t        /**\n\t        * Gets or Sets the nameLabel of the data\n\t        * @param  {Number} _x Desired nameLabel\n\t        * @return { nameLabel | module} Current nameLabel or Chart module to chain calls\n\t        * @public\n\t        */\n\t        exports.nameLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return nameLabel;\n\t            }\n\t            nameLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the dateLabel of the data\n\t         * @param  {Number} _x Desired dateLabel\n\t         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.dateLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return dateLabel;\n\t            }\n\t            dateLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabel of the data\n\t         * @param  {Number} _x Desired valueLabel\n\t         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabel;\n\t            }\n\t            valueLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the topicLabel of the data\n\t         * @param  {Number} _x Desired topicLabel\n\t         * @return { topicLabel | module} Current topicLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.topicLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return topicLabel;\n\t            }\n\t            topicLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Hides the tooltip\n\t         * @return {Module} Tooltip module to chain calls\n\t         * @public\n\t         */\n\t        exports.hide = function () {\n\t            svg.style('display', 'none');\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Shows the tooltip\n\t         * @return {Module} Tooltip module to chain calls\n\t         * @public\n\t         */\n\t        exports.show = function () {\n\t            svg.style('display', 'block');\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the title of the tooltip\n\t         * @param  {string} _x Desired title\n\t         * @return { string | module} Current title or module to chain calls\n\t         * @public\n\t         */\n\t        exports.title = function (_x) {\n\t            if (!arguments.length) {\n\t                return title;\n\t            }\n\t            title = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Pass an override for the ordering of your tooltip\n\t         * @param  {Object[]} _x    Array of the names of your tooltip items\n\t         * @return { overrideOrder | module} Current overrideOrder or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.forceOrder = function (_x) {\n\t            if (!arguments.length) {\n\t                return forceOrder;\n\t            }\n\t            forceOrder = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Updates the position and content of the tooltip\n\t         * @param  {Object} dataPoint    Datapoint to represent\n\t         * @param  {Object} colorMapping Color scheme of the topics\n\t         * @param  {Number} position     X-scale position in pixels\n\t         * @return {Module} Tooltip module to chain calls\n\t         * @public\n\t         */\n\t        exports.update = function (dataPoint, colorMapping, xPosition) {\n\t            var yPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\t\n\t            colorMap = colorMapping;\n\t            updateTooltip(dataPoint, xPosition, yPosition);\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the tooltip to use a certain date format\n\t         * @param  {String} _x Desired format\n\t         * @return { (String|Module) }    Current format or module to chain calls\n\t         */\n\t        exports.forceDateRange = function (_x) {\n\t            if (!arguments.length) {\n\t                return forceAxisSettings || defaultAxisSettings;\n\t            }\n\t            forceAxisSettings = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Pass locale for the tooltip to render the date in\n\t         * @param  {String} _x  must be a locale tag like 'en-US' or 'fr-FR'\n\t         * @return { (String|Module) }    Current locale or module to chain calls\n\t         */\n\t        exports.locale = function (_x) {\n\t            if (!arguments.length) {\n\t                return locale;\n\t            }\n\t            locale = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * constants to be used to force the x axis to respect a certain granularity\n\t         * current options: HOUR_DAY, DAY_MONTH, MONTH_YEAR\n\t         * @example tooltip.forceDateRange(tooltip.axisTimeCombinations.HOUR_DAY)\n\t         */\n\t        exports.axisTimeCombinations = axisTimeCombinations;\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Format = __webpack_require__(7);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t\n\t    /**\n\t     * Mini Tooltip Component reusable API class that renders a\n\t     * simple and configurable tooltip element for Britechart's\n\t     * bar and step chart.\n\t     *\n\t     * @module Mini-tooltip\n\t     * @tutorial bar\n\t     * @requires d3\n\t     *\n\t     * @example\n\t     * var barChart = line(),\n\t     *     miniTooltip = miniTooltip();\n\t     *\n\t     * barChart\n\t     *     .width(500)\n\t     *     .height(300)\n\t     *     .on('customMouseHover', miniTooltip.show)\n\t     *     .on('customMouseMove', miniTooltip.update)\n\t     *     .on('customMouseOut', miniTooltip.hide);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(barChart);\n\t     *\n\t     * d3Selection.select('.metadata-group .mini-tooltip-container')\n\t     *     .datum([])\n\t     *     .call(miniTooltip);\n\t     *\n\t     */\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 12,\n\t            right: 12,\n\t            bottom: 12,\n\t            left: 12\n\t        },\n\t            width = 100,\n\t            height = 100,\n\t\n\t\n\t        // Optional Title\n\t        title = '',\n\t\n\t\n\t        // Data Format\n\t        valueLabel = 'value',\n\t            nameLabel = 'name',\n\t\n\t\n\t        // Animations\n\t        mouseChaseDuration = 100,\n\t            ease = d3Ease.easeQuadInOut,\n\t\n\t\n\t        // tooltip\n\t        tooltipBackground = void 0,\n\t            backgroundBorderRadius = 1,\n\t            tooltipTextContainer = void 0,\n\t            tooltipOffset = {\n\t            y: 0,\n\t            x: 20\n\t        },\n\t\n\t\n\t        // Fonts\n\t        textSize = 14,\n\t            textLineHeight = 1.5,\n\t            valueTextSize = 27,\n\t            valueTextLineHeight = 1.18,\n\t\n\t\n\t        // Colors\n\t        bodyFillColor = '#FFFFFF',\n\t            borderStrokeColor = '#D2D6DF',\n\t            titleFillColor = '#666a73',\n\t            nameTextFillColor = '#666a73',\n\t            valueTextFillColor = '#45494E',\n\t            valueTextWeight = 200,\n\t\n\t\n\t        // formats\n\t        tooltipValueFormat = d3Format.format('.2f'),\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            svg = void 0;\n\t\n\t        /**\n\t         * This function creates the graph using the selection as container\n\t         * @param {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {Array} _data The data to attach and generate the chart (usually an empty array)\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t\n\t                buildSVG(this);\n\t                drawTooltip();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the tooltip\n\t         * Also applies the Margin convention\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('tooltip-container-group', true).attr('transform', 'translate( ' + margin.left + ', ' + margin.top + ')');\n\t\n\t            container.append('g').classed('tooltip-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('g').classed('britechart britechart-mini-tooltip', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t            svg.transition().attr('width', width).attr('height', height);\n\t\n\t            // Hidden by default\n\t            exports.hide();\n\t        }\n\t\n\t        /**\n\t         * Draws the different elements of the Tooltip box\n\t         * @return void\n\t         */\n\t        function drawTooltip() {\n\t            tooltipTextContainer = svg.selectAll('.tooltip-group').append('g').classed('tooltip-text', true);\n\t\n\t            tooltipBackground = tooltipTextContainer.append('rect').classed('tooltip-background', true).attr('width', width).attr('height', height).attr('rx', backgroundBorderRadius).attr('ry', backgroundBorderRadius).attr('y', -margin.top).attr('x', -margin.left).style('fill', bodyFillColor).style('stroke', borderStrokeColor).style('stroke-width', 1).style('pointer-events', 'none').style('opacity', 0.9);\n\t        }\n\t\n\t        /**\n\t         * Figures out the max length of the tooltip lines\n\t         * @param  {D3Selection[]} texts    List of svg elements of each line\n\t         * @return {Number}                 Max size of the lines\n\t         */\n\t        function getMaxLengthLine() {\n\t            for (var _len = arguments.length, texts = Array(_len), _key = 0; _key < _len; _key++) {\n\t                texts[_key] = arguments[_key];\n\t            }\n\t\n\t            var textSizes = texts.filter(function (x) {\n\t                return !!x;\n\t            }).map(function (x) {\n\t                return x.node().getBBox().width;\n\t            });\n\t\n\t            return d3Array.max(textSizes);\n\t        }\n\t\n\t        /**\n\t         * Calculates the desired position for the tooltip\n\t         * @param  {Number} mouseX             Current horizontal mouse position\n\t         * @param  {Number} mouseY             Current vertical mouse position\n\t         * @param  {Number} parentChartWidth   Parent's chart width\n\t         * @param  {Number} parentChartHeight  Parent's chart height\n\t         * @return {Number[]}                  X and Y position\n\t         * @private\n\t         */\n\t        function getTooltipPosition(_ref, _ref2) {\n\t            var _ref4 = _slicedToArray(_ref, 2),\n\t                mouseX = _ref4[0],\n\t                mouseY = _ref4[1];\n\t\n\t            var _ref3 = _slicedToArray(_ref2, 2),\n\t                parentChartWidth = _ref3[0],\n\t                parentChartHeight = _ref3[1];\n\t\n\t            var tooltipX = void 0,\n\t                tooltipY = void 0;\n\t\n\t            if (hasEnoughHorizontalRoom(parentChartWidth, mouseX)) {\n\t                tooltipX = mouseX + tooltipOffset.x;\n\t            } else {\n\t                tooltipX = mouseX - chartWidth - tooltipOffset.x - margin.right;\n\t            }\n\t\n\t            if (hasEnoughVerticalRoom(parentChartHeight, mouseY)) {\n\t                tooltipY = mouseY + tooltipOffset.y;\n\t            } else {\n\t                tooltipY = mouseY - chartHeight - tooltipOffset.y - margin.bottom;\n\t            }\n\t\n\t            return [tooltipX, tooltipY];\n\t        }\n\t\n\t        /**\n\t         * Checks if the mouse is over the bounds of the parent chart\n\t         * @param  {Number}  chartWidth Parent's chart\n\t         * @param  {Number}  positionX  Mouse position\n\t         * @return {Boolean}            If the mouse position allows space for the tooltip\n\t         */\n\t        function hasEnoughHorizontalRoom(parentChartWidth, positionX) {\n\t            return parentChartWidth - margin.left - margin.right - chartWidth - positionX > 0;\n\t        }\n\t\n\t        /**\n\t         * Checks if the mouse is over the bounds of the parent chart\n\t         * @param  {Number}  chartWidth Parent's chart\n\t         * @param  {Number}  positionX  Mouse position\n\t         * @return {Boolean}            If the mouse position allows space for the tooltip\n\t         */\n\t        function hasEnoughVerticalRoom(parentChartHeight, positionY) {\n\t            return parentChartHeight - margin.top - margin.bottom - chartHeight - positionY > 0;\n\t        }\n\t\n\t        /**\n\t         * Hides the tooltip\n\t         * @return {void}\n\t         */\n\t        function hideTooltip() {\n\t            svg.style('display', 'none');\n\t        }\n\t\n\t        /**\n\t         * Shows the tooltip updating it's content\n\t         * @param  {Object} dataPoint Data point from the chart\n\t         * @return {void}\n\t         */\n\t        function showTooltip(dataPoint) {\n\t            updateContent(dataPoint);\n\t            svg.style('display', 'block');\n\t        }\n\t\n\t        /**\n\t         * Draws the data entries inside the tooltip for a given topic\n\t         * @param  {Object} topic Topic to extract data from\n\t         * @return void\n\t         */\n\t        function updateContent() {\n\t            var dataPoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t            var value = dataPoint[valueLabel] || '',\n\t                name = dataPoint[nameLabel] || '',\n\t                lineHeight = textSize * textLineHeight,\n\t                valueLineHeight = valueTextSize * valueTextLineHeight,\n\t                defaultDy = '1em',\n\t                temporalHeight = 0,\n\t                tooltipValue = void 0,\n\t                tooltipName = void 0,\n\t                tooltipTitle = void 0;\n\t\n\t            tooltipTextContainer.selectAll('text').remove();\n\t\n\t            if (title) {\n\t                tooltipTitle = tooltipTextContainer.append('text').classed('mini-tooltip-title', true).attr('dy', defaultDy).attr('y', 0).style('fill', titleFillColor).style('font-size', textSize).text(title);\n\t\n\t                temporalHeight = lineHeight + temporalHeight;\n\t            }\n\t\n\t            if (name) {\n\t                tooltipName = tooltipTextContainer.append('text').classed('mini-tooltip-name', true).attr('dy', defaultDy).attr('y', temporalHeight || 0).style('fill', nameTextFillColor).style('font-size', textSize).text(name);\n\t\n\t                temporalHeight = lineHeight + temporalHeight;\n\t            }\n\t\n\t            if (value) {\n\t                tooltipValue = tooltipTextContainer.append('text').classed('mini-tooltip-value', true).attr('dy', defaultDy).attr('y', temporalHeight || 0).style('fill', valueTextFillColor).style('font-size', valueTextSize).style('font-weight', valueTextWeight).text(tooltipValueFormat(value));\n\t\n\t                temporalHeight = valueLineHeight + temporalHeight;\n\t            }\n\t\n\t            chartWidth = getMaxLengthLine(tooltipName, tooltipTitle, tooltipValue);\n\t            chartHeight = temporalHeight;\n\t        }\n\t\n\t        /**\n\t         * Updates size and position of tooltip depending on the side of the chart we are in\n\t         * @param  {Object} dataPoint DataPoint of the tooltip\n\t         * @return void\n\t         */\n\t        function updatePositionAndSize(mousePosition, parentChartSize) {\n\t            var _getTooltipPosition = getTooltipPosition(mousePosition, parentChartSize),\n\t                _getTooltipPosition2 = _slicedToArray(_getTooltipPosition, 2),\n\t                tooltipX = _getTooltipPosition2[0],\n\t                tooltipY = _getTooltipPosition2[1];\n\t\n\t            svg.transition().duration(mouseChaseDuration).ease(ease).attr('height', chartHeight + margin.top + margin.bottom).attr('width', chartWidth + margin.left + margin.right).attr('transform', 'translate(' + tooltipX + ',' + tooltipY + ')');\n\t\n\t            tooltipBackground.attr('height', chartHeight + margin.top + margin.bottom).attr('width', chartWidth + margin.left + margin.right);\n\t        }\n\t\n\t        /**\n\t         * Updates tooltip content, size and position\n\t         *\n\t         * @param  {Object} dataPoint Current datapoint to show info about\n\t         * @return void\n\t         */\n\t        function updateTooltip(dataPoint, position, chartSize) {\n\t            updateContent(dataPoint);\n\t            updatePositionAndSize(position, chartSize);\n\t        }\n\t\n\t        /**\n\t         * Hides the tooltip\n\t         * @return {Module} Tooltip module to chain calls\n\t         * @public\n\t         */\n\t        exports.hide = function () {\n\t            hideTooltip();\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets data's nameLabel\n\t         * @param  {text} _x Desired nameLabel\n\t         * @return { text | module} nameLabel or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.nameLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return nameLabel;\n\t            }\n\t            nameLabel = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Shows the tooltip\n\t         * @return {Module} Tooltip module to chain calls\n\t         * @public\n\t         */\n\t        exports.show = function () {\n\t            showTooltip();\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the title of the tooltip\n\t         * @param  {string} _x Desired title\n\t         * @return { string | module} Current title or module to chain calls\n\t         * @public\n\t         */\n\t        exports.title = function (_x) {\n\t            if (!arguments.length) {\n\t                return title;\n\t            }\n\t            title = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Updates the position and content of the tooltip\n\t         * @param  {Object} dataPoint       Datapoint of the hovered element\n\t         * @param  {Array} mousePosition    Mouse position relative to the parent chart [x, y]\n\t         * @param  {Array} chartSize        Parent chart size [x, y]\n\t         * @return {module}                 Current component\n\t         */\n\t        exports.update = function (dataPoint, mousePosition, chartSize) {\n\t            updateTooltip(dataPoint, mousePosition, chartSize);\n\t\n\t            return this;\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Shape = __webpack_require__(24);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t\n\t    var _require = __webpack_require__(17),\n\t        exportChart = _require.exportChart;\n\t\n\t    var colorHelper = __webpack_require__(18);\n\t\n\t    /**\n\t     * @typedef SparklineChartData\n\t     * @type {Object[]}\n\t     * @property {Number} value        Value of the group (required)\n\t     * @property {String} name         Name of the group (required)\n\t     *\n\t     * @example\n\t     * [\n\t     *     {\n\t     *         value: 1,\n\t     *         date: '2011-01-06T00:00:00Z'\n\t     *     },\n\t     *     {\n\t     *         value: 2,\n\t     *         date: '2011-01-07T00:00:00Z'\n\t     *     }\n\t     */\n\t\n\t    /**\n\t     * Sparkline Chart reusable API module that allows us\n\t     * rendering a sparkline configurable chart.\n\t     *\n\t     * @module Sparkline\n\t     * @tutorial sparkline\n\t     * @requires d3\n\t     *\n\t     * @example\n\t     * var sparkLineChart = sparkline();\n\t     *\n\t     * sparkLineChart\n\t     *     .width(200)\n\t     *     .height(100);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(sparkLineChart);\n\t     *\n\t     */\n\t    return function module() {\n\t\n\t        var margin = {\n\t            left: 5,\n\t            right: 5,\n\t            top: 5,\n\t            bottom: 5\n\t        },\n\t            width = 100,\n\t            height = 30,\n\t            xScale = void 0,\n\t            yScale = void 0,\n\t            areaGradient = ['#F5FDFF', '#F6FEFC'],\n\t            lineGradient = colorHelper.colorGradients.greenBlueGradient,\n\t            svg = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            data = void 0,\n\t            hasArea = true,\n\t            isAnimated = false,\n\t            clipDuration = 3000,\n\t            ease = d3Ease.easeQuadInOut,\n\t            line = void 0,\n\t            markerSize = 1.5,\n\t            valueLabel = 'value',\n\t            dateLabel = 'date',\n\t\n\t\n\t        // getters\n\t        getDate = function getDate(_ref) {\n\t            var date = _ref.date;\n\t            return date;\n\t        },\n\t            getValue = function getValue(_ref2) {\n\t            var value = _ref2.value;\n\t            return value;\n\t        };\n\t\n\t        /**\n\t         * This function creates the graph using the selection and data provided\n\t         *\n\t         * @param {D3Selection} _selection A d3 selection that represents\n\t         * the container(s) where the chart(s) will be rendered\n\t         * @param {SparklineChartData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = cleanData(_data);\n\t\n\t                buildScales();\n\t                buildSVG(this);\n\t                createGradients();\n\t                createMaskingClip();\n\t                drawLine();\n\t                drawArea();\n\t                drawEndMarker();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * NOTE: The order of drawing of this group elements is really important,\n\t         * as everything else will be drawn on top of them\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('metadata-group', true);\n\t        }\n\t\n\t        /**\n\t         * Creates the x, y and color scales of the chart\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t            xScale = d3Scale.scaleLinear().domain(d3Array.extent(data, getDate)).range([0, chartWidth]);\n\t\n\t            yScale = d3Scale.scaleLinear().domain(d3Array.extent(data, getValue)).range([chartHeight, 0]);\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart sparkline', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Cleaning data adding the proper format\n\t         * @param  {array} data Data\n\t         * @private\n\t         */\n\t        function cleanData(data) {\n\t            return data.map(function (d) {\n\t                d.date = new Date(d[dateLabel]);\n\t                d.value = +d[valueLabel];\n\t\n\t                return d;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates the gradient on the area below the line\n\t         * @return {void}\n\t         */\n\t        function createGradients() {\n\t            var metadataGroup = svg.select('.metadata-group');\n\t\n\t            metadataGroup.append('linearGradient').attr('id', 'sparkline-area-gradient').attr('gradientUnits', 'userSpaceOnUse').attr('x1', 0).attr('x2', xScale(data[data.length - 1].date)).attr('y1', 0).attr('y2', 0).selectAll('stop').data([{ offset: '0%', color: areaGradient[0] }, { offset: '100%', color: areaGradient[1] }]).enter().append('stop').attr('offset', function (_ref3) {\n\t                var offset = _ref3.offset;\n\t                return offset;\n\t            }).attr('stop-color', function (_ref4) {\n\t                var color = _ref4.color;\n\t                return color;\n\t            });\n\t\n\t            metadataGroup.append('linearGradient').attr('id', 'sparkline-line-gradient').attr('gradientUnits', 'userSpaceOnUse').attr('x1', 0).attr('x2', xScale(data[data.length - 1].date)).attr('y1', 0).attr('y2', 0).selectAll('stop').data([{ offset: '0%', color: lineGradient[0] }, { offset: '100%', color: lineGradient[1] }]).enter().append('stop').attr('offset', function (_ref5) {\n\t                var offset = _ref5.offset;\n\t                return offset;\n\t            }).attr('stop-color', function (_ref6) {\n\t                var color = _ref6.color;\n\t                return color;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates a masking clip that would help us fake an animation if the\n\t         * proper flag is true\n\t         *\n\t         * @return {void}\n\t         */\n\t        function createMaskingClip() {\n\t            if (isAnimated) {\n\t                svg.select('.metadata-group').append('clipPath').attr('id', 'maskingClip').append('rect').attr('width', 0).attr('height', height);\n\t\n\t                d3Selection.select('#maskingClip rect').transition().ease(ease).duration(clipDuration).attr('width', width);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the area that will be placed below the line\n\t         * @private\n\t         */\n\t        function drawArea() {\n\t            var area = d3Shape.area().x(function (_ref7) {\n\t                var date = _ref7.date;\n\t                return xScale(date);\n\t            }).y0(function () {\n\t                return yScale(0);\n\t            }).y1(function (_ref8) {\n\t                var value = _ref8.value;\n\t                return yScale(value);\n\t            }).curve(d3Shape.curveBasis);\n\t\n\t            svg.select('.chart-group').append('path').datum(data).attr('class', 'sparkline-area').attr('d', area).attr('clip-path', 'url(#maskingClip)');\n\t        }\n\t\n\t        /**\n\t         * Draws the line element within the chart group\n\t         * @private\n\t         */\n\t        function drawLine() {\n\t            line = d3Shape.line().curve(d3Shape.curveBasis).x(function (_ref9) {\n\t                var date = _ref9.date;\n\t                return xScale(date);\n\t            }).y(function (_ref10) {\n\t                var value = _ref10.value;\n\t                return yScale(value);\n\t            });\n\t\n\t            svg.select('.chart-group').append('path').datum(data).attr('class', 'line').attr('d', line).attr('clip-path', 'url(#maskingClip)');\n\t        }\n\t\n\t        /**\n\t         * Draws a marker at the end of the sparkline\n\t         */\n\t        function drawEndMarker() {\n\t            svg.selectAll('.chart-group').append('circle').attr('class', 'sparkline-circle').attr('cx', xScale(data[data.length - 1].date)).attr('cy', yScale(data[data.length - 1].value)).attr('r', markerSize);\n\t        }\n\t\n\t        // Accessors\n\t        /**\n\t         * Gets or Sets the dateLabel of the chart\n\t         * @param  {Number} _x Desired dateLabel for the graph\n\t         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.dateLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return dateLabel;\n\t            }\n\t            dateLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the duration of the animation\n\t         * @param  {Number} _x Desired animation duration for the graph\n\t         * @return { dateLabel | module} Current animation duration or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.duration = function (_x) {\n\t            if (!arguments.length) {\n\t                return clipDuration;\n\t            }\n\t            clipDuration = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the areaGradient of the chart\n\t         * @param  {String[]} _x Desired areaGradient for the graph\n\t         * @return { areaGradient | module} Current areaGradient or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.areaGradient = function (_x) {\n\t            if (!arguments.length) {\n\t                return areaGradient;\n\t            }\n\t            areaGradient = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the lineGradient of the chart\n\t         * @param  {String[]} _x Desired lineGradient for the graph\n\t         * @return { lineGradient | module} Current lineGradient or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.lineGradient = function (_x) {\n\t            if (!arguments.length) {\n\t                return lineGradient;\n\t            }\n\t            lineGradient = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            height = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n\t         * By default this is 'false'\n\t         *\n\t         * @param  {Boolean} _x Desired animation flag\n\t         * @return { isAnimated | module} Current isAnimated flag or Chart module\n\t         * @public\n\t         */\n\t        exports.isAnimated = function (_x) {\n\t            if (!arguments.length) {\n\t                return isAnimated;\n\t            }\n\t            isAnimated = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { margin | module} Current margin or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { width | module} Current width or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            width = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabel of the chart\n\t         * @param  {Number} _x Desired valueLabel for the graph\n\t         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabel;\n\t            }\n\t            valueLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename, title) {\n\t            exportChart.call(exports, svg, filename, title);\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Axis = __webpack_require__(4);\n\t    var d3Collection = __webpack_require__(9);\n\t    var d3Dispatch = __webpack_require__(6);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Shape = __webpack_require__(24);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t    var d3TimeFormat = __webpack_require__(12);\n\t\n\t    var assign = __webpack_require__(35);\n\t\n\t    var _require = __webpack_require__(17),\n\t        exportChart = _require.exportChart;\n\t\n\t    var colorHelper = __webpack_require__(18);\n\t\n\t    var _require2 = __webpack_require__(29),\n\t        getXAxisSettings = _require2.getXAxisSettings,\n\t        getLocaleDateFormatter = _require2.getLocaleDateFormatter;\n\t\n\t    var _require3 = __webpack_require__(26),\n\t        isInteger = _require3.isInteger;\n\t\n\t    var _require4 = __webpack_require__(19),\n\t        axisTimeCombinations = _require4.axisTimeCombinations;\n\t\n\t    var _require5 = __webpack_require__(30),\n\t        formatIntegerValue = _require5.formatIntegerValue,\n\t        formatDecimalValue = _require5.formatDecimalValue;\n\t\n\t    var uniq = function uniq(arrArg) {\n\t        return arrArg.filter(function (elem, pos, arr) {\n\t            return arr.indexOf(elem) === pos;\n\t        });\n\t    };\n\t\n\t    /**\n\t     * @typdef D3Layout\n\t     * @type function\n\t     */\n\t\n\t    /**\n\t     * @typedef areaChartData\n\t     * @type {Object}\n\t     * @property {Object[]} data       All data entries\n\t     * @property {String} date         Date of the entry\n\t     * @property {String} name         Name of the entry\n\t     * @property {Number} value        Value of the entry\n\t     *\n\t     * @example\n\t     * {\n\t     *     'data': [\n\t     *         {\n\t     *             \"date\": \"2011-01-05T00:00:00Z\",\n\t     *             \"name\": \"Direct\",\n\t     *             \"value\": 0\n\t     *         }\n\t     *     ]\n\t     * }\n\t     */\n\t\n\t    /**\n\t     * Stacked Area Chart reusable API module that allows us\n\t     * rendering a multi area and configurable chart.\n\t     *\n\t     * @module Stacked-area\n\t     * @tutorial stacked-area\n\t     * @requires d3-array, d3-axis, d3-collection, d3-ease, d3-scale, d3-shape, d3-selection, d3-time, d3-time-format\n\t     *\n\t     * @example\n\t     * let stackedArea = stackedArea();\n\t     *\n\t     * stackedArea\n\t     *     .width(containerWidth);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset.data)\n\t     *     .call(stackedArea);\n\t     *\n\t     */\n\t\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 70,\n\t            right: 30,\n\t            bottom: 60,\n\t            left: 70\n\t        },\n\t            width = 960,\n\t            height = 500,\n\t            xScale = void 0,\n\t            xAxis = void 0,\n\t            xMonthAxis = void 0,\n\t            yScale = void 0,\n\t            yAxis = void 0,\n\t            aspectRatio = null,\n\t            monthAxisPadding = 30,\n\t            verticalTicks = 5,\n\t            yTickTextYOffset = -8,\n\t            yTickTextXOffset = -20,\n\t            tickPadding = 5,\n\t            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\t            areaOpacity = 0.64,\n\t            categoryColorMap = void 0,\n\t            order = void 0,\n\t            forceAxisSettings = null,\n\t            forcedXTicks = null,\n\t            forcedXFormat = null,\n\t            locale = void 0,\n\t            baseLine = void 0,\n\t            layers = void 0,\n\t            layersInitial = void 0,\n\t            area = void 0,\n\t\n\t\n\t        // Area Animation\n\t        maxAreaNumber = 8,\n\t            areaAnimationDelayStep = 20,\n\t            areaAnimationDelays = d3Array.range(areaAnimationDelayStep, maxAreaNumber * areaAnimationDelayStep, areaAnimationDelayStep),\n\t            overlay = void 0,\n\t            verticalMarkerContainer = void 0,\n\t            verticalMarker = void 0,\n\t            epsilon = void 0,\n\t            dataPoints = {},\n\t            pointsSize = 1.5,\n\t            pointsColor = '#c0c6cc',\n\t            pointsBorderColor = '#ffffff',\n\t            isAnimated = false,\n\t            ease = d3Ease.easeQuadInOut,\n\t            areaAnimationDuration = 1000,\n\t            svg = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            data = void 0,\n\t            dataByDate = void 0,\n\t            dataByDateFormatted = void 0,\n\t            dataByDateZeroed = void 0,\n\t            verticalGridLines = void 0,\n\t            horizontalGridLines = void 0,\n\t            grid = null,\n\t            tooltipThreshold = 480,\n\t            xAxisPadding = {\n\t            top: 0,\n\t            left: 15,\n\t            bottom: 0,\n\t            right: 0\n\t        },\n\t            dateLabel = 'date',\n\t            valueLabel = 'value',\n\t            keyLabel = 'name',\n\t\n\t\n\t        // getters\n\t        getName = function getName(_ref) {\n\t            var name = _ref.name;\n\t            return name;\n\t        },\n\t            getDate = function getDate(_ref2) {\n\t            var date = _ref2.date;\n\t            return date;\n\t        },\n\t\n\t\n\t        // events\n\t        dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\t\n\t        /**\n\t          * This function creates the graph using the selection and data provided\n\t          * @param {D3Selection} _selection A d3 selection that represents\n\t          * the container(s) where the chart(s) will be rendered\n\t          * @param {areaChartData} _data The data to attach and generate the chart\n\t          */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = cleanData(_data);\n\t                dataByDate = getDataByDate(data);\n\t\n\t                buildLayers();\n\t                buildScales();\n\t                buildSVG(this);\n\t                buildAxis();\n\t                drawAxis();\n\t                drawStackedAreas();\n\t\n\t                if (shouldShowTooltip()) {\n\t                    drawHoverOverlay();\n\t                    drawVerticalMarker();\n\t                    addMouseEvents();\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Adds events to the container group if the environment is not mobile\n\t         * Adding: mouseover, mouseout and mousemove\n\t         */\n\t        function addMouseEvents() {\n\t            svg.on('mouseover', handleMouseOver).on('mouseout', handleMouseOut).on('mousemove', handleMouseMove);\n\t        }\n\t\n\t        /**\n\t         * Formats the value depending on its characteristics\n\t         * @param  {Number} value Value to format\n\t         * @return {Number}       Formatted value\n\t         */\n\t        function getFormattedValue(value) {\n\t            var format = void 0;\n\t\n\t            if (isInteger(value)) {\n\t                format = formatIntegerValue;\n\t            } else {\n\t                format = formatDecimalValue;\n\t            }\n\t\n\t            return format(value);\n\t        }\n\t\n\t        /**\n\t         * Creates the d3 x and y axis, setting orientations\n\t         * @private\n\t         */\n\t        function buildAxis() {\n\t            var dataSpan = yScale.domain()[1] - yScale.domain()[0];\n\t            var yTickNumber = dataSpan < verticalTicks - 1 ? dataSpan : verticalTicks;\n\t            var minor = void 0,\n\t                major = void 0;\n\t\n\t            if (forceAxisSettings === 'custom' && typeof forcedXFormat === 'string') {\n\t                minor = {\n\t                    tick: forcedXTicks,\n\t                    format: d3TimeFormat.timeFormat(forcedXFormat)\n\t                };\n\t                major = null;\n\t            } else {\n\t                var _getXAxisSettings = getXAxisSettings(dataByDate, width, forceAxisSettings, locale);\n\t\n\t                minor = _getXAxisSettings.minor;\n\t                major = _getXAxisSettings.major;\n\t\n\t\n\t                xMonthAxis = d3Axis.axisBottom(xScale).ticks(major.tick).tickSize(0, 0).tickFormat(major.format);\n\t            }\n\t\n\t            xAxis = d3Axis.axisBottom(xScale).ticks(minor.tick).tickSize(10, 0).tickPadding(tickPadding).tickFormat(minor.format);\n\t\n\t            yAxis = d3Axis.axisRight(yScale).ticks(yTickNumber).tickSize([0]).tickPadding(tickPadding).tickFormat(getFormattedValue);\n\t\n\t            drawGridLines(minor.tick, yTickNumber);\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * NOTE: The order of drawing of this group elements is really important,\n\t         * as everything else will be drawn on top of them\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container.append('g').classed('x-axis-group', true).append('g').classed('x axis', true);\n\t            container.selectAll('.x-axis-group').append('g').classed('month-axis', true);\n\t            container.append('g').classed('y-axis-group axis', true);\n\t            container.append('g').classed('grid-lines-group', true);\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('metadata-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds the stacked layers layout\n\t         * @return {D3Layout} Layout for drawing the chart\n\t         * @private\n\t         */\n\t        function buildLayers() {\n\t            dataByDateFormatted = dataByDate.map(function (d) {\n\t                return assign({}, d, d.values);\n\t            }).map(function (d) {\n\t                Object.keys(d).forEach(function (k) {\n\t                    var entry = d[k];\n\t\n\t                    if (entry && entry.name) {\n\t                        d[entry.name] = entry.value;\n\t                    }\n\t                });\n\t\n\t                return assign({}, d, {\n\t                    date: new Date(d['key'])\n\t                });\n\t            });\n\t\n\t            dataByDateZeroed = dataByDate.map(function (d) {\n\t                return assign({}, d, d.values);\n\t            }).map(function (d) {\n\t                Object.keys(d).forEach(function (k) {\n\t                    var entry = d[k];\n\t\n\t                    if (entry && entry.name) {\n\t                        d[entry.name] = 0;\n\t                    }\n\t                });\n\t\n\t                return assign({}, d, {\n\t                    date: new Date(d['key'])\n\t                });\n\t            });\n\t\n\t            var initialTotalsObject = uniq(data.map(function (_ref3) {\n\t                var name = _ref3.name;\n\t                return name;\n\t            })).reduce(function (memo, key) {\n\t                return assign({}, memo, _defineProperty({}, key, 0));\n\t            }, {});\n\t\n\t            var totals = data.reduce(function (memo, item) {\n\t                return assign({}, memo, _defineProperty({}, item.name, memo[item.name] += item.value));\n\t            }, initialTotalsObject);\n\t\n\t            order = formatOrder(totals);\n\t\n\t            var stack3 = d3Shape.stack().keys(order).order(d3Shape.stackOrderNone).offset(d3Shape.stackOffsetNone);\n\t\n\t            layersInitial = stack3(dataByDateZeroed);\n\t            layers = stack3(dataByDateFormatted);\n\t        }\n\t\n\t        /**\n\t         * Takes an object with all topics as keys and their aggregate totals as values,\n\t         * sorts them into a list by descending total value and\n\t         * moves \"Other\" to the end\n\t         * @param  {Object} totals  Keys of all the topics and their corresponding totals\n\t         * @return {Array}          List of topic names in aggregate order\n\t         */\n\t        function formatOrder(totals) {\n\t            var order = Object.keys(totals).sort(function (a, b) {\n\t                if (totals[a] > totals[b]) return -1;\n\t                if (totals[a] === totals[b]) return 0;\n\t                return 1;\n\t            });\n\t\n\t            var otherIndex = order.indexOf('Other');\n\t\n\t            if (otherIndex >= 0) {\n\t                var other = order.splice(otherIndex, 1);\n\t\n\t                order = order.concat(other);\n\t            }\n\t\n\t            return order;\n\t        }\n\t\n\t        /**\n\t         * Creates the x, y and color scales of the chart\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t            xScale = d3Scale.scaleTime().domain(d3Array.extent(dataByDate, function (_ref4) {\n\t                var date = _ref4.date;\n\t                return date;\n\t            })).rangeRound([0, chartWidth]);\n\t\n\t            yScale = d3Scale.scaleLinear().domain([0, getMaxValueByDate()]).rangeRound([chartHeight, 0]).nice();\n\t\n\t            categoryColorMap = order.reduce(function (memo, topic, index) {\n\t                return assign({}, memo, _defineProperty({}, topic, colorSchema[index]));\n\t            }, {});\n\t        }\n\t\n\t        /**\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart stacked-area', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Parses dates and values into JS Date objects and numbers\n\t         * @param  {obj} data Raw data from JSON file\n\t         * @return {obj}      Parsed data with values and dates\n\t         */\n\t        function cleanData(data) {\n\t            return data.map(function (d) {\n\t                d.date = new Date(d[dateLabel]), d.value = +d[valueLabel];\n\t\n\t                return d;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws the x and y axis on the svg object within their\n\t         * respective groups\n\t         * @private\n\t         */\n\t        function drawAxis() {\n\t            svg.select('.x-axis-group .axis.x').attr('transform', 'translate( 0, ' + chartHeight + ' )').call(xAxis);\n\t\n\t            if (forceAxisSettings !== 'custom') {\n\t                svg.select('.x-axis-group .month-axis').attr('transform', 'translate(0, ' + (chartHeight + monthAxisPadding) + ')').call(xMonthAxis);\n\t            }\n\t\n\t            svg.select('.y-axis-group.axis').attr('transform', 'translate( ' + -xAxisPadding.left + ', 0)').call(yAxis).call(adjustYTickLabels);\n\t\n\t            // Moving the YAxis tick labels to the right side\n\t            // d3Selection.selectAll('.y-axis-group .tick text')\n\t            //     .attr('transform', `translate( ${-chartWidth - yTickTextXOffset}, ${yTickTextYOffset})` );\n\t        }\n\t\n\t        /**\n\t         * Adjusts the position of the y axis' ticks\n\t         * @param  {D3Selection} selection Y axis group\n\t         * @return void\n\t         */\n\t        function adjustYTickLabels(selection) {\n\t            selection.selectAll('.tick text').attr('transform', 'translate(' + yTickTextXOffset + ', ' + yTickTextYOffset + ')');\n\t        }\n\t\n\t        /**\n\t         * Creates SVG dot elements for each data entry and draws them\n\t         * TODO: Plug\n\t         */\n\t        function drawDataReferencePoints() {\n\t            // Creates Dots on Data points\n\t            var points = svg.select('.chart-group').selectAll('.dots').data(layers).enter().append('g').attr('class', 'dots').attr('d', function (_ref5) {\n\t                var values = _ref5.values;\n\t                return area(values);\n\t            }).attr('clip-path', 'url(#clip)');\n\t\n\t            // Processes the points\n\t            // TODO: Optimize this code\n\t            points.selectAll('.dot').data(function (_ref6, index) {\n\t                var values = _ref6.values;\n\t                return values.map(function (point) {\n\t                    return { index: index, point: point };\n\t                });\n\t            }).enter().append('circle').attr('class', 'dot').attr('r', function () {\n\t                return pointsSize;\n\t            }).attr('fill', function () {\n\t                return pointsColor;\n\t            }).attr('stroke-width', '0').attr('stroke', pointsBorderColor).attr('transform', function (d) {\n\t                var point = d.point;\n\t\n\t                var key = xScale(point.date);\n\t\n\t                dataPoints[key] = dataPoints[key] || [];\n\t                dataPoints[key].push(d);\n\t\n\t                var date = point.date,\n\t                    y = point.y,\n\t                    y0 = point.y0;\n\t\n\t                return 'translate( ' + xScale(date) + ', ' + yScale(y + y0) + ' )';\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws grid lines on the background of the chart\n\t         * @return void\n\t         */\n\t        function drawGridLines(xTicks, yTicks) {\n\t            if (grid === 'horizontal' || grid === 'full') {\n\t                horizontalGridLines = svg.select('.grid-lines-group').selectAll('line.horizontal-grid-line').data(yScale.ticks(yTicks)).enter().append('line').attr('class', 'horizontal-grid-line').attr('x1', -xAxisPadding.left - 30).attr('x2', chartWidth).attr('y1', function (d) {\n\t                    return yScale(d);\n\t                }).attr('y2', function (d) {\n\t                    return yScale(d);\n\t                });\n\t            }\n\t\n\t            if (grid === 'vertical' || grid === 'full') {\n\t                verticalGridLines = svg.select('.grid-lines-group').selectAll('line.vertical-grid-line').data(xScale.ticks(xTicks)).enter().append('line').attr('class', 'vertical-grid-line').attr('y1', 0).attr('y2', chartHeight).attr('x1', function (d) {\n\t                    return xScale(d);\n\t                }).attr('x2', function (d) {\n\t                    return xScale(d);\n\t                });\n\t            }\n\t\n\t            //draw a horizontal line to extend x-axis till the edges\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-x-line').data([0]).enter().append('line').attr('class', 'extended-x-line').attr('x1', -xAxisPadding.left - 30).attr('x2', chartWidth).attr('y1', height - margin.bottom - margin.top).attr('y2', height - margin.bottom - margin.top);\n\t        }\n\t\n\t        /**\n\t         * Draws an overlay element over the graph\n\t         * @private\n\t         */\n\t        function drawHoverOverlay() {\n\t            overlay = svg.select('.metadata-group').append('rect').attr('class', 'overlay').attr('y1', 0).attr('y2', chartHeight).attr('height', chartHeight).attr('width', chartWidth).attr('fill', 'rgba(0,0,0,0)').style('display', 'none');\n\t        }\n\t\n\t        /**\n\t         * Draws the different areas into the chart-group element\n\t         * @private\n\t         */\n\t        function drawStackedAreas() {\n\t            var series = void 0;\n\t\n\t            area = d3Shape.area().curve(d3Shape.curveMonotoneX).x(function (_ref7) {\n\t                var data = _ref7.data;\n\t                return xScale(data.date);\n\t            }).y0(function (d) {\n\t                return yScale(d[0]);\n\t            }).y1(function (d) {\n\t                return yScale(d[1]);\n\t            });\n\t\n\t            if (isAnimated) {\n\t                series = svg.select('.chart-group').selectAll('.layer').data(layersInitial).enter().append('g').classed('layer-container', true);\n\t\n\t                series.append('path').attr('class', 'layer').attr('d', area).style('fill', function (_ref8) {\n\t                    var key = _ref8.key;\n\t                    return categoryColorMap[key];\n\t                });\n\t\n\t                // Update\n\t                svg.select('.chart-group').selectAll('.layer').data(layers).transition().delay(function (_, i) {\n\t                    return areaAnimationDelays[i];\n\t                }).duration(areaAnimationDuration).ease(ease).attr('d', area).style('opacity', areaOpacity).style('fill', function (_ref9) {\n\t                    var key = _ref9.key;\n\t                    return categoryColorMap[key];\n\t                });\n\t            } else {\n\t                series = svg.select('.chart-group').selectAll('.layer').data(layers).enter().append('g').classed('layer-container', true);\n\t\n\t                series.append('path').attr('class', 'layer').attr('d', area).style('fill', function (_ref10) {\n\t                    var key = _ref10.key;\n\t                    return categoryColorMap[key];\n\t                });\n\t\n\t                // Update\n\t                series.attr('d', area).style('opacity', areaOpacity).style('fill', function (_ref11) {\n\t                    var key = _ref11.key;\n\t                    return categoryColorMap[key];\n\t                });\n\t            }\n\t\n\t            // Exit\n\t            series.exit().transition().style('opacity', 0).remove();\n\t        }\n\t\n\t        /**\n\t         * Creates the vertical marker\n\t         * @return void\n\t         */\n\t        function drawVerticalMarker() {\n\t            verticalMarkerContainer = svg.select('.metadata-group').append('g').attr('class', 'vertical-marker-container').attr('transform', 'translate(9999, 0)');\n\t\n\t            verticalMarker = verticalMarkerContainer.selectAll('path').data([{\n\t                x1: 0,\n\t                y1: 0,\n\t                x2: 0,\n\t                y2: 0\n\t            }]).enter().append('line').classed('vertical-marker', true).attr('x1', 0).attr('y1', chartHeight).attr('x2', 0).attr('y2', 0);\n\t        }\n\t\n\t        /**\n\t         * Removes all the datapoints highlighter circles added to the marker container\n\t         * @return void\n\t         */\n\t        function eraseDataPointHighlights() {\n\t            verticalMarkerContainer.selectAll('.circle-container').remove();\n\t        }\n\t\n\t        /**\n\t         * Orders the data by date for consumption on the chart tooltip\n\t         * @param  {areaChartData} data    Chart data\n\t         * @return {Object[]}               Chart data ordered by date\n\t         * @private\n\t         */\n\t        function getDataByDate(data) {\n\t            return d3Collection.nest().key(getDate).entries(data.sort(function (a, b) {\n\t                return a.date - b.date;\n\t            })).map(function (d) {\n\t                return assign({}, d, {\n\t                    date: new Date(d.key)\n\t                });\n\t            });\n\t\n\t            // let b =  d3Collection.nest()\n\t            //                     .key(getDate).sortKeys(d3Array.ascending)\n\t            //                     .entries(data);\n\t        }\n\t\n\t        /**\n\t         * Computes the maximum sum of values for any date\n\t         *\n\t         * @return {Number} Max value\n\t         */\n\t        function getMaxValueByDate() {\n\t            var keys = uniq(data.map(function (o) {\n\t                return o.name;\n\t            }));\n\t            var maxValueByDate = d3Array.max(dataByDateFormatted, function (d) {\n\t                var vals = keys.map(function (key) {\n\t                    return d[key];\n\t                });\n\t\n\t                return d3Array.sum(vals);\n\t            });\n\t\n\t            return maxValueByDate;\n\t        }\n\t\n\t        /**\n\t         * Extract X position on the chart from a given mouse event\n\t         * @param  {obj} event D3 mouse event\n\t         * @return {Number}       Position on the x axis of the mouse\n\t         * @private\n\t         */\n\t        function getMouseXPosition(event) {\n\t            return d3Selection.mouse(event)[0];\n\t        }\n\t\n\t        /**\n\t         * Finds out the data entry that is closer to the given position on pixels\n\t         * @param  {Number} mouseX X position of the mouse\n\t         * @return {obj}        Data entry that is closer to that x axis position\n\t         */\n\t        function getNearestDataPoint(mouseX) {\n\t            var points = dataByDate.filter(function (_ref12) {\n\t                var date = _ref12.date;\n\t                return Math.abs(xScale(date) - mouseX) <= epsilon;\n\t            });\n\t\n\t            if (points.length) {\n\t                return points[0];\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Epsilon is the value given to the number representing half of the distance in\n\t         * pixels between two date data points\n\t         * @return {Number} half distance between any two points\n\t         */\n\t        function setEpsilon() {\n\t            var dates = dataByDate.map(function (_ref13) {\n\t                var date = _ref13.date;\n\t                return date;\n\t            });\n\t\n\t            epsilon = (xScale(dates[1]) - xScale(dates[0])) / 2;\n\t        }\n\t\n\t        /**\n\t         * MouseMove handler, calculates the nearest dataPoint to the cursor\n\t         * and updates metadata related to it\n\t         * @private\n\t         */\n\t        function handleMouseMove() {\n\t            epsilon || setEpsilon();\n\t\n\t            var dataPoint = getNearestDataPoint(getMouseXPosition(this) - margin.left),\n\t                dataPointXPosition = void 0;\n\t\n\t            if (dataPoint) {\n\t                dataPointXPosition = xScale(new Date(dataPoint.key));\n\t                // Move verticalMarker to that datapoint\n\t                moveVerticalMarker(dataPointXPosition);\n\t                // Add data points highlighting\n\t                highlightDataPoints(dataPoint);\n\t                // Emit event with xPosition for tooltip or similar feature\n\t                dispatcher.call('customMouseMove', this, dataPoint, categoryColorMap, dataPointXPosition);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n\t         * It also resets the container of the vertical marker\n\t         * @private\n\t         */\n\t        function handleMouseOut(data) {\n\t            overlay.style('display', 'none');\n\t            verticalMarker.classed('bc-is-active', false);\n\t            verticalMarkerContainer.attr('transform', 'translate(9999, 0)');\n\t\n\t            dispatcher.call('customMouseOut', this, data);\n\t        }\n\t\n\t        /**\n\t         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n\t         * @private\n\t         */\n\t        function handleMouseOver(data) {\n\t            overlay.style('display', 'block');\n\t            verticalMarker.classed('bc-is-active', true);\n\t\n\t            dispatcher.call('customMouseOver', this, data);\n\t        }\n\t\n\t        /**\n\t         * Creates coloured circles marking where the exact data y value is for a given data point\n\t         * @param  {obj} dataPoint Data point to extract info from\n\t         * @private\n\t         */\n\t        function highlightDataPoints(_ref14) {\n\t            var values = _ref14.values;\n\t\n\t            var accumulator = 0;\n\t\n\t            eraseDataPointHighlights();\n\t\n\t            // ensure order stays constant\n\t            values = values.filter(function (v) {\n\t                return !!v;\n\t            }).sort(function (a, b) {\n\t                return order.indexOf(a.name) > order.indexOf(b.name);\n\t            });\n\t\n\t            values.forEach(function (_ref15, index) {\n\t                var name = _ref15.name;\n\t\n\t                var marker = verticalMarkerContainer.append('g').classed('circle-container', true),\n\t                    circleSize = 12;\n\t\n\t                accumulator = accumulator + values[index][valueLabel];\n\t\n\t                marker.append('circle').classed('data-point-highlighter', true).attr('cx', circleSize).attr('cy', 0).attr('r', 5).style('stroke-width', 2).style('stroke', categoryColorMap[name]);\n\t\n\t                marker.attr('transform', 'translate( ' + -circleSize + ', ' + yScale(accumulator) + ' )');\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Helper method to update the x position of the vertical marker\n\t         * @param  {obj} dataPoint Data entry to extract info\n\t         * @return void\n\t         */\n\t        function moveVerticalMarker(verticalMarkerXPosition) {\n\t            verticalMarkerContainer.attr('transform', 'translate(' + verticalMarkerXPosition + ',0)');\n\t        }\n\t\n\t        /**\n\t         * Determines if we should add the tooltip related logic depending on the\n\t         * size of the chart and the tooltipThreshold variable value\n\t         * @return {boolean} Should we build the tooltip?\n\t         * @private\n\t         */\n\t        function shouldShowTooltip() {\n\t            return width > tooltipThreshold;\n\t        }\n\t\n\t        // Accessors\n\t\n\t        /**\n\t         * Gets or Sets the opacity of the stacked areas in the chart (all of them will have the same opacity)\n\t         * @param  {Object} _x                  Opacity to get/set\n\t         * @return { opacity | module}          Current opacity or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.areaOpacity = function (_x) {\n\t            if (!arguments.length) {\n\t                return areaOpacity;\n\t            }\n\t            areaOpacity = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the aspect ratio of the chart\n\t         * @param  {Number} _x Desired aspect ratio for the graph\n\t         * @return { (Number | Module) } Current aspect ratio or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.aspectRatio = function (_x) {\n\t            if (!arguments.length) {\n\t                return aspectRatio;\n\t            }\n\t            aspectRatio = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the colorSchema of the chart\n\t         * @param  {String[]} _x Desired colorSchema for the graph\n\t         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.colorSchema = function (_x) {\n\t            if (!arguments.length) {\n\t                return colorSchema;\n\t            }\n\t            colorSchema = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the dateLabel of the chart\n\t         * @param  {Number} _x Desired dateLabel for the graph\n\t         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.dateLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return dateLabel;\n\t            }\n\t            dateLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x axis grouping\n\t         * @param  {String} _x Desired format\n\t         * @return { (String|Module) }    Current format or module to chain calls\n\t         * @example\n\t         *     area.forceAxisFormat(area.axisTimeCombinations.HOUR_DAY)\n\t         */\n\t        exports.forceAxisFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return forceAxisSettings;\n\t            }\n\t            forceAxisSettings = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x format\n\t         * It requires a `forceAxisFormat` of 'custom' in order to work.\n\t         * NOTE: localization not supported\n\t         * @param  {String} _x              Desired format for x axis\n\t         * @return { (String|Module) }      Current format or module to chain calls\n\t         */\n\t        exports.forcedXFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return forcedXFormat;\n\t            }\n\t            forcedXFormat = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x ticks. It requires a `forceAxisFormat` of 'custom' in order to work.\n\t         * NOTE: This value needs to be a multiple of 2, 5 or 10. They won't always work as expected, as D3 decides at the end\n\t         * how many and where the ticks will appear.\n\t         *\n\t         * @param  {Number} _x              Desired number of x axis ticks (multiple of 2, 5 or 10)\n\t         * @return { (Number|Module) }      Current number or ticks or module to chain calls\n\t         */\n\t        exports.forcedXTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return forcedXTicks;\n\t            }\n\t            forcedXTicks = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the grid mode.\n\t         *\n\t         * @param  {String} _x Desired mode for the grid ('vertical'|'horizontal'|'full')\n\t         * @return { String | module} Current mode of the grid or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.grid = function (_x) {\n\t            if (!arguments.length) {\n\t                return grid;\n\t            }\n\t            grid = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            if (aspectRatio) {\n\t                width = Math.ceil(_x / aspectRatio);\n\t            }\n\t            height = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n\t         * By default this is 'false'\n\t         *\n\t         * @param  {Boolean} _x Desired animation flag\n\t         * @return { isAnimated | module} Current isAnimated flag or Chart module\n\t         * @public\n\t         */\n\t        exports.isAnimated = function (_x) {\n\t            if (!arguments.length) {\n\t                return isAnimated;\n\t            }\n\t            isAnimated = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the keyLabel of the chart\n\t         * @param  {Number} _x Desired keyLabel for the graph\n\t         * @return { keyLabel | module} Current keyLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.keyLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return keyLabel;\n\t            }\n\t            keyLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { margin | module} Current margin or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the minimum width of the graph in order to show the tooltip\n\t         * NOTE: This could also depend on the aspect ratio\n\t         *\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { tooltipThreshold | module} Current tooltipThreshold or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.tooltipThreshold = function (_x) {\n\t            if (!arguments.length) {\n\t                return tooltipThreshold;\n\t            }\n\t            tooltipThreshold = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabel of the chart\n\t         * @param  {Number} _x Desired valueLabel for the graph\n\t         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabel;\n\t            }\n\t            valueLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the number of verticalTicks of the yAxis on the chart\n\t         * @param  {Number} _x Desired verticalTicks\n\t         * @return { verticalTicks | module} Current verticalTicks or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.verticalTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return verticalTicks;\n\t            }\n\t            verticalTicks = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { width | module} Current width or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            if (aspectRatio) {\n\t                height = Math.ceil(_x * aspectRatio);\n\t            }\n\t            width = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Pass language tag for the tooltip to localize the date.\n\t         * Feature uses Intl.DateTimeFormat, for compatability and support, refer to\n\t         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n\t         * @param  {String} _x  must be a language tag (BCP 47) like 'en-US' or 'fr-FR'\n\t         * @return { (String|Module) }    Current locale or module to chain calls\n\t         */\n\t        exports.locale = function (_x) {\n\t            if (!arguments.length) {\n\t                return locale;\n\t            }\n\t            locale = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename, title) {\n\t            exportChart.call(exports, svg, filename, title);\n\t        };\n\t\n\t        /**\n\t         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n\t         * We are going to expose this events:\n\t         * customMouseOver, customMouseMove and customMouseOut\n\t         *\n\t         * @return {module} Bar Chart\n\t         * @public\n\t         */\n\t        exports.on = function () {\n\t            var value = dispatcher.on.apply(dispatcher, arguments);\n\t\n\t            return value === dispatcher ? exports : value;\n\t        };\n\t\n\t        /**\n\t         * Exposes the constants to be used to force the x axis to respect a certain granularity\n\t         * current options: MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR\n\t         * @example\n\t         *     area.forceAxisFormat(area.axisTimeCombinations.HOUR_DAY)\n\t         */\n\t        exports.axisTimeCombinations = axisTimeCombinations;\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * lodash (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modularize exports=\"npm\" -o ./`\n\t * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t\n\t/** Used as references for various `Number` constants. */\n\tvar MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t/** `Object#toString` result references. */\n\tvar argsTag = '[object Arguments]',\n\t    funcTag = '[object Function]',\n\t    genTag = '[object GeneratorFunction]';\n\t\n\t/** Used to detect unsigned integer values. */\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t/**\n\t * A faster alternative to `Function#apply`, this function invokes `func`\n\t * with the `this` binding of `thisArg` and the arguments of `args`.\n\t *\n\t * @private\n\t * @param {Function} func The function to invoke.\n\t * @param {*} thisArg The `this` binding of `func`.\n\t * @param {Array} args The arguments to invoke `func` with.\n\t * @returns {*} Returns the result of `func`.\n\t */\n\tfunction apply(func, thisArg, args) {\n\t  switch (args.length) {\n\t    case 0: return func.call(thisArg);\n\t    case 1: return func.call(thisArg, args[0]);\n\t    case 2: return func.call(thisArg, args[0], args[1]);\n\t    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t  }\n\t  return func.apply(thisArg, args);\n\t}\n\t\n\t/**\n\t * The base implementation of `_.times` without support for iteratee shorthands\n\t * or max array length checks.\n\t *\n\t * @private\n\t * @param {number} n The number of times to invoke `iteratee`.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Array} Returns the array of results.\n\t */\n\tfunction baseTimes(n, iteratee) {\n\t  var index = -1,\n\t      result = Array(n);\n\t\n\t  while (++index < n) {\n\t    result[index] = iteratee(index);\n\t  }\n\t  return result;\n\t}\n\t\n\t/**\n\t * Creates a unary function that invokes `func` with its argument transformed.\n\t *\n\t * @private\n\t * @param {Function} func The function to wrap.\n\t * @param {Function} transform The argument transform.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction overArg(func, transform) {\n\t  return function(arg) {\n\t    return func(transform(arg));\n\t  };\n\t}\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objectToString = objectProto.toString;\n\t\n\t/** Built-in value references. */\n\tvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeKeys = overArg(Object.keys, Object),\n\t    nativeMax = Math.max;\n\t\n\t/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n\tvar nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\t\n\t/**\n\t * Creates an array of the enumerable property names of the array-like `value`.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @param {boolean} inherited Specify returning inherited property names.\n\t * @returns {Array} Returns the array of property names.\n\t */\n\tfunction arrayLikeKeys(value, inherited) {\n\t  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n\t  // Safari 9 makes `arguments.length` enumerable in strict mode.\n\t  var result = (isArray(value) || isArguments(value))\n\t    ? baseTimes(value.length, String)\n\t    : [];\n\t\n\t  var length = result.length,\n\t      skipIndexes = !!length;\n\t\n\t  for (var key in value) {\n\t    if ((inherited || hasOwnProperty.call(value, key)) &&\n\t        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n\t      result.push(key);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\t/**\n\t * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t * for equality comparisons.\n\t *\n\t * @private\n\t * @param {Object} object The object to modify.\n\t * @param {string} key The key of the property to assign.\n\t * @param {*} value The value to assign.\n\t */\n\tfunction assignValue(object, key, value) {\n\t  var objValue = object[key];\n\t  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t      (value === undefined && !(key in object))) {\n\t    object[key] = value;\n\t  }\n\t}\n\t\n\t/**\n\t * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t */\n\tfunction baseKeys(object) {\n\t  if (!isPrototype(object)) {\n\t    return nativeKeys(object);\n\t  }\n\t  var result = [];\n\t  for (var key in Object(object)) {\n\t    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n\t      result.push(key);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\t/**\n\t * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n\t *\n\t * @private\n\t * @param {Function} func The function to apply a rest parameter to.\n\t * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction baseRest(func, start) {\n\t  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n\t  return function() {\n\t    var args = arguments,\n\t        index = -1,\n\t        length = nativeMax(args.length - start, 0),\n\t        array = Array(length);\n\t\n\t    while (++index < length) {\n\t      array[index] = args[start + index];\n\t    }\n\t    index = -1;\n\t    var otherArgs = Array(start + 1);\n\t    while (++index < start) {\n\t      otherArgs[index] = args[index];\n\t    }\n\t    otherArgs[start] = array;\n\t    return apply(func, this, otherArgs);\n\t  };\n\t}\n\t\n\t/**\n\t * Copies properties of `source` to `object`.\n\t *\n\t * @private\n\t * @param {Object} source The object to copy properties from.\n\t * @param {Array} props The property identifiers to copy.\n\t * @param {Object} [object={}] The object to copy properties to.\n\t * @param {Function} [customizer] The function to customize copied values.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction copyObject(source, props, object, customizer) {\n\t  object || (object = {});\n\t\n\t  var index = -1,\n\t      length = props.length;\n\t\n\t  while (++index < length) {\n\t    var key = props[index];\n\t\n\t    var newValue = customizer\n\t      ? customizer(object[key], source[key], key, object, source)\n\t      : undefined;\n\t\n\t    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n\t  }\n\t  return object;\n\t}\n\t\n\t/**\n\t * Creates a function like `_.assign`.\n\t *\n\t * @private\n\t * @param {Function} assigner The function to assign values.\n\t * @returns {Function} Returns the new assigner function.\n\t */\n\tfunction createAssigner(assigner) {\n\t  return baseRest(function(object, sources) {\n\t    var index = -1,\n\t        length = sources.length,\n\t        customizer = length > 1 ? sources[length - 1] : undefined,\n\t        guard = length > 2 ? sources[2] : undefined;\n\t\n\t    customizer = (assigner.length > 3 && typeof customizer == 'function')\n\t      ? (length--, customizer)\n\t      : undefined;\n\t\n\t    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t      customizer = length < 3 ? undefined : customizer;\n\t      length = 1;\n\t    }\n\t    object = Object(object);\n\t    while (++index < length) {\n\t      var source = sources[index];\n\t      if (source) {\n\t        assigner(object, source, index, customizer);\n\t      }\n\t    }\n\t    return object;\n\t  });\n\t}\n\t\n\t/**\n\t * Checks if `value` is a valid array-like index.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t */\n\tfunction isIndex(value, length) {\n\t  length = length == null ? MAX_SAFE_INTEGER : length;\n\t  return !!length &&\n\t    (typeof value == 'number' || reIsUint.test(value)) &&\n\t    (value > -1 && value % 1 == 0 && value < length);\n\t}\n\t\n\t/**\n\t * Checks if the given arguments are from an iteratee call.\n\t *\n\t * @private\n\t * @param {*} value The potential iteratee value argument.\n\t * @param {*} index The potential iteratee index or key argument.\n\t * @param {*} object The potential iteratee object argument.\n\t * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n\t *  else `false`.\n\t */\n\tfunction isIterateeCall(value, index, object) {\n\t  if (!isObject(object)) {\n\t    return false;\n\t  }\n\t  var type = typeof index;\n\t  if (type == 'number'\n\t        ? (isArrayLike(object) && isIndex(index, object.length))\n\t        : (type == 'string' && index in object)\n\t      ) {\n\t    return eq(object[index], value);\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Checks if `value` is likely a prototype object.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t */\n\tfunction isPrototype(value) {\n\t  var Ctor = value && value.constructor,\n\t      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t  return value === proto;\n\t}\n\t\n\t/**\n\t * Performs a\n\t * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t * comparison between two values to determine if they are equivalent.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to compare.\n\t * @param {*} other The other value to compare.\n\t * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t * @example\n\t *\n\t * var object = { 'a': 1 };\n\t * var other = { 'a': 1 };\n\t *\n\t * _.eq(object, object);\n\t * // => true\n\t *\n\t * _.eq(object, other);\n\t * // => false\n\t *\n\t * _.eq('a', 'a');\n\t * // => true\n\t *\n\t * _.eq('a', Object('a'));\n\t * // => false\n\t *\n\t * _.eq(NaN, NaN);\n\t * // => true\n\t */\n\tfunction eq(value, other) {\n\t  return value === other || (value !== value && other !== other);\n\t}\n\t\n\t/**\n\t * Checks if `value` is likely an `arguments` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t *  else `false`.\n\t * @example\n\t *\n\t * _.isArguments(function() { return arguments; }());\n\t * // => true\n\t *\n\t * _.isArguments([1, 2, 3]);\n\t * // => false\n\t */\n\tfunction isArguments(value) {\n\t  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n\t  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n\t    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n\t}\n\t\n\t/**\n\t * Checks if `value` is classified as an `Array` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n\t * @example\n\t *\n\t * _.isArray([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArray(document.body.children);\n\t * // => false\n\t *\n\t * _.isArray('abc');\n\t * // => false\n\t *\n\t * _.isArray(_.noop);\n\t * // => false\n\t */\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Checks if `value` is array-like. A value is considered array-like if it's\n\t * not a function and has a `value.length` that's an integer greater than or\n\t * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t * @example\n\t *\n\t * _.isArrayLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArrayLike(document.body.children);\n\t * // => true\n\t *\n\t * _.isArrayLike('abc');\n\t * // => true\n\t *\n\t * _.isArrayLike(_.noop);\n\t * // => false\n\t */\n\tfunction isArrayLike(value) {\n\t  return value != null && isLength(value.length) && !isFunction(value);\n\t}\n\t\n\t/**\n\t * This method is like `_.isArrayLike` except that it also checks if `value`\n\t * is an object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an array-like object,\n\t *  else `false`.\n\t * @example\n\t *\n\t * _.isArrayLikeObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArrayLikeObject(document.body.children);\n\t * // => true\n\t *\n\t * _.isArrayLikeObject('abc');\n\t * // => false\n\t *\n\t * _.isArrayLikeObject(_.noop);\n\t * // => false\n\t */\n\tfunction isArrayLikeObject(value) {\n\t  return isObjectLike(value) && isArrayLike(value);\n\t}\n\t\n\t/**\n\t * Checks if `value` is classified as a `Function` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n\t * @example\n\t *\n\t * _.isFunction(_);\n\t * // => true\n\t *\n\t * _.isFunction(/abc/);\n\t * // => false\n\t */\n\tfunction isFunction(value) {\n\t  // The use of `Object#toString` avoids issues with the `typeof` operator\n\t  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n\t  var tag = isObject(value) ? objectToString.call(value) : '';\n\t  return tag == funcTag || tag == genTag;\n\t}\n\t\n\t/**\n\t * Checks if `value` is a valid array-like length.\n\t *\n\t * **Note:** This method is loosely based on\n\t * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t * @example\n\t *\n\t * _.isLength(3);\n\t * // => true\n\t *\n\t * _.isLength(Number.MIN_VALUE);\n\t * // => false\n\t *\n\t * _.isLength(Infinity);\n\t * // => false\n\t *\n\t * _.isLength('3');\n\t * // => false\n\t */\n\tfunction isLength(value) {\n\t  return typeof value == 'number' &&\n\t    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t}\n\t\n\t/**\n\t * Checks if `value` is the\n\t * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(_.noop);\n\t * // => true\n\t *\n\t * _.isObject(null);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  var type = typeof value;\n\t  return !!value && (type == 'object' || type == 'function');\n\t}\n\t\n\t/**\n\t * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t * and has a `typeof` result of \"object\".\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t * @example\n\t *\n\t * _.isObjectLike({});\n\t * // => true\n\t *\n\t * _.isObjectLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObjectLike(_.noop);\n\t * // => false\n\t *\n\t * _.isObjectLike(null);\n\t * // => false\n\t */\n\tfunction isObjectLike(value) {\n\t  return !!value && typeof value == 'object';\n\t}\n\t\n\t/**\n\t * Assigns own enumerable string keyed properties of source objects to the\n\t * destination object. Source objects are applied from left to right.\n\t * Subsequent sources overwrite property assignments of previous sources.\n\t *\n\t * **Note:** This method mutates `object` and is loosely based on\n\t * [`Object.assign`](https://mdn.io/Object/assign).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.10.0\n\t * @category Object\n\t * @param {Object} object The destination object.\n\t * @param {...Object} [sources] The source objects.\n\t * @returns {Object} Returns `object`.\n\t * @see _.assignIn\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t * }\n\t *\n\t * function Bar() {\n\t *   this.c = 3;\n\t * }\n\t *\n\t * Foo.prototype.b = 2;\n\t * Bar.prototype.d = 4;\n\t *\n\t * _.assign({ 'a': 0 }, new Foo, new Bar);\n\t * // => { 'a': 1, 'c': 3 }\n\t */\n\tvar assign = createAssigner(function(object, source) {\n\t  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t    copyObject(source, keys(source), object);\n\t    return;\n\t  }\n\t  for (var key in source) {\n\t    if (hasOwnProperty.call(source, key)) {\n\t      assignValue(object, key, source[key]);\n\t    }\n\t  }\n\t});\n\t\n\t/**\n\t * Creates an array of the own enumerable property names of `object`.\n\t *\n\t * **Note:** Non-object values are coerced to objects. See the\n\t * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t * for more details.\n\t *\n\t * @static\n\t * @since 0.1.0\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.keys(new Foo);\n\t * // => ['a', 'b'] (iteration order is not guaranteed)\n\t *\n\t * _.keys('hi');\n\t * // => ['0', '1']\n\t */\n\tfunction keys(object) {\n\t  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n\t}\n\t\n\tmodule.exports = assign;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Axis = __webpack_require__(4);\n\t    var d3Color = __webpack_require__(5);\n\t    var d3Collection = __webpack_require__(9);\n\t    var d3Dispatch = __webpack_require__(6);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Interpolate = __webpack_require__(10);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Selection = __webpack_require__(13);\n\t    var assign = __webpack_require__(35);\n\t\n\t    var _require = __webpack_require__(17),\n\t        exportChart = _require.exportChart;\n\t\n\t    var colorHelper = __webpack_require__(18);\n\t    var NUMBER_FORMAT = ',f';\n\t    var uniq = function uniq(arrArg) {\n\t        return arrArg.filter(function (elem, pos, arr) {\n\t            return arr.indexOf(elem) == pos;\n\t        });\n\t    };\n\t\n\t    /**\n\t     * @typdef D3Layout\n\t     * @type function\n\t     */\n\t\n\t    /**\n\t     * @typedef GroupedBarChartData\n\t     * @type {Object}\n\t     * @property {Object[]} data       All data entries\n\t     * @property {String} name         Name of the entry\n\t     * @property {String} group        group of the entry\n\t     * @property {Number} value        Value of the entry\n\t     *\n\t     * @example\n\t     * {\n\t     *     'data': [\n\t     *         {\n\t     *             \"name\": \"2011-01\",\n\t     *             \"group\": \"Direct\",\n\t     *             \"value\": 0\n\t     *         }\n\t     *     ]\n\t     * }\n\t     */\n\t\n\t    /**\n\t     * Grouped Bar Chart reusable API module that allows us\n\t     * rendering a multi grouped bar and configurable chart.\n\t     *\n\t     * @module Grouped-bar\n\t     * @tutorial grouped-bar\n\t     * @requires d3-array, d3-axis, d3-color, d3-collection, d3-dispatch, d3-ease,\n\t     *  d3-interpolate, d3-scale, d3-selection, lodash assign\n\t     *\n\t     * @example\n\t     * let groupedBar = GroupedBar();\n\t     *\n\t     * groupedBar\n\t     *     .width(containerWidth);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset.data)\n\t     *     .call(groupedBar);\n\t     *\n\t     */\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 40,\n\t            right: 30,\n\t            bottom: 60,\n\t            left: 70\n\t        },\n\t            width = 960,\n\t            height = 500,\n\t            xScale = void 0,\n\t            xScale2 = void 0,\n\t            xAxis = void 0,\n\t            yScale = void 0,\n\t            yScale2 = void 0,\n\t            yAxis = void 0,\n\t            aspectRatio = null,\n\t            yTickTextYOffset = -8,\n\t            yTickTextXOffset = -20,\n\t            numOfVerticalTicks = 5,\n\t            numOfHorizontalTicks = 5,\n\t            baseLine = void 0,\n\t            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\t            colorScale = void 0,\n\t            categoryColorMap = void 0,\n\t            layers = void 0,\n\t            ease = d3Ease.easeQuadInOut,\n\t            horizontal = false,\n\t            svg = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            data = void 0,\n\t            groups = void 0,\n\t            transformedData = void 0,\n\t            tooltipThreshold = 480,\n\t            xAxisPadding = {\n\t            top: 0,\n\t            left: 0,\n\t            bottom: 0,\n\t            right: 0\n\t        },\n\t            maxBarNumber = 8,\n\t            animationDelayStep = 20,\n\t            animationDelays = d3Array.range(animationDelayStep, maxBarNumber * animationDelayStep, animationDelayStep),\n\t            animationDuration = 1000,\n\t            grid = null,\n\t            nameLabel = 'name',\n\t            valueLabel = 'value',\n\t            groupLabel = 'group',\n\t            valueLabelFormat = NUMBER_FORMAT,\n\t\n\t\n\t        // getters\n\t        getName = function getName(_ref) {\n\t            var name = _ref.name;\n\t            return name;\n\t        },\n\t            getValue = function getValue(_ref2) {\n\t            var value = _ref2.value;\n\t            return value;\n\t        },\n\t            getGroup = function getGroup(_ref3) {\n\t            var group = _ref3.group;\n\t            return group;\n\t        },\n\t            isAnimated = false,\n\t\n\t\n\t        // events\n\t        dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\t\n\t        /**\n\t         * This function creates the graph using the selection and data provided\n\t         * @param {D3Selection} _selection A d3 selection that represents\n\t         * the container(s) where the chart(s) will be rendered\n\t         * @param {GroupedBarChartData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = cleanData(_data);\n\t\n\t                prepareData(data);\n\t                buildScales();\n\t                buildLayers();\n\t                buildSVG(this);\n\t                drawGridLines();\n\t                buildAxis();\n\t                drawAxis();\n\t                drawGroupedBar();\n\t                addMouseEvents();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Adds events to the container group if the environment is not mobile\n\t         * Adding: mouseover, mouseout and mousemove\n\t         */\n\t        function addMouseEvents() {\n\t            if (shouldShowTooltip()) {\n\t                svg.on('mouseover', handleMouseOver).on('mouseout', handleMouseOut).on('mousemove', handleMouseMove);\n\t            }\n\t\n\t            svg.selectAll('.bar').on('mouseover', handleBarsMouseOver).on('mouseout', handleBarsMouseOut);\n\t        }\n\t\n\t        /**\n\t         * Adjusts the position of the y axis' ticks\n\t         * @param  {D3Selection} selection Y axis group\n\t         * @return void\n\t         */\n\t        function adjustYTickLabels(selection) {\n\t            selection.selectAll('.tick text').attr('transform', 'translate(' + yTickTextXOffset + ', ' + yTickTextYOffset + ')');\n\t        }\n\t\n\t        /**\n\t         * Creates the d3 x and y axis, setting orientations\n\t         * @private\n\t         */\n\t        function buildAxis() {\n\t            if (horizontal) {\n\t                xAxis = d3Axis.axisBottom(xScale).ticks(numOfHorizontalTicks, valueLabelFormat);\n\t                yAxis = d3Axis.axisLeft(yScale);\n\t            } else {\n\t                xAxis = d3Axis.axisBottom(xScale);\n\t                yAxis = d3Axis.axisLeft(yScale).ticks(numOfVerticalTicks, valueLabelFormat);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * NOTE: The order of drawing of this group elements is really important,\n\t         * as everything else will be drawn on top of them\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container.append('g').classed('x-axis-group', true).append('g').classed('x axis', true);\n\t            container.selectAll('.x-axis-group').append('g').classed('month-axis', true);\n\t            container.append('g').classed('y-axis-group axis', true);\n\t            container.append('g').classed('grid-lines-group', true);\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('metadata-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds the grouped layers layout\n\t         * @return {D3Layout} Layout for drawing the chart\n\t         * @private\n\t         */\n\t        function buildLayers() {\n\t            layers = transformedData.map(function (item) {\n\t                var ret = {};\n\t\n\t                groups.forEach(function (key) {\n\t                    ret[key] = item[key];\n\t                });\n\t\n\t                return assign({}, item, ret);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates the x, y and color scales of the chart\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t            var yMax = d3Array.max(data.map(getValue));\n\t\n\t            if (horizontal) {\n\t                xScale = d3Scale.scaleLinear().domain([0, yMax]).rangeRound([0, chartWidth - 1]);\n\t                // 1 pix for edge tick\n\t\n\t                yScale = d3Scale.scaleBand().domain(data.map(getName)).rangeRound([chartHeight, 0]).padding(0.1);\n\t\n\t                yScale2 = d3Scale.scaleBand().domain(data.map(getGroup)).rangeRound([yScale.bandwidth(), 0]).padding(0.1);\n\t            } else {\n\t                xScale = d3Scale.scaleBand().domain(data.map(getName)).rangeRound([0, chartWidth]).padding(0.1);\n\t                xScale2 = d3Scale.scaleBand().domain(data.map(getGroup)).rangeRound([0, xScale.bandwidth()]).padding(0.1);\n\t\n\t                yScale = d3Scale.scaleLinear().domain([0, yMax]).rangeRound([chartHeight, 0]).nice();\n\t            }\n\t\n\t            colorScale = d3Scale.scaleOrdinal().range(colorSchema).domain(data.map(getGroup));\n\t\n\t            categoryColorMap = colorScale.domain(data.map(getName)).domain().reduce(function (memo, item) {\n\t                data.forEach(function (v) {\n\t                    if (getName(v) == item) {\n\t                        memo[v.name] = colorScale(v.group);\n\t                        memo[v.group] = colorScale(v.group);\n\t                        memo[v.group + item] = colorScale(v.group);\n\t                    }\n\t                });\n\t                return memo;\n\t            }, {});\n\t        }\n\t\n\t        /**\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart grouped-bar', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Parses dates and values into JS Date objects and numbers\n\t         * @param  {obj} data Raw data from JSON file\n\t         * @return {obj}      Parsed data with values and dates\n\t         */\n\t        function cleanData(data) {\n\t            return data.map(function (d) {\n\t                d.value = +d[valueLabel];\n\t                d.group = d[groupLabel];\n\t                // for tooltip\n\t                d.topicName = getGroup(d);\n\t                d.name = d[nameLabel];\n\t\n\t                return d;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws the x and y axis on the svg object within their\n\t         * respective groups\n\t         * @private\n\t         */\n\t        function drawAxis() {\n\t            if (horizontal) {\n\t                svg.select('.x-axis-group .axis.x').attr('transform', 'translate( 0, ' + chartHeight + ' )').call(xAxis);\n\t\n\t                svg.select('.y-axis-group.axis').attr('transform', 'translate( ' + -xAxisPadding.left + ', 0)').call(yAxis);\n\t            } else {\n\t                svg.select('.x-axis-group .axis.x').attr('transform', 'translate( 0, ' + chartHeight + ' )').call(xAxis);\n\t\n\t                svg.select('.y-axis-group.axis').attr('transform', 'translate( ' + -xAxisPadding.left + ', 0)').call(yAxis).call(adjustYTickLabels);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws a vertical line to extend x-axis till the edges\n\t         * @return {void}\n\t         */\n\t        function drawHorizontalExtendedLine() {\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-x-line').data([0]).enter().append('line').attr('class', 'extended-x-line').attr('x1', xAxisPadding.left).attr('x2', chartWidth).attr('y1', chartHeight).attr('y2', chartHeight);\n\t        }\n\t\n\t        /**\n\t         * Draws a vertical line to extend y-axis till the edges\n\t         * @return {void}\n\t         */\n\t        function drawVerticalExtendedLine() {\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-y-line').data([0]).enter().append('line').attr('class', 'extended-y-line').attr('y1', xAxisPadding.bottom).attr('y2', chartHeight).attr('x1', 0).attr('x2', 0);\n\t        }\n\t\n\t        /**\n\t         * Draws grid lines on the background of the chart\n\t         * @return void\n\t         */\n\t        function drawGridLines() {\n\t            var scale = horizontal ? xScale : yScale;\n\t\n\t            if (grid === 'horizontal' || grid === 'full') {\n\t                svg.select('.grid-lines-group').selectAll('line.horizontal-grid-line').data(scale.ticks(numOfVerticalTicks).slice(1)).enter().append('line').attr('class', 'horizontal-grid-line').attr('x1', -xAxisPadding.left + 1).attr('x2', chartWidth).attr('y1', function (d) {\n\t                    return yScale(d);\n\t                }).attr('y2', function (d) {\n\t                    return yScale(d);\n\t                });\n\t            }\n\t\n\t            if (grid === 'vertical' || grid === 'full') {\n\t                svg.select('.grid-lines-group').selectAll('line.vertical-grid-line').data(scale.ticks(numOfHorizontalTicks).slice(1)).enter().append('line').attr('class', 'vertical-grid-line').attr('y1', 0).attr('y2', chartHeight).attr('x1', function (d) {\n\t                    return xScale(d);\n\t                }).attr('x2', function (d) {\n\t                    return xScale(d);\n\t                });\n\t            }\n\t\n\t            if (horizontal) {\n\t                drawVerticalExtendedLine();\n\t            } else {\n\t                drawHorizontalExtendedLine();\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the bars along the x axis\n\t         * @param  {D3Selection} bars Selection of bars\n\t         * @return {void}\n\t         */\n\t        function drawHorizontalBars(series) {\n\t            // Enter + Update\n\t            var bars = series.data(layers).enter().append('g').attr('transform', function (_ref4) {\n\t                var key = _ref4.key;\n\t                return 'translate(0,' + yScale(key) + ')';\n\t            }).classed('layer', true).selectAll('.bar').data(function (_ref5) {\n\t                var values = _ref5.values;\n\t                return values;\n\t            }).enter().append('rect').classed('bar', true).attr('x', 1).attr('y', function (d) {\n\t                return yScale2(getGroup(d));\n\t            }).attr('height', yScale2.bandwidth()).attr('fill', function (data) {\n\t                return categoryColorMap[data.group];\n\t            });\n\t\n\t            if (isAnimated) {\n\t                bars.style('opacity', 0.24).transition().delay(function (_, i) {\n\t                    return animationDelays[i];\n\t                }).duration(animationDuration).ease(ease).tween('attr.width', horizontalBarsTween);\n\t            } else {\n\t                bars.attr('width', function (d) {\n\t                    return xScale(getValue(d));\n\t                });\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the bars along the y axis\n\t         * @param  {D3Selection} bars Selection of bars\n\t         * @return {void}\n\t         */\n\t        function drawVerticalBars(series) {\n\t            // Enter + Update\n\t            var bars = series.data(layers).enter().append('g').attr('transform', function (d) {\n\t                return 'translate(' + xScale(d.key) + ',0)';\n\t            }).classed('layer', true).selectAll('.bar').data(function (d) {\n\t                return d.values;\n\t            }).enter().append('rect').classed('bar', true).attr('x', function (d) {\n\t                return xScale2(getGroup(d));\n\t            }).attr('y', function (d) {\n\t                return yScale(d.value);\n\t            }).attr('width', xScale2.bandwidth).attr('fill', function (data) {\n\t                return categoryColorMap[data.group];\n\t            });\n\t\n\t            if (isAnimated) {\n\t                bars.style('opacity', 0.24).transition().delay(function (_, i) {\n\t                    return animationDelays[i];\n\t                }).duration(animationDuration).ease(ease).tween('attr.height', verticalBarsTween);\n\t            } else {\n\t                bars.attr('height', function (d) {\n\t                    return chartHeight - yScale(getValue(d));\n\t                });\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the different areas into the chart-group element\n\t         * @private\n\t         */\n\t        function drawGroupedBar() {\n\t            var series = svg.select('.chart-group').selectAll('.layer');\n\t\n\t            if (!horizontal) {\n\t                drawVerticalBars(series);\n\t            } else {\n\t                drawHorizontalBars(series);\n\t            }\n\t            // Exit\n\t            series.exit().transition().style('opacity', 0).remove();\n\t        }\n\t\n\t        /**\n\t         * Extract X position on the chart from a given mouse event\n\t         * @param  {obj} event D3 mouse event\n\t         * @return {Number}       Position on the x axis of the mouse\n\t         * @private\n\t         */\n\t        function getMousePosition(event) {\n\t            return d3Selection.mouse(event);\n\t        }\n\t\n\t        /**\n\t         * Finds out the data entry that is closer to the given position on pixels\n\t         * @param  {Number} mouseX X position of the mouse\n\t         * @return {obj}        Data entry that is closer to that x axis position\n\t         */\n\t        function getNearestDataPoint(mouseX) {\n\t            var adjustedMouseX = mouseX - margin.left,\n\t                epsilon = xScale2.bandwidth(),\n\t                nearest = [];\n\t\n\t            layers.forEach(function (data) {\n\t                var found = data.values.find(function (d2) {\n\t                    return Math.abs(adjustedMouseX >= xScale(d2[nameLabel]) + xScale2(d2[groupLabel])) && Math.abs(adjustedMouseX - xScale2(d2[groupLabel]) - xScale(d2[nameLabel]) <= epsilon);\n\t                });\n\t\n\t                if (found) {\n\t                    found.values = data.values;\n\t                    found.key = found.name;\n\t                    nearest.push(found);\n\t                }\n\t            });\n\t\n\t            return nearest.length ? nearest[0] : undefined;\n\t        }\n\t\n\t        /**\n\t        * Finds out the data entry that is closer to the given position on pixels\n\t        * @param  {Number} mouseX X position of the mouse\n\t        * @return {obj}        Data entry that is closer to that x axis position\n\t        */\n\t        function getNearestDataPoint2(mouseY) {\n\t            var adjustedMouseY = mouseY - margin.bottom,\n\t                epsilon = yScale.bandwidth(),\n\t                nearest = [];\n\t\n\t            layers.map(function (data) {\n\t                var found = data.values.find(function (d2) {\n\t                    return Math.abs(adjustedMouseY >= yScale(d2[nameLabel])) && Math.abs(adjustedMouseY - yScale(d2[nameLabel]) <= epsilon * 2);\n\t                });\n\t\n\t                if (found) {\n\t                    found.values = data.values;\n\t                    found.key = found.name;\n\t                    nearest.push(found);\n\t                }\n\t            });\n\t\n\t            return nearest.length ? nearest[0] : undefined;\n\t        }\n\t\n\t        /**\n\t         * Handles a mouseover event on top of a bar\n\t         * @param  {obj} d data of bar\n\t         * @return {void}\n\t         */\n\t        function handleBarsMouseOver(d) {\n\t            d3Selection.select(this).attr('fill', function () {\n\t                return d3Color.color(categoryColorMap[d.group]).darker();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Handles a mouseout event out of a bar\n\t         * @param  {obj} d data of bar\n\t         * @return {void}\n\t         */\n\t        function handleBarsMouseOut(d) {\n\t            d3Selection.select(this).attr('fill', function () {\n\t                return categoryColorMap[d.group];\n\t            });\n\t        }\n\t\n\t        /**\n\t         * MouseMove handler, calculates the nearest dataPoint to the cursor\n\t         * and updates metadata related to it\n\t         * @private\n\t         */\n\t        function handleMouseMove() {\n\t            var _getMousePosition = getMousePosition(this),\n\t                _getMousePosition2 = _slicedToArray(_getMousePosition, 2),\n\t                mouseX = _getMousePosition2[0],\n\t                mouseY = _getMousePosition2[1],\n\t                dataPoint = !horizontal ? getNearestDataPoint(mouseX) : getNearestDataPoint2(mouseY),\n\t                x = void 0,\n\t                y = void 0;\n\t\n\t            if (dataPoint) {\n\t                // Move verticalMarker to that datapoint\n\t                if (horizontal) {\n\t                    x = mouseX - margin.left;\n\t                    y = yScale(dataPoint.key) + yScale.bandwidth() / 2;\n\t                } else {\n\t                    x = xScale(dataPoint.key) + xScale2(dataPoint[groupLabel]);\n\t                    y = mouseY - margin.bottom;\n\t                }\n\t                moveTooltipOriginXY(x, y);\n\t\n\t                // Emit event with xPosition for tooltip or similar feature\n\t                dispatcher.call('customMouseMove', this, dataPoint, categoryColorMap, x, y);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n\t         * It also resets the container of the vertical marker\n\t         * @private\n\t         */\n\t        function handleMouseOut(d) {\n\t            svg.select('.metadata-group').attr('transform', 'translate(9999, 0)');\n\t            dispatcher.call('customMouseOut', this, d);\n\t        }\n\t\n\t        /**\n\t         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n\t         * @private\n\t         */\n\t        function handleMouseOver(d) {\n\t            dispatcher.call('customMouseOver', this, d);\n\t        }\n\t\n\t        /**\n\t         * Animation tween of horizontal bars\n\t         * @param  {obj} d data of bar\n\t         * @return {void}\n\t         */\n\t        function horizontalBarsTween(d) {\n\t            var node = d3Selection.select(this),\n\t                i = d3Interpolate.interpolateRound(0, xScale(getValue(d))),\n\t                j = d3Interpolate.interpolateNumber(0, 1);\n\t\n\t            return function (t) {\n\t                node.attr('width', i(t)).style('opacity', j(t));\n\t            };\n\t        }\n\t\n\t        /**\n\t         * Helper method to update the x position of the vertical marker\n\t         * @param  {obj} dataPoint Data entry to extract info\n\t         * @return void\n\t         */\n\t        function moveTooltipOriginXY(originXPosition, originYPosition) {\n\t            svg.select('.metadata-group').attr('transform', 'translate(' + originXPosition + ',' + originYPosition + ')');\n\t        }\n\t\n\t        /**\n\t         * Prepare data for create chart.\n\t         * @private\n\t         */\n\t        function prepareData(data) {\n\t            groups = uniq(data.map(function (d) {\n\t                return getGroup(d);\n\t            }));\n\t            transformedData = d3Collection.nest().key(getName).rollup(function (values) {\n\t                var ret = {};\n\t\n\t                values.forEach(function (entry) {\n\t                    if (entry && entry[groupLabel]) {\n\t                        ret[entry[groupLabel]] = getValue(entry);\n\t                    }\n\t                });\n\t                //for tooltip\n\t                ret.values = values;\n\t                return ret;\n\t            }).entries(data).map(function (data) {\n\t                return assign({}, {\n\t                    total: d3Array.sum(d3Array.permute(data.value, groups)),\n\t                    key: data.key\n\t                }, data.value);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Determines if we should add the tooltip related logic depending on the\n\t         * size of the chart and the tooltipThreshold variable value\n\t         * @return {boolean} Should we build the tooltip?\n\t         * @private\n\t         */\n\t        function shouldShowTooltip() {\n\t            return width > tooltipThreshold;\n\t        }\n\t\n\t        /**\n\t         * Animation tween of vertical bars\n\t         * @param  {obj} d data of bar\n\t         * @return {void}\n\t         */\n\t        function verticalBarsTween(d) {\n\t            var node = d3Selection.select(this),\n\t                i = d3Interpolate.interpolateRound(0, chartHeight - yScale(getValue(d))),\n\t                y = d3Interpolate.interpolateRound(chartHeight, yScale(getValue(d))),\n\t                j = d3Interpolate.interpolateNumber(0, 1);\n\t\n\t            return function (t) {\n\t                node.attr('y', y(t)).attr('height', i(t)).style('opacity', j(t));\n\t            };\n\t        }\n\t\n\t        // API\n\t\n\t        /**\n\t         * Gets or Sets the aspect ratio of the chart\n\t         * @param  {Number} _x Desired aspect ratio for the graph\n\t         * @return { (Number | Module) } Current aspect ratio or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.aspectRatio = function (_x) {\n\t            if (!arguments.length) {\n\t                return aspectRatio;\n\t            }\n\t            aspectRatio = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the colorSchema of the chart\n\t         * @param  {String[]} _x Desired colorSchema for the graph\n\t         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.colorSchema = function (_x) {\n\t            if (!arguments.length) {\n\t                return colorSchema;\n\t            }\n\t            colorSchema = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename, title) {\n\t            exportChart.call(exports, svg, filename, title);\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the groupLabel of the chart\n\t         * @param  {String} _x Desired groupLabel for the graph\n\t         * @return { groupLabel | module} Current groupLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.groupLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return groupLabel;\n\t            }\n\t            groupLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the grid mode.\n\t         *\n\t         * @param  {String} _x Desired mode for the grid ('vertical'|'horizontal'|'full')\n\t         * @return { String | module} Current mode of the grid or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.grid = function (_x) {\n\t            if (!arguments.length) {\n\t                return grid;\n\t            }\n\t            grid = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            if (aspectRatio) {\n\t                width = Math.ceil(_x / aspectRatio);\n\t            }\n\t            height = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the horizontal direction of the chart\n\t         * @param  {number} _x Desired horizontal direction for the graph\n\t         * @return { horizontal | module} Current horizontal direction or Bar Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.horizontal = function (_x) {\n\t            if (!arguments.length) {\n\t                return horizontal;\n\t            }\n\t            horizontal = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n\t         * By default this is 'false'\n\t         *\n\t         * @param  {Boolean} _x Desired animation flag\n\t         * @return { isAnimated | module} Current isAnimated flag or Chart module\n\t         * @public\n\t         */\n\t        exports.isAnimated = function (_x) {\n\t            if (!arguments.length) {\n\t                return isAnimated;\n\t            }\n\t            isAnimated = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { margin | module} Current margin or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the nameLabel of the chart\n\t         * @param  {Number} _x Desired dateLabel for the graph\n\t         * @return { nameLabel | module} Current nameLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.nameLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return nameLabel;\n\t            }\n\t            nameLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the number of verticalTicks of the axis on the chart\n\t         * @param  {Number} _x Desired verticalTicks\n\t         * @return { numOfHorizontalTicks | module} Current numOfHorizontalTicks or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.numOfHorizontalTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return numOfHorizontalTicks;\n\t            }\n\t            numOfHorizontalTicks = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the number of verticalTicks of the axis on the chart\n\t         * @param  {Number} _x Desired verticalTicks\n\t         * @return { numOfVerticalTicks | module} Current numOfVerticalTicks or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.numOfVerticalTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return numOfVerticalTicks;\n\t            }\n\t            numOfVerticalTicks = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n\t         * We are going to expose this events:\n\t         * customMouseOver, customMouseMove and customMouseOut\n\t         *\n\t         * @return {module} Bar Chart\n\t         * @public\n\t         */\n\t        exports.on = function () {\n\t            var value = dispatcher.on.apply(dispatcher, arguments);\n\t\n\t            return value === dispatcher ? exports : value;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the minimum width of the graph in order to show the tooltip\n\t         * NOTE: This could also depend on the aspect ratio\n\t         *\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { tooltipThreshold | module} Current tooltipThreshold or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.tooltipThreshold = function (_x) {\n\t            if (!arguments.length) {\n\t                return tooltipThreshold;\n\t            }\n\t            tooltipThreshold = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabel of the chart\n\t         * @param  {Number} _x Desired valueLabel for the graph\n\t         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabel;\n\t            }\n\t            valueLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabelFormat of the chart\n\t         * @param  {String[]} _x Desired valueLabelFormat for the graph\n\t         * @return { valueLabelFormat | module} Current valueLabelFormat or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabelFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabelFormat;\n\t            }\n\t            valueLabelFormat = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { width | module} Current width or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            if (aspectRatio) {\n\t                height = Math.ceil(_x * aspectRatio);\n\t            }\n\t            width = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Axis = __webpack_require__(4);\n\t    var d3Color = __webpack_require__(5);\n\t    var d3Collection = __webpack_require__(9);\n\t    var d3Dispatch = __webpack_require__(6);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Interpolate = __webpack_require__(10);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Shape = __webpack_require__(24);\n\t    var d3Selection = __webpack_require__(13);\n\t    var assign = __webpack_require__(35);\n\t\n\t    var _require = __webpack_require__(17),\n\t        exportChart = _require.exportChart;\n\t\n\t    var colorHelper = __webpack_require__(18);\n\t    var NUMBER_FORMAT = ',f';\n\t    var uniq = function uniq(arrArg) {\n\t        return arrArg.filter(function (elem, pos, arr) {\n\t            return arr.indexOf(elem) == pos;\n\t        });\n\t    };\n\t\n\t    /**\n\t     * @typdef D3Layout\n\t     * @type function\n\t     */\n\t\n\t    /**\n\t     * @typedef stackedBarData\n\t     * @type {Object}\n\t     * @property {Object[]} data       All data entries\n\t     * @property {String} name         Name of the entry\n\t     * @property {String} stack        Stack of the entry\n\t     * @property {Number} value        Value of the entry\n\t     *\n\t     * @example\n\t     * {\n\t     *     'data': [\n\t     *         {\n\t     *             \"name\": \"2011-01\",\n\t     *             \"stack\": \"Direct\",\n\t     *             \"value\": 0\n\t     *         }\n\t     *     ]\n\t     * }\n\t     */\n\t\n\t    /**\n\t     * Stacked Area Chart reusable API module that allows us\n\t     * rendering a multi area and configurable chart.\n\t     *\n\t     * @module Stacked-bar\n\t     * @tutorial stacked-bar\n\t     * @requires d3-array, d3-axis, d3-color, d3-collection, d3-dispatch, d3-ease,\n\t     *  d3-interpolate, d3-scale, d3-shape, d3-selection, lodash assign\n\t     *\n\t     * @example\n\t     * let stackedBar = stackedBar();\n\t     *\n\t     * stackedBar\n\t     *     .width(containerWidth);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset.data)\n\t     *     .call(stackedBar);\n\t     *\n\t     */\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 40,\n\t            right: 30,\n\t            bottom: 60,\n\t            left: 70\n\t        },\n\t            width = 960,\n\t            height = 500,\n\t            xScale = void 0,\n\t            xAxis = void 0,\n\t            yScale = void 0,\n\t            yAxis = void 0,\n\t            aspectRatio = null,\n\t            verticalTicks = 5,\n\t            yTickTextYOffset = -8,\n\t            yTickTextXOffset = -20,\n\t            numOfVerticalTicks = 5,\n\t            numOfHorizontalTicks = 5,\n\t            percentageAxisToMaxRatio = 1,\n\t            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\t            colorScale = void 0,\n\t            categoryColorMap = void 0,\n\t            layers = void 0,\n\t            ease = d3Ease.easeQuadInOut,\n\t            horizontal = false,\n\t            svg = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            data = void 0,\n\t            transformedData = void 0,\n\t            stacks = void 0,\n\t            tooltipThreshold = 480,\n\t            baseLine = void 0,\n\t            xAxisPadding = {\n\t            top: 0,\n\t            left: 0,\n\t            bottom: 0,\n\t            right: 0\n\t        },\n\t            maxBarNumber = 8,\n\t            animationDelayStep = 20,\n\t            animationDelays = d3Array.range(animationDelayStep, maxBarNumber * animationDelayStep, animationDelayStep),\n\t            animationDuration = 1000,\n\t            grid = null,\n\t            nameLabel = 'name',\n\t            valueLabel = 'value',\n\t            stackLabel = 'stack',\n\t            nameLabelFormat = void 0,\n\t            valueLabelFormat = NUMBER_FORMAT,\n\t\n\t\n\t        // getters\n\t        getName = function getName(data) {\n\t            return data[nameLabel];\n\t        },\n\t            getValue = function getValue(data) {\n\t            return data[valueLabel];\n\t        },\n\t            getStack = function getStack(data) {\n\t            return data[stackLabel];\n\t        },\n\t            isAnimated = false,\n\t\n\t\n\t        // events\n\t        dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\t\n\t        /**\n\t         * This function creates the graph using the selection and data provided\n\t         * @param {D3Selection} _selection A d3 selection that represents\n\t         * the container(s) where the chart(s) will be rendered\n\t         * @param {stackedBarData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = cleanData(_data);\n\t\n\t                prepareData(data);\n\t                buildScales();\n\t                buildLayers();\n\t                buildSVG(this);\n\t                drawGridLines();\n\t                buildAxis();\n\t                drawAxis();\n\t                drawStackedBar();\n\t                addMouseEvents();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Adds events to the container group if the environment is not mobile\n\t         * Adding: mouseover, mouseout and mousemove\n\t         */\n\t        function addMouseEvents() {\n\t            if (shouldShowTooltip()) {\n\t                svg.on('mouseover', handleMouseOver).on('mouseout', handleMouseOut).on('mousemove', handleMouseMove);\n\t            }\n\t\n\t            svg.selectAll('.bar').on('mouseover', handleBarsMouseOver).on('mouseout', handleBarsMouseOut);\n\t        }\n\t\n\t        /**\n\t         * Adjusts the position of the y axis' ticks\n\t         * @param  {D3Selection} selection Y axis group\n\t         * @return void\n\t         */\n\t        function adjustYTickLabels(selection) {\n\t            selection.selectAll('.tick text').attr('transform', 'translate(' + yTickTextXOffset + ', ' + yTickTextYOffset + ')');\n\t        }\n\t\n\t        /**\n\t         * Creates the d3 x and y axis, setting orientations\n\t         * @private\n\t         */\n\t        function buildAxis() {\n\t            if (!horizontal) {\n\t                xAxis = d3Axis.axisBottom(xScale);\n\t                yAxis = d3Axis.axisLeft(yScale).ticks(numOfVerticalTicks, valueLabelFormat);\n\t            } else {\n\t                xAxis = d3Axis.axisBottom(xScale).ticks(numOfHorizontalTicks, valueLabelFormat);\n\t                yAxis = d3Axis.axisLeft(yScale);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * NOTE: The order of drawing of this group elements is really important,\n\t         * as everything else will be drawn on top of them\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container.append('g').classed('x-axis-group', true).append('g').classed('x axis', true);\n\t            container.selectAll('.x-axis-group').append('g').classed('month-axis', true);\n\t            container.append('g').classed('y-axis-group axis', true);\n\t            container.append('g').classed('grid-lines-group', true);\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('metadata-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds the stacked layers layout\n\t         * @return {D3Layout} Layout for drawing the chart\n\t         * @private\n\t         */\n\t        function buildLayers() {\n\t            var stack3 = d3Shape.stack().keys(stacks),\n\t                dataInitial = transformedData.map(function (item) {\n\t                var ret = {};\n\t\n\t                stacks.forEach(function (key) {\n\t                    ret[key] = item[key];\n\t                });\n\t\n\t                return assign({}, item, ret);\n\t            });\n\t\n\t            layers = stack3(dataInitial);\n\t        }\n\t\n\t        /**\n\t         * Creates the x, y and color scales of the chart\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t            var yMax = d3Array.max(transformedData.map(function (d) {\n\t                return d.total;\n\t            }));\n\t\n\t            if (!horizontal) {\n\t                xScale = d3Scale.scaleBand().domain(data.map(getName)).rangeRound([0, chartWidth]).padding(0.1);\n\t\n\t                yScale = d3Scale.scaleLinear().domain([0, yMax]).rangeRound([chartHeight, 0]).nice();\n\t            } else {\n\t                xScale = d3Scale.scaleLinear().domain([0, yMax]).rangeRound([0, chartWidth - 1]);\n\t                // 1 pix for edge tick\n\t\n\t                yScale = d3Scale.scaleBand().domain(data.map(getName)).rangeRound([chartHeight, 0]).padding(0.1);\n\t            }\n\t\n\t            colorScale = d3Scale.scaleOrdinal().range(colorSchema).domain(data.map(getStack));\n\t\n\t            categoryColorMap = colorScale.domain(data.map(getName)).domain().reduce(function (memo, item, i) {\n\t                data.forEach(function (v) {\n\t                    if (getName(v) == item) {\n\t                        memo[v.name] = colorScale(v.stack);\n\t                        memo[v.stack] = colorScale(v.stack);\n\t                        memo[v.stack + item] = colorScale(v.stack);\n\t                    }\n\t                });\n\t                return memo;\n\t            }, {});\n\t        }\n\t\n\t        /**\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart stacked-bar', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Parses dates and values into JS Date objects and numbers\n\t         * @param  {obj} data Raw data from JSON file\n\t         * @return {obj}      Parsed data with values and dates\n\t         */\n\t        function cleanData(data) {\n\t            return data.map(function (d) {\n\t                d.value = +d[valueLabel];\n\t                d.stack = d[stackLabel];\n\t                d.topicName = getStack(d); // for tooltip\n\t                d.name = d[nameLabel];\n\t\n\t                return d;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws the x and y axis on the svg object within their\n\t         * respective groups\n\t         * @private\n\t         */\n\t        function drawAxis() {\n\t            if (!horizontal) {\n\t                svg.select('.x-axis-group .axis.x').attr('transform', 'translate( 0, ' + chartHeight + ' )').call(xAxis);\n\t\n\t                svg.select('.y-axis-group.axis').attr('transform', 'translate( ' + -xAxisPadding.left + ', 0)').call(yAxis).call(adjustYTickLabels);\n\t            } else {\n\t                svg.select('.x-axis-group .axis.x').attr('transform', 'translate( 0, ' + chartHeight + ' )').call(xAxis);\n\t\n\t                svg.select('.y-axis-group.axis').attr('transform', 'translate( ' + -xAxisPadding.left + ', 0)').call(yAxis);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws grid lines on the background of the chart\n\t         * @return void\n\t         */\n\t        function drawGridLines() {\n\t            var scale = horizontal ? xScale : yScale;\n\t\n\t            if (grid === 'horizontal' || grid === 'full') {\n\t                svg.select('.grid-lines-group').selectAll('line.horizontal-grid-line').data(scale.ticks(numOfVerticalTicks).slice(1)).enter().append('line').attr('class', 'horizontal-grid-line').attr('x1', -xAxisPadding.left + 1).attr('x2', chartWidth).attr('y1', function (d) {\n\t                    return yScale(d);\n\t                }).attr('y2', function (d) {\n\t                    return yScale(d);\n\t                });\n\t            }\n\t\n\t            if (grid === 'vertical' || grid === 'full') {\n\t                svg.select('.grid-lines-group').selectAll('line.vertical-grid-line').data(scale.ticks(numOfHorizontalTicks).slice(1)).enter().append('line').attr('class', 'vertical-grid-line').attr('y1', 0).attr('y2', chartHeight).attr('x1', function (d) {\n\t                    return xScale(d);\n\t                }).attr('x2', function (d) {\n\t                    return xScale(d);\n\t                });\n\t            }\n\t\n\t            if (horizontal) {\n\t                drawVerticalExtendedLine();\n\t            } else {\n\t                drawHorizontalExtendedLine();\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the bars along the x axis\n\t         * @param  {D3Selection} bars Selection of bars\n\t         * @return {void}\n\t         */\n\t        function drawHorizontalBars(series) {\n\t            // Enter + Update\n\t            var context = void 0,\n\t                bars = series.data(layers).enter().append('g').classed('layer', true).attr('fill', function (_ref) {\n\t                var key = _ref.key;\n\t                return categoryColorMap[key];\n\t            }).selectAll('.bar').data(function (d) {\n\t                return d;\n\t            }).enter().append('rect').classed('bar', true).attr('x', function (d) {\n\t                return xScale(d[0]);\n\t            }).attr('y', function (d) {\n\t                return yScale(d.data.key);\n\t            }).attr('height', yScale.bandwidth()).attr('fill', function (_ref2) {\n\t                var data = _ref2.data;\n\t                return categoryColorMap[data.stack + data.key];\n\t            });\n\t\n\t            if (isAnimated) {\n\t                bars.style('opacity', 0.24).transition().delay(function (_, i) {\n\t                    return animationDelays[i];\n\t                }).duration(animationDuration).ease(ease).tween('attr.width', function (d) {\n\t                    var node = d3Selection.select(this),\n\t                        i = d3Interpolate.interpolateRound(0, xScale(d[1] - d[0])),\n\t                        j = d3Interpolate.interpolateNumber(0, 1);\n\t\n\t                    return function (t) {\n\t                        node.attr('width', i(t));\n\t                        node.style('opacity', j(t));\n\t                    };\n\t                });\n\t            } else {\n\t                bars.attr('width', function (d) {\n\t                    return xScale(d[1] - d[0]);\n\t                });\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws a vertical line to extend x-axis till the edges\n\t         * @return {void}\n\t         */\n\t        function drawHorizontalExtendedLine() {\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-x-line').data([0]).enter().append('line').attr('class', 'extended-x-line').attr('x1', xAxisPadding.left).attr('x2', chartWidth).attr('y1', chartHeight).attr('y2', chartHeight);\n\t        }\n\t\n\t        /**\n\t         * Draws the bars along the y axis\n\t         * @param  {D3Selection} bars Selection of bars\n\t         * @return {void}\n\t         */\n\t        function drawVerticalBars(series) {\n\t            // Enter + Update\n\t            var bars = series.data(layers).enter().append('g').classed('layer', true).attr('fill', function (_ref3) {\n\t                var key = _ref3.key;\n\t                return categoryColorMap[key];\n\t            }).selectAll('.bar').data(function (d) {\n\t                return d;\n\t            }).enter().append('rect').classed('bar', true).attr('x', function (d) {\n\t                return xScale(d.data.key);\n\t            }).attr('y', function (d) {\n\t                return yScale(d[1]);\n\t            }).attr('width', xScale.bandwidth).attr('fill', function (_ref4) {\n\t                var data = _ref4.data;\n\t                return categoryColorMap[data.stack + data.key];\n\t            }),\n\t                context = void 0;\n\t\n\t            if (isAnimated) {\n\t                bars.style('opacity', 0.24).transition().delay(function (_, i) {\n\t                    return animationDelays[i];\n\t                }).duration(animationDuration).ease(ease).tween('attr.height', function (d) {\n\t                    var node = d3Selection.select(this),\n\t                        i = d3Interpolate.interpolateRound(0, yScale(d[0]) - yScale(d[1])),\n\t                        j = d3Interpolate.interpolateNumber(0, 1);\n\t\n\t                    return function (t) {\n\t                        node.attr('height', i(t));\n\t                        node.style('opacity', j(t));\n\t                    };\n\t                });\n\t            } else {\n\t                bars.attr('height', function (d) {\n\t                    return yScale(d[0]) - yScale(d[1]);\n\t                });\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws a vertical line to extend y-axis till the edges\n\t         * @return {void}\n\t         */\n\t        function drawVerticalExtendedLine() {\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-y-line').data([0]).enter().append('line').attr('class', 'extended-y-line').attr('y1', xAxisPadding.bottom).attr('y2', chartHeight).attr('x1', 0).attr('x2', 0);\n\t        }\n\t\n\t        /**\n\t         * Draws the different areas into the chart-group element\n\t         * @private\n\t         */\n\t        function drawStackedBar() {\n\t            var series = svg.select('.chart-group').selectAll('.layer');\n\t\n\t            if (!horizontal) {\n\t                drawVerticalBars(series);\n\t            } else {\n\t                drawHorizontalBars(series);\n\t            }\n\t            // Exit\n\t            series.exit().transition().style('opacity', 0).remove();\n\t        }\n\t\n\t        /**\n\t         * Extract X position on the chart from a given mouse event\n\t         * @param  {obj} event D3 mouse event\n\t         * @return {Number}       Position on the x axis of the mouse\n\t         * @private\n\t         */\n\t        function getMousePosition(event) {\n\t            return d3Selection.mouse(event);\n\t        }\n\t\n\t        /**\n\t         * Finds out the data entry that is closer to the given position on pixels\n\t         * @param  {Number} mouseX  X position of the mouse\n\t         * @return {obj}            Data entry that is closer to that x axis position\n\t         */\n\t        function getNearestDataPoint(mouseX) {\n\t            var adjustedMouseX = mouseX - margin.left,\n\t                dataByValueParsed = transformedData.map(function (item) {\n\t                item.key = item.key;\n\t                return item;\n\t            }),\n\t                epsilon = void 0,\n\t                nearest = void 0;\n\t\n\t            epsilon = xScale(dataByValueParsed[1].key) - xScale(dataByValueParsed[0].key);\n\t            nearest = dataByValueParsed.find(function (_ref5) {\n\t                var key = _ref5.key;\n\t                return Math.abs(xScale(key) - adjustedMouseX) <= epsilon;\n\t            });\n\t\n\t            return nearest;\n\t        }\n\t\n\t        /**\n\t        * Finds out the data entry that is closer to the given position on pixels\n\t        * @param  {Number} mouseY  Y position of the mouse\n\t        * @return {obj}            Data entry that is closer to that y axis position\n\t        */\n\t\n\t        function getNearestDataPoint2(mouseY) {\n\t            var adjustedMouseY = mouseY - margin.bottom,\n\t                epsilon = yScale.bandwidth(),\n\t                nearest = void 0;\n\t\n\t            nearest = layers.map(function (stackedArray) {\n\t                return stackedArray.map(function (d1) {\n\t                    var found = d1.data.values.find(function (d2) {\n\t                        return Math.abs(adjustedMouseY >= yScale(d2[nameLabel])) && Math.abs(adjustedMouseY - yScale(d2[nameLabel]) <= epsilon * 2);\n\t                    });\n\t                    return found ? d1.data : undefined;\n\t                });\n\t            });\n\t            nearest = d3Array.merge(nearest).filter(function (e) {\n\t                return e;\n\t            });\n\t\n\t            return nearest.length ? nearest[0] : undefined;\n\t        }\n\t\n\t        /**\n\t         * Handles a mouseover event on top of a bar\n\t         * @param  {obj} d data of bar\n\t         * @return {void}\n\t         */\n\t        function handleBarsMouseOver(d) {\n\t            var _this = this;\n\t\n\t            d3Selection.select(this).attr('fill', function () {\n\t                return d3Color.color(d3Selection.select(_this.parentNode).attr('fill')).darker();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Handles a mouseout event out of a bar\n\t         * @param  {obj} d data of bar\n\t         * @return {void}\n\t         */\n\t        function handleBarsMouseOut(d) {\n\t            var _this2 = this;\n\t\n\t            d3Selection.select(this).attr('fill', function () {\n\t                return d3Selection.select(_this2.parentNode).attr('fill');\n\t            });\n\t        }\n\t\n\t        /**\n\t         * MouseMove handler, calculates the nearest dataPoint to the cursor\n\t         * and updates metadata related to it\n\t         * @private\n\t         */\n\t        function handleMouseMove() {\n\t            var _getMousePosition = getMousePosition(this),\n\t                _getMousePosition2 = _slicedToArray(_getMousePosition, 2),\n\t                mouseX = _getMousePosition2[0],\n\t                mouseY = _getMousePosition2[1],\n\t                dataPoint = !horizontal ? getNearestDataPoint(mouseX) : getNearestDataPoint2(mouseY),\n\t                x = void 0,\n\t                y = void 0;\n\t\n\t            if (dataPoint) {\n\t                // Move verticalMarker to that datapoint\n\t                if (horizontal) {\n\t                    x = mouseX - margin.left;\n\t                    y = yScale(dataPoint.key) + yScale.bandwidth() / 2;\n\t                } else {\n\t                    x = xScale(dataPoint.key) + margin.left;\n\t                    y = mouseY - margin.bottom;\n\t                }\n\t                moveTooltipOriginXY(x, y);\n\t\n\t                // Emit event with xPosition for tooltip or similar feature\n\t                dispatcher.call('customMouseMove', this, dataPoint, categoryColorMap, x, y);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n\t         * It also resets the container of the vertical marker\n\t         * @private\n\t         */\n\t        function handleMouseOut(d) {\n\t            svg.select('.metadata-group').attr('transform', 'translate(9999, 0)');\n\t            dispatcher.call('customMouseOut', this, d);\n\t        }\n\t\n\t        /**\n\t         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n\t         * @private\n\t         */\n\t        function handleMouseOver(d) {\n\t            dispatcher.call('customMouseOver', this, d);\n\t        }\n\t\n\t        /**\n\t         * Helper method to update the x position of the vertical marker\n\t         * @param  {obj} dataPoint Data entry to extract info\n\t         * @return void\n\t         */\n\t        function moveTooltipOriginXY(originXPosition, originYPosition) {\n\t            svg.select('.metadata-group').attr('transform', 'translate(' + originXPosition + ',' + originYPosition + ')');\n\t        }\n\t\n\t        /**\n\t         * Prepare data for create chart.\n\t         * @private\n\t         */\n\t        function prepareData(data) {\n\t            stacks = uniq(data.map(function (_ref6) {\n\t                var stack = _ref6.stack;\n\t                return stack;\n\t            }));\n\t            transformedData = d3Collection.nest().key(getName).rollup(function (values) {\n\t                var ret = {};\n\t\n\t                values.forEach(function (entry) {\n\t                    if (entry && entry[stackLabel]) {\n\t                        ret[entry[stackLabel]] = getValue(entry);\n\t                    }\n\t                });\n\t                ret.values = values; //for tooltip\n\t\n\t                return ret;\n\t            }).entries(data).map(function (data) {\n\t                return assign({}, {\n\t                    total: d3Array.sum(d3Array.permute(data.value, stacks)),\n\t                    key: data.key\n\t                }, data.value);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Determines if we should add the tooltip related logic depending on the\n\t         * size of the chart and the tooltipThreshold variable value\n\t         * @return {boolean} Should we build the tooltip?\n\t         * @private\n\t         */\n\t        function shouldShowTooltip() {\n\t            return width > tooltipThreshold;\n\t        }\n\t\n\t        // API\n\t        /**\n\t         * Gets or Sets the aspect ratio of the chart\n\t         * @param  {Number} _x Desired aspect ratio for the graph\n\t         * @return { (Number | Module) } Current aspect ratio or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.aspectRatio = function (_x) {\n\t            if (!arguments.length) {\n\t                return aspectRatio;\n\t            }\n\t            aspectRatio = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the colorSchema of the chart\n\t         * @param  {String[]} _x Desired colorSchema for the graph\n\t         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.colorSchema = function (_x) {\n\t            if (!arguments.length) {\n\t                return colorSchema;\n\t            }\n\t            colorSchema = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename, title) {\n\t            exportChart.call(exports, svg, filename, title);\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the grid mode.\n\t         *\n\t         * @param  {String} _x Desired mode for the grid ('vertical'|'horizontal'|'full')\n\t         * @return { String | module} Current mode of the grid or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.grid = function (_x) {\n\t            if (!arguments.length) {\n\t                return grid;\n\t            }\n\t            grid = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            if (aspectRatio) {\n\t                width = Math.ceil(_x / aspectRatio);\n\t            }\n\t            height = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the horizontal direction of the chart\n\t         * @param  {number} _x Desired horizontal direction for the graph\n\t         * @return { horizontal | module} Current horizontal direction or Bar Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.horizontal = function (_x) {\n\t            if (!arguments.length) {\n\t                return horizontal;\n\t            }\n\t            horizontal = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n\t         * By default this is 'false'\n\t         *\n\t         * @param  {Boolean} _x Desired animation flag\n\t         * @return { isAnimated | module} Current isAnimated flag or Chart module\n\t         * @public\n\t         */\n\t        exports.isAnimated = function (_x) {\n\t            if (!arguments.length) {\n\t                return isAnimated;\n\t            }\n\t            isAnimated = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { margin | module} Current margin or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the nameLabel of the chart\n\t         * @param  {Number} _x Desired dateLabel for the graph\n\t         * @return { nameLabel | module} Current nameLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.nameLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return nameLabel;\n\t            }\n\t            nameLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabelFormat of the chart\n\t         * @param  {String[]} _x Desired valueLabelFormat for the graph\n\t         * @return { valueLabelFormat | module} Current valueLabelFormat or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.nameLabelFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return nameLabelFormat;\n\t            }\n\t            nameLabelFormat = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the number of verticalTicks of the axis on the chart\n\t         * @param  {Number} _x Desired verticalTicks\n\t         * @return { numOfHorizontalTicks | module} Current numOfHorizontalTicks or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.numOfHorizontalTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return numOfHorizontalTicks;\n\t            }\n\t            numOfHorizontalTicks = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the number of verticalTicks of the axis on the chart\n\t         * @param  {Number} _x Desired verticalTicks\n\t         * @return { numOfVerticalTicks | module} Current numOfVerticalTicks or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.numOfVerticalTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return numOfVerticalTicks;\n\t            }\n\t            numOfVerticalTicks = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n\t         * We are going to expose this events:\n\t         * customMouseOver, customMouseMove and customMouseOut\n\t         *\n\t         * @return {module} Bar Chart\n\t         * @public\n\t         */\n\t        exports.on = function () {\n\t            var value = dispatcher.on.apply(dispatcher, arguments);\n\t\n\t            return value === dispatcher ? exports : value;\n\t        };\n\t\n\t        /**\n\t         * Configurable extension of the x axis\n\t         * if your max point was 50% you might want to show x axis to 60%, pass 1.2\n\t         * @param  {number} _x ratio to max data point to add to the x axis\n\t         * @return { ratio | module} Current ratio or Bar Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.percentageAxisToMaxRatio = function (_x) {\n\t            if (!arguments.length) {\n\t                return percentageAxisToMaxRatio;\n\t            }\n\t            percentageAxisToMaxRatio = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the stackLabel of the chart\n\t         * @param  {String} _x Desired stackLabel for the graph\n\t         * @return { stackLabel | module} Current stackLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.stackLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return stackLabel;\n\t            }\n\t            stackLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the minimum width of the graph in order to show the tooltip\n\t         * NOTE: This could also depend on the aspect ratio\n\t         *\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { tooltipThreshold | module} Current tooltipThreshold or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.tooltipThreshold = function (_x) {\n\t            if (!arguments.length) {\n\t                return tooltipThreshold;\n\t            }\n\t            tooltipThreshold = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabel of the chart\n\t         * @param  {Number} _x Desired valueLabel for the graph\n\t         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabel;\n\t            }\n\t            valueLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabelFormat of the chart\n\t         * @param  {String[]} _x Desired valueLabelFormat for the graph\n\t         * @return { valueLabelFormat | module} Current valueLabelFormat or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabelFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabelFormat;\n\t            }\n\t            valueLabelFormat = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { width | module} Current width or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            if (aspectRatio) {\n\t                height = Math.ceil(_x * aspectRatio);\n\t            }\n\t            width = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Axis = __webpack_require__(4);\n\t    var d3Dispatch = __webpack_require__(6);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Format = __webpack_require__(7);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t\n\t    var _require = __webpack_require__(17),\n\t        exportChart = _require.exportChart;\n\t\n\t    /**\n\t     * @typedef StepChartData\n\t     * @type Object[]\n\t     *\n\t     * @property {String} key      Key we measure (required)\n\t     * @property {Number} value    value of the key (required)\n\t     *\n\t     * @example\n\t     * [\n\t     *     {\n\t     *         value: 1,\n\t     *         key: 'glittering'\n\t     *     },\n\t     *     {\n\t     *         value: 1,\n\t     *         key: 'luminous'\n\t     *     }\n\t     * ]\n\t     */\n\t\n\t    /**\n\t     * Step Chart reusable API class that renders a\n\t     * simple and configurable step chart.\n\t     *\n\t     * @module Step\n\t     * @tutorial step\n\t     * @requires d3-array, d3-axis, d3-dispatch, d3-format, d3-scale, d3-selection, d3-transition\n\t     *\n\t     * @example\n\t     * var stepChart= step();\n\t     *\n\t     * stepChart\n\t     *     .height(500)\n\t     *     .width(800);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(stepChart);\n\t     *\n\t     */\n\t\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 20,\n\t            right: 20,\n\t            bottom: 30,\n\t            left: 40\n\t        },\n\t            width = 960,\n\t            height = 500,\n\t            ease = d3Ease.easeQuadInOut,\n\t            data = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            xScale = void 0,\n\t            yScale = void 0,\n\t            numOfVerticalTicks = 6,\n\t            xAxis = void 0,\n\t            xAxisLabel = void 0,\n\t            yAxis = void 0,\n\t            yAxisLabel = void 0,\n\t            xAxisLabelOffset = 45,\n\t            yAxisLabelOffset = -20,\n\t            xAxisPadding = {\n\t            top: 0,\n\t            left: 0,\n\t            bottom: 0,\n\t            right: 0\n\t        },\n\t            yTickPadding = 8,\n\t            svg = void 0,\n\t            valueLabel = 'value',\n\t            nameLabel = 'key',\n\t            maskGridLines = void 0,\n\t            baseLine = void 0,\n\t\n\t\n\t        // Dispatcher object to broadcast the mouse events\n\t        // Ref: https://github.com/mbostock/d3/wiki/Internals#d3_dispatch\n\t        dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove'),\n\t\n\t\n\t        // Formats\n\t        yAxisTickFormat = d3Format.format('.3'),\n\t\n\t\n\t        // extractors\n\t        getKey = function getKey(_ref) {\n\t            var key = _ref.key;\n\t            return key;\n\t        },\n\t            getValue = function getValue(_ref2) {\n\t            var value = _ref2.value;\n\t            return value;\n\t        };\n\t\n\t        /**\n\t         * This function creates the graph using the selection as container\n\t         * @param  {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {StepChartData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                // Make space on the left of the graph for the y axis label\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = cleanData(_data);\n\t\n\t                buildScales();\n\t                buildAxis();\n\t                buildSVG(this);\n\t                drawGridLines();\n\t                drawSteps();\n\t                drawAxis();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates the d3 x and y axis, setting orientations\n\t         * @private\n\t         */\n\t        function buildAxis() {\n\t            xAxis = d3Axis.axisBottom(xScale);\n\t\n\t            yAxis = d3Axis.axisLeft(yScale).ticks(numOfVerticalTicks).tickPadding(yTickPadding).tickFormat(yAxisTickFormat);\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * Also applies the Margin convention\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');\n\t\n\t            container.append('g').classed('grid-lines-group', true);\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('x-axis-group axis', true).append('g').classed('x-axis-label', true);\n\t            container.append('g').classed('y-axis-group axis', true).append('g').classed('y-axis-label', true);\n\t            container.append('g').classed('metadata-group', true);\n\t        }\n\t\n\t        /**\n\t         * Creates the x and y scales of the graph\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t            xScale = d3Scale.scaleBand().domain(data.map(getKey)).rangeRound([0, chartWidth]).paddingInner(0);\n\t\n\t            yScale = d3Scale.scaleLinear().domain([0, d3Array.max(data, getValue)]).rangeRound([chartHeight, 0]);\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart step-chart', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Cleaning data adding the proper format\n\t         * @param  {StepChartData} data Data\n\t         * @private\n\t         */\n\t        function cleanData(data) {\n\t            return data.map(function (d) {\n\t                d.value = +d[valueLabel];\n\t                d.key = String(d[nameLabel]);\n\t\n\t                return d;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws the x and y axis on the svg object within their\n\t         * respective groups\n\t         * @private\n\t         */\n\t        function drawAxis() {\n\t            svg.select('.x-axis-group.axis').attr('transform', 'translate(0, ' + chartHeight + ')').call(xAxis);\n\t\n\t            if (xAxisLabel) {\n\t                svg.select('.x-axis-label').append('text').attr('text-anchor', 'middle').attr('x', chartWidth / 2).attr('y', xAxisLabelOffset).text(xAxisLabel);\n\t            }\n\t\n\t            svg.select('.y-axis-group.axis').call(yAxis);\n\t\n\t            if (yAxisLabel) {\n\t                svg.select('.y-axis-label').append('text').attr('x', -chartHeight / 2).attr('y', yAxisLabelOffset).attr('text-anchor', 'middle').attr('transform', 'rotate(270 0 0)').text(yAxisLabel);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the step elements within the chart group\n\t         * @private\n\t         */\n\t        function drawSteps() {\n\t            var steps = svg.select('.chart-group').selectAll('.step').data(data);\n\t\n\t            // Enter\n\t            steps.enter().append('rect').classed('step', true).attr('x', chartWidth) // Initially drawing the steps at the end of Y axis\n\t            .attr('y', function (_ref3) {\n\t                var value = _ref3.value;\n\t                return yScale(value);\n\t            }).attr('width', xScale.bandwidth()).attr('height', function (d) {\n\t                return chartHeight - yScale(d.value);\n\t            }).on('mouseover', function () {\n\t                dispatcher.call('customMouseOver', this);\n\t            }).on('mousemove', function (d) {\n\t                dispatcher.call('customMouseMove', this, d, d3Selection.mouse(this), [chartWidth, chartHeight]);\n\t            }).on('mouseout', function () {\n\t                dispatcher.call('customMouseOut', this);\n\t            }).merge(steps).transition().ease(ease).attr('x', function (_ref4) {\n\t                var key = _ref4.key;\n\t                return xScale(key);\n\t            }).attr('y', function (d) {\n\t                return yScale(d.value);\n\t            }).attr('width', xScale.bandwidth()).attr('height', function (d) {\n\t                return chartHeight - yScale(d.value);\n\t            });\n\t\n\t            // Exit\n\t            steps.exit().transition().style('opacity', 0).remove();\n\t        }\n\t\n\t        /**\n\t         * Draws grid lines on the background of the chart\n\t         * @return void\n\t         */\n\t        function drawGridLines() {\n\t            maskGridLines = svg.select('.grid-lines-group').selectAll('line.horizontal-grid-line').data(yScale.ticks(numOfVerticalTicks)).enter().append('line').attr('class', 'horizontal-grid-line').attr('x1', xAxisPadding.left).attr('x2', chartWidth).attr('y1', function (d) {\n\t                return yScale(d);\n\t            }).attr('y2', function (d) {\n\t                return yScale(d);\n\t            });\n\t\n\t            //draw a horizontal line to extend x-axis till the edges\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-x-line').data([0]).enter().append('line').attr('class', 'extended-x-line').attr('x1', xAxisPadding.left).attr('x2', chartWidth).attr('y1', height - margin.bottom - margin.top).attr('y2', height - margin.bottom - margin.top);\n\t        }\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename) {\n\t            exportChart.call(exports, svg, filename);\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {object} _x Margin object to get/set\n\t         * @return { margin | module} Current margin or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { width | module} Current width or step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            width = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            height = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the number of vertical ticks on the chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.numOfVerticalTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return numOfVerticalTicks;\n\t            }\n\t            numOfVerticalTicks = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the text of the xAxisLabel on the chart\n\t         * @param  {text} _x Desired text for the label\n\t         * @return { text | module} label or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.xAxisLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return xAxisLabel;\n\t            }\n\t            xAxisLabel = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the offset of the xAxisLabel on the chart\n\t         * @param  {integer} _x Desired offset for the label\n\t         * @return { integer | module} label or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.xAxisLabelOffset = function (_x) {\n\t            if (!arguments.length) {\n\t                return xAxisLabelOffset;\n\t            }\n\t            xAxisLabelOffset = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the text of the yAxisLabel on the chart\n\t         * @param  {text} _x Desired text for the label\n\t         * @return { text | module} label or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.yAxisLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return yAxisLabel;\n\t            }\n\t            yAxisLabel = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the offset of the yAxisLabel on the chart\n\t         * @param  {integer} _x Desired offset for the label\n\t         * @return { integer | module} label or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.yAxisLabelOffset = function (_x) {\n\t            if (!arguments.length) {\n\t                return yAxisLabelOffset;\n\t            }\n\t            yAxisLabelOffset = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n\t         * We are going to expose this events:\n\t         * customMouseOver, customMouseMove and customMouseOut\n\t         *\n\t         * @return {module} Bar Chart\n\t         * @public\n\t         */\n\t        exports.on = function () {\n\t            var value = dispatcher.on.apply(dispatcher, arguments);\n\t\n\t            return value === dispatcher ? exports : value;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename, title) {\n\t            exportChart.call(exports, svg, filename, title);\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Axis = __webpack_require__(4);\n\t    var d3Brush = __webpack_require__(40);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Shape = __webpack_require__(24);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Time = __webpack_require__(11);\n\t    var d3Transition = __webpack_require__(14);\n\t    var d3TimeFormat = __webpack_require__(12);\n\t\n\t    var colorHelper = __webpack_require__(18);\n\t    var timeAxisHelper = __webpack_require__(29);\n\t\n\t    var _require = __webpack_require__(19),\n\t        axisTimeCombinations = _require.axisTimeCombinations;\n\t\n\t    /**\n\t     * @typedef BrushChartData\n\t     * @type {Object[]}\n\t     * @property {Number} value        Value to chart (required)\n\t     * @property {Date} date           Date of the value (required)\n\t     *\n\t     * @example\n\t     * [\n\t     *     {\n\t     *         value: 1,\n\t     *         date: '2011-01-06T00:00:00Z'\n\t     *     },\n\t     *     {\n\t     *         value: 2,\n\t     *         date: '2011-01-07T00:00:00Z'\n\t     *     }\n\t     * ]\n\t     */\n\t\n\t    /**\n\t     * Brush Chart reusable API class that renders a\n\t     * simple and configurable brush chart.\n\t     *\n\t     * @module Brush\n\t     * @tutorial brush\n\t     * @requires d3-array, d3-axis, d3-brush, d3-ease, d3-scale, d3-shape, d3-selection, d3-time, d3-time-format\n\t     *\n\t     * @example\n\t     * let brushChart = brush();\n\t     *\n\t     * brushChart\n\t     *     .height(500)\n\t     *     .width(800);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(brushChart);\n\t     *\n\t     */\n\t\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 20,\n\t            right: 20,\n\t            bottom: 30,\n\t            left: 20\n\t        },\n\t            width = 960,\n\t            height = 500,\n\t            data = void 0,\n\t            svg = void 0,\n\t            ease = d3Ease.easeQuadOut,\n\t            dateLabel = 'date',\n\t            valueLabel = 'value',\n\t            dateRange = [null, null],\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            xScale = void 0,\n\t            yScale = void 0,\n\t            xAxis = void 0,\n\t            forceAxisSettings = null,\n\t            forcedXTicks = null,\n\t            forcedXFormat = null,\n\t            brush = void 0,\n\t            chartBrush = void 0,\n\t            handle = void 0,\n\t            tickPadding = 5,\n\t            onBrush = null,\n\t            gradient = colorHelper.colorGradients.greenBlueGradient,\n\t\n\t\n\t        // extractors\n\t        getValue = function getValue(_ref) {\n\t            var value = _ref.value;\n\t            return value;\n\t        },\n\t            getDate = function getDate(_ref2) {\n\t            var date = _ref2.date;\n\t            return date;\n\t        };\n\t\n\t        /**\n\t         * This function creates the graph using the selection as container\n\t         * @param  {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {BrushChartData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = cleanData(cloneData(_data));\n\t\n\t                buildScales();\n\t                buildAxis();\n\t                buildSVG(this);\n\t                buildGradient();\n\t                buildBrush();\n\t                drawArea();\n\t                drawAxis();\n\t                drawBrush();\n\t                drawHandles();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates the d3 x axis, setting orientation\n\t         * @private\n\t         */\n\t        function buildAxis() {\n\t            var minor = void 0,\n\t                major = void 0;\n\t\n\t            if (forceAxisSettings === 'custom' && typeof forcedXFormat === 'string') {\n\t                minor = {\n\t                    tick: forcedXTicks,\n\t                    format: d3TimeFormat.timeFormat(forcedXFormat)\n\t                };\n\t            } else {\n\t                var _timeAxisHelper$getXA = timeAxisHelper.getXAxisSettings(data, width, forceAxisSettings);\n\t\n\t                minor = _timeAxisHelper$getXA.minor;\n\t                major = _timeAxisHelper$getXA.major;\n\t            }\n\t\n\t            xAxis = d3Axis.axisBottom(xScale).ticks(minor.tick).tickSize(10, 0).tickPadding([tickPadding]).tickFormat(minor.format);\n\t        }\n\t\n\t        /**\n\t         * Creates the brush element and attaches a listener\n\t         * @return {void}\n\t         */\n\t        function buildBrush() {\n\t            brush = d3Brush.brushX().extent([[0, 0], [chartWidth, chartHeight]]).on('brush', handleBrush).on('end', handleBrushEnded);\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * Also applies the Margin convention\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');\n\t\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('metadata-group', true);\n\t            container.append('g').classed('x-axis-group', true);\n\t            container.append('g').classed('brush-group', true);\n\t        }\n\t\n\t        /**\n\t         * Creates the gradient on the area\n\t         * @return {void}\n\t         */\n\t        function buildGradient() {\n\t            var metadataGroup = svg.select('.metadata-group');\n\t\n\t            metadataGroup.append('linearGradient').attr('id', 'brush-area-gradient').attr('gradientUnits', 'userSpaceOnUse').attr('x1', 0).attr('x2', xScale(data[data.length - 1].date)).attr('y1', 0).attr('y2', 0).selectAll('stop').data([{ offset: '0%', color: gradient[0] }, { offset: '100%', color: gradient[1] }]).enter().append('stop').attr('offset', function (_ref3) {\n\t                var offset = _ref3.offset;\n\t                return offset;\n\t            }).attr('stop-color', function (_ref4) {\n\t                var color = _ref4.color;\n\t                return color;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates the x and y scales of the graph\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t            xScale = d3Scale.scaleTime().domain(d3Array.extent(data, getDate)).range([0, chartWidth]);\n\t\n\t            yScale = d3Scale.scaleLinear().domain([0, d3Array.max(data, getValue)]).range([chartHeight, 0]);\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart brush-chart', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Cleaning data adding the proper format\n\t         *\n\t         * @param  {BrushChartData} data Data\n\t         */\n\t        function cleanData(data) {\n\t            return data.map(function (d) {\n\t                d.date = new Date(d[dateLabel]);\n\t                d.value = +d[valueLabel];\n\t\n\t                return d;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Clones the passed array of data\n\t         * @param  {Object[]} dataToClone Data to clone\n\t         * @return {Object[]}             Cloned data\n\t         */\n\t        function cloneData(dataToClone) {\n\t            return JSON.parse(JSON.stringify(dataToClone));\n\t        }\n\t\n\t        /**\n\t         * Draws the x axis on the svg object within its group\n\t         *\n\t         * @private\n\t         */\n\t        function drawAxis() {\n\t            svg.select('.x-axis-group').append('g').attr('class', 'x axis').attr('transform', 'translate(0, ' + chartHeight + ')').call(xAxis);\n\t        }\n\t\n\t        /**\n\t         * Draws the area that is going to represent the data\n\t         *\n\t         * @return {void}\n\t         */\n\t        function drawArea() {\n\t            // Create and configure the area generator\n\t            var area = d3Shape.area().x(function (_ref5) {\n\t                var date = _ref5.date;\n\t                return xScale(date);\n\t            }).y0(chartHeight).y1(function (_ref6) {\n\t                var value = _ref6.value;\n\t                return yScale(value);\n\t            }).curve(d3Shape.curveBasis);\n\t\n\t            // Create the area path\n\t            svg.select('.chart-group').append('path').datum(data).attr('class', 'brush-area').attr('d', area);\n\t        }\n\t\n\t        /**\n\t         * Draws the Brush components on its group\n\t         * @return {void}\n\t         */\n\t        function drawBrush() {\n\t            chartBrush = svg.select('.brush-group').call(brush);\n\t\n\t            // Update the height of the brushing rectangle\n\t            chartBrush.selectAll('rect').classed('brush-rect', true).attr('height', chartHeight);\n\t        }\n\t\n\t        /**\n\t         * Draws a handle for the Brush section\n\t         * @return {void}\n\t         */\n\t        function drawHandles() {\n\t            var handleFillColor = colorHelper.colorSchemasHuman.britechartsGreySchema[1];\n\t\n\t            // Styling\n\t            handle = chartBrush.selectAll('.handle.brush-rect').style('fill', handleFillColor);\n\t        }\n\t\n\t        /**\n\t         * When a brush event happens, we can extract info from the extension\n\t         * of the brush.\n\t         *\n\t         * @return {void}\n\t         */\n\t        function handleBrush() {\n\t            var s = d3Selection.event.selection,\n\t                dateExtent = s.map(xScale.invert);\n\t\n\t            if (typeof onBrush === 'function') {\n\t                onBrush.call(null, dateExtent);\n\t            }\n\t\n\t            // updateHandlers(dateExtent);\n\t        }\n\t\n\t        /**\n\t         * Processes the end brush event, snapping the boundaries to days\n\t         * as showed on the example on https://bl.ocks.org/mbostock/6232537\n\t         * @return {void}\n\t         * @private\n\t         */\n\t        function handleBrushEnded() {\n\t            if (!d3Selection.event.sourceEvent) return; // Only transition after input.\n\t            if (!d3Selection.event.selection) return; // Ignore empty selections.\n\t\n\t            var d0 = d3Selection.event.selection.map(xScale.invert),\n\t                d1 = d0.map(d3Time.timeDay.round);\n\t\n\t            // If empty when rounded, use floor & ceil instead.\n\t            if (d1[0] >= d1[1]) {\n\t                d1[0] = d3Time.timeDay.floor(d0[0]);\n\t                d1[1] = d3Time.timeDay.offset(d1[0]);\n\t            }\n\t\n\t            d3Selection.select(this).transition().call(d3Selection.event.target.move, d1.map(xScale));\n\t        }\n\t\n\t        /**\n\t         * Sets a new brush extent within the passed percentage positions\n\t         * @param {Number} a Percentage of data that the brush start with\n\t         * @param {Number} b Percentage of data that the brush ends with\n\t         * @example\n\t         *     setBrushByPercentages(0.25, 0.5)\n\t         */\n\t        function setBrushByPercentages(a, b) {\n\t            var x0 = a * chartWidth,\n\t                x1 = b * chartWidth;\n\t\n\t            brush.move(chartBrush, [x0, x1]);\n\t        }\n\t\n\t        /**\n\t         * Sets a new brush extent within the passed dates\n\t         * @param {String | Date} dateA Initial Date\n\t         * @param {String | Date} dateB End Date\n\t         */\n\t        function setBrushByDates(dateA, dateB) {\n\t            var x0 = xScale(new Date(dateA)),\n\t                x1 = xScale(new Date(dateB));\n\t\n\t            brush.move(chartBrush, [x0, x1]);\n\t        }\n\t\n\t        /**\n\t         * Updates visibility and position of the brush handlers\n\t         * @param  {Number[]} dateExtent Date range\n\t         * @return {void}\n\t         */\n\t        function updateHandlers(dateExtent) {\n\t            if (dateExtent == null) {\n\t                handle.attr('display', 'none');\n\t            } else {\n\t                handle.attr('display', null).attr('transform', function (d, i) {\n\t                    return 'translate(' + dateExtent[i] + ',' + chartHeight / 2 + ')';\n\t                });\n\t            }\n\t        }\n\t\n\t        // API\n\t\n\t        /**\n\t         * Gets or Sets the dateRange for the selected part of the brush\n\t         * @param  {String[]} _x Desired dateRange for the graph\n\t         * @return { dateRange | module} Current dateRange or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.dateRange = function (_x) {\n\t            if (!arguments.length) {\n\t                return dateRange;\n\t            }\n\t            dateRange = _x;\n\t\n\t            if (Array.isArray(dateRange)) {\n\t                setBrushByDates.apply(undefined, _toConsumableArray(dateRange));\n\t            }\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x axis grouping\n\t         * @param  {String} _x Desired format\n\t         * @return { (String|Module) }    Current format or module to chain calls\n\t         * @example\n\t         *     brush.forceAxisFormat(brush.axisTimeCombinations.HOUR_DAY)\n\t         */\n\t        exports.forceAxisFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return forceAxisSettings;\n\t            }\n\t            forceAxisSettings = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x format\n\t         * It requires a `forceAxisFormat` of 'custom' in order to work.\n\t         * @param  {String} _x              Desired format for x axis\n\t         * @return { (String|Module) }      Current format or module to chain calls\n\t         */\n\t        exports.forcedXFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return forcedXFormat;\n\t            }\n\t            forcedXFormat = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x ticks. It requires a `forceAxisFormat` of 'custom' in order to work.\n\t         * NOTE: This value needs to be a multiple of 2, 5 or 10. They won't always work as expected, as D3 decides at the end\n\t         * how many and where the ticks will appear.\n\t         *\n\t         * @param  {Number} _x              Desired number of x axis ticks (multiple of 2, 5 or 10)\n\t         * @return { (Number|Module) }      Current number or ticks or module to chain calls\n\t         */\n\t        exports.forcedXTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return forcedXTicks;\n\t            }\n\t            forcedXTicks = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the constants to be used to force the x axis to respect a certain granularity\n\t         * current options: MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR\n\t         * @example\n\t         *     brush.forceAxisFormat(brush.axisTimeCombinations.HOUR_DAY)\n\t         */\n\t        exports.axisTimeCombinations = axisTimeCombinations;\n\t\n\t        /**\n\t         * Gets or Sets the gradient of the chart\n\t         * @param  {String[]} _x Desired gradient for the graph\n\t         * @return { gradient | module} Current gradient or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.gradient = function (_x) {\n\t            if (!arguments.length) {\n\t                return gradient;\n\t            }\n\t            gradient = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            height = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {object} _x Margin object to get/set\n\t         * @return { margin | module} Current margin or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the callback that will be called when the user brushes over the area\n\t         * @param  {Function} _x Callback to call\n\t         * @return {Function | module}    Current callback function or the Chart Module\n\t         */\n\t        exports.onBrush = function (_x) {\n\t            if (!arguments.length) return onBrush;\n\t            onBrush = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { width | module} Current width or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            width = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-brush/ Version 1.0.4. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(6), __webpack_require__(41), __webpack_require__(10), __webpack_require__(13), __webpack_require__(14)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3));\n\t}(this, (function (exports,d3Dispatch,d3Drag,d3Interpolate,d3Selection,d3Transition) { 'use strict';\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation() {\n\t  d3Selection.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  d3Selection.event.preventDefault();\n\t  d3Selection.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !d3Selection.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent,\n\t      filter = defaultFilter,\n\t      listeners = d3Dispatch.dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local(this).extent;\n\t          d3Selection.select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n\t                i = d3Interpolate.interpolate(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            d3Transition.interrupt(that);\n\t            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = d3Selection.select(this),\n\t        selection = local(this).selection;\n\t\n\t    if (selection) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection[0][0])\n\t          .attr(\"y\", selection[0][1])\n\t          .attr(\"width\", selection[1][0] - selection[0][0])\n\t          .attr(\"height\", selection[1][1] - selection[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      d3Selection.customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (d3Selection.event.touches) { if (d3Selection.event.changedTouches.length < d3Selection.event.touches.length) return noevent(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = d3Selection.event.target.__data__.type,\n\t        mode = (d3Selection.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local(that),\n\t        extent = state.extent,\n\t        selection = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && d3Selection.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = d3Selection.mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection[0][0];\n\t      n0 = selection[0][1];\n\t      e0 = selection[1][0];\n\t      s0 = selection[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = d3Selection.select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (d3Selection.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = d3Selection.select(d3Selection.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      d3Drag.dragDisable(d3Selection.event.view);\n\t    }\n\t\n\t    nopropagation();\n\t    d3Transition.interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = d3Selection.mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n\t      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\t\n\t      if (selection[0][0] !== w1\n\t          || selection[0][1] !== n1\n\t          || selection[1][0] !== e1\n\t          || selection[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation();\n\t      if (d3Selection.event.touches) {\n\t        if (d3Selection.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        d3Drag.dragEnable(d3Selection.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n\t      if (empty(selection)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (d3Selection.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (d3Selection.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (d3Selection.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-drag/ Version 1.1.1. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(6), __webpack_require__(13)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-selection'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3));\n\t}(this, (function (exports,d3Dispatch,d3Selection) { 'use strict';\n\t\n\tfunction nopropagation() {\n\t  d3Selection.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  d3Selection.event.preventDefault();\n\t  d3Selection.event.stopImmediatePropagation();\n\t};\n\t\n\tvar nodrag = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection = d3Selection.select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection = d3Selection.select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch$$1) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch$$1;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !d3Selection.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: d3Selection.event.x, y: d3Selection.event.y} : d;\n\t}\n\t\n\tfunction touchable() {\n\t  return \"ontouchstart\" in this;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = d3Dispatch.dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousedownx,\n\t      mousedowny,\n\t      mousemoving,\n\t      touchending,\n\t      clickDistance2 = 0;\n\t\n\t  function drag(selection) {\n\t    selection\n\t        .on(\"mousedown.drag\", mousedowned)\n\t      .filter(touchable)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"touch-action\", \"none\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), d3Selection.mouse, this, arguments);\n\t    if (!gesture) return;\n\t    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    nodrag(d3Selection.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    mousedownx = d3Selection.event.clientX;\n\t    mousedowny = d3Selection.event.clientY;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    if (!mousemoving) {\n\t      var dx = d3Selection.event.clientX - mousedownx, dy = d3Selection.event.clientY - mousedowny;\n\t      mousemoving = dx * dx + dy * dy > clickDistance2;\n\t    }\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(d3Selection.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches = d3Selection.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches[i].identifier, c, d3Selection.touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches = d3Selection.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches = d3Selection.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!d3Selection.customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      d3Selection.customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  drag.clickDistance = function(_) {\n\t    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\texports.drag = drag;\n\texports.dragDisable = nodrag;\n\texports.dragEnable = yesdrag;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// britecharts.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8b068d1e0532bdcb1907","import bar from './charts/bar.js';\nimport donut from './charts/donut.js';\nimport legend from './charts/legend.js';\nimport line from './charts/line.js';\nimport tooltip from './charts/tooltip.js';\nimport miniTooltip from './charts/mini-tooltip.js';\nimport sparkline from './charts/sparkline.js';\nimport stackedArea from './charts/stacked-area.js';\nimport groupedBar from './charts/grouped-bar.js';\nimport stackedBar from './charts/stacked-bar.js';\nimport step from './charts/step.js';\nimport brush from './charts/brush.js';\nimport colors from './charts/helpers/colors.js';\n\nexport {\n        bar,\n        donut,\n        legend,\n        line,\n        tooltip,\n        miniTooltip,\n        sparkline,\n        stackedArea,\n        groupedBar,\n        stackedBar,\n        step,\n        brush,\n        colors\n    };\n\n\n\n// WEBPACK FOOTER //\n// ./src/bundle.js","define(function(require) {\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Ease = require('d3-ease');\n    const d3Axis = require('d3-axis');\n    const d3Color = require('d3-color');\n    const d3Dispatch = require('d3-dispatch');\n    const d3Format = require('d3-format');\n    const d3Scale = require('d3-scale');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n\n    const textHelper = require('./helpers/text');\n    const {exportChart} = require('./helpers/exportChart');\n    const colorHelper = require('./helpers/colors');\n\n\n    const PERCENTAGE_FORMAT = '%';\n    const NUMBER_FORMAT = ',f';\n\n\n    /**\n     * @typedef BarChartData\n     * @type {Object[]}\n     * @property {Number} value        Value of the group (required)\n     * @property {String} name         Name of the group (required)\n     *\n     * @example\n     * [\n     *     {\n     *         value: 1,\n     *         name: 'glittering'\n     *     },\n     *     {\n     *         value: 1,\n     *         name: 'luminous'\n     *     }\n     * ]\n     */\n\n    /**\n     * Bar Chart reusable API class that renders a\n     * simple and configurable bar chart.\n     *\n     * @module Bar\n     * @tutorial bar\n     * @requires d3-array, d3-axis, d3-dispatch, d3-scale, d3-selection\n     *\n     * @example\n     * var barChart = bar();\n     *\n     * barChart\n     *     .height(500)\n     *     .width(800);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(barChart);\n     *\n     */\n    return function module() {\n\n        let margin = {\n                top: 20,\n                right: 20,\n                bottom: 30,\n                left: 40\n            },\n            width = 960,\n            height = 500,\n            data,\n            dataZeroed,\n            chartWidth, chartHeight,\n            xScale, yScale,\n            colorSchema = colorHelper.singleColors.aloeGreen,\n            colorList,\n            colorMap,\n            numOfVerticalTicks = 5,\n            numOfHorizontalTicks = 5,\n            percentageAxisToMaxRatio = 1,\n            enablePercentageLabels = false,\n            percentageLabelMargin = 7,\n            percentageLabelSize = 12,\n            horizontalLabelFormat = '.0%',\n            verticalLabelFormat = '.0f',\n            valueLabelFormat = NUMBER_FORMAT,\n            xAxis, yAxis,\n            xAxisPadding = {\n                top: 0,\n                left: 0,\n                bottom: 0,\n                right: 0\n            },\n            yAxisPaddingBetweenChart = 10,\n            yAxisLineWrapLimit = 1,\n            horizontal = false,\n            svg,\n\n            isAnimated = false,\n            ease = d3Ease.easeQuadInOut,\n            animationDuration = 800,\n            interBarDelay = function(d, i) {return 70 * i},\n\n            valueLabel = 'value',\n            nameLabel = 'name',\n\n            maskGridLines,\n            baseLine,\n            reverseColorList = true,\n\n            // Dispatcher object to broadcast the mouse events\n            // Ref: https://github.com/mbostock/d3/wiki/Internals#d3_dispatch\n            dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove'),\n\n            // extractors\n            getName = ({name}) => name,\n            getValue = ({value}) => value,\n\n            _percentageLabelHorizontalX = ({value}) => xScale(value) + percentageLabelMargin,\n            _percentageLabelHorizontalY= ({name}) => yScale(name) + (yScale.bandwidth() / 2) + (percentageLabelSize * (3/8)),\n\n            _percentageLabelVerticalX = ({name}) => xScale(name),\n            _percentageLabelVerticalY = ({value}) => yScale(value) - percentageLabelMargin,\n\n            _percentageLabelHorizontalFormatValue = ({value}) => d3Format.format(horizontalLabelFormat)(value),\n            _percentageLabelVerticalFormatValue = ({value}) => d3Format.format(verticalLabelFormat)(parseFloat(value) * 100);\n\n        /**\n         * This function creates the graph using the selection as container\n         * @param  {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {BarChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data) {\n                chartWidth = width - margin.left - margin.right - (yAxisPaddingBetweenChart * 1.2);\n                chartHeight = height - margin.top - margin.bottom;\n                ({data, dataZeroed} = cleanData(_data));\n\n                buildScales();\n                buildAxis();\n                buildSVG(this);\n                drawGridLines();\n                drawBars();\n                drawAxis();\n                if (enablePercentageLabels) {\n                    drawPercentageLabels();\n                }\n            });\n        }\n\n        /**\n         * Creates the d3 x and y axis, setting orientations\n         * @private\n         */\n        function buildAxis() {\n            if (horizontal) {\n                xAxis = d3Axis.axisBottom(xScale)\n                    .ticks(numOfHorizontalTicks, valueLabelFormat)\n                    .tickSizeInner([-chartHeight]);\n\n                yAxis = d3Axis.axisLeft(yScale);\n            } else {\n                xAxis = d3Axis.axisBottom(xScale);\n\n                yAxis = d3Axis.axisLeft(yScale)\n                    .ticks(numOfVerticalTicks, valueLabelFormat)\n            }\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * Also applies the Margin convention\n         * @private\n         */\n        function buildContainerGroups() {\n            let container = svg\n                .append('g')\n                  .classed('container-group', true)\n                  .attr('transform', `translate(${margin.left + yAxisPaddingBetweenChart}, ${margin.top})`);\n\n            container\n                .append('g').classed('grid-lines-group', true);\n            container\n                .append('g').classed('chart-group', true);\n            container\n                .append('g').classed('x-axis-group axis', true);\n            container\n                .append('g')\n                .attr('transform', `translate(${-1 * (yAxisPaddingBetweenChart)}, 0)`)\n                .classed('y-axis-group axis', true);\n            container\n                .append('g').classed('metadata-group', true);\n        }\n\n        /**\n         * Creates the x and y scales of the graph\n         * @private\n         */\n        function buildScales() {\n            let percentageAxis = Math.min(percentageAxisToMaxRatio * d3Array.max(data, getValue))\n\n            if (horizontal) {\n                xScale = d3Scale.scaleLinear()\n                    .domain([0, percentageAxis])\n                    .rangeRound([0, chartWidth]);\n\n                yScale = d3Scale.scaleBand()\n                    .domain(data.map(getName))\n                    .rangeRound([chartHeight, 0])\n                    .padding(0.1);\n            } else {\n                xScale = d3Scale.scaleBand()\n                    .domain(data.map(getName))\n                    .rangeRound([0, chartWidth])\n                    .padding(0.1);\n\n                yScale = d3Scale.scaleLinear()\n                    .domain([0, percentageAxis])\n                    .rangeRound([chartHeight, 0]);\n            }\n\n            if (reverseColorList) {\n                colorList = data.map(d => d)\n                                .reverse()\n                                .map(({name}, i) => ({\n                                        name,\n                                        color: colorSchema[i % colorSchema.length]}\n                                    ));\n            } else {\n                colorList = data.map(d => d)\n                                .map(({name}, i) => ({\n                                        name,\n                                        color: colorSchema[i % colorSchema.length]}\n                                    ));\n            }\n\n            colorMap = (item) => colorList.filter(({name}) => name === item)[0].color;\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container)\n                    .append('svg')\n                      .classed('britechart bar-chart', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Cleaning data adding the proper format\n         * @param  {BarChartData} originalData Data\n         * @private\n         */\n        function cleanData(originalData) {\n            let data = originalData.map((d) => ({\n                    value: +d[valueLabel],\n                    name: String(d[nameLabel])\n                }));\n            let dataZeroed = data.map((d) => ({\n                    value: 0,\n                    name: String(d[nameLabel])\n                }));\n\n            return {data, dataZeroed}\n        }\n\n        /**\n         * Utility function that wraps a text into the given width\n         * @param  {D3Selection} text         Text to write\n         * @param  {Number} containerWidth\n         * @private\n         */\n        function wrapText(text, containerWidth) {\n            textHelper.wrapTextWithEllipses(text, containerWidth, 0, yAxisLineWrapLimit)\n        }\n\n        /**\n         * Draws the x and y axis on the svg object within their\n         * respective groups\n         * @private\n         */\n        function drawAxis() {\n            svg.select('.x-axis-group.axis')\n                .attr('transform', `translate(0, ${chartHeight})`)\n                .call(xAxis);\n\n            svg.select('.y-axis-group.axis')\n                .call(yAxis);\n\n            svg.selectAll('.y-axis-group .tick text')\n                .call(wrapText, margin.left - yAxisPaddingBetweenChart)\n        }\n\n        /**\n         * Draws the bars along the x axis\n         * @param  {D3Selection} bars Selection of bars\n         * @return {void}\n         */\n        function drawHorizontalBars(bars) {\n            // Enter + Update\n            bars.enter()\n              .append('rect')\n                .classed('bar', true)\n                .attr('y', chartHeight)\n                .attr('x', 0)\n                .attr('height', yScale.bandwidth())\n                .attr('width', ({value}) => xScale(value))\n                .attr('fill', ({name}) => colorMap(name))\n                .on('mouseover', function(d) {\n                    customOnMouseOver(this, d, chartWidth, chartHeight);\n                })\n                .on('mousemove', function(d) {\n                    customOnMouseMove(this, d, chartWidth, chartHeight);\n                })\n                .on('mouseout', function(d) {\n                    customOnMouseOut(this, d, chartWidth, chartHeight);\n                })\n              .merge(bars)\n                .attr('x', 0)\n                .attr('y', ({name}) => yScale(name))\n                .attr('height', yScale.bandwidth())\n                .attr('width', ({value}) => xScale(value));\n        }\n\n        /**\n         * Draws and animates the bars along the x axis\n         * @param  {D3Selection} bars Selection of bars\n         * @return {void}\n         */\n        function drawAnimatedHorizontalBars(bars) {\n            // Enter + Update\n            bars.enter()\n              .append('rect')\n                .classed('bar', true)\n                .attr('x', 0)\n                .attr('y', chartHeight)\n                .attr('height', yScale.bandwidth())\n                .attr('width', ({value}) => xScale(value))\n                .attr('fill', ({name}) => colorMap(name))\n                .on('mouseover', function(d) {\n                    customOnMouseOver(this, d, chartWidth, chartHeight);\n                })\n                .on('mousemove', function(d) {\n                    customOnMouseMove(this, d, chartWidth, chartHeight);\n                })\n                .on('mouseout', function(d) {\n                    customOnMouseOut(this, d, chartWidth, chartHeight);\n                });\n\n            bars\n                .attr('x', 0)\n                .attr('y', ({name}) => yScale(name))\n                .attr('height', yScale.bandwidth())\n                .transition()\n                .duration(animationDuration)\n                .delay(interBarDelay)\n                .ease(ease)\n                .attr('width', ({value}) => xScale(value));\n        }\n\n        /**\n         * Draws and animates the bars along the y axis\n         * @param  {D3Selection} bars Selection of bars\n         * @return {void}\n         */\n        function drawAnimatedVerticalBars(bars) {\n            // Enter + Update\n            bars.enter()\n              .append('rect')\n                .classed('bar', true)\n                .attr('x', chartWidth)\n                .attr('y', ({value}) => yScale(value))\n                .attr('width', xScale.bandwidth())\n                .attr('height', ({value}) => chartHeight - yScale(value))\n                .attr('fill', ({name}) => colorMap(name))\n                .on('mouseover', function(d) {\n                    customOnMouseOver(this, d, chartWidth, chartHeight);\n                })\n                .on('mousemove', function(d) {\n                    customOnMouseMove(this, d, chartWidth, chartHeight);\n                })\n                .on('mouseout', function(d) {\n                    customOnMouseOut(this, d, chartWidth, chartHeight);\n                })\n              .merge(bars)\n                .attr('x', ({name}) => xScale(name))\n                .attr('width', xScale.bandwidth())\n                .transition()\n                .duration(animationDuration)\n                .delay(interBarDelay)\n                .ease(ease)\n                .attr('y', ({value}) => yScale(value))\n                .attr('height', ({value}) => chartHeight - yScale(value));\n        }\n\n        /**\n         * Draws the bars along the y axis\n         * @param  {D3Selection} bars Selection of bars\n         * @return {void}\n         */\n        function drawVerticalBars(bars) {\n            // Enter + Update\n            bars.enter()\n              .append('rect')\n                .classed('bar', true)\n                .attr('x', chartWidth)\n                .attr('y', ({value}) => yScale(value))\n                .attr('width', xScale.bandwidth())\n                .attr('height', ({value}) => chartHeight - yScale(value))\n                .attr('fill', ({name}) => colorMap(name))\n                .on('mouseover', function(d) {\n                    customOnMouseOver(this, d, chartWidth, chartHeight);\n                })\n                .on('mousemove', function(d) {\n                    customOnMouseMove(this, d, chartWidth, chartHeight);\n                })\n                .on('mouseout', function(d) {\n                    customOnMouseOut(this, d, chartWidth, chartHeight);\n                })\n              .merge(bars)\n                .attr('x', ({name}) => xScale(name))\n                .attr('y', ({value}) => yScale(value))\n                .attr('width', xScale.bandwidth())\n                .attr('height', ({value}) => chartHeight - yScale(value));\n        }\n\n        /**\n         * Draws percentage labels at the end of each bar\n         * @private\n         * @return {void}\n         */\n        function drawPercentageLabels() {\n            let labelXPosition = horizontal ? _percentageLabelHorizontalX : _percentageLabelVerticalX;\n            let labelYPosition = horizontal ? _percentageLabelHorizontalY : _percentageLabelVerticalY;\n            let text = horizontal ? _percentageLabelHorizontalFormatValue : _percentageLabelVerticalFormatValue;\n\n            let percentageLabels = svg.select('.metadata-group')\n              .append('g')\n                .classed('percentage-label-group', true)\n                .selectAll('text')\n                .data(data.reverse())\n                .enter()\n              .append('text');\n\n            percentageLabels\n                .classed('percentage-label', true)\n                .attr('x', labelXPosition)\n                .attr('y', labelYPosition)\n                .text(text)\n                .attr('font-size', percentageLabelSize + 'px')\n        }\n\n        /**\n         * Draws the bar elements within the chart group\n         * @private\n         */\n        function drawBars() {\n            let bars;\n\n            if (isAnimated) {\n                bars = svg.select('.chart-group').selectAll('.bar')\n                    .data(dataZeroed);\n\n                if (!horizontal) {\n                    drawVerticalBars(bars);\n                } else {\n                    drawHorizontalBars(bars);\n                }\n\n                bars = svg.select('.chart-group').selectAll('.bar')\n                    .data(data);\n\n                if (!horizontal) {\n                    drawAnimatedVerticalBars(bars);\n                } else {\n                    drawAnimatedHorizontalBars(bars);\n                }\n            } else {\n                bars = svg.select('.chart-group').selectAll('.bar')\n                    .data(data);\n\n                if (!horizontal) {\n                    drawVerticalBars(bars);\n                } else {\n                    drawHorizontalBars(bars);\n                }\n            }\n\n            // Exit\n            bars.exit()\n                .transition()\n                .style('opacity', 0)\n                .remove();\n        }\n\n        /**\n         * Draws grid lines on the background of the chart\n         * @return void\n         */\n        function drawGridLines() {\n            if (!horizontal) {\n                drawVerticalGridLines();\n            } else {\n                drawHorizontalGridLines();\n            }\n        }\n\n        /**\n         * Draws the grid lines for an horizontal bar chart\n         * @return {void}\n         */\n        function drawHorizontalGridLines() {\n            maskGridLines = svg.select('.grid-lines-group')\n                .selectAll('line.vertical-grid-line')\n                .data(xScale.ticks(4))\n                .enter()\n                  .append('line')\n                    .attr('class', 'vertical-grid-line')\n                    .attr('y1', (xAxisPadding.left))\n                    .attr('y2', chartHeight)\n                    .attr('x1', (d) => xScale(d))\n                    .attr('x2', (d) => xScale(d))\n\n            drawVerticalExtendedLine();\n        }\n\n        /**\n         * Draws a vertical line to extend y-axis till the edges\n         * @return {void}\n         */\n        function drawVerticalExtendedLine() {\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-y-line')\n                .data([0])\n                .enter()\n                  .append('line')\n                    .attr('class', 'extended-y-line')\n                    .attr('y1', (xAxisPadding.bottom))\n                    .attr('y2', chartHeight)\n                    .attr('x1', 0)\n                    .attr('x2', 0);\n        }\n\n        /**\n         * Draws the grid lines for a vertical bar chart\n         * @return {void}\n         */\n        function drawVerticalGridLines() {\n            maskGridLines = svg.select('.grid-lines-group')\n                .selectAll('line.horizontal-grid-line')\n                .data(yScale.ticks(4))\n                .enter()\n                  .append('line')\n                    .attr('class', 'horizontal-grid-line')\n                    .attr('x1', (xAxisPadding.left))\n                    .attr('x2', chartWidth)\n                    .attr('y1', (d) => yScale(d))\n                    .attr('y2', (d) => yScale(d))\n\n            drawHorizontalExtendedLine();\n        }\n\n        /**\n         * Draws a vertical line to extend x-axis till the edges\n         * @return {void}\n         */\n        function drawHorizontalExtendedLine() {\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-x-line')\n                .data([0])\n                .enter()\n                  .append('line')\n                    .attr('class', 'extended-x-line')\n                    .attr('x1', (xAxisPadding.left))\n                    .attr('x2', chartWidth)\n                    .attr('y1', chartHeight)\n                    .attr('y2', chartHeight);\n        }\n\n        /**\n         * Custom OnMouseOver event handler\n         * @return {void}\n         * @private\n         */\n        function customOnMouseOver(ev, d, chartWidth, chartHeight) {\n          dispatcher.call('customMouseOver', ev, d, d3Selection.mouse(ev), [chartWidth, chartHeight]);\n          d3Selection.select(ev).attr('fill', ({name}) => d3Color.color(colorMap(name)).darker());\n        }\n\n        /**\n         * Custom OnMouseMove event handler\n         * @return {void}\n         * @private\n         */\n        function customOnMouseMove(ev, d, chartWidth, chartHeight) {\n          dispatcher.call('customMouseMove', ev, d, d3Selection.mouse(ev), [chartWidth, chartHeight]);\n        }\n\n        /**\n         * Custom OnMouseOver event handler\n         * @return {void}\n         * @private\n         */\n        function customOnMouseOut(ev, d, chartWidth, chartHeight) {\n          dispatcher.call('customMouseOut', ev, d, d3Selection.mouse(ev), [chartWidth, chartHeight]);\n          d3Selection.select(ev).attr('fill', ({name}) => colorMap(name));\n        }\n\n        // API\n\n        /**\n         * Gets or Sets the colorSchema of the chart\n         * @param  {String[]} _x Desired colorSchema for the graph\n         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n         * @public\n         */\n        exports.colorSchema = function(_x) {\n            if (!arguments.length) {\n                return colorSchema;\n            }\n            colorSchema = _x;\n\n            return this;\n        };\n\n        /**\n         * Default false. If true, adds percentage labels at the end of the bars\n         * @param  {Boolean} _x\n         * @return {Boolean | module}    Current value of enablePercentageLables or Bar Chart module to chain calls\n         */\n        exports.enablePercentageLabels = function(_x) {\n            if (!arguments.length) {\n                return enablePercentageLabels;\n            }\n            enablePercentageLabels = _x;\n\n            return this;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename, title) {\n            exportChart.call(exports, svg, filename, title);\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { height | module} Current height or Bar Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the horizontal direction of the chart\n         * @param  {number} _x Desired horizontal direction for the graph\n         * @return { horizontal | module} Current horizontal direction or Bar Chart module to chain calls\n         * @public\n         */\n        exports.horizontal = function(_x) {\n            if (!arguments.length) {\n                return horizontal;\n            }\n            horizontal = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n         * By default this is 'false'\n         *\n         * @param  {Boolean} _x Desired animation flag\n         * @return { isAnimated | module} Current isAnimated flag or Chart module\n         * @public\n         */\n        exports.isAnimated = function(_x) {\n            if (!arguments.length) {\n                return isAnimated;\n            }\n            isAnimated = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Bar Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the nameLabel of the chart\n         * @param  {Number} _x Desired nameLabel for the graph\n         * @return { nameLabel | module} Current nameLabel or Chart module to chain calls\n         * @public\n         */\n        exports.nameLabel = function(_x) {\n            if (!arguments.length) {\n                return nameLabel;\n            }\n            nameLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n         * We are going to expose this events:\n         * customMouseOver, customMouseMove and customMouseOut\n         *\n         * @return {module} Bar Chart\n         * @public\n         */\n        exports.on = function() {\n            let value = dispatcher.on.apply(dispatcher, arguments);\n\n            return value === dispatcher ? exports : value;\n        };\n\n        /**\n         * Configurable extension of the x axis\n         * if your max point was 50% you might want to show x axis to 60%, pass 1.2\n         * @param  {number} _x ratio to max data point to add to the x axis\n         * @return { ratio | module} Current ratio or Bar Chart module to chain calls\n         * @public\n         */\n        exports.percentageAxisToMaxRatio = function(_x) {\n            if (!arguments.length) {\n                return percentageAxisToMaxRatio;\n            }\n            percentageAxisToMaxRatio = _x;\n\n            return this;\n        }\n\n        /**\n         * Default 10px. Offset between end of bar and start of the percentage bars\n         * @param  {number} _x percentage margin offset from end of bar\n         * @return {number | module}    Currnet offset or Bar Chart module to chain calls\n         */\n        exports.percentageLabelMargin = function(_x) {\n            if (!arguments.length) {\n                return percentageLabelMargin;\n            }\n            percentageLabelMargin = _x;\n\n            return this;\n        }\n\n        /**\n         * Gets or Sets whether the color list should be reversed or not\n         * @param  {boolean} _x     Should reverse the color list\n         * @return { boolean | module} Is color list being reversed\n         * @public\n         */\n        exports.reverseColorList = function(_x) {\n            if (!arguments.length) {\n                return reverseColorList;\n            }\n            reverseColorList = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabelFormat to a percentage format if true (default false)\n         * @param  {boolean} _x     Should use percentage as value format\n         * @return { valueLabelFormat | module} Is percentage value format used or Chart module to chain calls\n         * @public\n         */\n        exports.usePercentage = function(_x) {\n            if (!arguments.length) {\n                return valueLabelFormat === PERCENTAGE_FORMAT;\n            }\n            if (_x) {\n                valueLabelFormat = PERCENTAGE_FORMAT;\n            } else {\n                valueLabelFormat = NUMBER_FORMAT;\n            }\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabel of the chart\n         * @param  {Number} _x Desired valueLabel for the graph\n         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabel = function(_x) {\n            if (!arguments.length) {\n                return valueLabel;\n            }\n            valueLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { width | module} Current width or Bar Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _x;\n\n            return this;\n        };\n\n        /**\n         * Default 10. Space between y axis and chart\n         * @param  {number} _x space between y axis and chart\n         * @return {number| module}    Current value of yAxisPaddingBetweenChart or Bar Chart module to chain calls\n         */\n        exports.yAxisPaddingBetweenChart = function(_x) {\n            if (!arguments.length) {\n                return yAxisPaddingBetweenChart;\n            }\n            yAxisPaddingBetweenChart = _x;\n\n            return this;\n        };\n\n        return exports;\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/bar.js","// https://d3js.org/d3-array/ Version 1.2.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar quantile = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-array/build/d3-array.js\n// module id = 2\n// module chunks = 0","// https://d3js.org/d3-ease/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-ease/build/d3-ease.js\n// module id = 3\n// module chunks = 0","// https://d3js.org/d3-axis/ Version 1.0.8. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar slice = Array.prototype.slice;\n\nvar identity = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-axis/build/d3-axis.js\n// module id = 4\n// module chunks = 0","// https://d3js.org/d3-color/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-color/build/d3-color.js\n// module id = 5\n// module chunks = 0","// https://d3js.org/d3-dispatch/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexports.dispatch = dispatch;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-dispatch/build/d3-dispatch.js\n// module id = 6\n// module chunks = 0","// https://d3js.org/d3-format/ Version 1.2.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n};\n\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-format/build/d3-format.js\n// module id = 7\n// module chunks = 0","// https://d3js.org/d3-scale/ Version 1.0.6. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-collection'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format'), require('d3-color')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\nvar array = Array.prototype;\n\nvar map$1 = array.map;\nvar slice = array.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range$$1) {\n  var index = d3Collection.map(),\n      domain = [],\n      unknown = implicit;\n\n  range$$1 = range$$1 == null ? [] : slice.call(range$$1);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range$$1[(i - 1) % range$$1.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = d3Collection.map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), scale) : range$$1.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range$$1)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = d3Array.bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = d3Interpolate.interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice.call(_), interpolate$$1 = d3Interpolate.interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n      return d3Format.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return d3Format.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = d3Array.tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = d3Array.tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = d3Array.tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear() {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[d3Array.bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number$1(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year, month, week, day, hour, minute, second, millisecond, format$$1) {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format$$1(\".%L\"),\n      formatSecond = format$$1(\":%S\"),\n      formatMinute = format$$1(\"%I:%M\"),\n      formatHour = format$$1(\"%I %p\"),\n      formatDay = format$$1(\"%a %d\"),\n      formatWeek = format$$1(\"%b %d\"),\n      formatMonth = format$$1(\"%B\"),\n      formatYear = format$$1(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = d3Array.tickStep(start, stop, interval);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format$$1(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format$$1));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\nvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar rainbow = d3Color.cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range$$1) {\n  var n = range$$1.length;\n  return function(t) {\n    return range$$1[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nexports.scaleBand = band;\nexports.scalePoint = point;\nexports.scaleIdentity = identity;\nexports.scaleLinear = linear;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$1;\nexports.scaleQuantize = quantize;\nexports.scaleThreshold = threshold;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$1;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-scale/build/d3-scale.js\n// module id = 8\n// module chunks = 0","// https://d3js.org/d3-collection/ Version 1.0.4. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map$$1, depth) {\n    if (++depth > keys.length) return map$$1;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map$$1, key, value) {\n  map$$1.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nexports.nest = nest;\nexports.set = set;\nexports.map = map;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-collection/build/d3-collection.js\n// module id = 9\n// module chunks = 0","// https://d3js.org/d3-interpolate/ Version 1.1.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-color')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Color) { 'use strict';\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n\nvar rgb$1 = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = d3Color.rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar number = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar string = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar value = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)\n      : b instanceof d3Color.color ? rgb$1\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n};\n\nvar round = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar zoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nexports.interpolate = value;\nexports.interpolateArray = array;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = number;\nexports.interpolateObject = object;\nexports.interpolateRound = round;\nexports.interpolateString = string;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = zoom;\nexports.interpolateRgb = rgb$1;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/build/d3-interpolate.js\n// module id = 10\n// module chunks = 0","// https://d3js.org/d3-time/ Version 1.0.7. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar t0 = new Date;\nvar t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-time/build/d3-time.js\n// module id = 11\n// module chunks = 0","// https://d3js.org/d3-time-format/ Version 2.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Time) { 'use strict';\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$1;\n\n\n\n\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nexports.timeFormatDefaultLocale = defaultLocale;\nexports.timeFormatLocale = formatLocale;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-time-format/build/d3-time-format.js\n// module id = 12\n// module chunks = 0","// https://d3js.org/d3-selection/ Version 1.1.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nexports.creator = creator;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-selection/build/d3-selection.js\n// module id = 13\n// module chunks = 0","// https://d3js.org/d3-transition/ Version 1.1.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-dispatch'), require('d3-timer'), require('d3-interpolate'), require('d3-color'), require('d3-ease')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-timer', 'd3-interpolate', 'd3-color', 'd3-ease'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Selection,d3Dispatch,d3Timer,d3Interpolate,d3Color,d3Ease) { 'use strict';\n\nvar emptyOn = d3Dispatch.dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = d3Timer.timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return d3Timer.timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    d3Timer.timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n\nvar interpolate = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? d3Interpolate.interpolateNumber\n      : b instanceof d3Color.color ? d3Interpolate.interpolateRgb\n      : (c = d3Color.color(b)) ? (b = c, d3Interpolate.interpolateRgb)\n      : d3Interpolate.interpolateString)(a, b);\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = d3Selection.namespace(name), i = fullname === \"transform\" ? d3Interpolate.interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = d3Selection.namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = d3Selection.matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection = d3Selection.selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection(this._groups, this._parents);\n};\n\nfunction styleRemove(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = d3Selection.style(this, name),\n        value1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = d3Selection.style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = d3Selection.style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? d3Interpolate.interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return d3Selection.selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = d3Selection.selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: d3Ease.easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = d3Timer.now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = d3Timer.now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nd3Selection.selection.prototype.interrupt = selection_interrupt;\nd3Selection.selection.prototype.transition = selection_transition;\n\nvar root = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-transition/build/d3-transition.js\n// module id = 14\n// module chunks = 0","// https://d3js.org/d3-timer/ Version 1.0.6. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-timer/build/d3-timer.js\n// module id = 15\n// module chunks = 0","define(function(require) {\n\n    const d3Selection = require('d3-selection');\n\n    const wrapConfig = {\n        lineHeight: 1.2,\n        smallTextOffset: 10,\n        smallTextLineHeightRatio: 0.9,\n        smallTextRatio: 0.6,\n        valueClassName: 'value',\n        labelClassName: 'label'\n    };\n\n    const defaultTextSize = 12;\n    const defaultFontFace = 'Arial';\n\n    /**\n     * Wraps a selection of text within the available width\n     * @param  {Number} fontSize       Size of the base font\n     * @param  {Number} availableWidth Width of the container where the text needs to wrap on\n     * @param  {D3Selection} node      SVG text element that contains the text to wrap\n     *\n     * REF: http://bl.ocks.org/mbostock/7555321\n     * More discussions on https://github.com/mbostock/d3/issues/1642\n     * @return {void}\n     */\n    const wrapText = function(xOffset, fontSize, availableWidth, node, data, i) {\n        let text = d3Selection.select(node),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            smallLineHeight = wrapConfig.lineHeight * wrapConfig.smallTextLineHeightRatio,\n            y = text.attr('y'),\n            dy = parseFloat(text.attr('dy')),\n            smallFontSize = fontSize * wrapConfig.smallTextRatio,\n            tspan = text.text(null).append('tspan')\n                .attr('x', xOffset)\n                .attr('y', y - 5)\n                .attr('dy', dy + 'em')\n                .classed(wrapConfig.valueClassName, true)\n                .style('font-size', fontSize + 'px');\n\n        tspan.text(words.pop());\n        tspan = text.append('tspan')\n            .classed(wrapConfig.labelClassName, true)\n            .attr('x', xOffset)\n            .attr('y', y + wrapConfig.smallTextOffset)\n            .attr('dy', ++lineNumber * smallLineHeight + dy + 'em')\n            .style('font-size', smallFontSize + 'px');\n\n        while (word = words.pop()) {\n            line.push(word);\n            tspan.text(line.join(' '));\n            if (tspan.node().getComputedTextLength() > availableWidth - 50) {\n                line.pop();\n                tspan.text(line.join(' '));\n                line = [word];\n                tspan = text.append('tspan')\n                    .classed(wrapConfig.labelClassName, true)\n                    .attr('x', xOffset)\n                    .attr('y', y+ wrapConfig.smallTextOffset)\n                    .attr('dy', ++lineNumber * smallLineHeight + dy + 'em')\n                    .text(word)\n                    .style('font-size', smallFontSize + 'px');\n            }\n        }\n    };\n\n    /**\n     * Wraps a selection of text within the available width, also adds class .adjust-upwards\n     * to configure a y offset for entries with multiple rows\n     * @param  {D3Sekectuib} text       d3 text element\n     * @param  {Number} width           Width of the container where the text needs to wrap on\n     * @param  {Number} xpos            number passed to determine the x offset\n     * @param  {Number} limit           number of lines before an ellipses is added and the rest of the text is cut off\n     *\n     * REF: http://bl.ocks.org/mbostock/7555321\n     * More discussions on https://github.com/mbostock/d3/issues/1642\n     * @return {void}\n     */\n    const wrapTextWithEllipses = function(text, width, xpos=0, limit=2) {\n\n            text.each(function() {\n                var words,\n                    word,\n                    line,\n                    lineNumber,\n                    lineHeight,\n                    y,\n                    dy,\n                    tspan;\n\n                text = d3Selection.select(this);\n\n                words = text.text().split(/\\s+/).reverse();\n                line = [];\n                lineNumber = 0;\n                lineHeight = 1.2;\n                y = text.attr('y');\n                dy = parseFloat(text.attr('dy'));\n                tspan = text\n                    .text(null)\n                    .append('tspan')\n                    .attr('x', xpos)\n                    .attr('y', y)\n                    .attr('dy', dy + 'em');\n\n                while ((word = words.pop())) {\n                    line.push(word);\n                    tspan.text(line.join(' '));\n\n                    if (tspan.node().getComputedTextLength() > width) {\n                        line.pop();\n                        tspan.text(line.join(' '));\n\n                        if (lineNumber < limit - 1) {\n                            line = [word];\n                            tspan = text.append('tspan')\n                                .attr('x', xpos)\n                                .attr('y', y)\n                                .attr('dy', ++lineNumber * lineHeight + dy + 'em')\n                                .text(word);\n                            // if we need two lines for the text, move them both up to center them\n                            text.classed('adjust-upwards', true);\n                        } else {\n                            line.push('...');\n                            tspan.text(line.join(' '));\n                            break;\n                        }\n                    }\n                }\n            });\n    };\n\n    /**\n     * Figures out an approximate of the text width by using a canvas element\n     * This avoids having to actually render the text to measure it from the DOM itself\n     * @param  {String} text     Text to measure\n     * @param  {Number} fontSize Fontsize (or default)\n     * @param  {String} fontFace Font familty (or default)\n     * @return {String}          Approximate font size of the text\n     */\n    const getTextWidth = function(text, fontSize = defaultTextSize, fontFace = defaultFontFace) {\n        let a = document.createElement('canvas'),\n            b = a.getContext('2d');\n\n        b.font = fontSize + 'px ' + fontFace;\n\n        return b.measureText(text).width;\n    }\n\n    return {\n        getTextWidth,\n        wrapText,\n        wrapTextWithEllipses\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/text.js","define(function(require) {\n    'use strict';\n\n    const {colorSchemas} = require('./colors.js');\n    const constants = require('./constants.js');\n    const serializeWithStyles = require('./serializeWithStyles.js');\n\n    let encoder = window.btoa;\n\n    if (!encoder) {\n        encoder = require('base-64').encode;\n    }\n\n    // Base64 doesn't work really well with Unicode strings, so we need to use this function\n    // Ref: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n    const b64EncodeUnicode = (str) => {\n        return encoder(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function(match, p1) {\n            return String.fromCharCode('0x' + p1);\n        }));\n    };\n\n    const config = {\n        styleClass : 'britechartStyle',\n        defaultFilename: 'britechart.png',\n        chartBackground: 'white',\n        imageSourceBase: 'data:image/svg+xml;base64,',\n        titleFontSize: '15px',\n        titleFontFamily: '\\'Benton Sans\\', sans-serif',\n        titleTopOffset: 30,\n        get styleBackgroundString () {\n            return `<style>svg{background:${this.chartBackground};}</style>`;\n        }\n    };\n\n    /**\n     * Main function to be used as a method by chart instances to export charts to png\n     * @param  {array} svgs         (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n     * @param  {string} filename    [download to be called <filename>.png]\n     * @param  {string} title       Title for the image\n     */\n    function exportChart(d3svg, filename, title) {\n        let img = createImage(convertSvgToHtml.call(this, d3svg, title));\n\n        img.onload = handleImageLoad.bind(\n                img,\n                createCanvas(this.width(), this.height()),\n                filename\n            );\n    }\n\n    /**\n     * adds background styles to raw html\n     * @param {string} html raw html\n     */\n    function addBackground(html) {\n        return html.replace('>',`>${config.styleBackgroundString}`);\n    }\n\n    /**\n     * takes d3 svg el, adds proper svg tags, adds inline styles\n     * from stylesheets, adds white background and returns string\n     * @param  {object} d3svg TYPE d3 svg element\n     * @return {string} string of passed d3\n     */\n    function convertSvgToHtml (d3svg, title) {\n        if (!d3svg) {\n            return;\n        }\n\n        d3svg.attr('version', 1.1)\n            .attr('xmlns', 'http://www.w3.org/2000/svg');\n        let serializer = serializeWithStyles.initializeSerializer();\n        let html = serializer(d3svg.node());\n        html = formatHtmlByBrowser(html);\n        html = prependTitle.call(this, html, title, parseInt(d3svg.attr('width')));\n        html = addBackground(html);\n\n        return html;\n    }\n\n    /**\n     * Create Canvas\n     * @param  {number} width\n     * @param  {number} height\n     * @return {object} TYPE canvas element\n     */\n    function createCanvas(width, height) {\n        let canvas = document.createElement('canvas');\n\n        canvas.height = height;\n        canvas.width = width;\n\n        return canvas;\n    }\n\n    /**\n     * Create Image\n     * @param  {string} svgHtml string representation of svg el\n     * @return {object}  TYPE element <img>, src points at svg\n     */\n    function createImage(svgHtml) {\n        let img = new Image();\n\n        img.src = `${config.imageSourceBase}${ b64EncodeUnicode(svgHtml) }`;\n\n        return img;\n    };\n\n    /**\n     * Draws image on canvas\n     * @param  {object} image TYPE:el <img>, to be drawn\n     * @param  {object} canvas TYPE: el <canvas>, to draw on\n     */\n    function drawImageOnCanvas(image, canvas) {\n        canvas.getContext('2d').drawImage(image, 0, 0);\n\n        return canvas;\n    }\n\n    /**\n     * Triggers browser to download image, convert canvas to url,\n     * we need to append the link el to the dom before clicking it for Firefox to register\n     * point <a> at it and trigger click\n     * @param  {object} canvas TYPE: el <canvas>\n     * @param  {string} filename\n     * @param  {string} extensionType\n     */\n    function downloadCanvas(canvas, filename=config.defaultFilename, extensionType='image/png') {\n        let url = canvas.toDataURL(extensionType);\n        let link = document.createElement('a');\n\n        link.href = url;\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n    /**\n     * Some browsers need special formatting, we handle that here\n     * @param  {string} html string of svg html\n     * @return {string} string of svg html\n     */\n    function formatHtmlByBrowser(html) {\n        if (navigator.userAgent.search('FireFox') > -1) {\n            return html.replace(/url.*&quot;\\)/, `url(&quot;#${constants.lineGradientId}&quot;);`);\n        }\n\n        return html;\n    }\n\n    /**\n     * Handles on load event fired by img.onload, this=img\n     * @param  {object} canvas TYPE: el <canvas>\n     * @param  {string} filename\n     * @param  {object} e\n     */\n    function handleImageLoad(canvas, filename, e) {\n        e.preventDefault();\n\n        downloadCanvas(drawImageOnCanvas(this, canvas), filename);\n    }\n\n    /**\n     * if passed, append title to the raw html to appear on graph\n     * @param  {string} html     raw html string\n     * @param  {string} title    title of the graph\n     * @param  {number} svgWidth width of graph container\n     * @return {string}         raw html with title prepended\n     */\n    function prependTitle(html, title, svgWidth) {\n        if (!title || !svgWidth) {\n            return html;\n        }\n        let {britechartsGreySchema} = colorSchemas;\n        html =  html.replace(/<g/,`<text x=\"${this.margin().left}\" y=\"${config.titleTopOffset}\" font-family=\"${config.titleFontFamily}\" font-size=\"${config.titleFontSize}\" fill=\"${britechartsGreySchema[6]}\"> ${title} </text><g `);\n\n        return html;\n    }\n\n    return {\n        exportChart,\n        convertSvgToHtml,\n        createImage,\n        drawImageOnCanvas\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/exportChart.js","define(function(require) {\n\n    // Color Gradients\n    const britechartGradients = {\n            greenBlueGradient: ['#39C7EA', '#4CDCBA'],\n            orangePinkGradient: ['#FBC670', '#F766B8'],\n            bluePurpleGradient: ['#3DC3C9', '#824a9e']\n        };\n\n    // Color Schemas\n    // Standard Color Schema for Britecharts\n    const britechartsColorSchema = [\n            '#6aedc7', //green\n            '#39c2c9', //blue\n            '#ffce00', //yellow\n            '#ffa71a', //orange\n            '#f866b9', //pink\n            '#998ce3' //purple\n        ];\n\n    // Grey Schema for Britecharts\n    const britechartsGreySchema = [\n            '#F8F8FA',\n            '#EFF2F5',\n            '#D2D6DF',\n            '#C3C6CF',\n            '#ADB0B6',\n            '#666A73',\n            '#45494E',\n            '#363A43',\n            '#282C35'\n        ];\n\n    // Extended Orange Palette\n    const extendedOrangeColorSchema = [\n            '#fcc870',\n            '#ffa71a',\n            '#fb8825',\n            '#f6682f',\n            '#db5a2c',\n            '#bf4c28',\n            '#a43b1c',\n            '#892a10',\n            '#f9e9c5'\n        ];\n    // Extended Blue Palette\n    const extendedBlueColorSchema = [\n            '#ccf7f6',\n            '#70e4e0',\n            '#00d8d2',\n            '#00acaf',\n            '#007f8c',\n            '#005e66',\n            '#003c3f',\n            '#002d2f',\n            '#0d2223'\n        ];\n    // Extended LightBlue Palette\n    const extendedLightBlueColorSchema = [\n            '#ccfffe',\n            '#94f7f4',\n            '#00fff8',\n            '#1de1e1',\n            '#39c2c9',\n            '#2e9a9d',\n            '#227270',\n            '#1a5957',\n            '#133f3e'\n        ];\n    // Extended Green Palette\n    const extendedGreenColorSchema = [\n            '#edfff7',\n            '#d7ffef',\n            '#c0ffe7',\n            '#95f5d7',\n            '#6aedc7',\n            '#59c3a3',\n            '#479980',\n            '#34816a',\n            '#206953'\n        ];\n    // Extended Yellow Palette\n    const extendedYellowColorSchema = [\n            '#f9f2b3',\n            '#fbe986',\n            '#fce05a',\n            '#fed72d',\n            '#ffce00',\n            '#fcc11c',\n            '#f9b438',\n            '#eda629',\n            '#e09819'\n        ];\n    // Extended Pink Palette\n    const extendedPinkColorSchema = [\n            '#fdd1ea',\n            '#fb9cd2',\n            '#f866b9',\n            '#fc40b6',\n            '#ff1ab3',\n            '#e3239d',\n            '#c62c86',\n            '#a62073',\n            '#85135f'\n        ];\n    // Extended Purple Palette\n    const extendedPurpleColorSchema = [\n            '#ddd6fc',\n            '#bbb1f0',\n            '#998ce3',\n            '#8e6bc1',\n            '#824a9e',\n            '#77337f',\n            '#6b1c60',\n            '#591650',\n            '#470f3f'\n        ];\n    // Extended Red Palette\n    const extendedRedColorSchema = [\n            '#ffd8d4',\n            '#ffb5b0',\n            '#ff938c',\n            '#ff766c',\n            '#ff584c',\n            '#f04b42',\n            '#e03d38',\n            '#be2e29',\n            '#9c1e19'\n        ];\n\n    const aloeGreen = [\n            '#7bdcc0'\n        ];\n\n    return {\n        colorSchemas: {\n            britechartsColorSchema,\n            britechartsGreySchema,\n            extendedOrangeColorSchema,\n            extendedBlueColorSchema,\n            extendedLightBlueColorSchema,\n            extendedGreenColorSchema,\n            extendedYellowColorSchema,\n            extendedPinkColorSchema,\n            extendedPurpleColorSchema,\n            extendedRedColorSchema\n        },\n        colorSchemasHuman: {\n            'britechartsColorSchema': 'Britecharts Default',\n            'britechartsGreySchema': 'Britecharts Grey',\n            'extendedOrangeColorSchema': 'Orange',\n            'extendedBlueColorSchema': 'Blue',\n            'extendedLightBlueColorSchema': 'Light Blue',\n            'extendedGreenColorSchema': 'Green',\n            'extendedYellowColorSchema': 'Yellow',\n            'extendedPinkColorSchema': 'Pink',\n            'extendedPurpleColorSchema': 'Purple',\n            'extendedRedColorSchema': 'Red'\n        },\n        singleColors: {\n            aloeGreen\n        },\n        colorGradients: britechartGradients,\n        colorGradientsHuman: {\n            greenBlueGradient: 'Green To Blue',\n            orangePinkGradient: 'Orange to Pink',\n            bluePurpleGradient: 'Blue to Purple'\n        }\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/colors.js","define(function(require) {\n    const axisTimeCombinations = {\n        MINUTE_HOUR: 'minute-hour',\n        HOUR_DAY: 'hour-daymonth',\n        DAY_MONTH: 'day-month',\n        MONTH_YEAR: 'month-year'\n    };\n\n    const timeBenchmarks= {\n        ONE_AND_A_HALF_YEARS: 47304000000,\n        ONE_YEAR: 31536000365,\n        ONE_DAY: 86400001\n    };\n\n    return {\n        axisTimeCombinations,\n        timeBenchmarks,\n        lineGradientId: 'lineGradientId'\n    };\n});\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/constants.js","module.exports = (function() {\n\n    'use strict';\n\n    return {\n\n        /**\n         * returns serializer function, only run it when you know you want to serialize your chart\n         * @return {func} serializer to add styles in line to dom string\n         */\n        initializeSerializer() {\n\n            // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n            const defaultStylesByTagName = {};\n\n            // Styles inherited from style sheets will not be rendered for elements with these tag names\n            const noStyleTags = {'BASE':true,'HEAD':true,'HTML':true,'META':true,'NOFRAME':true,'NOSCRIPT':true,'PARAM':true,'SCRIPT':true,'STYLE':true,'TITLE':true};\n\n            // This list determines which css default values lookup tables are precomputed at load time\n            // Lookup tables for other tag names will be automatically built at runtime if needed\n            const tagNames = ['A','ABBR','ADDRESS','AREA','ARTICLE','ASIDE','AUDIO','B','BASE','BDI','BDO','BLOCKQUOTE','BODY','BR','BUTTON','CANVAS','CAPTION','CENTER','CITE','CODE','COL','COLGROUP','COMMAND','DATALIST','DD','DEL','DETAILS','DFN','DIV','DL','DT','EM','EMBED','FIELDSET','FIGCAPTION','FIGURE','FONT','FOOTER','FORM','H1','H2','H3','H4','H5','H6','HEAD','HEADER','HGROUP','HR','HTML','I','IFRAME','IMG','INPUT','INS','KBD','LABEL','LEGEND','LI','LINK','MAP','MARK','MATH','MENU','META','METER','NAV','NOBR','NOSCRIPT','OBJECT','OL','OPTION','OPTGROUP','OUTPUT','P','PARAM','PRE','PROGRESS','Q','RP','RT','RUBY','S','SAMP','SCRIPT','SECTION','SELECT','SMALL','SOURCE','SPAN','STRONG','STYLE','SUB','SUMMARY','SUP','SVG','TABLE','TBODY','TD','TEXTAREA','TFOOT','TH','THEAD','TIME','TITLE','TR','TRACK','U','UL','VAR','VIDEO','WBR'];\n\n            // Precompute the lookup tables.\n            [].forEach.call(tagNames, (name) => {\n                if (!noStyleTags[name]) {\n                    defaultStylesByTagName[name] = computeDefaultStyleByTagName(name);\n                }\n            });\n\n            function computeDefaultStyleByTagName(tagName) {\n                let defaultStyle = {},\n                    element = document.body.appendChild(document.createElement(tagName)),\n                    computedStyle = window.getComputedStyle(element);\n\n                [].forEach.call(computedStyle, (style) => {\n                    defaultStyle[style] = computedStyle[style];\n                });\n                document.body.removeChild(element);\n                return defaultStyle;\n            }\n\n            function getDefaultStyleByTagName (tagName) {\n                tagName = tagName.toUpperCase();\n                if (!defaultStylesByTagName[tagName]) {\n                    defaultStylesByTagName[tagName] = computeDefaultStyleByTagName(tagName);\n                }\n                return defaultStylesByTagName[tagName];\n            };\n\n            function serializeWithStyles(elem) {\n\n                let cssTexts = [],\n                    elements,\n                    computedStyle,\n                    defaultStyle,\n                    result;\n\n                if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n                    console.error('Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE');\n                    return;\n                }\n\n                cssTexts = [];\n                elements = elem.querySelectorAll('*');\n\n                [].forEach.call(elements, (el, i) => {\n                    if (!noStyleTags[el.tagName]) {\n                        computedStyle = window.getComputedStyle(el);\n                        defaultStyle = getDefaultStyleByTagName(el.tagName);\n                        cssTexts[i] = el.style.cssText;\n                        [].forEach.call(computedStyle, (cssPropName) => {\n                            if (computedStyle[cssPropName] !== defaultStyle[cssPropName]) {\n                                el.style[cssPropName] = computedStyle[cssPropName];\n                            }\n                        });\n                    }\n                });\n\n                result = elem.outerHTML;\n                elements = [].map.call(elements, (el, i) => {\n                    el.style.cssText = cssTexts[i];\n                    return el;\n                });\n\n                return result;\n\n            };\n\n            return serializeWithStyles;\n        }\n    }\n})();\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/serializeWithStyles.js","/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base-64/base64.js\n// module id = 21\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 22\n// module chunks = 0","define(function(require) {\n    'use strict';\n\n    const d3Dispatch = require('d3-dispatch');\n    const d3Ease = require('d3-ease');\n    const d3Interpolate = require('d3-interpolate');\n    const d3Scale = require('d3-scale');\n    const d3Shape = require('d3-shape');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n\n    const {exportChart} = require('./helpers/exportChart');\n    const textHelper = require('./helpers/text');\n    const colorHelper = require('./helpers/colors');\n    const {calculatePercent} = require('./helpers/common');\n\n\n    /**\n     * @typedef DonutChartData\n     * @type {Object[]}\n     * @property {Number} quantity     Quantity of the group (required)\n     * @property {Number} percentage   Percentage of the total (optional)\n     * @property {String} name         Name of the group (required)\n     * @property {Number} id           Identifier for the group required for legend feature (optional)\n     *\n     * @example\n     * [\n     *     {\n     *         quantity: 1,\n     *         percentage: 50,\n     *         name: 'glittering',\n     *         id: 1\n     *     },\n     *     {\n     *         quantity: 1,\n     *         percentage: 50,\n     *         name: 'luminous',\n     *         id: 2\n     *     }\n     * ]\n     */\n\n    /**\n     * Reusable Donut Chart API class that renders a\n     * simple and configurable donut chart.\n     *\n     * @module Donut\n     * @tutorial donut\n     * @requires d3-dispatch, d3-ease, d3-interpolate, d3-scale, d3-shape, d3-selection\n     *\n     * @example\n     * var donutChart = donut();\n     *\n     * donutChart\n     *     .externalRadius(500)\n     *     .internalRadius(200);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(donutChart);\n     *\n     */\n    return function module() {\n\n        let margin = {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            },\n            width = 300,\n            height = 300,\n            ease = d3Ease.easeCubicInOut,\n            arcTransitionDuration = 750,\n            pieDrawingTransitionDuration = 1200,\n            pieHoverTransitionDuration = 150,\n            radiusHoverOffset = 12,\n            paddingAngle = 0,\n            data,\n            chartWidth, chartHeight,\n            externalRadius = 140,\n            internalRadius = 45.5,\n            legendWidth = externalRadius + internalRadius,\n            layout,\n            shape,\n            slices,\n            svg,\n\n            isAnimated = false,\n\n            highlightedSliceId,\n            highlightedSlice,\n            hasFixedHighlightedSlice = false,\n\n            quantityLabel = 'quantity',\n            nameLabel = 'name',\n            percentageLabel = 'percentage',\n\n            percentageFormat = '.1f',\n\n            // colors\n            colorScale,\n            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\n            // utils\n            storeAngle = function(d) {\n                this._current = d;\n            },\n            reduceOuterRadius = d => {\n                d.outerRadius = externalRadius - radiusHoverOffset;\n            },\n            sortComparator = (a, b) => b.quantity - a.quantity,\n            sumValues = (data) => data.reduce((total, d) => d.quantity + total, 0),\n\n            // extractors\n            getQuantity = ({quantity}) => quantity,\n            getSliceFill = ({data}) => colorScale(data.name),\n\n            // events\n            dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\n        /**\n         * This function creates the graph using the selection as container\n         *\n         * @param {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {DonutChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data) {\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(_data);\n\n                buildLayout();\n                buildColorScale();\n                buildShape();\n                buildSVG(this);\n                drawSlices();\n                initTooltip();\n\n                if (highlightedSliceId) {\n                    initHighlightSlice();\n                }\n            });\n        }\n\n        /**\n         * Builds color scale for chart, if any colorSchema was defined\n         * @private\n         */\n        function buildColorScale() {\n            if (colorSchema) {\n                colorScale = d3Scale.scaleOrdinal().range(colorSchema);\n            }\n        }\n\n        /**\n         * Builds containers for the chart, the legend and a wrapper for all of them\n         * @private\n         */\n        function buildContainerGroups() {\n            let container = svg\n              .append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${width / 2}, ${height / 2})`);\n\n            container.append('g').classed('chart-group', true);\n            container.append('g').classed('legend-group', true);\n        }\n\n        /**\n         * Builds the pie layout that will produce data ready to draw\n         * @private\n         */\n        function buildLayout() {\n            layout = d3Shape.pie()\n                .padAngle(paddingAngle)\n                .value(getQuantity)\n                .sort(sortComparator);\n        }\n\n        /**\n         * Builds the shape function\n         * @private\n         */\n        function buildShape() {\n            shape = d3Shape.arc()\n                .innerRadius(internalRadius)\n                .padRadius(externalRadius);\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         *\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container)\n                  .append('svg')\n                    .classed('britechart donut-chart', true)\n                    .data([data]);  //TO REVIEW\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Cleaning data adding the proper format\n         * @param  {DonutChartData} data Data\n         * @private\n         */\n        function cleanData(data) {\n            let cleanData = data.reduce((acc, d) => {\n                // Skip data without quantity\n                if (!d[quantityLabel]) {\n                    return acc;\n                }\n\n                d.quantity = +d[quantityLabel];\n                d.name = String(d[nameLabel]);\n                d.percentage = d[percentageLabel] || null;\n                acc.push(d);\n\n                return acc;\n            }, []);\n            let totalQuantity = sumValues(cleanData);\n            let dataWithPercentages = cleanData.map((d) => {\n                d.percentage = String(d.percentage || calculatePercent(d[quantityLabel], totalQuantity, percentageFormat));\n\n                return d;\n            });\n\n            return dataWithPercentages;\n        }\n\n        /**\n         * Cleans any value that could be on the legend text element\n         * @private\n         */\n        function cleanLegend() {\n            svg.select('.donut-text').text('');\n        }\n\n        /**\n         * Draws the values on the donut slice inside the text element\n         *\n         * @param  {Object} obj Data object\n         * @private\n         */\n        function drawLegend(obj) {\n            if (obj.data) {\n                svg.select('.donut-text')\n                    .text(() => `${obj.data.percentage}% ${ obj.data.name}`)\n                    .attr('dy', '.2em')\n                    .attr('text-anchor', 'middle');\n\n                svg.select('.donut-text').call(wrapText, legendWidth);\n            }\n        }\n\n        /**\n         * Draws the slices of the donut\n         * @private\n         */\n        function drawSlices() {\n            if (!slices) {\n                slices = svg.select('.chart-group')\n                    .selectAll('g.arc')\n                    .data(layout(data));\n\n                let newSlices = slices.enter()\n                  .append('g')\n                    .each(storeAngle)\n                    .each(reduceOuterRadius)\n                    .classed('arc', true);\n\n                if (isAnimated) {\n                    newSlices.merge(slices)\n                      .append('path')\n                        .attr('fill', getSliceFill)\n                        .on('mouseover', handleMouseOver)\n                        .on('mouseout', handleMouseOut)\n                        .transition()\n                        .ease(ease)\n                        .duration(pieDrawingTransitionDuration)\n                        .attrTween('d', tweenLoading);\n                } else {\n                    newSlices.merge(slices)\n                      .append('path')\n                        .attr('fill', getSliceFill)\n                        .attr('d', shape)\n                        .on('mouseover', handleMouseOver)\n                        .on('mouseout', handleMouseOut)\n                }\n            } else {\n                slices = svg.select('.chart-group')\n                    .selectAll('path')\n                    .data(layout(data));\n\n                slices\n                    .attr('d', shape);\n\n                // Redraws the angles of the data\n                slices\n                    .transition()\n                    .duration(arcTransitionDuration)\n                    .attrTween('d', tweenArc);\n            }\n        }\n\n        /**\n         * Checks if the given element id is the same as the highlightedSliceId and returns the\n         * element if that's the case\n         * @param  {DOMElement} options.data Dom element to check\n         * @return {DOMElement}              Dom element if it has the same id\n         */\n        function filterHighlightedSlice({data}) {\n            if (data.id === highlightedSliceId) {\n                return this;\n            }\n        }\n\n        /**\n         * Handles a path mouse over\n         * @return {void}\n         * @private\n         */\n        function handleMouseOver(datum) {\n            drawLegend(datum);\n            dispatcher.call('customMouseOver', this, datum);\n\n            if (highlightedSlice && this !== highlightedSlice) {\n                tweenGrowth(highlightedSlice, externalRadius - radiusHoverOffset);\n            }\n            tweenGrowth(this, externalRadius);\n        }\n\n        /**\n         * Handles a path mouse out\n         * @return {void}\n         * @private\n         */\n        function handleMouseOut() {\n            if (highlightedSlice && hasFixedHighlightedSlice) {\n                drawLegend(highlightedSlice.__data__);\n            } else {\n                cleanLegend();\n            }\n            dispatcher.call('customMouseOut', this);\n\n            if (highlightedSlice && hasFixedHighlightedSlice && this !== highlightedSlice) {\n                tweenGrowth(highlightedSlice, externalRadius);\n            }\n            tweenGrowth(this, externalRadius - radiusHoverOffset, pieHoverTransitionDuration);\n        }\n\n        /**\n         * Find the slice by id and growth it if needed\n         * @private\n         */\n        function initHighlightSlice() {\n            highlightedSlice = svg.selectAll('.chart-group .arc path')\n                .select(filterHighlightedSlice).node();\n\n            if (highlightedSlice) {\n                drawLegend(highlightedSlice.__data__);\n                tweenGrowth(highlightedSlice, externalRadius, pieDrawingTransitionDuration);\n            }\n        }\n\n        /**\n         * Creates the text element that will hold the legend of the chart\n         */\n        function initTooltip() {\n            svg.select('.legend-group')\n                .append('text')\n                .attr('class', 'donut-text');\n        }\n\n        /**\n         * Stores current angles and interpolates with new angles\n         * Check out {@link http://bl.ocks.org/mbostock/1346410| this example}\n         *\n         * @param  {Object}     a   New data for slice\n         * @return {Function}       Tweening function for the donut shape\n         * @private\n         */\n        function tweenArc(a) {\n            let i = d3Interpolate.interpolate(this._current, a);\n\n            this._current = i(0);\n\n            return function(t) {\n                return shape(i(t));\n            };\n        }\n\n        /**\n         * Animate slice with tweens depending on the attributes given\n         *\n         * @param  {DOMElement} slice   Slice to growth\n         * @param  {Number} outerRadius Final outer radius value\n         * @param  {Number} delay       Delay of animation\n         * @private\n         */\n        function tweenGrowth(slice, outerRadius, delay = 0) {\n            d3Selection.select(slice)\n                .transition()\n                .delay(delay)\n                .attrTween('d', function(d) {\n                    let i = d3Interpolate.interpolate(d.outerRadius, outerRadius);\n\n                    return (t) => {\n                        d.outerRadius = i(t);\n\n                        return shape(d);\n                    };\n                });\n        }\n\n        /**\n         * Animation for chart loading\n         * Check out {@link http://bl.ocks.org/mbostock/4341574| this example}\n         *\n         * @param  {Object} b Data point\n         * @return {Function}   Tween function\n         * @private\n         */\n        function tweenLoading(b) {\n            let i;\n\n            b.innerRadius = 0;\n            i = d3Interpolate.interpolate({ startAngle: 0, endAngle: 0}, b);\n\n            return function(t) { return shape(i(t)); };\n        }\n\n        /**\n         * Utility function that wraps a text into the given width\n         *\n         * @param  {D3Selection} text         Text to write\n         * @param  {Number} legendWidth Width of the container\n         * @private\n         */\n        function wrapText(text, legendWidth) {\n            let fontSize = externalRadius / 5;\n\n            textHelper.wrapText.call(null, 0, fontSize, legendWidth, text.node());\n        }\n\n        /**\n         * Gets or Sets the colorSchema of the chart\n         * @param  {String[]} _x Desired colorSchema for the graph\n         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n         * @public\n         */\n        exports.colorSchema = function(_x) {\n            if (!arguments.length) {\n                return colorSchema;\n            }\n            colorSchema = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the externalRadius of the chart\n         * @param  {Number} _x ExternalRadius number to get/set\n         * @return { (Number | Module) } Current externalRadius or Donut Chart module to chain calls\n         * @public\n         */\n        exports.externalRadius = function(_x) {\n            if (!arguments.length) {\n                return externalRadius;\n            }\n            externalRadius = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the hasFixedHighlightedSlice property of the chart, making it to\n         * highlight the selected slice id set with `highlightSliceById` all the time.\n         *\n         * @param  {Boolean} _x                         If we want to make the highlighted slice permanently highlighted\n         * @return { hasFixedHighlightedSlice | module} Current hasFixedHighlightedSlice flag or Chart module\n         * @public\n         */\n        exports.hasFixedHighlightedSlice = function(_x) {\n            if (!arguments.length) {\n                return hasFixedHighlightedSlice;\n            }\n            hasFixedHighlightedSlice = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { (Number | Module) } Current height or Donut Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n         * By default this is 'false'\n         *\n         * @param  {Boolean} _x Desired animation flag\n         * @return { isAnimated | module} Current isAnimated flag or Chart module\n         * @public\n         */\n        exports.isAnimated = function(_x) {\n            if (!arguments.length) {\n                return isAnimated;\n            }\n            isAnimated = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the internalRadius of the chart\n         * @param  {Number} _x InternalRadius number to get/set\n         * @return { (Number | Module) } Current internalRadius or Donut Chart module to chain calls\n         * @public\n         */\n        exports.internalRadius = function(_x) {\n            if (!arguments.length) {\n                return internalRadius;\n            }\n            internalRadius = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {Object} _x Margin object to get/set\n         * @return { (Number | Module) } Current margin or Donut Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { (Number | Module) } Current width or Donut Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _x;\n            return this;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename, title) {\n            exportChart.call(exports, svg, filename, title);\n        };\n\n\n        /**\n         * Gets or Sets the id of the slice to highlight\n         * @param  {Number} _x Slice id\n         * @return { (Number | Module) } Current highlighted slice id or Donut Chart module to chain calls\n         * @public\n         */\n        exports.highlightSliceById = function(_x) {\n            if (!arguments.length) {\n                return highlightedSliceId;\n            }\n            highlightedSliceId = _x;\n            return this;\n        };\n\n        /**\n         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n         * We are going to expose this events:\n         * customMouseOver, customMouseMove and customMouseOut\n         *\n         * @return {module} Bar Chart\n         * @public\n         */\n        exports.on = function() {\n            let value = dispatcher.on.apply(dispatcher, arguments);\n\n            return value === dispatcher ? exports : value;\n        };\n\n        return exports;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/donut.js","// https://d3js.org/d3-shape/ Version 1.2.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-path')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Path) { 'use strict';\n\nvar constant = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs = Math.abs;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar max = Math.max;\nvar min = Math.min;\nvar sin = Math.sin;\nvar sqrt = Math.sqrt;\n\nvar epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = d3Path.path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant(0),\n      y1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar lineRadial$1 = function() {\n  return lineRadial(line().curve(curveRadialLinear));\n};\n\nvar areaRadial = function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar pointRadial = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nvar slice = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x,\n      y$$1 = y,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = d3Path.path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n\nvar cross = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);\nvar kx = Math.sin(tau / 10) * kr;\nvar ky = -Math.cos(tau / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = d3Path.path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending = function(series) {\n  var sums = series.map(sum);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$1 = function(series) {\n  return ascending(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nexports.arc = arc;\nexports.area = area;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending;\nexports.stackOrderDescending = descending$1;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-shape/build/d3-shape.js\n// module id = 24\n// module chunks = 0","// https://d3js.org/d3-path/ Version 1.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar pi = Math.PI;\nvar tau = 2 * pi;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexports.path = path;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-path/build/d3-path.js\n// module id = 25\n// module chunks = 0","define(function(require) {\n    'use strict';\n\n    const d3Format = require('d3-format');\n\n    /**\n     * Calculates percentage of value from total\n     * @param  {Number}  value    Value to check\n     * @param  {Number}  total    Sum of values\n     * @param  {String}  decimals Specifies number of decimals https://github.com/d3/d3-format\n     * @return {String}           Percentage\n     */\n    function calculatePercent(value, total, decimals) {\n        return d3Format.format(decimals)(value / total * 100);\n    }\n\n    /**\n     * Checks if a number is an integer of has decimal values\n     * @param  {Number}  value Value to check\n     * @return {Boolean}       If it is an iteger\n     */\n    function isInteger(value) {\n        return value % 1 === 0;\n    }\n\n    return {\n        calculatePercent,\n        isInteger\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/common.js","define(function(require){\n    'use strict';\n\n    const d3Format = require('d3-format');\n    const d3Scale = require('d3-scale');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n\n    const textHelper = require('./helpers/text');\n    const colorHelper = require('./helpers/colors');\n\n    /**\n     * @typedef LegendChartData\n     * @type {Object[]}\n     * @property {Number} id        Id of the group (required)\n     * @property {Number} quantity  Quantity of the group (required)\n     * @property {String} name      Name of the group (required)\n     *\n     * @example\n     * [\n     *     {\n     *         id: 1,\n     *         quantity: 2,\n     *         name: 'glittering'\n     *     },\n     *     {\n     *         id: 2,\n     *         quantity: 3,\n     *         name: 'luminous'\n     *     }\n     */\n\n\n    /**\n     * @fileOverview Legend Component reusable API class that renders a\n     * simple and configurable legend element.\n     *\n     * @example\n     * var donutChart = donut(),\n     *     legendBox = legend();\n     *\n     * donutChart\n     *     .externalRadius(500)\n     *     .internalRadius(200)\n     *     .on('customMouseOver', function(data) {\n     *         legendBox.highlight(data.data.id);\n     *     })\n     *     .on('customMouseOut', function() {\n     *         legendBox.clearHighlight();\n     *     });\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(donutChart);\n     *\n     * d3Selection.select('.other-css-selector')\n     *     .datum(dataset)\n     *     .call(legendBox);\n     *\n     * @module Legend\n     * @tutorial legend\n     * @exports charts/legend\n     * @requires d3\n     */\n    return function module() {\n\n        let margin = {\n                top: 5,\n                right: 5,\n                bottom: 5,\n                left: 5\n            },\n            width = 320,\n            height = 180,\n\n            textSize = 12,\n            textLetterSpacing = 0.5,\n\n            markerSize = 16,\n            markerYOffset = - (textSize - 2) / 2,\n            marginRatio = 1.5,\n\n            valueReservedSpace = 40,\n            numberLetterSpacing = 0.8,\n            numberFormat = 's',\n\n            isFadedClassName = 'is-faded',\n            horizontal = false,\n\n            // colors\n            colorScale,\n            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\n            getId = ({id}) => id,\n            getName = ({name}) => name,\n            getFormattedQuantity = ({quantity}) => d3Format.format(numberFormat)(quantity),\n            getCircleFill = ({name}) => colorScale(name),\n\n            entries,\n            chartWidth, chartHeight,\n            data,\n            svg;\n\n\n        /**\n         * This function creates the graph using the selection as container\n         * @param  {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {object} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data){\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = _data;\n\n                buildColorScale();\n                buildSVG(this);\n                if (horizontal) {\n                    drawHorizontalLegend();\n                } else {\n                    drawVerticalLegend();\n                }\n            });\n        }\n\n        /**\n         * Depending on the size of the horizontal legend, we are going to either\n         * center the legend or add a new line with the last entry of the legend\n         * @return {void}\n         */\n        function adjustLines() {\n            let lineWidth = svg.select('.legend-line').node().getBoundingClientRect().width;\n            let lineWidthSpace = chartWidth - lineWidth;\n\n            if (lineWidthSpace > 0) {\n                centerLegendOnSVG();\n            } else {\n                splitInLines();\n            }\n        }\n\n        /**\n         * Builds containers for the legend\n         * Also applies the Margin convention\n         * @private\n         */\n        function buildContainerGroups() {\n            let container = svg\n              .append('g')\n                .classed('legend-container-group', true)\n                .attr('transform', `translate(${margin.left},${margin.top})`);\n\n            container\n              .append('g')\n                .classed('legend-group', true);\n        }\n\n        /**\n         * Builds color scale for chart, if any colorSchema was defined\n         * @private\n         */\n        function buildColorScale() {\n            if (colorSchema) {\n                colorScale = d3Scale.scaleOrdinal().range(colorSchema);\n            }\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container)\n                  .append('svg')\n                    .classed('britechart britechart-legend', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Centers the legend on the chart given that is a single line of labels\n         * @return {void}\n         */\n        function centerLegendOnSVG() {\n            let legendGroupSize = svg.select('g.legend-container-group').node().getBoundingClientRect().width;\n            let emptySpace = width - legendGroupSize;\n\n            if (emptySpace > 0) {\n                svg.select('g.legend-container-group')\n                    .attr('transform', `translate(${emptySpace/2},0)`)\n            }\n        }\n\n        /**\n         * Removes the faded class from all the entry lines\n         */\n        function cleanFadedLines() {\n            svg.select('.legend-group')\n                .selectAll('g.legend-entry')\n                .classed(isFadedClassName, false);\n        }\n\n        /**\n         * Draws the entries of the legend within a single line\n         * @private\n         */\n        function drawHorizontalLegend() {\n            let xOffset = markerSize;\n\n            // We want a single line\n            svg.select('.legend-group')\n              .append('g')\n                .classed('legend-line', true);\n\n            // And one entry per data item\n            entries = svg.select('.legend-line')\n              .selectAll('g.legend-entry')\n              .data(data);\n\n            // Enter\n            entries.enter()\n              .append('g')\n                .classed('legend-entry', true)\n                .attr('data-item', getId)\n                .attr('transform', function(d, i) {\n                    let horizontalOffset = xOffset,\n                        lineHeight = chartHeight / 2,\n                        verticalOffset = lineHeight,\n                        labelWidth = textHelper.getTextWidth(d.name, textSize);\n\n                    xOffset += markerSize + 2 * getLineElementMargin() + labelWidth;\n\n                    return `translate(${horizontalOffset},${verticalOffset})`;\n                })\n                .merge(entries)\n              .append('circle')\n                .classed('legend-circle', true)\n                .attr('cx', markerSize/2)\n                .attr('cy', markerYOffset)\n                .attr('r', markerSize / 2)\n                .style('fill', getCircleFill)\n                .style('stroke-width', 1);\n\n            svg.select('.legend-group')\n                .selectAll('g.legend-entry')\n              .append('text')\n                .classed('legend-entry-name', true)\n                .text(getName)\n                .attr('x', getLineElementMargin())\n                .style('font-size', `${textSize}px`)\n                .style('letter-spacing', `${textLetterSpacing}px`);\n\n            // Exit\n            svg.select('.legend-group')\n                .selectAll('g.legend-entry')\n                .exit()\n                .transition()\n                .style('opacity', 0)\n                .remove();\n\n            adjustLines();\n        }\n\n        /**\n         * Draws the entries of the legend\n         * @private\n         */\n        function drawVerticalLegend() {\n            entries = svg.select('.legend-group')\n                .selectAll('g.legend-line')\n                .data(data);\n\n            // Enter\n            entries.enter()\n              .append('g')\n                .classed('legend-line', true)\n                  .append('g')\n                    .classed('legend-entry', true)\n                    .attr('data-item', getId)\n                    .attr('transform', function(d, i) {\n                        let horizontalOffset = markerSize + getLineElementMargin(),\n                            lineHeight = chartHeight/ (data.length + 1),\n                            verticalOffset = (i + 1) * lineHeight;\n\n                        return `translate(${horizontalOffset},${verticalOffset})`;\n                    })\n                    .merge(entries)\n                  .append('circle')\n                    .classed('legend-circle', true)\n                    .attr('cx', markerSize/2)\n                    .attr('cy', markerYOffset)\n                    .attr('r', markerSize/2 )\n                    .style('fill', getCircleFill)\n                    .style('stroke-width', 1);\n\n            svg.select('.legend-group')\n                .selectAll('g.legend-line')\n                .selectAll('g.legend-entry')\n              .append('text')\n                .classed('legend-entry-name', true)\n                .text(getName)\n                .attr('x', getLineElementMargin())\n                .style('font-size', `${textSize}px`)\n                .style('letter-spacing', `${textLetterSpacing}px`);\n\n            svg.select('.legend-group')\n                .selectAll('g.legend-line')\n                .selectAll('g.legend-entry')\n              .append('text')\n                .classed('legend-entry-value', true)\n                .text(getFormattedQuantity)\n                .attr('x', chartWidth - valueReservedSpace)\n                .style('font-size', `${textSize}px`)\n                .style('letter-spacing', `${numberLetterSpacing}px`)\n                .style('text-anchor', 'end')\n                .style('startOffset', '100%');\n\n            // Exit\n            svg.select('.legend-group')\n                .selectAll('g.legend-line')\n                .exit()\n                .transition()\n                .style('opacity', 0)\n                .remove();\n        }\n\n        /**\n         * Applies the faded class to all lines but the one that has the given id\n         * @param  {number} exceptionItemId Id of the line that needs to stay the same\n         */\n        function fadeLinesBut(exceptionItemId) {\n            let classToFade = 'g.legend-entry';\n\n            svg.select('.legend-group')\n                .selectAll(classToFade)\n                .classed(isFadedClassName, true);\n\n            svg.select(`[data-item=\"${exceptionItemId}\"]`)\n                .classed(isFadedClassName, false);\n        }\n\n        /**\n         * Calculates the margin between elements of the legend\n         * @return {Number} Margin to apply between elements\n         */\n        function getLineElementMargin() {\n            return marginRatio * markerSize;\n        }\n\n        /**\n         * Simple method to move the last item of an overflowing legend into the next line\n         * @return {void}\n         * @private\n         */\n        function splitInLines() {\n            let legendEntries = svg.selectAll('.legend-entry');\n            let numberOfEntries = legendEntries.size();\n            let lineHeight = (chartHeight / 2) * 1.7;\n\n            let newLine = svg.select('.legend-group')\n              .append('g')\n                .classed('legend-line', true)\n                .attr('transform', `translate(0, ${lineHeight})`);\n\n            let lastEntry = legendEntries.filter(`:nth-child(${numberOfEntries})`);\n            lastEntry.attr('transform', `translate(${markerSize},0)`);\n            newLine.append(() => lastEntry.node());\n        }\n\n        /**\n         * Clears the highlighted line entry\n         */\n        exports.clearHighlight = function() {\n            cleanFadedLines();\n        };\n\n        /**\n         * Gets or Sets the colorSchema of the chart\n         * @param  {array} _x Color scheme array to get/set\n         * @return {number | module} Current colorSchema or Donut Chart module to chain calls\n         * @public\n         */\n        exports.colorSchema = function(_x) {\n            if (!arguments.length) {\n                return colorSchema;\n            }\n            colorSchema = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the legend chart\n         * @param  {number} _x Desired width for the chart\n         * @return {height | module} Current height or Legend module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Highlights a line entry by fading the rest of lines\n         * @param  {number} entryId ID of the entry line\n         */\n        exports.highlight = function(entryId) {\n            cleanFadedLines();\n            fadeLinesBut(entryId);\n        };\n\n        /**\n         * Gets or Sets the horizontal mode on the legend\n         * @param  {boolean} _x Desired horizontal mode for the graph\n         * @return {horizontal | module} Current horizontal mode or Legend module to chain calls\n         * @public\n         */\n        exports.horizontal = function(_x) {\n            if (!arguments.length) {\n                return horizontal;\n            }\n            horizontal = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the legend chart\n         * @param  {object} _x Margin object to get/set\n         * @return {margin | module} Current margin or Legend module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the markerSize of the legend chart.\n         * This markerSize will determine the horizontal and vertical size of the colored marks\n         * added as color identifiers for the chart's categories.\n         *\n         * @param  {object} _x Margin object to get/set\n         * @return {markerSize | module} Current markerSize or Legend module to chain calls\n         * @public\n         */\n        exports.markerSize = function(_x) {\n            if (!arguments.length) {\n                return markerSize;\n            }\n            markerSize = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the legend chart\n         * @param  {number} _x Desired width for the graph\n         * @return {width | module} Current width or Legend module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the number format of the legend chart\n         * @param  {string} _x Desired number format for the legend chart\n         * @return {numberFormat | module} Current number format or Legend module to chain calls\n         * @public\n         */\n        exports.numberFormat = function(_x) {\n            if (!arguments.length) {\n                return numberFormat;\n            }\n            numberFormat = _x;\n\n            return this;\n        };\n\n        return exports;\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/legend.js","define(function(require){\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Axis = require('d3-axis');\n    const d3Collection = require('d3-collection');\n    const d3Dispatch = require('d3-dispatch');\n    const d3Ease = require('d3-ease');\n    const d3Scale = require('d3-scale');\n    const d3Shape = require('d3-shape');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n    const d3TimeFormat = require('d3-time-format');\n\n    const {exportChart} = require('./helpers/exportChart');\n    const colorHelper = require('./helpers/colors');\n    const {isInteger} = require('./helpers/common');\n    const {\n        getXAxisSettings,\n        getLocaleDateFormatter\n    } = require('./helpers/timeAxis');\n\n    const {\n        axisTimeCombinations,\n        lineGradientId\n    } = require('./helpers/constants');\n\n    const {\n        formatIntegerValue,\n        formatDecimalValue,\n    } = require('./helpers/formatHelpers');\n\n    /**\n     * @typedef D3Selection\n     * @type {Array[]}\n     * @property {Number} length            Size of the selection\n     * @property {DOMElement} parentNode    Parent of the selection\n     */\n\n     /**\n      * @typedef lineChartDataByTopic\n      * @type {Object}\n      * @property {String} topicName    Topic name (required)\n      * @property {Number} topic        Topic identifier (required)\n      * @property {Object[]} dates      All date entries with values for that topic (required)\n      *\n      * @example\n      * {\n      *     topicName: 'San Francisco',\n      *     topic: 123,\n      *     dates: [\n      *         {\n      *             date: '2017-01-16T16:00:00-08:00',\n      *             value: 1\n      *         },\n      *         {\n      *             date: '2017-01-16T17:00:00-08:00',\n      *             value: 2\n      *         }\n      *     ]\n      * }\n      */\n\n     /**\n      * @typedef LineChartData\n      * @type {Object[]}\n      * @property {lineChartDataByTopic[]} dataByTopic  Data values to chart (required)\n      *\n      * @example\n      * {\n      *     dataByTopic: [\n      *         {\n      *             topicName: 'San Francisco',\n      *             topic: 123,\n      *             dates: [\n      *                 {\n      *                     date: '2017-01-16T16:00:00-08:00',\n      *                     value: 1\n      *                 },\n      *                 {\n      *                     date: '2017-01-16T17:00:00-08:00',\n      *                     value: 2\n      *                 }\n      *             ]\n      *         },\n      *         {\n      *             topicName: 'Other',\n      *             topic: 345,\n      *             dates: [\n      *                 {...},\n      *                 {...}\n      *             ]\n      *         }\n      *     ]\n      * }\n      */\n\n    /**\n     * Line Chart reusable API module that allows us\n     * rendering a multi line and configurable chart.\n     *\n     * @module Line\n     * @tutorial line\n     * @requires d3-array, d3-axis, d3-brush, d3-ease, d3-format, d3-scale, d3-shape, d3-selection, d3-time, d3-time-format\n     *\n     * @example\n     * let lineChart = line();\n     *\n     * lineChart\n     *     .aspectRatio(0.5)\n     *     .width(500);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(lineChart);\n     *\n     */\n    return function line() {\n\n        let margin = {\n                top: 60,\n                right: 30,\n                bottom: 40,\n                left: 70\n            },\n            width = 960,\n            height = 500,\n            aspectRatio = null,\n            tooltipThreshold = 480,\n            svg,\n            chartWidth, chartHeight,\n            xScale, yScale, colorScale,\n            xAxis, xMonthAxis, yAxis,\n            xAxisPadding = {\n                top: 0,\n                left: 15,\n                bottom: 0,\n                right: 0\n            },\n            monthAxisPadding = 28,\n            tickPadding = 5,\n            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n            singleLineGradientColors = colorHelper.colorGradients.greenBlueGradient,\n            topicColorMap,\n\n            forceAxisSettings = null,\n            forcedXTicks = null,\n            forcedXFormat = null,\n            locale,\n\n            isAnimated = false,\n            ease = d3Ease.easeQuadInOut,\n            animationDuration = 1500,\n            maskingRectangle,\n\n            dataByTopic,\n            dataByDate,\n\n            dateLabel = 'date',\n            valueLabel = 'value',\n            topicLabel = 'topic',\n            topicNameLabel = 'topicName',\n\n            verticalTicks = 5,\n\n            overlay,\n            overlayColor = 'rgba(0, 0, 0, 0)',\n            verticalMarkerContainer,\n            verticalMarkerLine,\n\n            verticalGridLines,\n            horizontalGridLines,\n            grid = null,\n\n            baseLine,\n\n            // extractors\n            getDate = ({date}) => date,\n            getValue = ({value}) => value,\n            getTopic = ({topic}) => topic,\n            getLineColor = ({topic}) => colorScale(topic),\n\n            // events\n            dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\n        /**\n         * This function creates the graph using the selection and data provided\n         *\n         * @param {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {LineChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data) {\n                ({\n                    dataByTopic,\n                    dataByDate\n                } = cleanData(_data));\n\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n\n                buildScales();\n                buildSVG(this);\n                buildAxis();\n                drawAxis();\n                buildGradient();\n                drawLines();\n                createMaskingClip();\n\n                if (shouldShowTooltip()) {\n                    drawVerticalMarker();\n                    drawHoverOverlay();\n                    addMouseEvents();\n                }\n            });\n        }\n\n        /**\n         * Adds events to the container group if the environment is not mobile\n         * Adding: mouseover, mouseout and mousemove\n         */\n        function addMouseEvents() {\n            svg\n                .on('mouseover', handleMouseOver)\n                .on('mouseout', handleMouseOut)\n                .on('mousemove', handleMouseMove);\n        }\n\n        /**\n         * Adjusts the position of the y axis' ticks\n         * @param  {D3Selection} selection Y axis group\n         * @return void\n         */\n        function adjustYTickLabels(selection) {\n            selection.selectAll('.tick text')\n                .attr('transform', 'translate(0, -7)');\n        }\n\n        /**\n         * Formats the value depending on its characteristics\n         * @param  {Number} value Value to format\n         * @return {Number}       Formatted value\n         */\n        function getFormattedValue(value) {\n            let format;\n\n            if (isInteger(value)) {\n                format = formatIntegerValue;\n            } else {\n                format = formatDecimalValue;\n            }\n\n            return format(value);\n        }\n\n        /**\n         * Creates the d3 x and y axis, setting orientations\n         * @private\n         */\n        function buildAxis() {\n            let dataTimeSpan = yScale.domain()[1] - yScale.domain()[0];\n            let yTickNumber = dataTimeSpan < verticalTicks - 1 ? dataTimeSpan : verticalTicks;\n            let minor, major;\n\n            if (forceAxisSettings === 'custom' && typeof forcedXFormat === 'string') {\n                minor = {\n                    tick: forcedXTicks,\n                    format: d3TimeFormat.timeFormat(forcedXFormat)\n                };\n                major = null;\n            } else {\n                ({minor, major} = getXAxisSettings(dataByDate, width, forceAxisSettings, locale));\n\n                xMonthAxis = d3Axis.axisBottom(xScale)\n                    .ticks(major.tick)\n                    .tickSize(0, 0)\n                    .tickFormat(major.format);\n            }\n\n            xAxis = d3Axis.axisBottom(xScale)\n                .ticks(minor.tick)\n                .tickSize(10, 0)\n                .tickPadding(tickPadding)\n                .tickFormat(minor.format);\n\n            yAxis = d3Axis.axisLeft(yScale)\n                .ticks(yTickNumber)\n                .tickSize([0])\n                .tickPadding(tickPadding)\n                .tickFormat(getFormattedValue);\n\n            drawGridLines(minor.tick, yTickNumber);\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * NOTE: The order of drawing of this group elements is really important,\n         * as everything else will be drawn on top of them\n         * @private\n         */\n        function buildContainerGroups(){\n            let container = svg\n              .append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${margin.left},${margin.top})`);\n\n            container\n              .append('g').classed('x-axis-group', true)\n              .append('g').classed('axis x', true);\n            container.selectAll('.x-axis-group')\n              .append('g').classed('month-axis', true);\n            container\n              .append('g').classed('y-axis-group axis y', true);\n            container\n              .append('g').classed('grid-lines-group', true);\n            container\n              .append('g').classed('chart-group', true);\n            container\n              .append('g').classed('metadata-group', true);\n        }\n\n        /**\n         * Builds the gradient element to be used later\n         * @return {void}\n         */\n        function buildGradient() {\n            svg.select('.metadata-group')\n              .append('linearGradient')\n                .attr('id', lineGradientId)\n                .attr('x1', '0%')\n                .attr('y1', '0%')\n                .attr('x2', '100%')\n                .attr('y2', '0%')\n                .selectAll('stop')\n                .data([\n                    {offset:'0%', color: singleLineGradientColors[0]},\n                    {offset:'100%', color: singleLineGradientColors[1]}\n                ])\n                .enter()\n              .append('stop')\n                .attr('offset', ({offset}) => offset)\n                .attr('stop-color', ({color}) => color)\n        }\n\n        /**\n         * Creates the x and y scales of the graph\n         * @private\n         */\n        function buildScales(){\n            let minX = d3Array.min(dataByTopic, ({dates}) => d3Array.min(dates, getDate)),\n                maxX = d3Array.max(dataByTopic, ({dates}) => d3Array.max(dates, getDate)),\n                maxY = d3Array.max(dataByTopic, ({dates}) => d3Array.max(dates, getValue)),\n                minY = d3Array.min(dataByTopic, ({dates}) => d3Array.min(dates, getValue));\n            let yScaleBottomValue = Math.abs(minY) < 0 ? Math.abs(minY) : 0;\n\n            xScale = d3Scale.scaleTime()\n                .domain([minX, maxX])\n                .rangeRound([0, chartWidth]);\n\n            yScale = d3Scale.scaleLinear()\n                .domain([yScaleBottomValue, Math.abs(maxY)])\n                .rangeRound([chartHeight, 0])\n                .nice();\n\n            colorScale = d3Scale.scaleOrdinal()\n                .range(colorSchema)\n                .domain(dataByTopic.map(getTopic));\n\n            let range = colorScale.range();\n            topicColorMap = colorScale.domain().reduce((memo, item, i) => {\n                memo[item] = range[i];\n\n                return memo;\n            }, {});\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         *\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container){\n            if (!svg) {\n                svg = d3Selection.select(container)\n                  .append('svg')\n                    .classed('britechart line-chart', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Parses dates and values into JS Date objects and numbers\n         * @param  {obj} dataByTopic    Raw data grouped by topic\n         * @return {obj}                Parsed data with dataByTopic and dataByDate\n         */\n        function cleanData({dataByTopic, dataByDate}) {\n\n            if (dataByTopic) {\n                let flatData = [];\n\n                dataByTopic.forEach((topic) => {\n                    topic.dates.forEach((date) => {\n                        flatData.push({\n                            topicName: topic[topicNameLabel],\n                            name: topic[topicLabel],\n                            date: date[dateLabel],\n                            value: date[valueLabel]\n                        });\n                    });\n                });\n\n                // Nest data by date and format\n                dataByDate = d3Collection.nest()\n                                .key( getDate )\n                                .entries(flatData)\n                                .map((d) => {\n                                    return {\n                                        date: new Date(d.key),\n                                        topics: d.values\n                                    }\n                                });\n\n                // Normalize dates in keys\n                dataByDate = dataByDate.map((d) => {\n                    d.date = new Date(d.date);\n\n                    return d;\n                });\n\n                // Normalize dataByTopic\n                dataByTopic.forEach(function(kv) {\n                    kv.dates.forEach(function(d) {\n                        d.date = new Date(d[dateLabel]);\n                        d.value = +d[valueLabel];\n                    });\n                });\n\n            }\n\n            return {dataByTopic, dataByDate};\n        }\n\n        /**\n         * Removes all the datapoints highlighter circles added to the marker container\n         * @return void\n         */\n        function cleanDataPointHighlights(){\n            verticalMarkerContainer.selectAll('.circle-container').remove();\n        }\n\n        /**\n         * Creates a masking clip that would help us fake an animation if the\n         * proper flag is true\n         *\n         * @return {void}\n         */\n        function createMaskingClip() {\n            if (isAnimated) {\n                // We use a white rectangle to simulate the line drawing animation\n                maskingRectangle = svg.append('rect')\n                    .attr('class', 'masking-rectangle')\n                    .attr('width', width)\n                    .attr('height', height)\n                    .attr('x', 0)\n                    .attr('y', 0);\n\n                maskingRectangle.transition()\n                    .duration(animationDuration)\n                    .ease(ease)\n                    .attr('x', width)\n                    .on('end', () => maskingRectangle.remove());\n            }\n        }\n\n        /**\n         * Draws the x and y axis on the svg object within their\n         * respective groups\n         * @private\n         */\n        function drawAxis(){\n            svg.select('.x-axis-group .axis.x')\n                .attr('transform', `translate(0, ${chartHeight})`)\n                .call(xAxis);\n\n            if (forceAxisSettings !== 'custom') {\n                svg.select('.x-axis-group .month-axis')\n                    .attr('transform', `translate(0, ${(chartHeight + monthAxisPadding)})`)\n                    .call(xMonthAxis);\n            }\n\n            svg.select('.y-axis-group.axis.y')\n                .transition()\n                .ease(ease)\n                .attr('transform', `translate(${-xAxisPadding.left}, 0)`)\n                .call(yAxis)\n                .call(adjustYTickLabels);\n        }\n\n        /**\n         * Draws the line elements within the chart group\n         * @private\n         */\n        function drawLines(){\n            let lines,\n                topicLine;\n\n            topicLine = d3Shape.line()\n                .x(({date}) => xScale(date))\n                .y(({value}) => yScale(value));\n\n            lines = svg.select('.chart-group').selectAll('.line')\n                .data(dataByTopic);\n\n            lines.enter()\n              .append('g')\n                .attr('class', 'topic')\n              .append('path')\n                .attr('class', 'line')\n                .attr('d', ({dates}) => topicLine(dates))\n                .style('stroke', (d) => (\n                    dataByTopic.length === 1 ? `url(#${lineGradientId})` : getLineColor(d)\n                ));\n\n            lines\n                .exit()\n                .remove();\n        }\n\n        /**\n         * Draws grid lines on the background of the chart\n         * @return void\n         */\n        function drawGridLines(xTicks, yTicks){\n            if (grid === 'horizontal' || grid === 'full') {\n                horizontalGridLines = svg.select('.grid-lines-group')\n                    .selectAll('line.horizontal-grid-line')\n                    .data(yScale.ticks(yTicks))\n                    .enter()\n                        .append('line')\n                        .attr('class', 'horizontal-grid-line')\n                        .attr('x1', (-xAxisPadding.left - 30))\n                        .attr('x2', chartWidth)\n                        .attr('y1', (d) => yScale(d))\n                        .attr('y2', (d) => yScale(d));\n            }\n\n            if (grid === 'vertical' || grid === 'full') {\n                verticalGridLines = svg.select('.grid-lines-group')\n                    .selectAll('line.vertical-grid-line')\n                    .data(xScale.ticks(xTicks))\n                    .enter()\n                        .append('line')\n                        .attr('class', 'vertical-grid-line')\n                        .attr('y1', 0)\n                        .attr('y2', chartHeight)\n                        .attr('x1', (d) => xScale(d))\n                        .attr('x2', (d) => xScale(d));\n            }\n\n            //draw a horizontal line to extend x-axis till the edges\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-x-line')\n                .data([0])\n                .enter()\n              .append('line')\n                .attr('class', 'extended-x-line')\n                .attr('x1', (-xAxisPadding.left - 30))\n                .attr('x2', chartWidth)\n                .attr('y1', height - margin.bottom - margin.top)\n                .attr('y2', height - margin.bottom - margin.top);\n        }\n\n        /**\n         * Draws an overlay element over the graph\n         * @inner\n         * @return void\n         */\n        function drawHoverOverlay(){\n            overlay = svg.select('.metadata-group')\n              .append('rect')\n                .attr('class','overlay')\n                .attr('y1', 0)\n                .attr('y2', height)\n                .attr('height', chartHeight)\n                .attr('width', chartWidth)\n                .attr('fill', overlayColor)\n                .style('display', 'none');\n        }\n\n        /**\n         * Creates the vertical marker\n         * @return void\n         */\n        function drawVerticalMarker(){\n            verticalMarkerContainer = svg.select('.metadata-group')\n              .append('g')\n                .attr('class', 'hover-marker vertical-marker-container')\n                .attr('transform', 'translate(9999, 0)');\n\n            verticalMarkerLine = verticalMarkerContainer.selectAll('path')\n                .data([{\n                    x1: 0,\n                    y1: 0,\n                    x2: 0,\n                    y2: 0\n                }])\n                .enter()\n              .append('line')\n                .classed('vertical-marker', true)\n                .attr('x1', 0)\n                .attr('y1', chartHeight)\n                .attr('x2', 0)\n                .attr('y2', 0);\n        }\n\n        /**\n         * Finds out which datapoint is closer to the given x position\n         * @param  {Number} x0 Date value for data point\n         * @param  {Object} d0 Previous datapoint\n         * @param  {Object} d1 Next datapoint\n         * @return {Object}    d0 or d1, the datapoint with closest date to x0\n         */\n        function findOutNearestDate(x0, d0, d1){\n            return (new Date(x0).getTime() - new Date(d0.date).getTime()) > (new Date(d1.date).getTime() - new Date(x0).getTime()) ? d0 : d1;\n        }\n\n        /**\n         * Extract X position on the graph from a given mouse event\n         * @param  {Object} event D3 mouse event\n         * @return {Number}       Position on the x axis of the mouse\n         */\n        function getMouseXPosition(event) {\n            return d3Selection.mouse(event)[0];\n        }\n\n        /**\n         * Finds out the data entry that is closer to the given position on pixels\n         * @param  {Number} mouseX X position of the mouse\n         * @return {Object}        Data entry that is closer to that x axis position\n         */\n        function getNearestDataPoint(mouseX) {\n            let dateFromInvertedX = xScale.invert(mouseX);\n            let bisectDate = d3Array.bisector(getDate).left;\n            let dataEntryIndex = bisectDate(dataByDate, dateFromInvertedX, 1);\n            let dataEntryForXPosition = dataByDate[dataEntryIndex];\n            let previousDataEntryForXPosition = dataByDate[dataEntryIndex - 1];\n            let nearestDataPoint;\n\n            if (previousDataEntryForXPosition && dataEntryForXPosition) {\n                nearestDataPoint = findOutNearestDate(dateFromInvertedX, dataEntryForXPosition, previousDataEntryForXPosition);\n            } else {\n                nearestDataPoint = dataEntryForXPosition;\n            }\n\n            return nearestDataPoint;\n        }\n\n        /**\n         * MouseMove handler, calculates the nearest dataPoint to the cursor\n         * and updates metadata related to it\n         * @private\n         */\n        function handleMouseMove(){\n            let xPositionOffset = -margin.left, //Arbitrary number, will love to know how to assess it\n                dataPoint = getNearestDataPoint(getMouseXPosition(this) + xPositionOffset),\n                dataPointXPosition;\n\n            if (dataPoint) {\n                dataPointXPosition = xScale(new Date(dataPoint.date));\n                // More verticalMarker to that datapoint\n                moveVerticalMarker(dataPointXPosition);\n                // Add data points highlighting\n                highlightDataPoints(dataPoint);\n                // Emit event with xPosition for tooltip or similar feature\n                dispatcher.call('customMouseMove', this, dataPoint, topicColorMap, dataPointXPosition);\n            }\n        }\n\n        /**\n         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n         * It also resets the container of the vertical marker\n         * @private\n         */\n        function handleMouseOut(data){\n            overlay.style('display', 'none');\n            verticalMarkerLine.classed('bc-is-active', false);\n            verticalMarkerContainer.attr('transform', 'translate(9999, 0)');\n\n            dispatcher.call('customMouseOut', this, data);\n        }\n\n        /**\n         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n         * @private\n         */\n        function handleMouseOver(data){\n            overlay.style('display', 'block');\n            verticalMarkerLine.classed('bc-is-active', true);\n\n            dispatcher.call('customMouseOver', this, data);\n        }\n\n        /**\n         * Creates coloured circles marking where the exact data y value is for a given data point\n         * @param  {Object} dataPoint Data point to extract info from\n         * @private\n         */\n        function highlightDataPoints(dataPoint) {\n            cleanDataPointHighlights();\n\n            // sorting the topics based on the order of the colors,\n            // so that the order always stays constant\n            dataPoint.topics = dataPoint.topics\n                                    .filter(t => !!t)\n                                    .sort((a, b) => topicColorMap[a.name] < topicColorMap[b.name]);\n\n            dataPoint.topics.forEach(({name}, index) => {\n                let marker = verticalMarkerContainer\n                                .append('g')\n                                .classed('circle-container', true),\n                    circleSize = 12;\n\n                marker.append('circle')\n                    .classed('data-point-highlighter', true)\n                    .attr('cx', circleSize)\n                    .attr('cy', 0)\n                    .attr('r', 5)\n                    .style('stroke', topicColorMap[name]);\n\n                marker.attr('transform', `translate( ${(- circleSize)}, ${(yScale(dataPoint.topics[index].value))} )` );\n            });\n        }\n\n        /**\n         * Helper method to update the x position of the vertical marker\n         * @param  {Object} dataPoint Data entry to extract info\n         * @return void\n         */\n        function moveVerticalMarker(verticalMarkerXPosition){\n            verticalMarkerContainer.attr('transform', `translate(${verticalMarkerXPosition},0)`);\n        }\n\n        /**\n         * Determines if we should add the tooltip related logic depending on the\n         * size of the chart and the tooltipThreshold variable value\n         * @return {Boolean} Should we build the tooltip?\n         */\n        function shouldShowTooltip() {\n            return width > tooltipThreshold;\n        }\n\n        // API Methods\n\n        /**\n         * Gets or Sets the aspect ratio of the chart\n         * @param  {Number} _x Desired aspect ratio for the graph\n         * @return { (Number | Module) } Current aspect ratio or Line Chart module to chain calls\n         * @public\n         */\n        exports.aspectRatio = function(_x) {\n            if (!arguments.length) {\n                return aspectRatio;\n            }\n            aspectRatio = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the colorSchema of the chart\n         * @param  {String[]} _x Desired colorSchema for the graph\n         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n         * @public\n         */\n        exports.colorSchema = function(_x) {\n            if (!arguments.length) {\n                return colorSchema;\n            }\n            colorSchema = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the dateLabel of the chart\n         * @param  {Number} _x Desired dateLabel for the graph\n         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n         * @public\n         */\n        exports.dateLabel = function(_x) {\n            if (!arguments.length) {\n                return dateLabel;\n            }\n            dateLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x axis grouping\n         * @param  {String} _x Desired format\n         * @return { (String|Module) }    Current format or module to chain calls\n         * @example\n         *     line.forceAxisFormat(line.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.forceAxisFormat = function(_x) {\n            if (!arguments.length) {\n              return forceAxisSettings;\n            }\n            forceAxisSettings = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x format\n         * It requires a `forceAxisFormat` of 'custom' in order to work.\n         * NOTE: localization not supported\n         * @param  {String} _x              Desired format for x axis\n         * @return { (String|Module) }      Current format or module to chain calls\n         */\n        exports.forcedXFormat = function(_x) {\n            if (!arguments.length) {\n              return forcedXFormat;\n            }\n            forcedXFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x ticks. It requires a `forceAxisFormat` of 'custom' in order to work.\n         * NOTE: This value needs to be a multiple of 2, 5 or 10. They won't always work as expected, as D3 decides at the end\n         * how many and where the ticks will appear.\n         *\n         * @param  {Number} _x              Desired number of x axis ticks (multiple of 2, 5 or 10)\n         * @return { (Number|Module) }      Current number or ticks or module to chain calls\n         */\n        exports.forcedXTicks = function(_x) {\n            if (!arguments.length) {\n              return forcedXTicks;\n            }\n            forcedXTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the grid mode.\n         *\n         * @param  {String} _x Desired mode for the grid ('vertical'|'horizontal'|'full')\n         * @return { String | module} Current mode of the grid or Line Chart module to chain calls\n         * @public\n         */\n        exports.grid = function(_x) {\n            if (!arguments.length) {\n                return grid;\n            }\n            grid = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { (Number | Module) } Current height or Line Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            if (aspectRatio) {\n                width = Math.ceil(_x / aspectRatio);\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n         * By default this is 'false'\n         *\n         * @param  {Boolean} _x Desired animation flag\n         * @return { isAnimated | module} Current isAnimated flag or Chart module\n         * @public\n         */\n        exports.isAnimated = function(_x) {\n            if (!arguments.length) {\n                return isAnimated;\n            }\n            isAnimated = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {Object} _x Margin object to get/set\n         * @return { (Number | Module) } Current margin or Line Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the gradient colors of the line chart when there is only one line\n         * @param  {String[]} _x Desired color gradient for the line (array of two hexadecimal numbers)\n         * @return { (Number | Module) } Current color gradient or Line Chart module to chain calls\n         * @public\n         */\n        exports.lineGradient = function(_x) {\n            if (!arguments.length) {\n                return singleLineGradientColors;\n            }\n            singleLineGradientColors = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the minimum width of the graph in order to show the tooltip\n         * NOTE: This could also depend on the aspect ratio\n         * @param  {Number} _x Desired tooltip threshold for the graph\n         * @return { (Number | Module) } Current tooltip threshold or Line Chart module to chain calls\n         * @public\n         */\n        exports.tooltipThreshold = function(_x) {\n            if (!arguments.length) {\n                return tooltipThreshold;\n            }\n            tooltipThreshold = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the topicLabel of the chart\n         * @param  {Number} _x Desired topicLabel for the graph\n         * @return { topicLabel | module} Current topicLabel or Chart module to chain calls\n         * @public\n         */\n        exports.topicLabel = function(_x) {\n            if (!arguments.length) {\n                return topicLabel;\n            }\n            topicLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabel of the chart\n         * @param  {Number} _x Desired valueLabel for the graph\n         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabel = function(_x) {\n            if (!arguments.length) {\n                return valueLabel;\n            }\n            valueLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the number of verticalTicks of the yAxis on the chart\n         * @param  {Number} _x Desired verticalTicks\n         * @return { verticalTicks | module} Current verticalTicks or Chart module to chain calls\n         * @public\n         */\n        exports.verticalTicks = function(_x) {\n            if (!arguments.length) {\n                return verticalTicks;\n            }\n            verticalTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { (Number | Module) } Current width or Line Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            if (aspectRatio) {\n                height = Math.ceil(_x * aspectRatio);\n            }\n            width = _x;\n\n            return this;\n        };\n\n        /**\n         * Pass language tag for the tooltip to localize the date.\n         * Feature uses Intl.DateTimeFormat, for compatability and support, refer to\n         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n         * @param  {String} _x  must be a language tag (BCP 47) like 'en-US' or 'fr-FR'\n         * @return { (String|Module) }    Current locale or module to chain calls\n         */\n        exports.locale = function(_x) {\n            if (!arguments.length) {\n                return locale;\n            }\n            locale = _x;\n\n            return this;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename, title) {\n            exportChart.call(exports, svg, filename, title);\n        };\n\n        /**\n         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n         * We are going to expose this events:\n         * customMouseHover, customMouseMove and customMouseOut\n         *\n         * @return {module} Bar Chart\n         * @public\n         */\n        exports.on = function() {\n            let value = dispatcher.on.apply(dispatcher, arguments);\n\n            return value === dispatcher ? exports : value;\n        };\n\n        /**\n         * Exposes the constants to be used to force the x axis to respect a certain granularity\n         * current options: MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR\n         * @example\n         *     line.forceAxisFormat(line.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.axisTimeCombinations = axisTimeCombinations;\n\n        return exports;\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/line.js","define(function(require) {\n    'use strict';\n\n    const d3Time = require('d3-time');\n    const d3TimeFormat = require('d3-time-format');\n\n    const {\n        axisTimeCombinations,\n        timeBenchmarks\n    } = require('./constants');\n\n\n    const singleTickWidth = 20;\n    const horizontalTickSpacing = 50;\n    const minEntryNumForDayFormat = 5;\n\n    const formatMap = {\n        minute: d3TimeFormat.timeFormat('%M m'),\n        hour: d3TimeFormat.timeFormat('%H %p'),\n        day: d3TimeFormat.timeFormat('%e'),\n        daymonth: d3TimeFormat.timeFormat('%d %b'),\n        month: d3TimeFormat.timeFormat('%b'),\n        year: d3TimeFormat.timeFormat('%Y')\n    };\n    const localeTimeMap = {\n        minute: {minute:'numeric'},\n        hour: {hour:'numeric'},\n        day: {day: 'numeric'},\n        daymonth: {day: 'numeric', month:'short'},\n        month: {month: 'short'},\n        year: {year: 'numeric'}\n    };\n    const settingsToMajorTickMap = {\n        [axisTimeCombinations.MINUTE_HOUR]: d3Time.timeHour.every(1),\n        [axisTimeCombinations.HOUR_DAY]: d3Time.timeDay.every(1),\n        [axisTimeCombinations.DAY_MONTH]: d3Time.timeMonth.every(1),\n        [axisTimeCombinations.MONTH_YEAR]: d3Time.timeYear.every(1)\n    };\n\n    /**\n     * Figures out the proper settings from the current time span\n     * @param  {Number} timeSpan    Span of time charted by the graph in milliseconds\n     * @return {String}             Type of settings for the given timeSpan\n     */\n    const getAxisSettingsFromTimeSpan = (timeSpan) => {\n        let {\n          ONE_YEAR,\n          ONE_DAY\n        } = timeBenchmarks;\n        let settings;\n\n        if (timeSpan < ONE_DAY) {\n            settings = axisTimeCombinations.HOUR_DAY;\n        } else if (timeSpan < ONE_YEAR) {\n            settings = axisTimeCombinations.DAY_MONTH;\n        } else {\n            settings = axisTimeCombinations.MONTH_YEAR;\n        }\n\n        return settings;\n    }\n\n    /**\n     * Calculates the maximum number of ticks for the x axis\n     * @param  {Number} width Chart width\n     * @param  {Number} dataPointNumber  Number of entries on the data\n     * @return {Number}       Number of ticks to render\n     */\n    const getMaxNumOfHorizontalTicks = (width, dataPointNumber) => {\n        let ticksForWidth = Math.ceil(width / (singleTickWidth + horizontalTickSpacing));\n\n        return dataPointNumber < minEntryNumForDayFormat ? d3Time.timeDay : Math.min(dataPointNumber, ticksForWidth);\n    }\n\n    /**\n     * Takes a locale (string) and the format to return and returns a function to format dates\n     * @param  {String} locale    locale tag eg. en-US, fr-FR, ru-RU\n     * @param  {string} timeUnit  minute, hour, day, dayMonth, month, year\n     * @return {function}         function that formats dates in the proper locale\n     */\n    const getLocaleDateFormatter = (locale, timeUnit='day') => {\n        let options = localeTimeMap[timeUnit];\n        let formatter = new Intl.DateTimeFormat(locale, options);\n\n        return (date) => formatter.format(date);\n    }\n\n    /**\n     * Returns tick object to be used when building the x axis\n     * @param {dataByDate} dataByDate       Chart data ordered by Date\n     * @param {Number} width                Chart width\n     * @param {String} settings             Optional forced settings for axis\n     * @return {object} tick settings for major and minr axis\n     */\n    const getXAxisSettings = (dataByDate, width, settings = null, locale=null) => {\n        let firstDate = new Date(dataByDate[0].date);\n        let lastDate = new Date(dataByDate[dataByDate.length - 1].date);\n        let dateTimeSpan = lastDate - firstDate;\n\n        if (locale && ((typeof Intl === 'undefined') || (typeof Intl === 'object' && !Intl.DateTimeFormat))) {\n            locale = null;\n        }\n\n        if (!settings) {\n            settings = getAxisSettingsFromTimeSpan(dateTimeSpan);\n        }\n\n        let [minor, major] = settings.split('-');\n\n        let majorTickValue = settingsToMajorTickMap[settings];\n        let minorTickValue = getMaxNumOfHorizontalTicks(width, dataByDate.length);\n\n        return {\n            minor: {\n              format: locale ? getLocaleDateFormatter(locale, minor) : formatMap[minor],\n              tick: minorTickValue\n            },\n            major: {\n              format: locale ? getLocaleDateFormatter(locale, major) : formatMap[major],\n              tick: majorTickValue\n            }\n        };\n    };\n\n    return {\n        getXAxisSettings,\n        getLocaleDateFormatter\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/timeAxis.js","define(function(require) {\n    'use strict';\n\n    const d3Format = require('d3-format');\n\n    const integerValueFormats = {\n                small: {\n                    limit: 10,\n                    format: d3Format.format('')\n                },\n                medium: {\n                    limit: 1000,\n                    format: d3Format.format('')\n                },\n                large: {\n                    limit: null,\n                    format: d3Format.format('.2s')\n                }\n            };\n    const decimalValueFormats = {\n                small: {\n                    limit: 10,\n                    format: d3Format.format('.3f')\n                },\n                medium: {\n                    limit: 100,\n                    format: d3Format.format('.1f')\n                },\n                large: {\n                    limit: null,\n                    format: d3Format.format('.2s')\n                }\n            };\n\n    function getValueSize(value, limits) {\n        let size = 'large';\n\n        if (value < limits.small.limit) {\n            size = 'small';\n        } else if (value < limits.medium.limit) {\n            size = 'medium';\n        }\n        return size;\n    }\n\n    /**\n     * Formats an integer value depending on its value range\n     * @param  {Number} value Decimal point value to format\n     * @return {Number}       Formatted value to show\n     */\n    function formatIntegerValue(value) {\n        let size = getValueSize(value, integerValueFormats);\n        let format = integerValueFormats[size].format;\n\n        return format(value);\n    }\n\n    /**\n     * Formats a floating point value depending on its value range\n     * @param  {Number} value Decimal point value to format\n     * @return {Number}       Formatted value to show\n     */\n    function formatDecimalValue(value) {\n        let size = getValueSize(value, decimalValueFormats);\n        let format = decimalValueFormats[size].format;\n\n        return format(value);\n    }\n\n    return {\n        formatDecimalValue,\n        formatIntegerValue,\n    }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/formatHelpers.js","define(function(require){\n    'use strict';\n\n    const d3Ease = require('d3-ease');\n    const d3Format = require('d3-format');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n    const d3TimeFormat = require('d3-time-format');\n\n    const {\n        axisTimeCombinations\n    } = require('./helpers/constants');\n\n    const {\n        formatIntegerValue,\n        formatDecimalValue\n    } = require('./helpers/formatHelpers');\n\n    const {\n        isInteger\n    } = require('./helpers/common');\n\n    /**\n     * Tooltip Component reusable API class that renders a\n     * simple and configurable tooltip element for Britechart's\n     * line chart or stacked area chart.\n     *\n     * @module Tooltip\n     * @tutorial tooltip\n     * @requires d3-array, d3-axis, d3-dispatch, d3-format, d3-scale, d3-selection, d3-transition\n     *\n     * @example\n     * var lineChart = line(),\n     *     tooltip = tooltip();\n     *\n     * tooltip\n     *     .title('Tooltip title');\n     *\n     * lineChart\n     *     .width(500)\n     *     .on('customMouseOver', function() {\n     *          tooltip.show();\n     *     })\n     *     .on('customMouseMove', function(dataPoint, topicColorMap, dataPointXPosition) {\n     *          tooltip.update(dataPoint, topicColorMap, dataPointXPosition);\n     *     })\n     *     .on('customMouseOut', function() {\n     *          tooltip.hide();\n     *     });\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(lineChart);\n     *\n     * d3Selection.select('.metadata-group .hover-marker')\n     *     .datum([])\n     *     .call(tooltip);\n     *\n     */\n    return function module() {\n\n        let margin = {\n                top: 2,\n                right: 2,\n                bottom: 2,\n                left: 2\n            },\n            width = 250,\n            height = 45,\n\n            title = 'Tooltip title',\n\n            // tooltip\n            tooltip,\n            tooltipOffset = {\n                y: -55,\n                x: 0\n            },\n            tooltipMaxTopicLength = 170,\n            tooltipTextContainer,\n            tooltipDivider,\n            tooltipBody,\n            tooltipTitle,\n            tooltipWidth = 250,\n            tooltipHeight = 48,\n            tooltipBorderRadius = 3,\n            ttTextX = 0,\n            ttTextY = 37,\n            textSize,\n            entryLineLimit = 3,\n\n            // Animations\n            mouseChaseDuration = 100,\n            ease = d3Ease.easeQuadInOut,\n\n            circleYOffset = 8,\n\n            colorMap,\n            bodyFillColor = '#FFFFFF',\n            borderStrokeColor = '#D2D6DF',\n            titleFillColor = '#6D717A',\n            textFillColor = '#282C35',\n            tooltipTextColor = '#000000',\n\n            dateLabel = 'date',\n            valueLabel = 'value',\n            nameLabel = 'name',\n            topicLabel = 'topics',\n\n            defaultAxisSettings = axisTimeCombinations.DAY_MONTH,\n            forceAxisSettings = null,\n            forceOrder = [],\n\n            // formats\n            monthDayYearFormat = d3TimeFormat.timeFormat('%b %d, %Y'),\n            monthDayHourFormat = d3TimeFormat.timeFormat('%b %d, %I %p'),\n            locale,\n\n            chartWidth, chartHeight,\n            data,\n            svg;\n\n\n        /**\n         * This function creates the graph using the selection as container\n         * @param {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {Object} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data){\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = _data;\n\n                buildSVG(this);\n            });\n        }\n\n        /**\n         * Builds containers for the tooltip\n         * Also applies the Margin convention\n         * @private\n         */\n        function buildContainerGroups() {\n            var container = svg.append('g')\n                .classed('tooltip-container-group', true)\n                .attr('transform', `translate( ${margin.left}, ${margin.top})`);\n\n            container.append('g').classed('tooltip-group', true);\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container)\n                    .append('g')\n                    .classed('britechart britechart-tooltip', true);\n\n                buildContainerGroups();\n                drawTooltip();\n            }\n            svg\n                .transition()\n                .attr('width', width)\n                .attr('height', height);\n\n            // Hidden by default\n            exports.hide();\n        }\n\n        /**\n         * Resets the tooltipBody content\n         * @return void\n         */\n        function cleanContent(){\n            tooltipBody.selectAll('text').remove();\n            tooltipBody.selectAll('circle').remove();\n        }\n\n        /**\n         * Draws the different elements of the Tooltip box\n         * @return void\n         */\n        function drawTooltip(){\n            tooltipTextContainer = svg.selectAll('.tooltip-group')\n              .append('g')\n                .classed('tooltip-text', true);\n\n            tooltip = tooltipTextContainer\n              .append('rect')\n                .classed('tooltip-text-container', true)\n                .attr('x', -tooltipWidth / 4 + 8)\n                .attr('y', 0)\n                .attr('width', tooltipWidth)\n                .attr('height', tooltipHeight)\n                .attr('rx', tooltipBorderRadius)\n                .attr('ry', tooltipBorderRadius)\n                .style('fill', bodyFillColor)\n                .style('stroke', borderStrokeColor)\n                .style('stroke-width', 1);\n\n            tooltipTitle = tooltipTextContainer\n              .append('text')\n                .classed('tooltip-title', true)\n                .attr('x', -tooltipWidth / 4 + 17)\n                .attr('dy', '.35em')\n                .attr('y', 16)\n                .style('fill', titleFillColor);\n\n            tooltipDivider = tooltipTextContainer\n              .append('line')\n                .classed('tooltip-divider', true)\n                .attr('x1', -tooltipWidth / 4 + 15)\n                .attr('x2', 265)\n                .attr('y1', 31)\n                .attr('y2', 31)\n                .style('stroke', borderStrokeColor);\n\n            tooltipBody = tooltipTextContainer\n              .append('g')\n                .classed('tooltip-body', true)\n                .style('transform', 'translateY(8px)')\n                .style('fill', textFillColor);\n        }\n\n        /**\n         * Formats the value depending on its characteristics\n         * @param  {Number} value Value to format\n         * @return {Number}       Formatted value\n         */\n        function getFormattedValue(value) {\n            if (!value) {\n                return 0;\n            }\n\n            if (isInteger(value)) {\n                value = formatIntegerValue(value);\n            } else {\n                value = formatDecimalValue(value);\n            }\n\n            return value;\n        }\n\n        /**\n         * Calculates the desired position for the tooltip\n         * @param  {Number} mouseX             Current horizontal mouse position\n         * @param  {Number} mouseY             Current vertical mouse position\n         * @return {Number[]}                  X and Y position\n         */\n        function getTooltipPosition([mouseX, mouseY]) {\n            let tooltipX, tooltipY;\n\n            // show tooltip to the right\n            if ((mouseX - tooltipWidth) < 0) {\n                // Tooltip on the right\n                tooltipX = tooltipWidth - 185;\n            } else {\n                // Tooltip on the left\n                tooltipX = -205\n            }\n\n            if (mouseY) {\n                tooltipY = tooltipOffset.y;\n                // tooltipY = mouseY + tooltipOffset.y;\n            } else {\n                tooltipY = tooltipOffset.y;\n            }\n\n            return [tooltipX, tooltipY];\n        }\n\n        /**\n         * Extracts the value from the data object\n         * @param  {Object} data Data value containing the info\n         * @return {String}      Value to show\n         */\n        function getValueText(data) {\n            let value = data[valueLabel];\n            let valueText;\n\n            if (data.missingValue) {\n                valueText = '-';\n            } else {\n                valueText = getFormattedValue(value).toString();\n            }\n\n            return valueText;\n        }\n\n        /**\n         * Resets the height of the tooltip and the pointer for the text\n         * position\n         */\n        function resetSizeAndPositionPointers() {\n            tooltipHeight = 48;\n            ttTextY = 37;\n            ttTextX = 0;\n        }\n\n        /**\n         * Draws the data entries inside the tooltip for a given topic\n         * @param  {Object} topic Topic to extract data from\n         * @return void\n         */\n        function updateTopicContent(topic){\n            let name = topic[nameLabel],\n                tooltipRight,\n                tooltipLeftText,\n                tooltipRightText,\n                elementText;\n\n            tooltipLeftText = topic.topicName || name;\n            tooltipRightText = getValueText(topic);\n\n            elementText = tooltipBody\n                .append('text')\n                .classed('tooltip-left-text', true)\n                .attr('dy', '1em')\n                .attr('x', ttTextX - 20)\n                .attr('y', ttTextY)\n                .style('fill', tooltipTextColor)\n                .text(tooltipLeftText)\n                .call(textWrap, tooltipMaxTopicLength, -25);\n\n            tooltipRight = tooltipBody\n                .append('text')\n                .classed('tooltip-right-text', true)\n                .attr('dy', '1em')\n                .attr('x', ttTextX + 8)\n                .attr('y', ttTextY)\n                .style('fill', tooltipTextColor)\n                .text(tooltipRightText);\n\n            textSize = elementText.node().getBBox();\n            tooltipHeight += textSize.height + 5;\n\n            // Not sure if necessary\n            tooltipRight.attr('x', tooltipWidth - tooltipRight.node().getBBox().width - 10 - tooltipWidth / 4)\n\n            tooltipBody\n                .append('circle')\n                .classed('tooltip-circle', true)\n                .attr('cx', 23 - tooltipWidth / 4)\n                .attr('cy', (ttTextY + circleYOffset))\n                .attr('r', 5)\n                .style('fill', colorMap[name])\n                .style('stroke-width', 1);\n\n            ttTextY += textSize.height + 7;\n        }\n\n        /**\n         * Updates size and position of tooltip depending on the side of the chart we are in\n         * TODO: This needs a refactor, following the mini-tooltip code.\n         *\n         * @param  {Object} dataPoint DataPoint of the tooltip\n         * @param  {Number} xPosition DataPoint's x position in the chart\n         * @param  {Number} xPosition DataPoint's y position in the chart\n         * @return void\n         */\n        function updatePositionAndSize(dataPoint, xPosition, yPosition){\n            let [tooltipX, tooltipY] = getTooltipPosition([xPosition, yPosition])\n\n            tooltip\n                .attr('width', tooltipWidth)\n                .attr('height', tooltipHeight + 10);\n\n            tooltipTextContainer.transition()\n                .duration(mouseChaseDuration)\n                .ease(ease)\n                .attr('transform', `translate(${tooltipX}, ${tooltipY})`);\n\n            tooltipDivider\n                .attr('x2', tooltipWidth - 60);\n        }\n\n        /**\n         * Updates value of tooltipTitle with the data meaning and the date\n         * @param  {Object} dataPoint Point of data to use as source\n         * @return void\n         */\n        function updateTitle(dataPoint) {\n            var date = new Date(dataPoint[dateLabel]),\n                tooltipTitleText = title + ' - ' + formatDate(date);\n\n            tooltipTitle.text(tooltipTitleText);\n        }\n\n        /**\n         * Figures out which date format to use when showing the date of the current data entry\n         * @return {Function} The proper date formatting function\n         */\n        function formatDate(date) {\n            let settings = forceAxisSettings || defaultAxisSettings;\n            let format = null;\n            let localeOptions = {month:'short', day:'numeric'};\n\n            if (settings === axisTimeCombinations.DAY_MONTH || settings === axisTimeCombinations.MONTH_YEAR) {\n                format = monthDayYearFormat;\n                localeOptions.year = 'numeric';\n            } else if (settings === axisTimeCombinations.HOUR_DAY || settings === axisTimeCombinations.MINUTE_HOUR) {\n                format = monthDayHourFormat;\n                localeOptions.hour = 'numeric';\n            }\n\n            if (locale && ((typeof Intl !== 'undefined') && (typeof Intl === 'object' && Intl.DateTimeFormat))) {\n                let f = Intl.DateTimeFormat(locale, localeOptions);\n\n                return f.format(date);\n            }\n\n            return format(date);\n        }\n\n        /**\n         * Helper method to sort the passed topics array by the names passed int he order arary\n         * @param  {Object[]} topics    Topics data, retrieved from datapoint passed by line chart\n         * @param  {Object[]} order     Array of names in the order to sort topics by\n         * @return {Object[]}           sorted topics object\n         */\n        function _sortByForceOrder(topics, order=forceOrder) {\n            return forceOrder.map((orderName) => topics.filter(({name}) => name === orderName)[0]);\n        }\n\n        /**\n         * Sorts topic by alphabetical order for arrays of objects with a name proeprty\n         * @param  {Array} topics   List of topic objects\n         * @return {Array}          List of topic name strings\n         */\n        function _sortByAlpha(topics) {\n            return topics\n                .map(d => d)\n                .sort((a, b) => {\n                    if (a.name > b.name) return 1;\n                    if (a.name === b.name) return 0;\n                    return -1;\n                });\n\n            let otherIndex = topics.map(({name}) => name).indexOf('Other');\n\n            if (otherIndex >= 0) {\n                let other = topics.splice(otherIndex, 1);\n\n                topics = topics.concat(other);\n            }\n        }\n\n        /**\n         * Wraps a text given the text, width, x position and textFormatter function\n         * @param  {D3Selection} text  Selection with the text to wrap inside\n         * @param  {Number} width Desired max width for that line\n         * @param  {Number} xpos  Initial x position of the text\n         *\n         * REF: http://bl.ocks.org/mbostock/7555321\n         * More discussions on https://github.com/mbostock/d3/issues/1642\n         */\n        function textWrap(text, width, xpos) {\n            xpos = xpos || 0;\n\n            text.each(function() {\n                var words,\n                    word,\n                    line,\n                    lineNumber,\n                    lineHeight,\n                    y,\n                    dy,\n                    tspan;\n\n                text = d3Selection.select(this);\n\n                words = text.text().split(/\\s+/).reverse();\n                line = [];\n                lineNumber = 0;\n                lineHeight = 1.2;\n                y = text.attr('y');\n                dy = parseFloat(text.attr('dy'));\n                tspan = text\n                    .text(null)\n                    .append('tspan')\n                    .attr('x', xpos)\n                    .attr('y', y)\n                    .attr('dy', dy + 'em');\n\n                while ((word = words.pop())) {\n                    line.push(word);\n                    tspan.text(line.join(' '));\n\n                    if (tspan.node().getComputedTextLength() > width) {\n                        line.pop();\n                        tspan.text(line.join(' '));\n\n                        if (lineNumber < entryLineLimit - 1) {\n                            line = [word];\n                            tspan = text.append('tspan')\n                                .attr('x', xpos)\n                                .attr('y', y)\n                                .attr('dy', ++lineNumber * lineHeight + dy + 'em')\n                                .text(word);\n                        }\n                    }\n                }\n            });\n        }\n\n        /**\n         * Draws the data entries inside the tooltip\n         * @param  {Object} dataPoint   Data entry from to take the info\n         * @return void\n         */\n        function updateContent(dataPoint){\n            var topics = dataPoint[topicLabel];\n\n            // sort order by forceOrder array if passed\n            if (forceOrder.length) {\n                topics = _sortByForceOrder(topics);\n            } else if (topics.length && topics[0].name) {\n                topics = _sortByAlpha(topics);\n            }\n\n            cleanContent();\n            updateTitle(dataPoint);\n            resetSizeAndPositionPointers();\n            topics.forEach(updateTopicContent);\n        }\n\n        /**\n         * Updates tooltip title, content, size and position\n         * sorts by alphatical name order if not forced order given\n         *\n         * @param  {lineChartPointByDate} dataPoint  Current datapoint to show info about\n         * @param  {Number} xPosition           Position of the mouse on the X axis\n         * @return void\n         */\n        function updateTooltip(dataPoint, xPosition, yPosition) {\n            updateContent(dataPoint);\n            updatePositionAndSize(dataPoint, xPosition, yPosition);\n        }\n\n\n        // API\n         /**\n         * Gets or Sets the nameLabel of the data\n         * @param  {Number} _x Desired nameLabel\n         * @return { nameLabel | module} Current nameLabel or Chart module to chain calls\n         * @public\n         */\n        exports.nameLabel = function(_x) {\n            if (!arguments.length) {\n                return nameLabel;\n            }\n            nameLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the dateLabel of the data\n         * @param  {Number} _x Desired dateLabel\n         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n         * @public\n         */\n        exports.dateLabel = function(_x) {\n            if (!arguments.length) {\n                return dateLabel;\n            }\n            dateLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabel of the data\n         * @param  {Number} _x Desired valueLabel\n         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabel = function(_x) {\n            if (!arguments.length) {\n                return valueLabel;\n            }\n            valueLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the topicLabel of the data\n         * @param  {Number} _x Desired topicLabel\n         * @return { topicLabel | module} Current topicLabel or Chart module to chain calls\n         * @public\n         */\n        exports.topicLabel = function(_x) {\n            if (!arguments.length) {\n                return topicLabel;\n            }\n            topicLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Hides the tooltip\n         * @return {Module} Tooltip module to chain calls\n         * @public\n         */\n        exports.hide = function() {\n            svg.style('display', 'none');\n\n            return this;\n        };\n\n        /**\n         * Shows the tooltip\n         * @return {Module} Tooltip module to chain calls\n         * @public\n         */\n        exports.show = function() {\n            svg.style('display', 'block');\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the title of the tooltip\n         * @param  {string} _x Desired title\n         * @return { string | module} Current title or module to chain calls\n         * @public\n         */\n        exports.title = function(_x) {\n            if (!arguments.length) {\n                return title;\n            }\n            title = _x;\n\n            return this;\n        };\n\n        /**\n         * Pass an override for the ordering of your tooltip\n         * @param  {Object[]} _x    Array of the names of your tooltip items\n         * @return { overrideOrder | module} Current overrideOrder or Chart module to chain calls\n         * @public\n         */\n        exports.forceOrder = function(_x) {\n            if (!arguments.length) {\n                return forceOrder;\n            }\n            forceOrder = _x;\n\n            return this;\n        }\n\n        /**\n         * Updates the position and content of the tooltip\n         * @param  {Object} dataPoint    Datapoint to represent\n         * @param  {Object} colorMapping Color scheme of the topics\n         * @param  {Number} position     X-scale position in pixels\n         * @return {Module} Tooltip module to chain calls\n         * @public\n         */\n        exports.update = function(dataPoint, colorMapping, xPosition, yPosition = null) {\n            colorMap = colorMapping;\n            updateTooltip(dataPoint, xPosition, yPosition);\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the tooltip to use a certain date format\n         * @param  {String} _x Desired format\n         * @return { (String|Module) }    Current format or module to chain calls\n         */\n        exports.forceDateRange = function(_x) {\n            if (!arguments.length) {\n              return forceAxisSettings || defaultAxisSettings;\n            }\n            forceAxisSettings = _x;\n\n            return this;\n        };\n\n        /**\n         * Pass locale for the tooltip to render the date in\n         * @param  {String} _x  must be a locale tag like 'en-US' or 'fr-FR'\n         * @return { (String|Module) }    Current locale or module to chain calls\n         */\n        exports.locale = function(_x) {\n            if (!arguments.length) {\n              return locale;\n            }\n            locale = _x;\n\n            return this;\n        };\n\n        /**\n         * constants to be used to force the x axis to respect a certain granularity\n         * current options: HOUR_DAY, DAY_MONTH, MONTH_YEAR\n         * @example tooltip.forceDateRange(tooltip.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.axisTimeCombinations = axisTimeCombinations;\n\n\n        return exports;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/tooltip.js","define(function(require){\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Ease = require('d3-ease');\n    const d3Format = require('d3-format');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n\n\n    /**\n     * Mini Tooltip Component reusable API class that renders a\n     * simple and configurable tooltip element for Britechart's\n     * bar and step chart.\n     *\n     * @module Mini-tooltip\n     * @tutorial bar\n     * @requires d3\n     *\n     * @example\n     * var barChart = line(),\n     *     miniTooltip = miniTooltip();\n     *\n     * barChart\n     *     .width(500)\n     *     .height(300)\n     *     .on('customMouseHover', miniTooltip.show)\n     *     .on('customMouseMove', miniTooltip.update)\n     *     .on('customMouseOut', miniTooltip.hide);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(barChart);\n     *\n     * d3Selection.select('.metadata-group .mini-tooltip-container')\n     *     .datum([])\n     *     .call(miniTooltip);\n     *\n     */\n    return function module() {\n\n        let margin = {\n                top: 12,\n                right: 12,\n                bottom: 12,\n                left: 12\n            },\n            width = 100,\n            height = 100,\n\n            // Optional Title\n            title = '',\n\n            // Data Format\n            valueLabel = 'value',\n            nameLabel = 'name',\n\n            // Animations\n            mouseChaseDuration = 100,\n            ease = d3Ease.easeQuadInOut,\n\n            // tooltip\n            tooltipBackground,\n            backgroundBorderRadius = 1,\n            tooltipTextContainer,\n            tooltipOffset = {\n                y: 0,\n                x: 20\n            },\n\n            // Fonts\n            textSize = 14,\n            textLineHeight = 1.5,\n            valueTextSize = 27,\n            valueTextLineHeight = 1.18,\n\n            // Colors\n            bodyFillColor = '#FFFFFF',\n            borderStrokeColor = '#D2D6DF',\n            titleFillColor = '#666a73',\n            nameTextFillColor = '#666a73',\n            valueTextFillColor = '#45494E',\n            valueTextWeight = 200,\n\n            // formats\n            tooltipValueFormat = d3Format.format('.2f'),\n\n            chartWidth,\n            chartHeight,\n            svg;\n\n\n        /**\n         * This function creates the graph using the selection as container\n         * @param {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {Array} _data The data to attach and generate the chart (usually an empty array)\n         */\n        function exports(_selection) {\n            _selection.each(function(_data){\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n\n                buildSVG(this);\n                drawTooltip();\n            });\n        }\n\n        /**\n         * Builds containers for the tooltip\n         * Also applies the Margin convention\n         * @private\n         */\n        function buildContainerGroups() {\n            let container = svg\n              .append('g')\n                .classed('tooltip-container-group', true)\n                .attr('transform', `translate( ${margin.left}, ${margin.top})`);\n\n            container.append('g').classed('tooltip-group', true);\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container)\n                    .append('g')\n                    .classed('britechart britechart-mini-tooltip', true);\n\n                buildContainerGroups();\n            }\n            svg\n                .transition()\n                .attr('width', width)\n                .attr('height', height);\n\n            // Hidden by default\n            exports.hide();\n        }\n\n        /**\n         * Draws the different elements of the Tooltip box\n         * @return void\n         */\n        function drawTooltip(){\n            tooltipTextContainer = svg.selectAll('.tooltip-group')\n                .append('g')\n                .classed('tooltip-text', true);\n\n            tooltipBackground = tooltipTextContainer\n              .append('rect')\n                .classed('tooltip-background', true)\n                .attr('width', width)\n                .attr('height', height)\n                .attr('rx', backgroundBorderRadius)\n                .attr('ry', backgroundBorderRadius)\n                .attr('y', - margin.top)\n                .attr('x', - margin.left)\n                .style('fill', bodyFillColor)\n                .style('stroke', borderStrokeColor)\n                .style('stroke-width', 1)\n                .style('pointer-events', 'none')\n                .style('opacity', 0.9);\n        }\n\n        /**\n         * Figures out the max length of the tooltip lines\n         * @param  {D3Selection[]} texts    List of svg elements of each line\n         * @return {Number}                 Max size of the lines\n         */\n        function getMaxLengthLine(...texts) {\n            let textSizes = texts.filter(x => !!x)\n                .map(x => x.node().getBBox().width);\n\n            return d3Array.max(textSizes);\n        }\n\n        /**\n         * Calculates the desired position for the tooltip\n         * @param  {Number} mouseX             Current horizontal mouse position\n         * @param  {Number} mouseY             Current vertical mouse position\n         * @param  {Number} parentChartWidth   Parent's chart width\n         * @param  {Number} parentChartHeight  Parent's chart height\n         * @return {Number[]}                  X and Y position\n         * @private\n         */\n        function getTooltipPosition([mouseX, mouseY], [parentChartWidth, parentChartHeight]) {\n            let tooltipX, tooltipY;\n\n            if (hasEnoughHorizontalRoom(parentChartWidth, mouseX)) {\n                tooltipX = mouseX + tooltipOffset.x;\n            } else {\n                tooltipX = mouseX - chartWidth - tooltipOffset.x - margin.right;\n            }\n\n            if (hasEnoughVerticalRoom(parentChartHeight, mouseY)) {\n                tooltipY = mouseY + tooltipOffset.y;\n            } else {\n                tooltipY = mouseY - chartHeight - tooltipOffset.y - margin.bottom;\n            }\n\n            return [tooltipX, tooltipY];\n        }\n\n        /**\n         * Checks if the mouse is over the bounds of the parent chart\n         * @param  {Number}  chartWidth Parent's chart\n         * @param  {Number}  positionX  Mouse position\n         * @return {Boolean}            If the mouse position allows space for the tooltip\n         */\n        function hasEnoughHorizontalRoom(parentChartWidth, positionX) {\n            return (parentChartWidth - margin.left - margin.right - chartWidth) - positionX > 0;\n        }\n\n        /**\n         * Checks if the mouse is over the bounds of the parent chart\n         * @param  {Number}  chartWidth Parent's chart\n         * @param  {Number}  positionX  Mouse position\n         * @return {Boolean}            If the mouse position allows space for the tooltip\n         */\n        function hasEnoughVerticalRoom(parentChartHeight, positionY) {\n            return (parentChartHeight - margin.top - margin.bottom - chartHeight) - positionY > 0;\n        }\n\n        /**\n         * Hides the tooltip\n         * @return {void}\n         */\n        function hideTooltip() {\n            svg.style('display', 'none');\n        }\n\n        /**\n         * Shows the tooltip updating it's content\n         * @param  {Object} dataPoint Data point from the chart\n         * @return {void}\n         */\n        function showTooltip(dataPoint) {\n            updateContent(dataPoint);\n            svg.style('display', 'block');\n        }\n\n        /**\n         * Draws the data entries inside the tooltip for a given topic\n         * @param  {Object} topic Topic to extract data from\n         * @return void\n         */\n        function updateContent(dataPoint = {}){\n            let value = dataPoint[valueLabel] || '',\n                name = dataPoint[nameLabel] || '',\n                lineHeight = textSize * textLineHeight,\n                valueLineHeight = valueTextSize * valueTextLineHeight,\n                defaultDy = '1em',\n                temporalHeight = 0,\n                tooltipValue,\n                tooltipName,\n                tooltipTitle;\n\n            tooltipTextContainer.selectAll('text')\n                .remove();\n\n            if (title) {\n                tooltipTitle = tooltipTextContainer\n                  .append('text')\n                    .classed('mini-tooltip-title', true)\n                    .attr('dy', defaultDy)\n                    .attr('y', 0)\n                    .style('fill', titleFillColor)\n                    .style('font-size', textSize)\n                    .text(title);\n\n                temporalHeight = lineHeight + temporalHeight;\n            }\n\n            if (name) {\n                tooltipName = tooltipTextContainer\n                  .append('text')\n                    .classed('mini-tooltip-name', true)\n                    .attr('dy', defaultDy)\n                    .attr('y', temporalHeight || 0)\n                    .style('fill', nameTextFillColor)\n                    .style('font-size', textSize)\n                    .text(name);\n\n                temporalHeight = lineHeight + temporalHeight;\n            }\n\n            if (value) {\n                tooltipValue = tooltipTextContainer\n                  .append('text')\n                    .classed('mini-tooltip-value', true)\n                    .attr('dy', defaultDy)\n                    .attr('y', temporalHeight || 0)\n                    .style('fill', valueTextFillColor)\n                    .style('font-size', valueTextSize)\n                    .style('font-weight', valueTextWeight)\n                    .text(tooltipValueFormat(value));\n\n                temporalHeight = valueLineHeight + temporalHeight;\n            }\n\n            chartWidth = getMaxLengthLine(tooltipName, tooltipTitle, tooltipValue);\n            chartHeight = temporalHeight;\n        }\n\n        /**\n         * Updates size and position of tooltip depending on the side of the chart we are in\n         * @param  {Object} dataPoint DataPoint of the tooltip\n         * @return void\n         */\n        function updatePositionAndSize(mousePosition, parentChartSize) {\n            let [tooltipX, tooltipY] = getTooltipPosition(mousePosition, parentChartSize);\n\n            svg.transition()\n                .duration(mouseChaseDuration)\n                .ease(ease)\n                .attr('height', chartHeight + margin.top + margin.bottom)\n                .attr('width', chartWidth + margin.left + margin.right)\n                .attr('transform', `translate(${tooltipX},${tooltipY})`);\n\n            tooltipBackground\n                .attr('height', chartHeight + margin.top + margin.bottom)\n                .attr('width', chartWidth + margin.left + margin.right);\n        }\n\n        /**\n         * Updates tooltip content, size and position\n         *\n         * @param  {Object} dataPoint Current datapoint to show info about\n         * @return void\n         */\n        function updateTooltip(dataPoint, position, chartSize) {\n            updateContent(dataPoint);\n            updatePositionAndSize(position, chartSize);\n        }\n\n        /**\n         * Hides the tooltip\n         * @return {Module} Tooltip module to chain calls\n         * @public\n         */\n        exports.hide = function() {\n            hideTooltip();\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets data's nameLabel\n         * @param  {text} _x Desired nameLabel\n         * @return { text | module} nameLabel or Step Chart module to chain calls\n         * @public\n         */\n        exports.nameLabel = function(_x) {\n            if (!arguments.length) {\n                return nameLabel;\n            }\n            nameLabel = _x;\n            return this;\n        };\n\n        /**\n         * Shows the tooltip\n         * @return {Module} Tooltip module to chain calls\n         * @public\n         */\n        exports.show = function() {\n            showTooltip();\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the title of the tooltip\n         * @param  {string} _x Desired title\n         * @return { string | module} Current title or module to chain calls\n         * @public\n         */\n        exports.title = function(_x) {\n            if (!arguments.length) {\n                return title;\n            }\n            title = _x;\n            return this;\n        };\n\n        /**\n         * Updates the position and content of the tooltip\n         * @param  {Object} dataPoint       Datapoint of the hovered element\n         * @param  {Array} mousePosition    Mouse position relative to the parent chart [x, y]\n         * @param  {Array} chartSize        Parent chart size [x, y]\n         * @return {module}                 Current component\n         */\n        exports.update = function(dataPoint, mousePosition, chartSize) {\n            updateTooltip(dataPoint, mousePosition, chartSize);\n\n            return this;\n        };\n\n        return exports;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/mini-tooltip.js","define(function(require){\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Ease = require('d3-ease');\n    const d3Scale = require('d3-scale');\n    const d3Shape = require('d3-shape');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n\n    const {exportChart} = require('./helpers/exportChart');\n    const colorHelper = require('./helpers/colors');\n\n    /**\n     * @typedef SparklineChartData\n     * @type {Object[]}\n     * @property {Number} value        Value of the group (required)\n     * @property {String} name         Name of the group (required)\n     *\n     * @example\n     * [\n     *     {\n     *         value: 1,\n     *         date: '2011-01-06T00:00:00Z'\n     *     },\n     *     {\n     *         value: 2,\n     *         date: '2011-01-07T00:00:00Z'\n     *     }\n     */\n\n    /**\n     * Sparkline Chart reusable API module that allows us\n     * rendering a sparkline configurable chart.\n     *\n     * @module Sparkline\n     * @tutorial sparkline\n     * @requires d3\n     *\n     * @example\n     * var sparkLineChart = sparkline();\n     *\n     * sparkLineChart\n     *     .width(200)\n     *     .height(100);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(sparkLineChart);\n     *\n     */\n    return function module(){\n\n        let margin = {\n                left: 5,\n                right: 5,\n                top: 5,\n                bottom: 5\n            },\n            width = 100,\n            height = 30,\n\n            xScale,\n            yScale,\n\n            areaGradient = ['#F5FDFF', '#F6FEFC'],\n            lineGradient = colorHelper.colorGradients.greenBlueGradient,\n\n            svg,\n            chartWidth, chartHeight,\n            data,\n\n            hasArea = true,\n            isAnimated = false,\n            clipDuration = 3000,\n            ease = d3Ease.easeQuadInOut,\n\n            line,\n\n            markerSize = 1.5,\n\n            valueLabel = 'value',\n            dateLabel = 'date',\n\n            // getters\n            getDate = ({date}) => date,\n            getValue = ({value}) => value;\n\n        /**\n         * This function creates the graph using the selection and data provided\n         *\n         * @param {D3Selection} _selection A d3 selection that represents\n         * the container(s) where the chart(s) will be rendered\n         * @param {SparklineChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data){\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(_data);\n\n                buildScales();\n                buildSVG(this);\n                createGradients();\n                createMaskingClip();\n                drawLine();\n                drawArea();\n                drawEndMarker();\n            });\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * NOTE: The order of drawing of this group elements is really important,\n         * as everything else will be drawn on top of them\n         * @private\n         */\n        function buildContainerGroups(){\n            let container = svg\n              .append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${margin.left},${margin.top})`);\n\n            container\n                .append('g').classed('chart-group', true);\n            container\n                .append('g').classed('metadata-group', true);\n        }\n\n        /**\n         * Creates the x, y and color scales of the chart\n         * @private\n         */\n        function buildScales(){\n            xScale = d3Scale.scaleLinear()\n                .domain(d3Array.extent(data, getDate))\n                .range([0, chartWidth]);\n\n            yScale = d3Scale.scaleLinear()\n                .domain(d3Array.extent(data, getValue))\n                .range([chartHeight, 0]);\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container){\n            if (!svg) {\n                svg = d3Selection.select(container)\n                    .append('svg')\n                    .classed('britechart sparkline', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Cleaning data adding the proper format\n         * @param  {array} data Data\n         * @private\n         */\n        function cleanData(data) {\n            return data.map((d) => {\n                d.date = new Date(d[dateLabel]);\n                d.value = +d[valueLabel];\n\n                return d;\n            });\n        }\n\n        /**\n         * Creates the gradient on the area below the line\n         * @return {void}\n         */\n        function createGradients() {\n            let metadataGroup = svg.select('.metadata-group');\n\n            metadataGroup.append('linearGradient')\n                .attr('id', 'sparkline-area-gradient')\n                .attr('gradientUnits', 'userSpaceOnUse')\n                .attr('x1', 0)\n                .attr('x2', xScale(data[data.length - 1].date))\n                .attr('y1', 0)\n                .attr('y2', 0)\n              .selectAll('stop')\n                .data([\n                    {offset: '0%', color: areaGradient[0]},\n                    {offset: '100%', color: areaGradient[1]}\n                ])\n              .enter().append('stop')\n                .attr('offset', ({offset}) => offset)\n                .attr('stop-color', ({color}) => color);\n\n            metadataGroup.append('linearGradient')\n                .attr('id', 'sparkline-line-gradient')\n                .attr('gradientUnits', 'userSpaceOnUse')\n                .attr('x1', 0)\n                .attr('x2', xScale(data[data.length - 1].date))\n                .attr('y1', 0)\n                .attr('y2', 0)\n              .selectAll('stop')\n                .data([\n                    {offset: '0%', color: lineGradient[0]},\n                    {offset: '100%', color: lineGradient[1]}\n                ])\n              .enter().append('stop')\n                .attr('offset', ({offset}) => offset)\n                .attr('stop-color', ({color}) => color);\n        }\n\n        /**\n         * Creates a masking clip that would help us fake an animation if the\n         * proper flag is true\n         *\n         * @return {void}\n         */\n        function createMaskingClip() {\n            if (isAnimated) {\n                svg.select('.metadata-group')\n                    .append('clipPath')\n                    .attr('id', 'maskingClip')\n                  .append('rect')\n                    .attr('width', 0)\n                    .attr('height', height);\n\n                d3Selection.select('#maskingClip rect')\n                    .transition()\n                    .ease(ease)\n                    .duration(clipDuration)\n                    .attr('width', width);\n            }\n        }\n\n        /**\n         * Draws the area that will be placed below the line\n         * @private\n         */\n        function drawArea(){\n            let area = d3Shape.area()\n                .x(({date}) => xScale(date))\n                .y0(() => yScale(0))\n                .y1(({value}) => yScale(value))\n                .curve(d3Shape.curveBasis);\n\n            svg.select('.chart-group')\n              .append('path')\n                .datum(data)\n                .attr('class', 'sparkline-area')\n                .attr('d', area)\n                .attr('clip-path', 'url(#maskingClip)');\n        }\n\n        /**\n         * Draws the line element within the chart group\n         * @private\n         */\n        function drawLine(){\n            line = d3Shape.line()\n                .curve(d3Shape.curveBasis)\n                .x(({date}) => xScale(date))\n                .y(({value}) => yScale(value));\n\n            svg.select('.chart-group')\n              .append('path')\n                .datum(data)\n                .attr('class', 'line')\n                .attr('d', line)\n                .attr('clip-path', 'url(#maskingClip)');\n        }\n\n        /**\n         * Draws a marker at the end of the sparkline\n         */\n        function drawEndMarker(){\n            svg.selectAll('.chart-group')\n              .append('circle')\n                .attr('class', 'sparkline-circle')\n                .attr('cx', xScale(data[data.length - 1].date))\n                .attr('cy', yScale(data[data.length - 1].value))\n                .attr('r', markerSize);\n        }\n\n        // Accessors\n        /**\n         * Gets or Sets the dateLabel of the chart\n         * @param  {Number} _x Desired dateLabel for the graph\n         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n         * @public\n         */\n        exports.dateLabel = function(_x) {\n            if (!arguments.length) {\n                return dateLabel;\n            }\n            dateLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the duration of the animation\n         * @param  {Number} _x Desired animation duration for the graph\n         * @return { dateLabel | module} Current animation duration or Chart module to chain calls\n         * @public\n         */\n        exports.duration = function(_x) {\n            if (!arguments.length) {\n                return clipDuration;\n            }\n            clipDuration = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the areaGradient of the chart\n         * @param  {String[]} _x Desired areaGradient for the graph\n         * @return { areaGradient | module} Current areaGradient or Chart module to chain calls\n         * @public\n         */\n        exports.areaGradient = function(_x) {\n            if (!arguments.length) {\n                return areaGradient;\n            }\n            areaGradient = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the lineGradient of the chart\n         * @param  {String[]} _x Desired lineGradient for the graph\n         * @return { lineGradient | module} Current lineGradient or Chart module to chain calls\n         * @public\n         */\n        exports.lineGradient = function(_x) {\n            if (!arguments.length) {\n                return lineGradient;\n            }\n            lineGradient = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { height | module} Current height or Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n         * By default this is 'false'\n         *\n         * @param  {Boolean} _x Desired animation flag\n         * @return { isAnimated | module} Current isAnimated flag or Chart module\n         * @public\n         */\n        exports.isAnimated = function(_x) {\n            if (!arguments.length) {\n                return isAnimated;\n            }\n            isAnimated = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {Object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { width | module} Current width or Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabel of the chart\n         * @param  {Number} _x Desired valueLabel for the graph\n         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabel = function(_x) {\n            if (!arguments.length) {\n                return valueLabel;\n            }\n            valueLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename, title) {\n            exportChart.call(exports, svg, filename, title);\n        };\n\n        return exports;\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/sparkline.js","define(function(require){\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Axis = require('d3-axis');\n    const d3Collection = require('d3-collection');\n    const d3Dispatch = require('d3-dispatch');\n    const d3Ease = require('d3-ease');\n    const d3Scale = require('d3-scale');\n    const d3Shape = require('d3-shape');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n    const d3TimeFormat = require('d3-time-format');\n\n    const assign = require('lodash.assign');\n    const {exportChart} = require('./helpers/exportChart');\n    const colorHelper = require('./helpers/colors');\n    const {\n        getXAxisSettings,\n        getLocaleDateFormatter\n    } = require('./helpers/timeAxis');\n    const {isInteger} = require('./helpers/common');\n    const {axisTimeCombinations} = require('./helpers/constants');\n\n    const {\n        formatIntegerValue,\n        formatDecimalValue\n    } = require('./helpers/formatHelpers');\n\n    const uniq = (arrArg) => arrArg.filter((elem, pos, arr) => arr.indexOf(elem) === pos);\n\n\n    /**\n     * @typdef D3Layout\n     * @type function\n     */\n\n    /**\n     * @typedef areaChartData\n     * @type {Object}\n     * @property {Object[]} data       All data entries\n     * @property {String} date         Date of the entry\n     * @property {String} name         Name of the entry\n     * @property {Number} value        Value of the entry\n     *\n     * @example\n     * {\n     *     'data': [\n     *         {\n     *             \"date\": \"2011-01-05T00:00:00Z\",\n     *             \"name\": \"Direct\",\n     *             \"value\": 0\n     *         }\n     *     ]\n     * }\n     */\n\n    /**\n     * Stacked Area Chart reusable API module that allows us\n     * rendering a multi area and configurable chart.\n     *\n     * @module Stacked-area\n     * @tutorial stacked-area\n     * @requires d3-array, d3-axis, d3-collection, d3-ease, d3-scale, d3-shape, d3-selection, d3-time, d3-time-format\n     *\n     * @example\n     * let stackedArea = stackedArea();\n     *\n     * stackedArea\n     *     .width(containerWidth);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset.data)\n     *     .call(stackedArea);\n     *\n     */\n\n    return function module() {\n\n        let margin = {\n                top: 70,\n                right: 30,\n                bottom: 60,\n                left: 70\n            },\n            width = 960,\n            height = 500,\n\n            xScale, xAxis, xMonthAxis,\n            yScale, yAxis,\n\n            aspectRatio = null,\n\n            monthAxisPadding = 30,\n            verticalTicks = 5,\n            yTickTextYOffset = -8,\n            yTickTextXOffset = -20,\n            tickPadding = 5,\n\n            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\n            areaOpacity = 0.64,\n            categoryColorMap,\n            order,\n\n            forceAxisSettings = null,\n            forcedXTicks = null,\n            forcedXFormat = null,\n            locale,\n\n            baseLine,\n\n            layers,\n            layersInitial,\n            area,\n\n            // Area Animation\n            maxAreaNumber = 8,\n            areaAnimationDelayStep = 20,\n            areaAnimationDelays = d3Array.range(areaAnimationDelayStep, maxAreaNumber* areaAnimationDelayStep, areaAnimationDelayStep),\n\n            overlay,\n\n            verticalMarkerContainer,\n            verticalMarker,\n            epsilon,\n\n            dataPoints            = {},\n            pointsSize            = 1.5,\n            pointsColor           = '#c0c6cc',\n            pointsBorderColor     = '#ffffff',\n\n            isAnimated = false,\n            ease = d3Ease.easeQuadInOut,\n            areaAnimationDuration = 1000,\n\n            svg,\n            chartWidth, chartHeight,\n            data,\n            dataByDate,\n            dataByDateFormatted,\n            dataByDateZeroed,\n\n            verticalGridLines,\n            horizontalGridLines,\n            grid = null,\n\n            tooltipThreshold = 480,\n\n            xAxisPadding = {\n                top: 0,\n                left: 15,\n                bottom: 0,\n                right: 0\n            },\n\n            dateLabel = 'date',\n            valueLabel = 'value',\n            keyLabel = 'name',\n\n            // getters\n            getName = ({name}) => name,\n            getDate = ({date}) => date,\n\n            // events\n            dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\n       /**\n         * This function creates the graph using the selection and data provided\n         * @param {D3Selection} _selection A d3 selection that represents\n         * the container(s) where the chart(s) will be rendered\n         * @param {areaChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data) {\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(_data);\n                dataByDate = getDataByDate(data);\n\n                buildLayers();\n                buildScales();\n                buildSVG(this);\n                buildAxis();\n                drawAxis();\n                drawStackedAreas();\n\n                if(shouldShowTooltip()) {\n                    drawHoverOverlay();\n                    drawVerticalMarker();\n                    addMouseEvents();\n                }\n            });\n        }\n\n        /**\n         * Adds events to the container group if the environment is not mobile\n         * Adding: mouseover, mouseout and mousemove\n         */\n        function addMouseEvents() {\n            svg\n                .on('mouseover', handleMouseOver)\n                .on('mouseout', handleMouseOut)\n                .on('mousemove', handleMouseMove);\n        }\n\n        /**\n         * Formats the value depending on its characteristics\n         * @param  {Number} value Value to format\n         * @return {Number}       Formatted value\n         */\n        function getFormattedValue(value) {\n            let format;\n\n            if (isInteger(value)) {\n                format = formatIntegerValue;\n            } else {\n                format = formatDecimalValue;\n            }\n\n            return format(value);\n        }\n\n        /**\n         * Creates the d3 x and y axis, setting orientations\n         * @private\n         */\n        function buildAxis() {\n            let dataSpan = yScale.domain()[1] - yScale.domain()[0];\n            let yTickNumber = dataSpan < verticalTicks - 1 ? dataSpan : verticalTicks;\n            let minor, major;\n\n            if (forceAxisSettings === 'custom' && typeof forcedXFormat === 'string') {\n                minor = {\n                    tick: forcedXTicks,\n                    format:  d3TimeFormat.timeFormat(forcedXFormat)\n                };\n                major = null;\n            } else {\n                ({minor, major} = getXAxisSettings(dataByDate, width, forceAxisSettings, locale));\n\n                xMonthAxis = d3Axis.axisBottom(xScale)\n                    .ticks(major.tick)\n                    .tickSize(0, 0)\n                    .tickFormat(major.format);\n            }\n\n            xAxis = d3Axis.axisBottom(xScale)\n                .ticks(minor.tick)\n                .tickSize(10, 0)\n                .tickPadding(tickPadding)\n                .tickFormat(minor.format);\n\n\n            yAxis = d3Axis.axisRight(yScale)\n                .ticks(yTickNumber)\n                .tickSize([0])\n                .tickPadding(tickPadding)\n                .tickFormat(getFormattedValue);\n\n            drawGridLines(minor.tick, yTickNumber);\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * NOTE: The order of drawing of this group elements is really important,\n         * as everything else will be drawn on top of them\n         * @private\n         */\n        function buildContainerGroups() {\n            let container = svg\n              .append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${margin.left},${margin.top})`);\n\n            container\n              .append('g').classed('x-axis-group', true)\n              .append('g').classed('x axis', true);\n            container.selectAll('.x-axis-group')\n              .append('g').classed('month-axis', true);\n            container\n              .append('g').classed('y-axis-group axis', true);\n            container\n              .append('g').classed('grid-lines-group', true);\n            container\n              .append('g').classed('chart-group', true);\n            container\n              .append('g').classed('metadata-group', true);\n        }\n\n        /**\n         * Builds the stacked layers layout\n         * @return {D3Layout} Layout for drawing the chart\n         * @private\n         */\n        function buildLayers() {\n            dataByDateFormatted = dataByDate\n                .map(d => assign({}, d, d.values))\n                .map(d => {\n                    Object.keys(d).forEach(k => {\n                        const entry = d[k];\n\n                        if (entry && entry.name) {\n                            d[entry.name] = entry.value;\n                        }\n                    });\n\n                    return assign({}, d, {\n                        date: new Date(d['key'])\n                    });\n                });\n\n            dataByDateZeroed = dataByDate\n                .map(d => assign({}, d, d.values))\n                .map(d => {\n                    Object.keys(d).forEach(k => {\n                        const entry = d[k];\n\n                        if (entry && entry.name) {\n                            d[entry.name] = 0;\n                        }\n                    });\n\n                    return assign({}, d, {\n                        date: new Date(d['key'])\n                    });\n                });\n\n            let initialTotalsObject = uniq(data.map(({name}) => name))\n                                        .reduce((memo, key) => (\n                                            assign({}, memo, {[key]: 0})\n                                        ), {});\n\n            let totals = data.reduce((memo, item) => (\n                assign({}, memo, {[item.name]: memo[item.name]  += item.value})\n            ), initialTotalsObject);\n\n            order = formatOrder(totals);\n\n            let stack3 = d3Shape.stack()\n                .keys(order)\n                .order(d3Shape.stackOrderNone)\n                .offset(d3Shape.stackOffsetNone);\n\n            layersInitial = stack3(dataByDateZeroed);\n            layers = stack3(dataByDateFormatted);\n        }\n\n        /**\n         * Takes an object with all topics as keys and their aggregate totals as values,\n         * sorts them into a list by descending total value and\n         * moves \"Other\" to the end\n         * @param  {Object} totals  Keys of all the topics and their corresponding totals\n         * @return {Array}          List of topic names in aggregate order\n         */\n        function formatOrder(totals) {\n            let order = Object.keys(totals)\n                .sort((a, b) => {\n                    if (totals[a] > totals[b]) return -1;\n                    if (totals[a] === totals[b]) return 0;\n                    return 1;\n                });\n\n            let otherIndex = order.indexOf('Other');\n\n            if (otherIndex >= 0) {\n                let other = order.splice(otherIndex, 1);\n\n                order = order.concat(other);\n            }\n\n            return order;\n        }\n\n        /**\n         * Creates the x, y and color scales of the chart\n         * @private\n         */\n        function buildScales() {\n            xScale = d3Scale.scaleTime()\n                .domain(d3Array.extent(dataByDate, ({date}) => date))\n                .rangeRound([0, chartWidth]);\n\n            yScale = d3Scale.scaleLinear()\n                .domain([0, getMaxValueByDate()])\n                .rangeRound([chartHeight, 0])\n                .nice();\n\n            categoryColorMap =  order.reduce((memo, topic, index) => (\n                assign({}, memo, {[topic]: colorSchema[index]})\n            ), {});\n        }\n\n        /**\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container)\n                    .append('svg')\n                    .classed('britechart stacked-area', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Parses dates and values into JS Date objects and numbers\n         * @param  {obj} data Raw data from JSON file\n         * @return {obj}      Parsed data with values and dates\n         */\n        function cleanData(data) {\n            return data.map((d) => {\n                d.date = new Date(d[dateLabel]),\n                d.value = +d[valueLabel]\n\n                return d;\n            });\n        }\n\n        /**\n         * Draws the x and y axis on the svg object within their\n         * respective groups\n         * @private\n         */\n        function drawAxis() {\n            svg.select('.x-axis-group .axis.x')\n                .attr('transform', `translate( 0, ${chartHeight} )`)\n                .call(xAxis);\n\n            if (forceAxisSettings !== 'custom') {\n                svg.select('.x-axis-group .month-axis')\n                    .attr('transform', `translate(0, ${(chartHeight + monthAxisPadding)})`)\n                    .call(xMonthAxis);\n            }\n\n            svg.select('.y-axis-group.axis')\n                .attr('transform', `translate( ${-xAxisPadding.left}, 0)`)\n                .call(yAxis)\n                .call(adjustYTickLabels);\n\n            // Moving the YAxis tick labels to the right side\n            // d3Selection.selectAll('.y-axis-group .tick text')\n            //     .attr('transform', `translate( ${-chartWidth - yTickTextXOffset}, ${yTickTextYOffset})` );\n        }\n\n        /**\n         * Adjusts the position of the y axis' ticks\n         * @param  {D3Selection} selection Y axis group\n         * @return void\n         */\n        function adjustYTickLabels(selection) {\n            selection.selectAll('.tick text')\n                .attr('transform', `translate(${yTickTextXOffset}, ${yTickTextYOffset})`);\n        }\n\n        /**\n         * Creates SVG dot elements for each data entry and draws them\n         * TODO: Plug\n         */\n        function drawDataReferencePoints() {\n            // Creates Dots on Data points\n            var points = svg.select('.chart-group').selectAll('.dots')\n                .data(layers)\n              .enter().append('g')\n                .attr('class', 'dots')\n                .attr('d', ({values}) => area(values))\n                .attr('clip-path', 'url(#clip)');\n\n            // Processes the points\n            // TODO: Optimize this code\n            points.selectAll('.dot')\n                .data(({values}, index) => values.map((point) => ({index, point})))\n                .enter()\n                .append('circle')\n                .attr('class','dot')\n                .attr('r', () => pointsSize)\n                .attr('fill', () => pointsColor)\n                .attr('stroke-width', '0')\n                .attr('stroke', pointsBorderColor)\n                .attr('transform', function(d) {\n                    let {point} = d;\n                    let key = xScale(point.date);\n\n                    dataPoints[key] = dataPoints[key] || [];\n                    dataPoints[key].push(d);\n\n                    let {date, y, y0} = point;\n                    return `translate( ${xScale(date)}, ${yScale(y + y0)} )`;\n                });\n        }\n\n        /**\n         * Draws grid lines on the background of the chart\n         * @return void\n         */\n        function drawGridLines(xTicks, yTicks) {\n            if (grid === 'horizontal' || grid === 'full') {\n                horizontalGridLines = svg.select('.grid-lines-group')\n                    .selectAll('line.horizontal-grid-line')\n                    .data(yScale.ticks(yTicks))\n                    .enter()\n                        .append('line')\n                        .attr('class', 'horizontal-grid-line')\n                        .attr('x1', (-xAxisPadding.left - 30))\n                        .attr('x2', chartWidth)\n                        .attr('y1', (d) => yScale(d))\n                        .attr('y2', (d) => yScale(d));\n            }\n\n            if (grid === 'vertical' || grid === 'full') {\n                verticalGridLines = svg.select('.grid-lines-group')\n                    .selectAll('line.vertical-grid-line')\n                    .data(xScale.ticks(xTicks))\n                    .enter()\n                        .append('line')\n                        .attr('class', 'vertical-grid-line')\n                        .attr('y1', 0)\n                        .attr('y2', chartHeight)\n                        .attr('x1', (d) => xScale(d))\n                        .attr('x2', (d) => xScale(d));\n            }\n\n            //draw a horizontal line to extend x-axis till the edges\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-x-line')\n                .data([0])\n                .enter()\n              .append('line')\n                .attr('class', 'extended-x-line')\n                .attr('x1', (-xAxisPadding.left - 30))\n                .attr('x2', chartWidth)\n                .attr('y1', height - margin.bottom - margin.top)\n                .attr('y2', height - margin.bottom - margin.top);\n        }\n\n        /**\n         * Draws an overlay element over the graph\n         * @private\n         */\n        function drawHoverOverlay() {\n            overlay = svg.select('.metadata-group')\n                .append('rect')\n                .attr('class', 'overlay')\n                .attr('y1', 0)\n                .attr('y2', chartHeight)\n                .attr('height', chartHeight)\n                .attr('width', chartWidth)\n                .attr('fill', 'rgba(0,0,0,0)')\n                .style('display', 'none');\n        }\n\n        /**\n         * Draws the different areas into the chart-group element\n         * @private\n         */\n        function drawStackedAreas() {\n            let series;\n\n            area = d3Shape.area()\n                .curve(d3Shape.curveMonotoneX)\n                .x( ({data}) => xScale(data.date) )\n                .y0( (d) => yScale(d[0]) )\n                .y1( (d) => yScale(d[1]) );\n\n            if (isAnimated) {\n                series = svg.select('.chart-group').selectAll('.layer')\n                    .data(layersInitial)\n                    .enter()\n                  .append('g')\n                    .classed('layer-container', true);\n\n                series\n                  .append('path')\n                    .attr('class', 'layer')\n                    .attr('d', area)\n                    .style('fill', ({key}) => categoryColorMap[key]);\n\n                // Update\n                svg.select('.chart-group').selectAll('.layer')\n                    .data(layers)\n                    .transition()\n                    .delay( (_, i) => areaAnimationDelays[i])\n                    .duration(areaAnimationDuration)\n                    .ease(ease)\n                    .attr('d', area)\n                    .style('opacity', areaOpacity)\n                    .style('fill', ({key}) => categoryColorMap[key]);\n            } else {\n                series = svg.select('.chart-group').selectAll('.layer')\n                    .data(layers)\n                    .enter()\n                  .append('g')\n                    .classed('layer-container', true);\n\n                series\n                  .append('path')\n                    .attr('class', 'layer')\n                    .attr('d', area)\n                    .style('fill', ({key}) => categoryColorMap[key]);\n\n                // Update\n                series\n                    .attr('d', area)\n                    .style('opacity', areaOpacity)\n                    .style('fill', ({key}) => categoryColorMap[key]);\n            }\n\n            // Exit\n            series.exit()\n                .transition()\n                .style('opacity', 0)\n                .remove();\n        }\n\n        /**\n         * Creates the vertical marker\n         * @return void\n         */\n        function drawVerticalMarker() {\n            verticalMarkerContainer = svg.select('.metadata-group')\n                .append('g')\n                .attr('class', 'vertical-marker-container')\n                .attr('transform', 'translate(9999, 0)');\n\n            verticalMarker = verticalMarkerContainer.selectAll('path')\n                .data([{\n                    x1: 0,\n                    y1: 0,\n                    x2: 0,\n                    y2: 0\n                }])\n                .enter()\n              .append('line')\n                .classed('vertical-marker', true)\n                .attr('x1', 0)\n                .attr('y1', chartHeight)\n                .attr('x2', 0)\n                .attr('y2', 0);\n        }\n\n        /**\n         * Removes all the datapoints highlighter circles added to the marker container\n         * @return void\n         */\n        function eraseDataPointHighlights() {\n            verticalMarkerContainer.selectAll('.circle-container').remove();\n        }\n\n        /**\n         * Orders the data by date for consumption on the chart tooltip\n         * @param  {areaChartData} data    Chart data\n         * @return {Object[]}               Chart data ordered by date\n         * @private\n         */\n        function getDataByDate(data) {\n            return d3Collection.nest()\n                                .key(getDate)\n                                .entries(\n                                    data.sort((a, b) => a.date - b.date)\n                                )\n                                .map(d => {\n                                    return assign({}, d, {\n                                        date: new Date(d.key)\n                                    });\n                                });\n\n            // let b =  d3Collection.nest()\n            //                     .key(getDate).sortKeys(d3Array.ascending)\n            //                     .entries(data);\n        }\n\n        /**\n         * Computes the maximum sum of values for any date\n         *\n         * @return {Number} Max value\n         */\n        function getMaxValueByDate() {\n            let keys = uniq(data.map(o => o.name));\n            let maxValueByDate = d3Array.max(dataByDateFormatted, function(d){\n                let vals = keys.map((key) => d[key]);\n\n                return d3Array.sum(vals);\n            });\n\n            return maxValueByDate;\n        }\n\n        /**\n         * Extract X position on the chart from a given mouse event\n         * @param  {obj} event D3 mouse event\n         * @return {Number}       Position on the x axis of the mouse\n         * @private\n         */\n        function getMouseXPosition(event) {\n            return d3Selection.mouse(event)[0];\n        }\n\n        /**\n         * Finds out the data entry that is closer to the given position on pixels\n         * @param  {Number} mouseX X position of the mouse\n         * @return {obj}        Data entry that is closer to that x axis position\n         */\n        function getNearestDataPoint(mouseX) {\n            let points = dataByDate.filter(({date}) => Math.abs(xScale(date) - mouseX) <= epsilon);\n\n            if (points.length) {\n                return points[0];\n            }\n        }\n\n        /**\n         * Epsilon is the value given to the number representing half of the distance in\n         * pixels between two date data points\n         * @return {Number} half distance between any two points\n         */\n        function setEpsilon() {\n            let dates = dataByDate.map(({date}) => date);\n\n            epsilon = (xScale(dates[1]) - xScale(dates[0])) / 2;\n        }\n\n        /**\n         * MouseMove handler, calculates the nearest dataPoint to the cursor\n         * and updates metadata related to it\n         * @private\n         */\n        function handleMouseMove() {\n            epsilon || setEpsilon();\n\n            let dataPoint = getNearestDataPoint(getMouseXPosition(this) - margin.left),\n                dataPointXPosition;\n\n            if(dataPoint) {\n                dataPointXPosition = xScale(new Date( dataPoint.key ));\n                // Move verticalMarker to that datapoint\n                moveVerticalMarker(dataPointXPosition);\n                // Add data points highlighting\n                highlightDataPoints(dataPoint);\n                // Emit event with xPosition for tooltip or similar feature\n                dispatcher.call('customMouseMove', this, dataPoint, categoryColorMap, dataPointXPosition);\n            }\n        }\n\n        /**\n         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n         * It also resets the container of the vertical marker\n         * @private\n         */\n        function handleMouseOut(data) {\n            overlay.style('display', 'none');\n            verticalMarker.classed('bc-is-active', false);\n            verticalMarkerContainer.attr('transform', 'translate(9999, 0)');\n\n            dispatcher.call('customMouseOut', this, data);\n        }\n\n        /**\n         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n         * @private\n         */\n        function handleMouseOver(data) {\n            overlay.style('display', 'block');\n            verticalMarker.classed('bc-is-active', true);\n\n            dispatcher.call('customMouseOver', this, data);\n        }\n\n        /**\n         * Creates coloured circles marking where the exact data y value is for a given data point\n         * @param  {obj} dataPoint Data point to extract info from\n         * @private\n         */\n        function highlightDataPoints({values}) {\n            let accumulator = 0;\n\n            eraseDataPointHighlights();\n\n            // ensure order stays constant\n            values = values\n                        .filter(v => !!v)\n                        .sort((a,b) => order.indexOf(a.name) > order.indexOf(b.name))\n\n            values.forEach(({name}, index) => {\n                let marker = verticalMarkerContainer\n                                .append('g')\n                                .classed('circle-container', true),\n                    circleSize = 12;\n\n                accumulator = accumulator + values[index][valueLabel];\n\n                marker.append('circle')\n                    .classed('data-point-highlighter', true)\n                    .attr('cx', circleSize)\n                    .attr('cy', 0)\n                    .attr('r', 5)\n                    .style('stroke-width', 2)\n                    .style('stroke', categoryColorMap[name]);\n\n                marker.attr('transform', `translate( ${(- circleSize)}, ${(yScale(accumulator))} )` );\n            });\n        }\n\n        /**\n         * Helper method to update the x position of the vertical marker\n         * @param  {obj} dataPoint Data entry to extract info\n         * @return void\n         */\n        function moveVerticalMarker(verticalMarkerXPosition) {\n            verticalMarkerContainer.attr('transform', `translate(${verticalMarkerXPosition},0)`);\n        }\n\n        /**\n         * Determines if we should add the tooltip related logic depending on the\n         * size of the chart and the tooltipThreshold variable value\n         * @return {boolean} Should we build the tooltip?\n         * @private\n         */\n        function shouldShowTooltip() {\n            return width > tooltipThreshold;\n        }\n\n        // Accessors\n\n        /**\n         * Gets or Sets the opacity of the stacked areas in the chart (all of them will have the same opacity)\n         * @param  {Object} _x                  Opacity to get/set\n         * @return { opacity | module}          Current opacity or Area Chart module to chain calls\n         * @public\n         */\n        exports.areaOpacity = function(_x) {\n            if (!arguments.length) {\n                return areaOpacity;\n            }\n            areaOpacity = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the aspect ratio of the chart\n         * @param  {Number} _x Desired aspect ratio for the graph\n         * @return { (Number | Module) } Current aspect ratio or Area Chart module to chain calls\n         * @public\n         */\n        exports.aspectRatio = function(_x) {\n            if (!arguments.length) {\n                return aspectRatio;\n            }\n            aspectRatio = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the colorSchema of the chart\n         * @param  {String[]} _x Desired colorSchema for the graph\n         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n         * @public\n         */\n        exports.colorSchema = function(_x) {\n            if (!arguments.length) {\n                return colorSchema;\n            }\n            colorSchema = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the dateLabel of the chart\n         * @param  {Number} _x Desired dateLabel for the graph\n         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n         * @public\n         */\n        exports.dateLabel = function(_x) {\n            if (!arguments.length) {\n                return dateLabel;\n            }\n            dateLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x axis grouping\n         * @param  {String} _x Desired format\n         * @return { (String|Module) }    Current format or module to chain calls\n         * @example\n         *     area.forceAxisFormat(area.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.forceAxisFormat = function(_x) {\n            if (!arguments.length) {\n              return forceAxisSettings;\n            }\n            forceAxisSettings = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x format\n         * It requires a `forceAxisFormat` of 'custom' in order to work.\n         * NOTE: localization not supported\n         * @param  {String} _x              Desired format for x axis\n         * @return { (String|Module) }      Current format or module to chain calls\n         */\n        exports.forcedXFormat = function(_x) {\n            if (!arguments.length) {\n              return forcedXFormat;\n            }\n            forcedXFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x ticks. It requires a `forceAxisFormat` of 'custom' in order to work.\n         * NOTE: This value needs to be a multiple of 2, 5 or 10. They won't always work as expected, as D3 decides at the end\n         * how many and where the ticks will appear.\n         *\n         * @param  {Number} _x              Desired number of x axis ticks (multiple of 2, 5 or 10)\n         * @return { (Number|Module) }      Current number or ticks or module to chain calls\n         */\n        exports.forcedXTicks = function(_x) {\n            if (!arguments.length) {\n              return forcedXTicks;\n            }\n            forcedXTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the grid mode.\n         *\n         * @param  {String} _x Desired mode for the grid ('vertical'|'horizontal'|'full')\n         * @return { String | module} Current mode of the grid or Area Chart module to chain calls\n         * @public\n         */\n        exports.grid = function(_x) {\n            if (!arguments.length) {\n                return grid;\n            }\n            grid = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { height | module} Current height or Area Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            if (aspectRatio) {\n                width = Math.ceil(_x / aspectRatio);\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n         * By default this is 'false'\n         *\n         * @param  {Boolean} _x Desired animation flag\n         * @return { isAnimated | module} Current isAnimated flag or Chart module\n         * @public\n         */\n        exports.isAnimated = function(_x) {\n            if (!arguments.length) {\n                return isAnimated;\n            }\n            isAnimated = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the keyLabel of the chart\n         * @param  {Number} _x Desired keyLabel for the graph\n         * @return { keyLabel | module} Current keyLabel or Chart module to chain calls\n         * @public\n         */\n        exports.keyLabel = function(_x) {\n            if (!arguments.length) {\n                return keyLabel;\n            }\n            keyLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {Object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Area Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the minimum width of the graph in order to show the tooltip\n         * NOTE: This could also depend on the aspect ratio\n         *\n         * @param  {Object} _x Margin object to get/set\n         * @return { tooltipThreshold | module} Current tooltipThreshold or Area Chart module to chain calls\n         * @public\n         */\n        exports.tooltipThreshold = function(_x) {\n            if (!arguments.length) {\n                return tooltipThreshold;\n            }\n            tooltipThreshold = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabel of the chart\n         * @param  {Number} _x Desired valueLabel for the graph\n         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabel = function(_x) {\n            if (!arguments.length) {\n                return valueLabel;\n            }\n            valueLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the number of verticalTicks of the yAxis on the chart\n         * @param  {Number} _x Desired verticalTicks\n         * @return { verticalTicks | module} Current verticalTicks or Chart module to chain calls\n         * @public\n         */\n        exports.verticalTicks = function(_x) {\n            if (!arguments.length) {\n                return verticalTicks;\n            }\n            verticalTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { width | module} Current width or Area Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            if (aspectRatio) {\n                height = Math.ceil(_x * aspectRatio);\n            }\n            width = _x;\n\n            return this;\n        };\n\n        /**\n         * Pass language tag for the tooltip to localize the date.\n         * Feature uses Intl.DateTimeFormat, for compatability and support, refer to\n         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n         * @param  {String} _x  must be a language tag (BCP 47) like 'en-US' or 'fr-FR'\n         * @return { (String|Module) }    Current locale or module to chain calls\n         */\n        exports.locale = function(_x) {\n            if (!arguments.length) {\n                return locale;\n            }\n            locale = _x;\n\n            return this;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename, title) {\n            exportChart.call(exports, svg, filename, title);\n        };\n\n        /**\n         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n         * We are going to expose this events:\n         * customMouseOver, customMouseMove and customMouseOut\n         *\n         * @return {module} Bar Chart\n         * @public\n         */\n        exports.on = function() {\n            let value = dispatcher.on.apply(dispatcher, arguments);\n\n            return value === dispatcher ? exports : value;\n        };\n\n        /**\n         * Exposes the constants to be used to force the x axis to respect a certain granularity\n         * current options: MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR\n         * @example\n         *     area.forceAxisFormat(area.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.axisTimeCombinations = axisTimeCombinations;\n\n        return exports;\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/stacked-area.js","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max;\n\n/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\nvar nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash.assign/index.js\n// module id = 35\n// module chunks = 0","define(function (require) {\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Axis = require('d3-axis');\n    const d3Color = require('d3-color');\n    const d3Collection = require('d3-collection');\n    const d3Dispatch = require('d3-dispatch');\n    const d3Ease = require('d3-ease');\n    const d3Interpolate = require('d3-interpolate');\n    const d3Scale = require('d3-scale');\n    const d3Selection = require('d3-selection');\n    const assign = require('lodash.assign');\n\n    const { exportChart } = require('./helpers/exportChart');\n    const colorHelper = require('./helpers/colors');\n    const NUMBER_FORMAT = ',f';\n    const uniq = (arrArg) => arrArg.filter((elem, pos, arr) => arr.indexOf(elem) == pos);\n\n\n    /**\n     * @typdef D3Layout\n     * @type function\n     */\n\n    /**\n     * @typedef GroupedBarChartData\n     * @type {Object}\n     * @property {Object[]} data       All data entries\n     * @property {String} name         Name of the entry\n     * @property {String} group        group of the entry\n     * @property {Number} value        Value of the entry\n     *\n     * @example\n     * {\n     *     'data': [\n     *         {\n     *             \"name\": \"2011-01\",\n     *             \"group\": \"Direct\",\n     *             \"value\": 0\n     *         }\n     *     ]\n     * }\n     */\n\n    /**\n     * Grouped Bar Chart reusable API module that allows us\n     * rendering a multi grouped bar and configurable chart.\n     *\n     * @module Grouped-bar\n     * @tutorial grouped-bar\n     * @requires d3-array, d3-axis, d3-color, d3-collection, d3-dispatch, d3-ease,\n     *  d3-interpolate, d3-scale, d3-selection, lodash assign\n     *\n     * @example\n     * let groupedBar = GroupedBar();\n     *\n     * groupedBar\n     *     .width(containerWidth);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset.data)\n     *     .call(groupedBar);\n     *\n     */\n    return function module() {\n\n        let margin = {\n                top: 40,\n                right: 30,\n                bottom: 60,\n                left: 70\n            },\n            width = 960,\n            height = 500,\n\n            xScale,\n            xScale2,\n            xAxis,\n            yScale,\n            yScale2,\n            yAxis,\n\n            aspectRatio = null,\n\n            yTickTextYOffset = -8,\n            yTickTextXOffset = -20,\n\n            numOfVerticalTicks = 5,\n            numOfHorizontalTicks = 5,\n            baseLine,\n\n            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\n            colorScale,\n            categoryColorMap,\n\n            layers,\n\n            ease = d3Ease.easeQuadInOut,\n            horizontal = false,\n\n            svg,\n            chartWidth, chartHeight,\n            data,\n            groups,\n\n            transformedData,\n\n            tooltipThreshold = 480,\n\n            xAxisPadding = {\n                top: 0,\n                left: 0,\n                bottom: 0,\n                right: 0\n            },\n            maxBarNumber = 8,\n\n            animationDelayStep = 20,\n            animationDelays = d3Array.range(animationDelayStep, maxBarNumber * animationDelayStep, animationDelayStep),\n            animationDuration = 1000,\n\n            grid = null,\n\n            nameLabel = 'name',\n            valueLabel = 'value',\n            groupLabel = 'group',\n            valueLabelFormat = NUMBER_FORMAT,\n\n            // getters\n            getName = ({name}) => name,\n            getValue = ({value}) => value,\n            getGroup = ({group}) => group,\n            isAnimated = false,\n\n            // events\n            dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\n        /**\n         * This function creates the graph using the selection and data provided\n         * @param {D3Selection} _selection A d3 selection that represents\n         * the container(s) where the chart(s) will be rendered\n         * @param {GroupedBarChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function (_data) {\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(_data);\n\n                prepareData(data);\n                buildScales();\n                buildLayers();\n                buildSVG(this);\n                drawGridLines();\n                buildAxis();\n                drawAxis();\n                drawGroupedBar();\n                addMouseEvents();\n            });\n        }\n\n        /**\n         * Adds events to the container group if the environment is not mobile\n         * Adding: mouseover, mouseout and mousemove\n         */\n        function addMouseEvents() {\n            if (shouldShowTooltip()) {\n                svg\n                    .on('mouseover', handleMouseOver)\n                    .on('mouseout', handleMouseOut)\n                    .on('mousemove', handleMouseMove);\n            }\n\n            svg.selectAll('.bar')\n                .on('mouseover', handleBarsMouseOver)\n                .on('mouseout', handleBarsMouseOut);\n        }\n\n        /**\n         * Adjusts the position of the y axis' ticks\n         * @param  {D3Selection} selection Y axis group\n         * @return void\n         */\n        function adjustYTickLabels(selection) {\n            selection.selectAll('.tick text')\n                .attr('transform', `translate(${yTickTextXOffset}, ${yTickTextYOffset})`);\n        }\n\n        /**\n         * Creates the d3 x and y axis, setting orientations\n         * @private\n         */\n        function buildAxis() {\n            if (horizontal) {\n                xAxis = d3Axis.axisBottom(xScale)\n                    .ticks(numOfHorizontalTicks, valueLabelFormat);\n                yAxis = d3Axis.axisLeft(yScale)\n            } else {\n                xAxis = d3Axis.axisBottom(xScale)\n                yAxis = d3Axis.axisLeft(yScale)\n                    .ticks(numOfVerticalTicks, valueLabelFormat)\n            }\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * NOTE: The order of drawing of this group elements is really important,\n         * as everything else will be drawn on top of them\n         * @private\n         */\n        function buildContainerGroups() {\n            let container = svg\n                .append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${margin.left},${margin.top})`);\n\n            container\n                .append('g').classed('x-axis-group', true)\n                .append('g').classed('x axis', true);\n            container.selectAll('.x-axis-group')\n                .append('g').classed('month-axis', true);\n            container\n                .append('g').classed('y-axis-group axis', true);\n            container\n                .append('g').classed('grid-lines-group', true);\n            container\n                .append('g').classed('chart-group', true);\n            container\n                .append('g').classed('metadata-group', true);\n        }\n\n        /**\n         * Builds the grouped layers layout\n         * @return {D3Layout} Layout for drawing the chart\n         * @private\n         */\n        function buildLayers() {\n            layers = transformedData.map((item) => {\n                let ret = {};\n\n                groups.forEach((key) => {\n                    ret[key] = item[key];\n                });\n\n                return assign({}, item, ret);\n            });\n        }\n\n        /**\n         * Creates the x, y and color scales of the chart\n         * @private\n         */\n        function buildScales() {\n            let yMax = d3Array.max(data.map(getValue));\n\n            if (horizontal) {\n                xScale = d3Scale.scaleLinear()\n                    .domain([0, yMax])\n                    .rangeRound([0, chartWidth - 1]);\n                // 1 pix for edge tick\n\n                yScale = d3Scale.scaleBand()\n                    .domain(data.map(getName))\n                    .rangeRound([chartHeight, 0])\n                    .padding(0.1);\n\n                yScale2 = d3Scale.scaleBand()\n                    .domain(data.map(getGroup))\n                    .rangeRound([yScale.bandwidth(), 0])\n                    .padding(0.1);\n            } else {\n                xScale = d3Scale.scaleBand()\n                    .domain(data.map(getName))\n                    .rangeRound([0, chartWidth])\n                    .padding(0.1);\n                xScale2 = d3Scale.scaleBand()\n                    .domain(data.map(getGroup))\n                    .rangeRound([0, xScale.bandwidth()])\n                    .padding(0.1);\n\n                yScale = d3Scale.scaleLinear()\n                    .domain([0, yMax])\n                    .rangeRound([chartHeight, 0])\n                    .nice();\n            }\n\n            colorScale = d3Scale.scaleOrdinal()\n                .range(colorSchema)\n                .domain(data.map(getGroup));\n\n            categoryColorMap = colorScale\n                .domain(data.map(getName)).domain()\n                .reduce((memo, item) => {\n                    data.forEach(function (v) {\n                        if (getName(v) == item) {\n                            memo[v.name] = colorScale(v.group)\n                            memo[v.group] = colorScale(v.group)\n                            memo[v.group + item] = colorScale(v.group)\n                        }\n                    })\n                    return memo;\n                }, {});\n        }\n\n        /**\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container)\n                    .append('svg')\n                    .classed('britechart grouped-bar', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Parses dates and values into JS Date objects and numbers\n         * @param  {obj} data Raw data from JSON file\n         * @return {obj}      Parsed data with values and dates\n         */\n        function cleanData(data) {\n            return data.map((d) => {\n                    d.value = +d[valueLabel];\n                    d.group = d[groupLabel];\n                    // for tooltip\n                    d.topicName = getGroup(d);\n                    d.name = d[nameLabel];\n\n                    return d;\n                });\n        }\n\n        /**\n         * Draws the x and y axis on the svg object within their\n         * respective groups\n         * @private\n         */\n        function drawAxis() {\n            if (horizontal) {\n                svg.select('.x-axis-group .axis.x')\n                    .attr('transform', `translate( 0, ${chartHeight} )`)\n                    .call(xAxis);\n\n                svg.select('.y-axis-group.axis')\n                    .attr('transform', `translate( ${-xAxisPadding.left}, 0)`)\n                    .call(yAxis);\n            } else {\n                svg.select('.x-axis-group .axis.x')\n                    .attr('transform', `translate( 0, ${chartHeight} )`)\n                    .call(xAxis);\n\n                svg.select('.y-axis-group.axis')\n                    .attr('transform', `translate( ${-xAxisPadding.left}, 0)`)\n                    .call(yAxis)\n                    .call(adjustYTickLabels);\n            }\n        }\n\n        /**\n         * Draws a vertical line to extend x-axis till the edges\n         * @return {void}\n         */\n        function drawHorizontalExtendedLine() {\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-x-line')\n                .data([0])\n                .enter()\n                  .append('line')\n                    .attr('class', 'extended-x-line')\n                    .attr('x1', (xAxisPadding.left))\n                    .attr('x2', chartWidth)\n                    .attr('y1', chartHeight)\n                    .attr('y2', chartHeight);\n        }\n\n        /**\n         * Draws a vertical line to extend y-axis till the edges\n         * @return {void}\n         */\n        function drawVerticalExtendedLine() {\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-y-line')\n                .data([0])\n                .enter()\n                  .append('line')\n                    .attr('class', 'extended-y-line')\n                    .attr('y1', (xAxisPadding.bottom))\n                    .attr('y2', chartHeight)\n                    .attr('x1', 0)\n                    .attr('x2', 0);\n        }\n\n        /**\n         * Draws grid lines on the background of the chart\n         * @return void\n         */\n        function drawGridLines() {\n            let scale = horizontal ? xScale : yScale;\n\n            if (grid === 'horizontal' || grid === 'full') {\n                svg.select('.grid-lines-group')\n                    .selectAll('line.horizontal-grid-line')\n                    .data(scale.ticks(numOfVerticalTicks).slice(1))\n                    .enter()\n                      .append('line')\n                        .attr('class', 'horizontal-grid-line')\n                        .attr('x1', (-xAxisPadding.left + 1))\n                        .attr('x2', chartWidth)\n                        .attr('y1', (d) => yScale(d))\n                        .attr('y2', (d) => yScale(d));\n            }\n\n            if (grid === 'vertical' || grid === 'full') {\n                svg.select('.grid-lines-group')\n                    .selectAll('line.vertical-grid-line')\n                    .data(scale.ticks(numOfHorizontalTicks).slice(1))\n                    .enter()\n                      .append('line')\n                        .attr('class', 'vertical-grid-line')\n                        .attr('y1', 0)\n                        .attr('y2', chartHeight)\n                        .attr('x1', (d) => xScale(d))\n                        .attr('x2', (d) => xScale(d));\n            }\n\n            if (horizontal) {\n                drawVerticalExtendedLine();\n            } else {\n                drawHorizontalExtendedLine();\n            }\n        }\n\n        /**\n         * Draws the bars along the x axis\n         * @param  {D3Selection} bars Selection of bars\n         * @return {void}\n         */\n        function drawHorizontalBars(series) {\n            // Enter + Update\n            let bars = series\n                .data(layers)\n                .enter()\n                  .append('g')\n                    .attr('transform', function ({key}) { return `translate(0,${yScale(key)})`; })\n                    .classed('layer', true)\n                    .selectAll('.bar')\n                    .data(({values}) => values)\n                    .enter()\n                      .append('rect')\n                        .classed('bar', true)\n                        .attr('x', 1)\n                        .attr('y', (d) => yScale2(getGroup(d)))\n                        .attr('height', yScale2.bandwidth())\n                        .attr('fill', ((data) => categoryColorMap[data.group]));\n\n            if (isAnimated) {\n                bars.style('opacity', 0.24)\n                    .transition()\n                    .delay((_, i) => animationDelays[i])\n                    .duration(animationDuration)\n                    .ease(ease)\n                    .tween('attr.width', horizontalBarsTween);\n            } else {\n                bars.attr('width', (d) => xScale(getValue(d)))\n            }\n        }\n\n        /**\n         * Draws the bars along the y axis\n         * @param  {D3Selection} bars Selection of bars\n         * @return {void}\n         */\n        function drawVerticalBars(series) {\n            // Enter + Update\n            let bars = series\n                .data(layers)\n                .enter()\n                .append('g')\n                  .attr('transform', function (d) { return 'translate(' + xScale(d.key) + ',0)'; })\n                  .classed('layer', true)\n                  .selectAll('.bar')\n                  .data((d) => d.values)\n                  .enter()\n                    .append('rect')\n                      .classed('bar', true)\n                      .attr('x', (d) => xScale2(getGroup(d)))\n                      .attr('y', (d) => yScale(d.value))\n                      .attr('width', xScale2.bandwidth)\n                      .attr('fill', ((data) => categoryColorMap[data.group]));\n\n            if (isAnimated) {\n                bars.style('opacity', 0.24).transition()\n                    .delay((_, i) => animationDelays[i])\n                    .duration(animationDuration)\n                    .ease(ease)\n                    .tween('attr.height', verticalBarsTween);\n            } else {\n                bars.attr('height', (d) => chartHeight - yScale(getValue(d)));\n            }\n        }\n\n        /**\n         * Draws the different areas into the chart-group element\n         * @private\n         */\n        function drawGroupedBar() {\n            let series = svg.select('.chart-group').selectAll('.layer');\n\n            if (!horizontal) {\n                drawVerticalBars(series);\n            } else {\n                drawHorizontalBars(series);\n            }\n            // Exit\n            series.exit()\n                .transition()\n                .style('opacity', 0)\n                .remove();\n        }\n\n        /**\n         * Extract X position on the chart from a given mouse event\n         * @param  {obj} event D3 mouse event\n         * @return {Number}       Position on the x axis of the mouse\n         * @private\n         */\n        function getMousePosition(event) {\n            return d3Selection.mouse(event);\n        }\n\n        /**\n         * Finds out the data entry that is closer to the given position on pixels\n         * @param  {Number} mouseX X position of the mouse\n         * @return {obj}        Data entry that is closer to that x axis position\n         */\n        function getNearestDataPoint(mouseX) {\n            let adjustedMouseX = mouseX - margin.left,\n                epsilon = xScale2.bandwidth(),\n                nearest = [];\n\n            layers.forEach(function (data) {\n                let found = data.values.find((d2) => Math.abs(adjustedMouseX >= xScale(d2[nameLabel]) + xScale2(d2[groupLabel])) && Math.abs(adjustedMouseX - xScale2(d2[groupLabel]) - xScale(d2[nameLabel]) <= epsilon));\n\n                if (found) {\n                    found.values = data.values;\n                    found.key = found.name;\n                    nearest.push(found);\n                }\n\n            });\n\n            return nearest.length ? nearest[0] : undefined;\n        }\n\n        /**\n        * Finds out the data entry that is closer to the given position on pixels\n        * @param  {Number} mouseX X position of the mouse\n        * @return {obj}        Data entry that is closer to that x axis position\n        */\n        function getNearestDataPoint2(mouseY) {\n            let adjustedMouseY = mouseY - margin.bottom,\n                epsilon = yScale.bandwidth(),\n                nearest = [];\n\n            layers.map(function (data) {\n                let found = data.values.find((d2) => Math.abs(adjustedMouseY >= yScale(d2[nameLabel])) && Math.abs(adjustedMouseY - yScale(d2[nameLabel]) <= epsilon * 2));\n\n                if (found) {\n                    found.values = data.values;\n                    found.key = found.name;\n                    nearest.push(found)\n                }\n            });\n\n            return nearest.length ? nearest[0] : undefined;\n        }\n\n        /**\n         * Handles a mouseover event on top of a bar\n         * @param  {obj} d data of bar\n         * @return {void}\n         */\n        function handleBarsMouseOver(d) {\n            d3Selection.select(this)\n                .attr('fill', () => d3Color.color(categoryColorMap[d.group]).darker());\n        }\n\n        /**\n         * Handles a mouseout event out of a bar\n         * @param  {obj} d data of bar\n         * @return {void}\n         */\n        function handleBarsMouseOut(d) {\n            d3Selection.select(this)\n                .attr('fill', () => categoryColorMap[d.group])\n        }\n\n        /**\n         * MouseMove handler, calculates the nearest dataPoint to the cursor\n         * and updates metadata related to it\n         * @private\n         */\n        function handleMouseMove() {\n            let [mouseX, mouseY] = getMousePosition(this),\n                dataPoint = !horizontal ? getNearestDataPoint(mouseX) : getNearestDataPoint2(mouseY),\n                x,\n                y;\n\n            if (dataPoint) {\n                // Move verticalMarker to that datapoint\n                if (horizontal) {\n                    x = mouseX - margin.left;\n                    y = yScale(dataPoint.key) + yScale.bandwidth() / 2;\n                } else {\n                    x = xScale(dataPoint.key) + xScale2(dataPoint[groupLabel]);\n                    y = mouseY - margin.bottom;\n                }\n                moveTooltipOriginXY(x, y);\n\n                // Emit event with xPosition for tooltip or similar feature\n                dispatcher.call('customMouseMove', this, dataPoint, categoryColorMap, x, y);\n            }\n        }\n\n        /**\n         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n         * It also resets the container of the vertical marker\n         * @private\n         */\n        function handleMouseOut(d) {\n            svg.select('.metadata-group').attr('transform', 'translate(9999, 0)');\n            dispatcher.call('customMouseOut', this, d);\n        }\n\n        /**\n         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n         * @private\n         */\n        function handleMouseOver(d) {\n            dispatcher.call('customMouseOver', this, d);\n        }\n\n        /**\n         * Animation tween of horizontal bars\n         * @param  {obj} d data of bar\n         * @return {void}\n         */\n        function horizontalBarsTween(d) {\n            let node = d3Selection.select(this),\n                i = d3Interpolate.interpolateRound(0, xScale(getValue(d))),\n                j = d3Interpolate.interpolateNumber(0, 1);\n\n            return function (t) {\n                node.attr('width', i(t)).style('opacity', j(t));\n            }\n        }\n\n        /**\n         * Helper method to update the x position of the vertical marker\n         * @param  {obj} dataPoint Data entry to extract info\n         * @return void\n         */\n        function moveTooltipOriginXY(originXPosition, originYPosition) {\n            svg.select('.metadata-group')\n                .attr('transform', `translate(${originXPosition},${originYPosition})`);\n        }\n\n        /**\n         * Prepare data for create chart.\n         * @private\n         */\n        function prepareData(data) {\n            groups = uniq(data.map((d) => getGroup(d)));\n            transformedData = d3Collection.nest()\n                .key(getName)\n                .rollup(function (values) {\n                    let ret = {};\n\n                    values.forEach((entry) => {\n                        if (entry && entry[groupLabel]) {\n                            ret[entry[groupLabel]] = getValue(entry);\n                        }\n                    });\n                    //for tooltip\n                    ret.values = values;\n                    return ret;\n                })\n                .entries(data)\n                .map(function (data) {\n                    return assign({}, {\n                        total: d3Array.sum(d3Array.permute(data.value, groups)),\n                        key: data.key\n                    }, data.value);\n                });\n        }\n\n        /**\n         * Determines if we should add the tooltip related logic depending on the\n         * size of the chart and the tooltipThreshold variable value\n         * @return {boolean} Should we build the tooltip?\n         * @private\n         */\n        function shouldShowTooltip() {\n            return width > tooltipThreshold;\n        }\n\n        /**\n         * Animation tween of vertical bars\n         * @param  {obj} d data of bar\n         * @return {void}\n         */\n        function verticalBarsTween(d) {\n            let node = d3Selection.select(this),\n                i = d3Interpolate.interpolateRound(0, chartHeight - yScale(getValue(d))),\n                y = d3Interpolate.interpolateRound(chartHeight, yScale(getValue(d))),\n                j = d3Interpolate.interpolateNumber(0, 1);\n\n            return function (t) {\n                node.attr('y', y(t))\n                    .attr('height', i(t)).style('opacity', j(t));\n            }\n        }\n\n        // API\n\n        /**\n         * Gets or Sets the aspect ratio of the chart\n         * @param  {Number} _x Desired aspect ratio for the graph\n         * @return { (Number | Module) } Current aspect ratio or Area Chart module to chain calls\n         * @public\n         */\n        exports.aspectRatio = function (_x) {\n            if (!arguments.length) {\n                return aspectRatio;\n            }\n            aspectRatio = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the colorSchema of the chart\n         * @param  {String[]} _x Desired colorSchema for the graph\n         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n         * @public\n         */\n        exports.colorSchema = function (_x) {\n            if (!arguments.length) {\n                return colorSchema;\n            }\n            colorSchema = _x;\n\n            return this;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function (filename, title) {\n            exportChart.call(exports, svg, filename, title);\n        };\n\n        /**\n         * Gets or Sets the groupLabel of the chart\n         * @param  {String} _x Desired groupLabel for the graph\n         * @return { groupLabel | module} Current groupLabel or Chart module to chain calls\n         * @public\n         */\n        exports.groupLabel = function (_x) {\n            if (!arguments.length) {\n                return groupLabel;\n            }\n            groupLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the grid mode.\n         *\n         * @param  {String} _x Desired mode for the grid ('vertical'|'horizontal'|'full')\n         * @return { String | module} Current mode of the grid or Area Chart module to chain calls\n         * @public\n         */\n        exports.grid = function (_x) {\n            if (!arguments.length) {\n                return grid;\n            }\n            grid = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { height | module} Current height or Area Chart module to chain calls\n         * @public\n         */\n        exports.height = function (_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            if (aspectRatio) {\n                width = Math.ceil(_x / aspectRatio);\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the horizontal direction of the chart\n         * @param  {number} _x Desired horizontal direction for the graph\n         * @return { horizontal | module} Current horizontal direction or Bar Chart module to chain calls\n         * @public\n         */\n        exports.horizontal = function (_x) {\n            if (!arguments.length) {\n                return horizontal;\n            }\n            horizontal = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n         * By default this is 'false'\n         *\n         * @param  {Boolean} _x Desired animation flag\n         * @return { isAnimated | module} Current isAnimated flag or Chart module\n         * @public\n         */\n        exports.isAnimated = function (_x) {\n            if (!arguments.length) {\n                return isAnimated;\n            }\n            isAnimated = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {Object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Area Chart module to chain calls\n         * @public\n         */\n        exports.margin = function (_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the nameLabel of the chart\n         * @param  {Number} _x Desired dateLabel for the graph\n         * @return { nameLabel | module} Current nameLabel or Chart module to chain calls\n         * @public\n         */\n        exports.nameLabel = function (_x) {\n            if (!arguments.length) {\n                return nameLabel;\n            }\n            nameLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the number of verticalTicks of the axis on the chart\n         * @param  {Number} _x Desired verticalTicks\n         * @return { numOfHorizontalTicks | module} Current numOfHorizontalTicks or Chart module to chain calls\n         * @public\n         */\n        exports.numOfHorizontalTicks = function (_x) {\n            if (!arguments.length) {\n                return numOfHorizontalTicks;\n            }\n            numOfHorizontalTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the number of verticalTicks of the axis on the chart\n         * @param  {Number} _x Desired verticalTicks\n         * @return { numOfVerticalTicks | module} Current numOfVerticalTicks or Chart module to chain calls\n         * @public\n         */\n        exports.numOfVerticalTicks = function (_x) {\n            if (!arguments.length) {\n                return numOfVerticalTicks;\n            }\n            numOfVerticalTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n         * We are going to expose this events:\n         * customMouseOver, customMouseMove and customMouseOut\n         *\n         * @return {module} Bar Chart\n         * @public\n         */\n        exports.on = function () {\n            let value = dispatcher.on.apply(dispatcher, arguments);\n\n            return value === dispatcher ? exports : value;\n        };\n\n        /**\n         * Gets or Sets the minimum width of the graph in order to show the tooltip\n         * NOTE: This could also depend on the aspect ratio\n         *\n         * @param  {Object} _x Margin object to get/set\n         * @return { tooltipThreshold | module} Current tooltipThreshold or Area Chart module to chain calls\n         * @public\n         */\n        exports.tooltipThreshold = function (_x) {\n            if (!arguments.length) {\n                return tooltipThreshold;\n            }\n            tooltipThreshold = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabel of the chart\n         * @param  {Number} _x Desired valueLabel for the graph\n         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabel = function (_x) {\n            if (!arguments.length) {\n                return valueLabel;\n            }\n            valueLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabelFormat of the chart\n         * @param  {String[]} _x Desired valueLabelFormat for the graph\n         * @return { valueLabelFormat | module} Current valueLabelFormat or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabelFormat = function (_x) {\n            if (!arguments.length) {\n                return valueLabelFormat;\n            }\n            valueLabelFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { width | module} Current width or Area Chart module to chain calls\n         * @public\n         */\n        exports.width = function (_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            if (aspectRatio) {\n                height = Math.ceil(_x * aspectRatio);\n            }\n            width = _x;\n\n            return this;\n        };\n\n        return exports;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/grouped-bar.js","define(function(require){\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Axis = require('d3-axis');\n    const d3Color = require('d3-color');\n    const d3Collection = require('d3-collection');\n    const d3Dispatch = require('d3-dispatch');\n    const d3Ease = require('d3-ease');\n    const d3Interpolate = require('d3-interpolate');\n    const d3Scale = require('d3-scale');\n    const d3Shape = require('d3-shape');\n    const d3Selection = require('d3-selection');\n    const assign = require('lodash.assign');\n\n    const {exportChart} = require('./helpers/exportChart');\n    const colorHelper = require('./helpers/colors');\n    const NUMBER_FORMAT = ',f';\n    const uniq = (arrArg) => arrArg.filter((elem, pos, arr) => arr.indexOf(elem) == pos);\n\n\n    /**\n     * @typdef D3Layout\n     * @type function\n     */\n\n    /**\n     * @typedef stackedBarData\n     * @type {Object}\n     * @property {Object[]} data       All data entries\n     * @property {String} name         Name of the entry\n     * @property {String} stack        Stack of the entry\n     * @property {Number} value        Value of the entry\n     *\n     * @example\n     * {\n     *     'data': [\n     *         {\n     *             \"name\": \"2011-01\",\n     *             \"stack\": \"Direct\",\n     *             \"value\": 0\n     *         }\n     *     ]\n     * }\n     */\n\n    /**\n     * Stacked Area Chart reusable API module that allows us\n     * rendering a multi area and configurable chart.\n     *\n     * @module Stacked-bar\n     * @tutorial stacked-bar\n     * @requires d3-array, d3-axis, d3-color, d3-collection, d3-dispatch, d3-ease,\n     *  d3-interpolate, d3-scale, d3-shape, d3-selection, lodash assign\n     *\n     * @example\n     * let stackedBar = stackedBar();\n     *\n     * stackedBar\n     *     .width(containerWidth);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset.data)\n     *     .call(stackedBar);\n     *\n     */\n    return function module() {\n\n        let margin = {\n            top: 40,\n            right: 30,\n            bottom: 60,\n            left: 70\n            },\n            width = 960,\n            height = 500,\n\n            xScale,\n            xAxis,\n            yScale,\n            yAxis,\n\n            aspectRatio = null,\n\n            verticalTicks = 5,\n            yTickTextYOffset = -8,\n            yTickTextXOffset = -20,\n\n            numOfVerticalTicks = 5,\n            numOfHorizontalTicks = 5,\n            percentageAxisToMaxRatio = 1,\n\n            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\n            colorScale,\n            categoryColorMap,\n\n            layers,\n\n            ease = d3Ease.easeQuadInOut,\n            horizontal = false,\n\n            svg,\n            chartWidth, chartHeight,\n            data,\n            transformedData,\n            stacks,\n\n            tooltipThreshold = 480,\n\n            baseLine,\n            xAxisPadding = {\n                top: 0,\n                left: 0,\n                bottom: 0,\n                right: 0\n            },\n            maxBarNumber = 8,\n\n            animationDelayStep = 20,\n            animationDelays = d3Array.range(animationDelayStep, maxBarNumber* animationDelayStep, animationDelayStep),\n            animationDuration = 1000,\n\n            grid = null,\n\n            nameLabel = 'name',\n            valueLabel = 'value',\n            stackLabel = 'stack',\n            nameLabelFormat,\n            valueLabelFormat = NUMBER_FORMAT,\n\n            // getters\n            getName = (data) =>  data[nameLabel],\n            getValue = (data) => data[valueLabel],\n            getStack = (data) => data[stackLabel],\n            isAnimated = false,\n\n            // events\n            dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\n        /**\n         * This function creates the graph using the selection and data provided\n         * @param {D3Selection} _selection A d3 selection that represents\n         * the container(s) where the chart(s) will be rendered\n         * @param {stackedBarData} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data){\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(_data);\n\n                prepareData(data);\n                buildScales();\n                buildLayers();\n                buildSVG(this);\n                drawGridLines();\n                buildAxis();\n                drawAxis();\n                drawStackedBar();\n                addMouseEvents();\n            });\n        }\n\n        /**\n         * Adds events to the container group if the environment is not mobile\n         * Adding: mouseover, mouseout and mousemove\n         */\n        function addMouseEvents() {\n            if (shouldShowTooltip()){\n                svg\n                    .on('mouseover', handleMouseOver)\n                    .on('mouseout', handleMouseOut)\n                    .on('mousemove', handleMouseMove);\n            }\n\n            svg.selectAll('.bar')\n                .on('mouseover', handleBarsMouseOver)\n                .on('mouseout', handleBarsMouseOut);\n        }\n\n        /**\n         * Adjusts the position of the y axis' ticks\n         * @param  {D3Selection} selection Y axis group\n         * @return void\n         */\n        function adjustYTickLabels(selection) {\n            selection.selectAll('.tick text')\n                .attr('transform', `translate(${yTickTextXOffset}, ${yTickTextYOffset})`);\n        }\n\n        /**\n         * Creates the d3 x and y axis, setting orientations\n         * @private\n         */\n        function buildAxis() {\n            if (!horizontal) {\n                xAxis = d3Axis.axisBottom(xScale)\n                yAxis = d3Axis.axisLeft(yScale)\n                    .ticks(numOfVerticalTicks, valueLabelFormat)\n            } else {\n                xAxis = d3Axis.axisBottom(xScale)\n                .ticks(numOfHorizontalTicks, valueLabelFormat);\n                yAxis = d3Axis.axisLeft(yScale)\n            }\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * NOTE: The order of drawing of this group elements is really important,\n         * as everything else will be drawn on top of them\n         * @private\n         */\n        function buildContainerGroups(){\n            let container = svg\n                .append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${margin.left},${margin.top})`);\n\n            container\n                .append('g').classed('x-axis-group', true)\n                .append('g').classed('x axis', true);\n            container.selectAll('.x-axis-group')\n                .append('g').classed('month-axis', true);\n            container\n                .append('g').classed('y-axis-group axis', true);\n            container\n                .append('g').classed('grid-lines-group', true);\n            container\n                .append('g').classed('chart-group', true);\n            container\n                .append('g').classed('metadata-group', true);\n        }\n\n        /**\n         * Builds the stacked layers layout\n         * @return {D3Layout} Layout for drawing the chart\n         * @private\n         */\n        function buildLayers(){\n            let stack3 = d3Shape.stack().keys(stacks),\n                dataInitial = transformedData.map((item) => {\n                        let ret = {};\n\n                        stacks.forEach((key) => {\n                            ret[key] = item[key];\n                        });\n\n                        return assign({}, item, ret);\n                });\n\n            layers  = stack3(dataInitial);\n        }\n\n        /**\n         * Creates the x, y and color scales of the chart\n         * @private\n         */\n        function buildScales() {\n            let yMax = d3Array.max(transformedData.map(function(d){\n                return d.total;\n            }));\n\n            if (!horizontal) {\n                xScale = d3Scale.scaleBand()\n                    .domain(data.map(getName))\n                    .rangeRound([0, chartWidth ])\n                    .padding(0.1);\n\n                yScale = d3Scale.scaleLinear()\n                    .domain([0,yMax])\n                    .rangeRound([chartHeight, 0])\n                    .nice();\n            } else {\n                xScale = d3Scale.scaleLinear()\n                    .domain([0, yMax])\n                    .rangeRound([0, chartWidth - 1]);\n                // 1 pix for edge tick\n\n                yScale = d3Scale.scaleBand()\n                    .domain(data.map(getName))\n                    .rangeRound([chartHeight, 0])\n                    .padding(0.1);\n            }\n\n            colorScale = d3Scale.scaleOrdinal()\n                .range(colorSchema)\n                .domain(data.map(getStack));\n\n            categoryColorMap = colorScale\n                .domain(data.map(getName)).domain()\n                .reduce((memo, item, i) => {\n                    data.forEach(function(v){\n                        if (getName(v)==item){\n                           memo[v.name] = colorScale(v.stack)\n                           memo[v.stack] = colorScale(v.stack)\n                           memo[v.stack + item] = colorScale(v.stack)\n                       }\n                   })\n                    return memo;\n                }, {});\n        }\n\n        /**\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container)\n                  .append('svg')\n                    .classed('britechart stacked-bar', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Parses dates and values into JS Date objects and numbers\n         * @param  {obj} data Raw data from JSON file\n         * @return {obj}      Parsed data with values and dates\n         */\n        function cleanData(data) {\n            return data.map((d) => {\n                    d.value = +d[valueLabel];\n                    d.stack = d[stackLabel];\n                    d.topicName = getStack(d); // for tooltip\n                    d.name = d[nameLabel];\n\n                    return d;\n                });\n        }\n\n        /**\n         * Draws the x and y axis on the svg object within their\n         * respective groups\n         * @private\n         */\n        function drawAxis(){\n            if (!horizontal) {\n                svg.select('.x-axis-group .axis.x')\n                    .attr('transform', `translate( 0, ${chartHeight} )`)\n                    .call(xAxis);\n\n                svg.select('.y-axis-group.axis')\n                    .attr('transform', `translate( ${-xAxisPadding.left}, 0)`)\n                    .call(yAxis)\n                    .call(adjustYTickLabels);\n            } else {\n                svg.select('.x-axis-group .axis.x')\n                    .attr('transform', `translate( 0, ${chartHeight} )`)\n                    .call(xAxis);\n\n                svg.select('.y-axis-group.axis')\n                    .attr('transform', `translate( ${-xAxisPadding.left}, 0)`)\n                    .call(yAxis);\n            }\n        }\n\n        /**\n         * Draws grid lines on the background of the chart\n         * @return void\n         */\n        function drawGridLines() {\n            let scale = horizontal ? xScale : yScale;\n\n            if (grid === 'horizontal' || grid === 'full') {\n                svg.select('.grid-lines-group')\n                    .selectAll('line.horizontal-grid-line')\n                    .data(scale.ticks(numOfVerticalTicks).slice(1))\n                    .enter()\n                      .append('line')\n                        .attr('class', 'horizontal-grid-line')\n                        .attr('x1', (-xAxisPadding.left + 1 ))\n                        .attr('x2', chartWidth)\n                        .attr('y1', (d) => yScale(d))\n                        .attr('y2', (d) => yScale(d));\n            }\n\n            if (grid === 'vertical' || grid === 'full') {\n                svg.select('.grid-lines-group')\n                    .selectAll('line.vertical-grid-line')\n                    .data(scale.ticks(numOfHorizontalTicks).slice(1))\n                    .enter()\n                      .append('line')\n                        .attr('class', 'vertical-grid-line')\n                        .attr('y1', 0)\n                        .attr('y2', chartHeight)\n                        .attr('x1', (d) => xScale(d))\n                        .attr('x2', (d) => xScale(d));\n            }\n\n            if (horizontal) {\n                drawVerticalExtendedLine();\n            } else {\n                drawHorizontalExtendedLine();\n            }\n        }\n\n        /**\n         * Draws the bars along the x axis\n         * @param  {D3Selection} bars Selection of bars\n         * @return {void}\n         */\n        function drawHorizontalBars(series) {\n            // Enter + Update\n            let context,\n                bars = series\n                    .data(layers)\n                    .enter()\n                      .append('g')\n                        .classed('layer', true)\n                        .attr('fill', (({key}) => categoryColorMap[key]))\n                        .selectAll('.bar')\n                        .data( (d)=> d)\n                        .enter()\n                          .append('rect')\n                            .classed('bar', true)\n                            .attr('x', (d) => xScale(d[0]) )\n                            .attr('y', (d) => yScale(d.data.key) )\n                            .attr('height', yScale.bandwidth())\n                            .attr('fill', (({data}) => categoryColorMap[data.stack+data.key]));\n\n            if (isAnimated){\n                bars.style('opacity', 0.24)\n                    .transition()\n                    .delay((_, i) => animationDelays[i])\n                    .duration(animationDuration)\n                    .ease(ease)\n                    .tween('attr.width', function(d ){\n                        let node = d3Selection.select(this),\n                        i = d3Interpolate.interpolateRound(0,xScale(d[1] - d[0] )),\n                        j = d3Interpolate.interpolateNumber(0,1)\n                        ;\n\n                        return function(t){\n                            node.attr('width',  i(t) );\n                            node.style('opacity', j(t) );\n                        }\n                    });\n            } else {\n                bars.attr('width', (d) => xScale(d[1] - d[0] ) )\n            }\n        }\n\n        /**\n         * Draws a vertical line to extend x-axis till the edges\n         * @return {void}\n         */\n        function drawHorizontalExtendedLine() {\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-x-line')\n                .data([0])\n                .enter()\n                  .append('line')\n                    .attr('class', 'extended-x-line')\n                    .attr('x1', (xAxisPadding.left))\n                    .attr('x2', chartWidth)\n                    .attr('y1', chartHeight)\n                    .attr('y2', chartHeight);\n        }\n\n        /**\n         * Draws the bars along the y axis\n         * @param  {D3Selection} bars Selection of bars\n         * @return {void}\n         */\n        function drawVerticalBars(series) {\n            // Enter + Update\n            let bars = series\n                .data(layers)\n                .enter()\n                  .append('g')\n                    .classed('layer', true)\n                    .attr('fill', (({key}) => categoryColorMap[key]))\n                    .selectAll('.bar')\n                    .data((d) => d)\n                    .enter()\n                      .append('rect')\n                        .classed('bar', true)\n                        .attr('x', (d) => xScale(d.data.key))\n                        .attr('y', (d) => yScale(d[1]))\n                        .attr('width', xScale.bandwidth )\n                        .attr('fill', (({data}) => categoryColorMap[data.stack+data.key])),context;\n\n            if (isAnimated){\n                bars.style('opacity', 0.24).transition()\n                    .delay( (_, i) => animationDelays[i])\n                    .duration(animationDuration)\n                    .ease(ease)\n                    .tween('attr.height', function(d ){\n                        let node = d3Selection.select(this),\n                        i = d3Interpolate.interpolateRound(0, yScale(d[0]) - yScale(d[1])),\n                        j = d3Interpolate.interpolateNumber(0,1)\n                        ;\n\n                        return function(t){\n                            node.attr('height',  i(t) );\n                            node.style('opacity', j(t) );\n                        }\n                    });\n            } else {\n                bars.attr('height', (d) => yScale(d[0]) - yScale(d[1]) );\n            }\n        }\n\n        /**\n         * Draws a vertical line to extend y-axis till the edges\n         * @return {void}\n         */\n        function drawVerticalExtendedLine() {\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-y-line')\n                .data([0])\n                .enter()\n                  .append('line')\n                    .attr('class', 'extended-y-line')\n                    .attr('y1', (xAxisPadding.bottom))\n                    .attr('y2', chartHeight)\n                    .attr('x1', 0)\n                    .attr('x2', 0);\n        }\n\n        /**\n         * Draws the different areas into the chart-group element\n         * @private\n         */\n        function drawStackedBar(){\n            let series = svg.select('.chart-group').selectAll('.layer')\n\n            if (!horizontal) {\n                drawVerticalBars(series)\n            } else {\n                drawHorizontalBars(series)\n            }\n            // Exit\n            series.exit()\n                .transition()\n                .style('opacity', 0)\n                .remove();\n        }\n\n        /**\n         * Extract X position on the chart from a given mouse event\n         * @param  {obj} event D3 mouse event\n         * @return {Number}       Position on the x axis of the mouse\n         * @private\n         */\n        function getMousePosition(event) {\n            return d3Selection.mouse(event);\n        }\n\n        /**\n         * Finds out the data entry that is closer to the given position on pixels\n         * @param  {Number} mouseX  X position of the mouse\n         * @return {obj}            Data entry that is closer to that x axis position\n         */\n        function getNearestDataPoint(mouseX) {\n            let adjustedMouseX = mouseX - margin.left,\n                dataByValueParsed = transformedData.map((item) => {\n                    item.key = item.key\n                    return item;\n                }),\n                epsilon,\n                nearest;\n\n            epsilon = (xScale(dataByValueParsed[1].key) - xScale(dataByValueParsed[0].key));\n            nearest = dataByValueParsed.find(({key}) => Math.abs(xScale(key) - adjustedMouseX) <= epsilon);\n\n            return nearest;\n        }\n\n         /**\n         * Finds out the data entry that is closer to the given position on pixels\n         * @param  {Number} mouseY  Y position of the mouse\n         * @return {obj}            Data entry that is closer to that y axis position\n         */\n\n        function getNearestDataPoint2(mouseY) {\n            let adjustedMouseY = mouseY - margin.bottom,\n                epsilon = yScale.bandwidth(),\n                nearest;\n\n            nearest = layers.map(function(stackedArray){\n                return stackedArray.map(function(d1){\n                   let found = d1.data.values.find((d2) => Math.abs(adjustedMouseY >= yScale(d2[nameLabel])) && Math.abs(adjustedMouseY - yScale(d2[nameLabel]) <= epsilon*2) );\n                   return found ? d1.data :undefined;\n               })\n            });\n            nearest = d3Array.merge( nearest).filter(function(e){return e});\n\n            return nearest.length ? nearest[0] :undefined;\n        }\n\n        /**\n         * Handles a mouseover event on top of a bar\n         * @param  {obj} d data of bar\n         * @return {void}\n         */\n        function handleBarsMouseOver(d) {\n            d3Selection.select(this)\n                .attr('fill', () => d3Color.color(d3Selection.select(this.parentNode).attr('fill')).darker())\n        }\n\n        /**\n         * Handles a mouseout event out of a bar\n         * @param  {obj} d data of bar\n         * @return {void}\n         */\n        function handleBarsMouseOut(d) {\n            d3Selection\n                .select(this).attr('fill', () => d3Selection.select(this.parentNode).attr('fill'))\n        }\n\n        /**\n         * MouseMove handler, calculates the nearest dataPoint to the cursor\n         * and updates metadata related to it\n         * @private\n         */\n        function handleMouseMove(){\n            let [mouseX, mouseY] = getMousePosition(this),\n                dataPoint = !horizontal ? getNearestDataPoint(mouseX) : getNearestDataPoint2(mouseY),\n                x,\n                y;\n\n            if (dataPoint) {\n                // Move verticalMarker to that datapoint\n                if (horizontal) {\n                    x = mouseX - margin.left;\n                    y = yScale(dataPoint.key) + yScale.bandwidth()/2;\n                } else {\n                    x = xScale(dataPoint.key) + margin.left;\n                    y = mouseY - margin.bottom;\n                }\n                moveTooltipOriginXY(x,y);\n\n                // Emit event with xPosition for tooltip or similar feature\n                dispatcher.call('customMouseMove', this, dataPoint, categoryColorMap, x,y);\n            }\n        }\n\n        /**\n         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n         * It also resets the container of the vertical marker\n         * @private\n         */\n        function handleMouseOut(d){\n            svg.select('.metadata-group').attr('transform', 'translate(9999, 0)');\n            dispatcher.call('customMouseOut', this, d);\n        }\n\n        /**\n         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n         * @private\n         */\n        function handleMouseOver(d){\n            dispatcher.call('customMouseOver', this, d);\n        }\n\n        /**\n         * Helper method to update the x position of the vertical marker\n         * @param  {obj} dataPoint Data entry to extract info\n         * @return void\n         */\n        function moveTooltipOriginXY(originXPosition, originYPosition){\n            svg.select('.metadata-group')\n                .attr('transform', `translate(${originXPosition},${originYPosition})`);\n        }\n\n        /**\n         * Prepare data for create chart.\n         * @private\n         */\n        function prepareData(data) {\n            stacks = uniq(data.map(({stack}) => stack));\n            transformedData = d3Collection.nest()\n                .key(getName)\n                .rollup(function(values) {\n                    let ret = {};\n\n                    values.forEach((entry) => {\n                        if (entry && entry[stackLabel]) {\n                            ret[entry[stackLabel]] = getValue(entry);\n                        }\n                    });\n                    ret.values = values; //for tooltip\n\n                    return ret;\n                })\n                .entries(data)\n                .map(function(data){\n                    return assign({}, {\n                        total:d3Array.sum( d3Array.permute(data.value, stacks) ),\n                        key:data.key\n                    }, data.value);\n                });\n        }\n\n        /**\n         * Determines if we should add the tooltip related logic depending on the\n         * size of the chart and the tooltipThreshold variable value\n         * @return {boolean} Should we build the tooltip?\n         * @private\n         */\n        function shouldShowTooltip() {\n            return width > tooltipThreshold;\n        }\n\n        // API\n        /**\n         * Gets or Sets the aspect ratio of the chart\n         * @param  {Number} _x Desired aspect ratio for the graph\n         * @return { (Number | Module) } Current aspect ratio or Area Chart module to chain calls\n         * @public\n         */\n        exports.aspectRatio = function(_x) {\n            if (!arguments.length) {\n                return aspectRatio;\n            }\n            aspectRatio = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the colorSchema of the chart\n         * @param  {String[]} _x Desired colorSchema for the graph\n         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n         * @public\n         */\n        exports.colorSchema = function(_x) {\n            if (!arguments.length) {\n                return colorSchema;\n            }\n            colorSchema = _x;\n\n            return this;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename, title) {\n            exportChart.call(exports, svg, filename, title);\n        };\n\n        /**\n         * Gets or Sets the grid mode.\n         *\n         * @param  {String} _x Desired mode for the grid ('vertical'|'horizontal'|'full')\n         * @return { String | module} Current mode of the grid or Area Chart module to chain calls\n         * @public\n         */\n        exports.grid = function(_x) {\n            if (!arguments.length) {\n                return grid;\n            }\n            grid = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { height | module} Current height or Area Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            if (aspectRatio) {\n                width = Math.ceil(_x / aspectRatio);\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the horizontal direction of the chart\n         * @param  {number} _x Desired horizontal direction for the graph\n         * @return { horizontal | module} Current horizontal direction or Bar Chart module to chain calls\n         * @public\n         */\n        exports.horizontal = function(_x) {\n            if (!arguments.length) {\n                return horizontal;\n            }\n            horizontal = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n         * By default this is 'false'\n         *\n         * @param  {Boolean} _x Desired animation flag\n         * @return { isAnimated | module} Current isAnimated flag or Chart module\n         * @public\n         */\n        exports.isAnimated = function(_x) {\n            if (!arguments.length) {\n                return isAnimated;\n            }\n            isAnimated = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {Object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Area Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the nameLabel of the chart\n         * @param  {Number} _x Desired dateLabel for the graph\n         * @return { nameLabel | module} Current nameLabel or Chart module to chain calls\n         * @public\n         */\n        exports.nameLabel = function(_x) {\n            if (!arguments.length) {\n                return nameLabel;\n            }\n            nameLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabelFormat of the chart\n         * @param  {String[]} _x Desired valueLabelFormat for the graph\n         * @return { valueLabelFormat | module} Current valueLabelFormat or Chart module to chain calls\n         * @public\n         */\n        exports.nameLabelFormat = function(_x) {\n            if (!arguments.length) {\n                return nameLabelFormat;\n            }\n            nameLabelFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the number of verticalTicks of the axis on the chart\n         * @param  {Number} _x Desired verticalTicks\n         * @return { numOfHorizontalTicks | module} Current numOfHorizontalTicks or Chart module to chain calls\n         * @public\n         */\n        exports.numOfHorizontalTicks = function (_x) {\n            if (!arguments.length) {\n                return numOfHorizontalTicks;\n            }\n            numOfHorizontalTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the number of verticalTicks of the axis on the chart\n         * @param  {Number} _x Desired verticalTicks\n         * @return { numOfVerticalTicks | module} Current numOfVerticalTicks or Chart module to chain calls\n         * @public\n         */\n        exports.numOfVerticalTicks = function (_x) {\n            if (!arguments.length) {\n                return numOfVerticalTicks;\n            }\n            numOfVerticalTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n         * We are going to expose this events:\n         * customMouseOver, customMouseMove and customMouseOut\n         *\n         * @return {module} Bar Chart\n         * @public\n         */\n        exports.on = function() {\n            let value = dispatcher.on.apply(dispatcher, arguments);\n\n            return value === dispatcher ? exports : value;\n        };\n\n        /**\n         * Configurable extension of the x axis\n         * if your max point was 50% you might want to show x axis to 60%, pass 1.2\n         * @param  {number} _x ratio to max data point to add to the x axis\n         * @return { ratio | module} Current ratio or Bar Chart module to chain calls\n         * @public\n         */\n        exports.percentageAxisToMaxRatio = function(_x) {\n            if (!arguments.length) {\n                return percentageAxisToMaxRatio;\n            }\n            percentageAxisToMaxRatio = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the stackLabel of the chart\n         * @param  {String} _x Desired stackLabel for the graph\n         * @return { stackLabel | module} Current stackLabel or Chart module to chain calls\n         * @public\n         */\n        exports.stackLabel = function(_x) {\n            if (!arguments.length) {\n                return stackLabel;\n            }\n            stackLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the minimum width of the graph in order to show the tooltip\n         * NOTE: This could also depend on the aspect ratio\n         *\n         * @param  {Object} _x Margin object to get/set\n         * @return { tooltipThreshold | module} Current tooltipThreshold or Area Chart module to chain calls\n         * @public\n         */\n        exports.tooltipThreshold = function(_x) {\n            if (!arguments.length) {\n                return tooltipThreshold;\n            }\n            tooltipThreshold = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabel of the chart\n         * @param  {Number} _x Desired valueLabel for the graph\n         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabel = function(_x) {\n            if (!arguments.length) {\n                return valueLabel;\n            }\n            valueLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabelFormat of the chart\n         * @param  {String[]} _x Desired valueLabelFormat for the graph\n         * @return { valueLabelFormat | module} Current valueLabelFormat or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabelFormat = function(_x) {\n            if (!arguments.length) {\n                return valueLabelFormat;\n            }\n            valueLabelFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { width | module} Current width or Area Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            if (aspectRatio) {\n                height = Math.ceil(_x * aspectRatio);\n            }\n            width = _x;\n\n            return this;\n        };\n\n        return exports;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/stacked-bar.js","define(function(require) {\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Axis = require('d3-axis');\n    const d3Dispatch = require('d3-dispatch');\n    const d3Ease = require('d3-ease');\n    const d3Format = require('d3-format');\n    const d3Scale = require('d3-scale');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n\n    const {exportChart} = require('./helpers/exportChart');\n\n\n    /**\n     * @typedef StepChartData\n     * @type Object[]\n     *\n     * @property {String} key      Key we measure (required)\n     * @property {Number} value    value of the key (required)\n     *\n     * @example\n     * [\n     *     {\n     *         value: 1,\n     *         key: 'glittering'\n     *     },\n     *     {\n     *         value: 1,\n     *         key: 'luminous'\n     *     }\n     * ]\n     */\n\n    /**\n     * Step Chart reusable API class that renders a\n     * simple and configurable step chart.\n     *\n     * @module Step\n     * @tutorial step\n     * @requires d3-array, d3-axis, d3-dispatch, d3-format, d3-scale, d3-selection, d3-transition\n     *\n     * @example\n     * var stepChart= step();\n     *\n     * stepChart\n     *     .height(500)\n     *     .width(800);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(stepChart);\n     *\n     */\n\n    return function module() {\n\n        let margin = {\n                top: 20,\n                right: 20,\n                bottom: 30,\n                left: 40\n            },\n            width = 960,\n            height = 500,\n            ease = d3Ease.easeQuadInOut,\n            data,\n            chartWidth, chartHeight,\n            xScale, yScale,\n            numOfVerticalTicks = 6,\n            xAxis, xAxisLabel,\n            yAxis, yAxisLabel,\n            xAxisLabelOffset = 45,\n            yAxisLabelOffset = -20,\n            xAxisPadding = {\n                top: 0,\n                left: 0,\n                bottom: 0,\n                right: 0\n            },\n            yTickPadding = 8,\n            svg,\n\n            valueLabel = 'value',\n            nameLabel = 'key',\n\n            maskGridLines,\n            baseLine,\n\n            // Dispatcher object to broadcast the mouse events\n            // Ref: https://github.com/mbostock/d3/wiki/Internals#d3_dispatch\n            dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove'),\n\n            // Formats\n            yAxisTickFormat = d3Format.format('.3'),\n\n            // extractors\n            getKey = ({key}) => key,\n            getValue = ({value}) => value;\n\n\n        /**\n         * This function creates the graph using the selection as container\n         * @param  {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {StepChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection){\n            _selection.each(function(_data){\n                // Make space on the left of the graph for the y axis label\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(_data);\n\n                buildScales();\n                buildAxis();\n                buildSVG(this);\n                drawGridLines();\n                drawSteps();\n                drawAxis();\n            });\n        }\n\n        /**\n         * Creates the d3 x and y axis, setting orientations\n         * @private\n         */\n        function buildAxis(){\n            xAxis = d3Axis.axisBottom(xScale);\n\n            yAxis = d3Axis.axisLeft(yScale)\n                .ticks(numOfVerticalTicks)\n                .tickPadding(yTickPadding)\n                .tickFormat(yAxisTickFormat);\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * Also applies the Margin convention\n         * @private\n         */\n        function buildContainerGroups(){\n            let container = svg\n              .append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n            container\n              .append('g')\n                .classed('grid-lines-group', true);\n            container\n              .append('g')\n                .classed('chart-group', true);\n            container\n              .append('g')\n                .classed('x-axis-group axis', true)\n              .append('g')\n                .classed('x-axis-label', true);\n            container\n              .append('g')\n                .classed('y-axis-group axis', true)\n              .append('g')\n                .classed('y-axis-label', true);\n            container\n                .append('g').classed('metadata-group', true);\n        }\n\n        /**\n         * Creates the x and y scales of the graph\n         * @private\n         */\n        function buildScales(){\n            xScale = d3Scale.scaleBand()\n                .domain(data.map(getKey))\n                .rangeRound([0, chartWidth])\n                .paddingInner(0);\n\n            yScale = d3Scale.scaleLinear()\n                .domain([0, d3Array.max(data, getValue)])\n                .rangeRound([chartHeight, 0]);\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container){\n            if (!svg) {\n                svg = d3Selection.select(container)\n                  .append('svg')\n                    .classed('britechart step-chart', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Cleaning data adding the proper format\n         * @param  {StepChartData} data Data\n         * @private\n         */\n        function cleanData(data) {\n            return data.map((d) => {\n                d.value = +d[valueLabel];\n                d.key = String(d[nameLabel]);\n\n                return d;\n            });\n        }\n\n        /**\n         * Draws the x and y axis on the svg object within their\n         * respective groups\n         * @private\n         */\n        function drawAxis(){\n            svg.select('.x-axis-group.axis')\n                .attr('transform', `translate(0, ${chartHeight})`)\n                .call(xAxis);\n\n            if (xAxisLabel) {\n                svg.select('.x-axis-label')\n                  .append('text')\n                    .attr('text-anchor', 'middle')\n                    .attr('x', chartWidth / 2)\n                    .attr('y', xAxisLabelOffset)\n                    .text(xAxisLabel);\n            }\n\n            svg.select('.y-axis-group.axis')\n                .call(yAxis);\n\n            if (yAxisLabel) {\n                svg.select('.y-axis-label')\n                  .append('text')\n                    .attr('x', -chartHeight / 2)\n                    .attr('y', yAxisLabelOffset)\n                    .attr('text-anchor', 'middle')\n                    .attr('transform', 'rotate(270 0 0)')\n                    .text(yAxisLabel);\n            }\n        }\n\n        /**\n         * Draws the step elements within the chart group\n         * @private\n         */\n        function drawSteps(){\n            let steps = svg.select('.chart-group').selectAll('.step').data(data);\n\n            // Enter\n            steps.enter()\n              .append('rect')\n                .classed('step', true)\n                .attr('x', chartWidth) // Initially drawing the steps at the end of Y axis\n                .attr('y', ({value}) => yScale(value))\n                .attr('width', xScale.bandwidth())\n                .attr('height', (d) => (chartHeight - yScale(d.value)))\n                .on('mouseover', function() {\n                    dispatcher.call('customMouseOver', this);\n                })\n                .on('mousemove', function(d) {\n                    dispatcher.call('customMouseMove', this, d, d3Selection.mouse(this), [chartWidth, chartHeight]);\n                })\n                .on('mouseout', function() {\n                    dispatcher.call('customMouseOut', this);\n                })\n              .merge(steps)\n                .transition()\n                .ease(ease)\n                .attr('x', ({key}) => xScale(key))\n                .attr('y', function(d) {\n                    return yScale(d.value);\n                })\n                .attr('width', xScale.bandwidth())\n                .attr('height', function(d) {\n                    return chartHeight - yScale(d.value);\n                });\n\n            // Exit\n            steps.exit()\n                .transition()\n                .style('opacity', 0)\n                .remove();\n        }\n\n        /**\n         * Draws grid lines on the background of the chart\n         * @return void\n         */\n        function drawGridLines(){\n            maskGridLines = svg.select('.grid-lines-group')\n                .selectAll('line.horizontal-grid-line')\n                .data(yScale.ticks(numOfVerticalTicks))\n                .enter()\n                  .append('line')\n                    .attr('class', 'horizontal-grid-line')\n                    .attr('x1', (xAxisPadding.left))\n                    .attr('x2', chartWidth)\n                    .attr('y1', (d) => yScale(d))\n                    .attr('y2', (d) => yScale(d));\n\n            //draw a horizontal line to extend x-axis till the edges\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-x-line')\n                .data([0])\n                .enter()\n                  .append('line')\n                    .attr('class', 'extended-x-line')\n                    .attr('x1', (xAxisPadding.left))\n                    .attr('x2', chartWidth)\n                    .attr('y1', height - margin.bottom - margin.top)\n                    .attr('y2', height - margin.bottom - margin.top);\n        }\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename) {\n            exportChart.call(exports, svg, filename);\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Step Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { width | module} Current width or step Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { height | module} Current height or Step Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the number of vertical ticks on the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { height | module} Current height or Step Chart module to chain calls\n         * @public\n         */\n        exports.numOfVerticalTicks = function(_x) {\n            if (!arguments.length) {\n                return numOfVerticalTicks;\n            }\n            numOfVerticalTicks = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the text of the xAxisLabel on the chart\n         * @param  {text} _x Desired text for the label\n         * @return { text | module} label or Step Chart module to chain calls\n         * @public\n         */\n        exports.xAxisLabel = function(_x) {\n            if (!arguments.length) {\n                return xAxisLabel;\n            }\n            xAxisLabel = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the offset of the xAxisLabel on the chart\n         * @param  {integer} _x Desired offset for the label\n         * @return { integer | module} label or Step Chart module to chain calls\n         * @public\n         */\n        exports.xAxisLabelOffset = function(_x) {\n            if (!arguments.length) {\n                return xAxisLabelOffset;\n            }\n            xAxisLabelOffset = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the text of the yAxisLabel on the chart\n         * @param  {text} _x Desired text for the label\n         * @return { text | module} label or Step Chart module to chain calls\n         * @public\n         */\n        exports.yAxisLabel = function(_x) {\n            if (!arguments.length) {\n                return yAxisLabel;\n            }\n            yAxisLabel = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the offset of the yAxisLabel on the chart\n         * @param  {integer} _x Desired offset for the label\n         * @return { integer | module} label or Step Chart module to chain calls\n         * @public\n         */\n        exports.yAxisLabelOffset = function(_x) {\n            if (!arguments.length) {\n                return yAxisLabelOffset;\n            }\n            yAxisLabelOffset = _x;\n            return this;\n        };\n\n        /**\n         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n         * We are going to expose this events:\n         * customMouseOver, customMouseMove and customMouseOut\n         *\n         * @return {module} Bar Chart\n         * @public\n         */\n        exports.on = function() {\n            let value = dispatcher.on.apply(dispatcher, arguments);\n\n            return value === dispatcher ? exports : value;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename, title) {\n            exportChart.call(exports, svg, filename, title);\n        };\n\n        return exports;\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/step.js","define(function(require) {\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Axis = require('d3-axis');\n    const d3Brush = require('d3-brush');\n    const d3Ease = require('d3-ease');\n    const d3Scale = require('d3-scale');\n    const d3Shape = require('d3-shape');\n    const d3Selection = require('d3-selection');\n    const d3Time = require('d3-time');\n    const d3Transition = require('d3-transition');\n    const d3TimeFormat = require('d3-time-format');\n\n    const colorHelper = require('./helpers/colors');\n    const timeAxisHelper = require('./helpers/timeAxis');\n\n    const {axisTimeCombinations} = require('./helpers/constants');\n\n\n    /**\n     * @typedef BrushChartData\n     * @type {Object[]}\n     * @property {Number} value        Value to chart (required)\n     * @property {Date} date           Date of the value (required)\n     *\n     * @example\n     * [\n     *     {\n     *         value: 1,\n     *         date: '2011-01-06T00:00:00Z'\n     *     },\n     *     {\n     *         value: 2,\n     *         date: '2011-01-07T00:00:00Z'\n     *     }\n     * ]\n     */\n\n    /**\n     * Brush Chart reusable API class that renders a\n     * simple and configurable brush chart.\n     *\n     * @module Brush\n     * @tutorial brush\n     * @requires d3-array, d3-axis, d3-brush, d3-ease, d3-scale, d3-shape, d3-selection, d3-time, d3-time-format\n     *\n     * @example\n     * let brushChart = brush();\n     *\n     * brushChart\n     *     .height(500)\n     *     .width(800);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(brushChart);\n     *\n     */\n\n    return function module() {\n\n        let margin = {\n                top: 20,\n                right: 20,\n                bottom: 30,\n                left: 20\n            },\n            width = 960,\n            height = 500,\n            data,\n            svg,\n\n            ease = d3Ease.easeQuadOut,\n\n            dateLabel = 'date',\n            valueLabel = 'value',\n\n            dateRange = [null, null],\n\n            chartWidth, chartHeight,\n            xScale, yScale,\n            xAxis,\n\n            forceAxisSettings = null,\n            forcedXTicks = null,\n            forcedXFormat = null,\n\n            brush,\n            chartBrush,\n            handle,\n\n            tickPadding = 5,\n\n            onBrush = null,\n\n            gradient = colorHelper.colorGradients.greenBlueGradient,\n\n            // extractors\n            getValue = ({value}) => value,\n            getDate = ({date}) => date;\n\n\n        /**\n         * This function creates the graph using the selection as container\n         * @param  {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {BrushChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection){\n            _selection.each(function(_data){\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(cloneData(_data));\n\n                buildScales();\n                buildAxis();\n                buildSVG(this);\n                buildGradient();\n                buildBrush();\n                drawArea();\n                drawAxis();\n                drawBrush();\n                drawHandles();\n            });\n        }\n\n        /**\n         * Creates the d3 x axis, setting orientation\n         * @private\n         */\n        function buildAxis(){\n            let minor, major;\n\n            if (forceAxisSettings === 'custom' && typeof forcedXFormat === 'string') {\n                minor = {\n                    tick: forcedXTicks,\n                    format: d3TimeFormat.timeFormat(forcedXFormat)\n                };\n            } else {\n                ({minor, major} = timeAxisHelper.getXAxisSettings(data, width, forceAxisSettings));\n            }\n\n            xAxis = d3Axis.axisBottom(xScale)\n                .ticks(minor.tick)\n                .tickSize(10, 0)\n                .tickPadding([tickPadding])\n                .tickFormat(minor.format);\n        }\n\n        /**\n         * Creates the brush element and attaches a listener\n         * @return {void}\n         */\n        function buildBrush() {\n            brush = d3Brush.brushX()\n                .extent([[0, 0], [chartWidth, chartHeight]])\n                .on('brush', handleBrush)\n                .on('end', handleBrushEnded);\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * Also applies the Margin convention\n         * @private\n         */\n        function buildContainerGroups(){\n            let container = svg\n              .append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n            container\n              .append('g')\n                .classed('chart-group', true);\n            container\n              .append('g')\n                .classed('metadata-group', true);\n            container\n              .append('g')\n                .classed('x-axis-group', true);\n            container\n              .append('g')\n                .classed('brush-group', true);\n        }\n\n        /**\n         * Creates the gradient on the area\n         * @return {void}\n         */\n        function buildGradient() {\n            let metadataGroup = svg.select('.metadata-group');\n\n            metadataGroup.append('linearGradient')\n                .attr('id', 'brush-area-gradient')\n                .attr('gradientUnits', 'userSpaceOnUse')\n                .attr('x1', 0)\n                .attr('x2', xScale(data[data.length - 1].date))\n                .attr('y1', 0)\n                .attr('y2', 0)\n              .selectAll('stop')\n                .data([\n                    {offset: '0%', color: gradient[0]},\n                    {offset: '100%', color: gradient[1]}\n                ])\n              .enter().append('stop')\n                .attr('offset', ({offset}) => offset)\n                .attr('stop-color', ({color}) => color);\n        }\n\n        /**\n         * Creates the x and y scales of the graph\n         * @private\n         */\n        function buildScales(){\n            xScale = d3Scale.scaleTime()\n                .domain(d3Array.extent(data, getDate ))\n                .range([0, chartWidth]);\n\n            yScale = d3Scale.scaleLinear()\n                .domain([0, d3Array.max(data, getValue)])\n                .range([chartHeight, 0]);\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container){\n            if (!svg) {\n                svg = d3Selection.select(container)\n                  .append('svg')\n                    .classed('britechart brush-chart', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Cleaning data adding the proper format\n         *\n         * @param  {BrushChartData} data Data\n         */\n        function cleanData(data) {\n            return data.map(function (d) {\n                d.date = new Date(d[dateLabel]);\n                d.value = +d[valueLabel];\n\n                return d;\n            });\n        }\n\n        /**\n         * Clones the passed array of data\n         * @param  {Object[]} dataToClone Data to clone\n         * @return {Object[]}             Cloned data\n         */\n        function cloneData(dataToClone) {\n            return JSON.parse(JSON.stringify(dataToClone));\n        }\n\n        /**\n         * Draws the x axis on the svg object within its group\n         *\n         * @private\n         */\n        function drawAxis(){\n            svg.select('.x-axis-group')\n              .append('g')\n                .attr('class', 'x axis')\n                .attr('transform', `translate(0, ${chartHeight})`)\n                .call(xAxis);\n        }\n\n        /**\n         * Draws the area that is going to represent the data\n         *\n         * @return {void}\n         */\n        function drawArea() {\n            // Create and configure the area generator\n            let area = d3Shape.area()\n                .x(({date}) => xScale(date))\n                .y0(chartHeight)\n                .y1(({value}) => yScale(value))\n                .curve(d3Shape.curveBasis);\n\n            // Create the area path\n            svg.select('.chart-group')\n              .append('path')\n                .datum(data)\n                .attr('class', 'brush-area')\n                .attr('d', area);\n        }\n\n        /**\n         * Draws the Brush components on its group\n         * @return {void}\n         */\n        function drawBrush() {\n            chartBrush = svg.select('.brush-group')\n                                .call(brush);\n\n            // Update the height of the brushing rectangle\n            chartBrush.selectAll('rect')\n                .classed('brush-rect', true)\n                .attr('height', chartHeight);\n        }\n\n        /**\n         * Draws a handle for the Brush section\n         * @return {void}\n         */\n        function drawHandles() {\n            let handleFillColor = colorHelper.colorSchemasHuman.britechartsGreySchema[1];\n\n            // Styling\n            handle = chartBrush\n                        .selectAll('.handle.brush-rect')\n                        .style('fill', handleFillColor);\n        }\n\n        /**\n         * When a brush event happens, we can extract info from the extension\n         * of the brush.\n         *\n         * @return {void}\n         */\n        function handleBrush() {\n            let s = d3Selection.event.selection,\n                dateExtent = s.map(xScale.invert);\n\n            if (typeof onBrush === 'function') {\n                onBrush.call(null, dateExtent);\n            }\n\n            // updateHandlers(dateExtent);\n        }\n\n        /**\n         * Processes the end brush event, snapping the boundaries to days\n         * as showed on the example on https://bl.ocks.org/mbostock/6232537\n         * @return {void}\n         * @private\n         */\n        function handleBrushEnded() {\n            if (!d3Selection.event.sourceEvent) return; // Only transition after input.\n            if (!d3Selection.event.selection) return; // Ignore empty selections.\n\n            let d0 = d3Selection.event.selection.map(xScale.invert),\n                d1 = d0.map(d3Time.timeDay.round);\n\n            // If empty when rounded, use floor & ceil instead.\n            if (d1[0] >= d1[1]) {\n                d1[0] = d3Time.timeDay.floor(d0[0]);\n                d1[1] = d3Time.timeDay.offset(d1[0]);\n            }\n\n            d3Selection.select(this)\n                .transition()\n                .call(d3Selection.event.target.move, d1.map(xScale));\n        }\n\n        /**\n         * Sets a new brush extent within the passed percentage positions\n         * @param {Number} a Percentage of data that the brush start with\n         * @param {Number} b Percentage of data that the brush ends with\n         * @example\n         *     setBrushByPercentages(0.25, 0.5)\n         */\n        function setBrushByPercentages(a, b) {\n            let x0 = a * chartWidth,\n                x1 = b * chartWidth;\n\n            brush\n                .move(chartBrush, [x0, x1]);\n        }\n\n        /**\n         * Sets a new brush extent within the passed dates\n         * @param {String | Date} dateA Initial Date\n         * @param {String | Date} dateB End Date\n         */\n        function setBrushByDates(dateA, dateB) {\n            let x0 = xScale(new Date(dateA)),\n                x1 = xScale(new Date(dateB));\n\n            brush\n                .move(chartBrush, [x0, x1]);\n        }\n\n        /**\n         * Updates visibility and position of the brush handlers\n         * @param  {Number[]} dateExtent Date range\n         * @return {void}\n         */\n        function updateHandlers(dateExtent) {\n            if (dateExtent == null) {\n                handle.attr('display', 'none');\n            } else {\n                handle\n                    .attr('display', null)\n                    .attr('transform', function(d, i) {\n                        return `translate(${dateExtent[i]},${chartHeight / 2})`;\n                    });\n            }\n        }\n\n        // API\n\n        /**\n         * Gets or Sets the dateRange for the selected part of the brush\n         * @param  {String[]} _x Desired dateRange for the graph\n         * @return { dateRange | module} Current dateRange or Chart module to chain calls\n         * @public\n         */\n        exports.dateRange = function(_x) {\n            if (!arguments.length) {\n                return dateRange;\n            }\n            dateRange = _x;\n\n            if (Array.isArray(dateRange)) {\n                setBrushByDates(...dateRange);\n            }\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x axis grouping\n         * @param  {String} _x Desired format\n         * @return { (String|Module) }    Current format or module to chain calls\n         * @example\n         *     brush.forceAxisFormat(brush.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.forceAxisFormat = function(_x) {\n            if (!arguments.length) {\n              return forceAxisSettings;\n            }\n            forceAxisSettings = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x format\n         * It requires a `forceAxisFormat` of 'custom' in order to work.\n         * @param  {String} _x              Desired format for x axis\n         * @return { (String|Module) }      Current format or module to chain calls\n         */\n        exports.forcedXFormat = function(_x) {\n            if (!arguments.length) {\n              return forcedXFormat;\n            }\n            forcedXFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x ticks. It requires a `forceAxisFormat` of 'custom' in order to work.\n         * NOTE: This value needs to be a multiple of 2, 5 or 10. They won't always work as expected, as D3 decides at the end\n         * how many and where the ticks will appear.\n         *\n         * @param  {Number} _x              Desired number of x axis ticks (multiple of 2, 5 or 10)\n         * @return { (Number|Module) }      Current number or ticks or module to chain calls\n         */\n        exports.forcedXTicks = function(_x) {\n            if (!arguments.length) {\n              return forcedXTicks;\n            }\n            forcedXTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the constants to be used to force the x axis to respect a certain granularity\n         * current options: MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR\n         * @example\n         *     brush.forceAxisFormat(brush.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.axisTimeCombinations = axisTimeCombinations;\n\n        /**\n         * Gets or Sets the gradient of the chart\n         * @param  {String[]} _x Desired gradient for the graph\n         * @return { gradient | module} Current gradient or Chart module to chain calls\n         * @public\n         */\n        exports.gradient = function(_x) {\n            if (!arguments.length) {\n                return gradient;\n            }\n            gradient = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { height | module} Current height or Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the callback that will be called when the user brushes over the area\n         * @param  {Function} _x Callback to call\n         * @return {Function | module}    Current callback function or the Chart Module\n         */\n        exports.onBrush = function(_x) {\n            if (!arguments.length) return onBrush;\n            onBrush = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { width | module} Current width or Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _x;\n\n            return this;\n        };\n\n        return exports;\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/brush.js","// https://d3js.org/d3-brush/ Version 1.0.4. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-drag'), require('d3-interpolate'), require('d3-selection'), require('d3-transition')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Dispatch,d3Drag,d3Interpolate,d3Selection,d3Transition) { 'use strict';\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = d3Dispatch.dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          d3Selection.select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = d3Interpolate.interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            d3Transition.interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = d3Selection.select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      d3Selection.customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (d3Selection.event.touches) { if (d3Selection.event.changedTouches.length < d3Selection.event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = d3Selection.event.target.__data__.type,\n        mode = (d3Selection.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && d3Selection.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = d3Selection.mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = d3Selection.select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (d3Selection.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = d3Selection.select(d3Selection.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      d3Drag.dragDisable(d3Selection.event.view);\n    }\n\n    nopropagation();\n    d3Transition.interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = d3Selection.mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (d3Selection.event.touches) {\n        if (d3Selection.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        d3Drag.dragEnable(d3Selection.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (d3Selection.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-brush/build/d3-brush.js\n// module id = 40\n// module chunks = 0","// https://d3js.org/d3-drag/ Version 1.1.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-selection')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-selection'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3));\n}(this, (function (exports,d3Dispatch,d3Selection) { 'use strict';\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n};\n\nvar nodrag = function(view) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch$$1) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch$$1;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: d3Selection.event.x, y: d3Selection.event.y} : d;\n}\n\nfunction touchable() {\n  return \"ontouchstart\" in this;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = d3Dispatch.dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), d3Selection.mouse, this, arguments);\n    if (!gesture) return;\n    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(d3Selection.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = d3Selection.event.clientX;\n    mousedowny = d3Selection.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = d3Selection.event.clientX - mousedownx, dy = d3Selection.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(d3Selection.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = d3Selection.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, d3Selection.touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = d3Selection.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = d3Selection.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!d3Selection.customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      d3Selection.customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nexports.drag = drag;\nexports.dragDisable = nodrag;\nexports.dragEnable = yesdrag;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-drag/build/d3-drag.js\n// module id = 41\n// module chunks = 0"],"sourceRoot":""}
=======
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///britecharts.min.js","webpack:///webpack/bootstrap 010598eb78960021eb64","webpack:///./src/bundle.js","webpack:///./src/charts/bar.js","webpack:///./~/d3-array/build/d3-array.js","webpack:///./~/d3-ease/build/d3-ease.js","webpack:///./~/d3-axis/build/d3-axis.js","webpack:///./~/d3-color/build/d3-color.js","webpack:///./~/d3-dispatch/build/d3-dispatch.js","webpack:///./~/d3-format/build/d3-format.js","webpack:///./~/d3-scale/build/d3-scale.js","webpack:///./~/d3-collection/build/d3-collection.js","webpack:///./~/d3-interpolate/build/d3-interpolate.js","webpack:///./~/d3-time/build/d3-time.js","webpack:///./~/d3-time-format/build/d3-time-format.js","webpack:///./~/d3-selection/build/d3-selection.js","webpack:///./~/d3-transition/build/d3-transition.js","webpack:///./~/d3-timer/build/d3-timer.js","webpack:///./src/charts/helpers/text.js","webpack:///./src/charts/helpers/exportChart.js","webpack:///./src/charts/helpers/colors.js","webpack:///./src/charts/helpers/constants.js","webpack:///./src/charts/helpers/serializeWithStyles.js","webpack:///./~/base-64/base64.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/charts/donut.js","webpack:///./~/d3-shape/build/d3-shape.js","webpack:///./~/d3-path/build/d3-path.js","webpack:///./src/charts/helpers/common.js","webpack:///./src/charts/legend.js","webpack:///./src/charts/line.js","webpack:///./src/charts/helpers/timeAxis.js","webpack:///./src/charts/helpers/formatHelpers.js","webpack:///./src/charts/tooltip.js","webpack:///./src/charts/mini-tooltip.js","webpack:///./src/charts/sparkline.js","webpack:///./src/charts/stacked-area.js","webpack:///./~/lodash.assign/index.js","webpack:///./src/charts/grouped-bar.js","webpack:///./src/charts/stacked-bar.js","webpack:///./src/charts/step.js","webpack:///./src/charts/brush.js","webpack:///./~/d3-brush/build/d3-brush.js","webpack:///./~/d3-drag/build/d3-drag.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","colors","brush","step","stackedBar","groupedBar","stackedArea","sparkline","miniTooltip","tooltip","line","legend","donut","bar","undefined","_bar","_bar2","_donut","_donut2","_legend","_legend2","_line","_line2","_tooltip","_tooltip2","_miniTooltip","_miniTooltip2","_sparkline","_sparkline2","_stackedArea","_stackedArea2","_groupedBar","_groupedBar2","_stackedBar","_stackedBar2","_step","_step2","_brush","_brush2","_colors","_colors2","__WEBPACK_AMD_DEFINE_RESULT__","require","d3Array","d3Ease","d3Axis","d3Color","d3Dispatch","d3Format","d3Scale","d3Selection","textHelper","_require","exportChart","colorHelper","PERCENTAGE_FORMAT","NUMBER_FORMAT","_selection","each","_data","chartWidth","width","margin","left","right","yAxisPaddingBetweenChart","chartHeight","height","top","bottom","_cleanData","cleanData","data","dataZeroed","buildScales","buildAxis","buildSVG","drawGridLines","drawBars","drawAxis","enablePercentageLabels","drawPercentageLabels","horizontal","xAxis","axisBottom","xScale","ticks","numOfHorizontalTicks","valueLabelFormat","tickSizeInner","yAxis","axisLeft","yScale","numOfVerticalTicks","buildContainerGroups","container","svg","append","classed","attr","percentageAxis","Math","min","percentageAxisToMaxRatio","max","getValue","scaleLinear","domain","rangeRound","scaleBand","map","getName","padding","colorList","reverseColorList","d","reverse","_ref9","i","name","color","colorSchema","length","_ref10","colorMap","item","filter","_ref11","select","originalData","valueLabel","String","nameLabel","wrapText","text","containerWidth","wrapTextWithEllipses","yAxisLineWrapLimit","selectAll","drawHorizontalBars","bars","enter","bandwidth","_ref12","_ref13","on","dispatcher","_ref14","darker","mouse","_ref15","merge","_ref16","_ref17","drawAnimatedHorizontalBars","_ref18","_ref19","_ref20","_ref21","_ref22","transition","duration","animationDuration","delay","interBarDelay","ease","_ref23","drawAnimatedVerticalBars","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","drawVerticalBars","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","_ref39","labelXPosition","_percentageLabelHorizontalX","_percentageLabelVerticalX","labelYPosition","_percentageLabelHorizontalY","_percentageLabelVerticalY","_percentageLabelHorizontalFormatValue","_percentageLabelVerticalFormatValue","percentageLabels","percentageLabelSize","isAnimated","exit","style","remove","drawHorizontalGridLines","drawVerticalGridLines","maskGridLines","xAxisPadding","drawVerticalExtendedLine","baseLine","drawHorizontalExtendedLine","singleColors","aloeGreen","percentageLabelMargin","horizontalLabelFormat","verticalLabelFormat","easeQuadInOut","dispatch","_ref","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","format","_ref8","parseFloat","filename","_x","arguments","apply","title","usePercentage","global","ascendingComparator","f","x","ascending","pair","a","b","tickIncrement","start","stop","count","power","floor","log","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","NaN","bisector","compare","lo","hi","mid","ascendingBisect","bisectRight","bisectLeft","pairs","array","n","Array","cross","values0","values1","reduce","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","sum","isNaN","deviation","v","sqrt","extent","prototype","slice","constant","identity","range","ceil","isFinite","sturges","LN2","histogram","xz","x0","x1","tz","threshold","isArray","shift","pop","bin","bins","push","_","thresholds","quantile","value1","freedmanDiaconis","sort","scott","median","numbers","arrays","merged","j","permute","indexes","permutes","scan","xi","xj","shuffle","t","random","transpose","matrix","row","zip","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","exponent","polyIn","custom","e","polyOut","polyInOut","PI","overshoot","backIn","s","backOut","backInOut","tau","amplitude","period","elasticIn","asin","elasticOut","elasticInOut","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","translateX","translateY","y","center","scale","offset","round","entering","__axis","axis","orient","context","tickValues","tickArguments","tickFormat","spacing","tickPadding","range0","range1","position","copy","selection","path","tick","order","tickExit","tickEnter","insert","k","epsilon","transform","getAttribute","parentNode","tickSizeOuter","tickSize","axisTop","axisRight","extend","parent","definition","create","key","Color","trim","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","hasOwnProperty","r","g","rgbConvert","o","rgb","opacity","h","l","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","constructor","brighter","reI","reN","reP","RegExp","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","toString","Kn","A","B","cosh","sinh","Error","Dispatch","parseTypenames","typenames","types","split","indexOf","type","get","set","callback","noop","concat","typename","T","that","args","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","zero","comma","precision","formatTypes","defaultLocale","locale","formatLocale","formatPrefix","prefixExponent","formatDecimal","toExponential","coefficient","formatGroup","grouping","thousands","substring","join","formatNumerals","numerals","replace","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","%","toFixed","X","toUpperCase","prefixes","newFormat","valuePrefix","prefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","charCodeAt","decimal","group","Infinity","currency","test","percent","precisionFixed","precisionPrefix","precisionRound","formatDefaultLocale","d3Collection","d3Interpolate","d3Time","d3TimeFormat","ordinal","range$$1","index","unknown","implicit","has","band","rescale","paddingInner","paddingOuter","ordinalRange","pointish","point","deinterpolateLinear","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","d0","d1","r0","r1","polymap","source","target","interpolate","clamp","continuous","piecewise","output","input","interpolate$$1","unit","invert","map$1","interpolateRound","linearish","nice","interpolateNumber","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","u","raise","quantile$1","invertExtent","quantiles","quantize","date","Date","number$1","calendar","year","month","week","day","hour","minute","second","millisecond","format$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickInterval","interval","tickIntervals","durationYear","every","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","time","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeMillisecond","timeFormat","utcTime","utcYear","utcMonth","utcWeek","utcDay","utcHour","utcMinute","utcSecond","utcMillisecond","utcFormat","UTC","category10","category20b","category20c","category20","cubehelix$1","interpolateCubehelixLong","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","scalePoint","scaleIdentity","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","Map","object","createObject","setObject","createMap","setMap","map$$1","Set","add","property","clear","keys","entries","size","empty","nest","depth","createResult","setResult","rollup","sortValues","keyValue","valuesByKey","result","sortKey","sortKeys","proto","basis","v0","v1","v2","v3","exponential","hue","gamma","nogamma","rgbSpline","spline","color$$1","one","parseCss","cssNode","document","createElement","cssRoot","documentElement","cssView","defaultView","getComputedStyle","appendChild","getPropertyValue","removeChild","decompose","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","interpolateTransform","parse","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","q","rotate","skewX","scaleX","scaleY","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelixGamma","cubehelix$$1","basis$1","basisClosed","rgb$1","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","nb","na","setTime","reA","reB","string","am","bm","bs","bi","lastIndex","degrees","atan","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","zoom","p0","p1","S","ux0","uy0","w0","ux1","uy1","w1","dx","dy","d2","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","samples","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateObject","interpolateString","interpolateZoom","interpolateRgb","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","newInterval","floori","offseti","field","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","milliseconds","getUTCSeconds","seconds","getMinutes","minutes","getHours","hours","days","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","setMonth","getMonth","getFullYear","months","setFullYear","years","setUTCSeconds","getUTCMinutes","utcMinutes","setUTCMinutes","getUTCHours","utcHours","utcDays","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","setUTCMonth","getUTCMonth","getUTCFullYear","utcMonths","setUTCFullYear","utcYears","timeInterval","timeMilliseconds","utcMilliseconds","timeSeconds","utcSeconds","timeMinutes","timeHours","timeDays","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonths","timeYears","utcWeeks","localDate","H","M","L","utcDate","newYear","formats","pad","pads","charAt","newParse","newDate","parseSpecifier","w","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","locale_months","formatPeriod","locale_periods","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","dateTime","periods","shortDays","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","Y","formatFullYear","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcParse","requote","requoteRe","names","numberRe","percentRe","getMilliseconds","getSeconds","getUTCMilliseconds","locale$1","timeParse","formatIsoNative","toISOString","parseIsoNative","-","0","isoSpecifier","formatIso","parseIso","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","Local","nextId","filterContextListener","listener","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","onRemove","__on","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","sourceEvent","none","EnterNode","datum","_next","_parent","bindIndex","update","node","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","keyPrefix","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","nextSibling","lower","previousSibling","insertBefore","firstChild","constantNull","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","namespaces","xlink","xml","xmlns","namespace","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","changedTouches","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","child","next","selection_data","bind","enterGroup","updateGroup","exitGroup","previous","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","getAttributeNS","selection_style","selection_property","splice","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","before","selection_remove","selection_datum","selection_dispatch","html","touch","touches","identifier","points","d3Timer","init","schedule","__transition","state","CREATED","STARTING","self","elapsed","SCHEDULED","timer","restart","schedules","STARTED","timeout","RUNNING","ENDED","tween","ENDING","tweenRemove","tween0","tween1","tweenFunction","tweenValue","_id","value00","interpolate0","value10","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","onFunction","on0","on1","sit","removeFunction","styleRemoveEnd","styleTween","Transition","_name","newId","inherit","timing","defaultTiming","now","emptyOn","emptyTween","interrupt","active","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","transition_selectAll","children","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","selection_transition","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timerFlush","frame","taskHead","wake","clockLast","nap","poke","pokeDelay","taskTail","sleep","clearTimeout","setTimeout","clearInterval","setInterval","performance","requestAnimationFrame","TypeError","timeout$1","interval$1","total","wrapConfig","lineHeight","smallTextOffset","smallTextLineHeightRatio","smallTextRatio","valueClassName","labelClassName","defaultTextSize","defaultFontFace","xOffset","fontSize","availableWidth","words","word","lineNumber","smallLineHeight","smallFontSize","tspan","getComputedTextLength","xpos","limit","getTextWidth","fontFace","getContext","font","measureText","d3svg","img","createImage","convertSvgToHtml","onload","handleImageLoad","createCanvas","addBackground","config","styleBackgroundString","serializer","serializeWithStyles","initializeSerializer","formatHtmlByBrowser","prependTitle","canvas","svgHtml","Image","src","imageSourceBase","b64EncodeUnicode","drawImageOnCanvas","image","drawImage","downloadCanvas","defaultFilename","extensionType","url","toDataURL","link","href","download","body","click","navigator","userAgent","search","constants","lineGradientId","preventDefault","svgWidth","britechartsGreySchema","colorSchemas","titleTopOffset","titleFontFamily","titleFontSize","encoder","btoa","encode","str","encodeURIComponent","fromCharCode","styleClass","chartBackground","britechartGradients","greenBlueGradient","orangePinkGradient","bluePurpleGradient","britechartsColorSchema","extendedOrangeColorSchema","extendedBlueColorSchema","extendedLightBlueColorSchema","extendedGreenColorSchema","extendedYellowColorSchema","extendedPinkColorSchema","extendedPurpleColorSchema","extendedRedColorSchema","colorSchemasHuman","colorGradients","colorGradientsHuman","axisTimeCombinations","MINUTE_HOUR","HOUR_DAY","DAY_MONTH","MONTH_YEAR","timeBenchmarks","ONE_AND_A_HALF_YEARS","ONE_YEAR","ONE_DAY","computeDefaultStyleByTagName","tagName","defaultStyle","computedStyle","forEach","getDefaultStyleByTagName","defaultStylesByTagName","elem","cssTexts","elements","nodeType","Node","ELEMENT_NODE","el","noStyleTags","cssText","cssPropName","outerHTML","console","BASE","HEAD","HTML","META","NOFRAME","NOSCRIPT","PARAM","SCRIPT","STYLE","TITLE","tagNames","freeExports","freeGlobal","InvalidCharacterError","message","TABLE","REGEX_SPACE_CHARACTERS","decode","bitStorage","buffer","bitCounter","base64","version","webpackPolyfill","deprecate","paths","d3Shape","_require2","calculatePercent","buildLayout","buildColorScale","buildShape","drawSlices","initTooltip","highlightedSliceId","initHighlightSlice","colorScale","layout","pie","padAngle","paddingAngle","getQuantity","sortComparator","shape","arc","innerRadius","internalRadius","padRadius","externalRadius","acc","quantityLabel","quantity","percentage","percentageLabel","totalQuantity","sumValues","dataWithPercentages","percentageFormat","cleanLegend","drawLegend","legendWidth","slices","arcTransitionDuration","tweenArc","newSlices","storeAngle","reduceOuterRadius","getSliceFill","handleMouseOver","handleMouseOut","pieDrawingTransitionDuration","tweenLoading","filterHighlightedSlice","highlightedSlice","tweenGrowth","radiusHoverOffset","hasFixedHighlightedSlice","pieHoverTransitionDuration","_current","outerRadius","startAngle","endAngle","highlightSliceById","d3Path","acos","arcInnerRadius","arcOuterRadius","arcStartAngle","arcEndAngle","arcPadAngle","intersect","y0","y1","x2","y2","x3","y3","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","ox","oy","x11","y11","x00","y00","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","_context","Radial","curve","_curve","curveRadial","radial","radialLine","angle","radius","bezierCurveTo","_x0","_x1","_y0","_y1","Basis","BasisClosed","BasisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","s1","slope2","point$3","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","series","a0","a1","da","moveTo","a01","a11","a00","a10","da0","da1","ap","rp","cornerRadius","rc0","rc1","oc","ax","ay","bx","by","kc","lc","lineTo","closePath","centroid","areaStart","areaEnd","lineStart","_point","lineEnd","curveLinear","defined0","defined","x$$1","y$$1","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","arcs","pa","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle","draw","tan30","tan30_2","diamond","ka","kr","kx","ky","star","square","sqrt3","triangle","wye","symbols","_x3","_x4","_y3","_y4","basisOpen","_y","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","none$1","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","sk","skj0","skj1","sums","descending$1","insideOut","tops","bottoms","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","Path","tauEpsilon","quadraticCurveTo","arcTo","x21","y21","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","decimals","isInteger","drawHorizontalLegend","drawVerticalLegend","adjustLines","lineWidth","lineWidthSpace","centerLegendOnSVG","splitInLines","legendGroupSize","emptySpace","cleanFadedLines","isFadedClassName","markerSize","getId","horizontalOffset","verticalOffset","labelWidth","textSize","getLineElementMargin","markerYOffset","getCircleFill","textLetterSpacing","getFormattedQuantity","valueReservedSpace","numberLetterSpacing","fadeLinesBut","exceptionItemId","classToFade","marginRatio","legendEntries","numberOfEntries","newLine","lastEntry","numberFormat","clearHighlight","highlight","entryId","_require3","getXAxisSettings","_require4","getLocaleDateFormatter","_require5","formatIntegerValue","formatDecimalValue","dataByTopic","dataByDate","buildGradient","drawLines","createMaskingClip","shouldShowTooltip","drawVerticalMarker","drawHoverOverlay","addMouseEvents","handleMouseMove","adjustYTickLabels","getFormattedValue","dataTimeSpan","yTickNumber","verticalTicks","minor","major","forceAxisSettings","forcedXFormat","forcedXTicks","_getXAxisSettings","xMonthAxis","singleLineGradientColors","minX","dates","maxX","maxY","minY","yScaleBottomValue","getTopic","topicColorMap","memo","flatData","topic","topicName","topicNameLabel","topicLabel","dateLabel","topics","kv","cleanDataPointHighlights","verticalMarkerContainer","maskingRectangle","monthAxisPadding","lines","topicLine","getLineColor","xTicks","yTicks","grid","horizontalGridLines","verticalGridLines","overlay","overlayColor","verticalMarkerLine","findOutNearestDate","getTime","getMouseXPosition","getNearestDataPoint","mouseX","dateFromInvertedX","bisectDate","dataEntryIndex","dataEntryForXPosition","previousDataEntryForXPosition","nearestDataPoint","xPositionOffset","dataPoint","dataPointXPosition","moveVerticalMarker","highlightDataPoints","marker","circleSize","verticalMarkerXPosition","tooltipThreshold","aspectRatio","forceAxisFormat","lineGradient","_defineProperty","enumerable","configurable","writable","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Symbol","iterator","done","err","_typeof","_settingsToMajorTickM","singleTickWidth","horizontalTickSpacing","minEntryNumForDayFormat","formatMap","daymonth","localeTimeMap","settingsToMajorTickMap","getAxisSettingsFromTimeSpan","timeSpan","settings","getMaxNumOfHorizontalTicks","dataPointNumber","ticksForWidth","timeUnit","options","formatter","Intl","DateTimeFormat","firstDate","lastDate","dateTimeSpan","_settings$split","_settings$split2","majorTickValue","minorTickValue","getValueSize","valueRangeLimits","small","medium","integerValueFormats","decimalValueFormats","large","drawTooltip","hide","cleanContent","tooltipBody","tooltipTextContainer","tooltipWidth","tooltipHeight","tooltipBorderRadius","bodyFillColor","borderStrokeColor","tooltipTitle","titleFillColor","tooltipDivider","textFillColor","getTooltipPosition","mouseY","tooltipX","tooltipY","tooltipOffset","getValueText","valueText","missingValue","resetSizeAndPositionPointers","ttTextY","ttTextX","updateTopicContent","tooltipRight","tooltipLeftText","tooltipRightText","elementText","tooltipTextColor","textWrap","tooltipMaxTopicLength","getBBox","circleYOffset","updatePositionAndSize","xPosition","yPosition","_getTooltipPosition","_getTooltipPosition2","mouseChaseDuration","updateTitle","tooltipTitleText","formatDate","defaultAxisSettings","localeOptions","monthDayYearFormat","monthDayHourFormat","_sortByForceOrder","forceOrder","orderName","_sortByAlpha","entryLineLimit","updateContent","updateTooltip","show","colorMapping","forceDateRange","tooltipBackground","backgroundBorderRadius","getMaxLengthLine","_len","texts","_key","textSizes","parentChartWidth","parentChartHeight","hasEnoughHorizontalRoom","hasEnoughVerticalRoom","positionX","positionY","hideTooltip","showTooltip","textLineHeight","valueLineHeight","valueTextSize","valueTextLineHeight","defaultDy","temporalHeight","tooltipValue","tooltipName","nameTextFillColor","valueTextFillColor","valueTextWeight","tooltipValueFormat","mousePosition","parentChartSize","chartSize","createGradients","drawLine","drawArea","drawEndMarker","metadataGroup","areaGradient","clipDuration","assign","uniq","arrArg","pos","getDataByDate","buildLayers","drawStackedAreas","dataSpan","dataByDateFormatted","entry","dataByDateZeroed","initialTotalsObject","totals","formatOrder","stack3","layersInitial","layers","otherIndex","other","getMaxValueByDate","categoryColorMap","yTickTextXOffset","yTickTextYOffset","areaAnimationDelays","areaAnimationDuration","areaOpacity","verticalMarker","eraseDataPointHighlights","maxValueByDate","vals","setEpsilon","accumulator","maxAreaNumber","areaAnimationDelayStep","keyLabel","func","thisArg","baseTimes","iteratee","overArg","arg","arrayLikeKeys","inherited","isArguments","skipIndexes","isIndex","assignValue","objValue","eq","baseKeys","isPrototype","nativeKeys","baseRest","nativeMax","otherArgs","copyObject","props","customizer","newValue","createAssigner","assigner","sources","guard","isIterateeCall","MAX_SAFE_INTEGER","reIsUint","isObject","isArrayLike","Ctor","objectProto","isArrayLikeObject","propertyIsEnumerable","objectToString","argsTag","isLength","isFunction","isObjectLike","tag","funcTag","genTag","nonEnumShadows","valueOf","prepareData","drawGroupedBar","getGroup","transformedData","ret","groupLabel","handleBarsMouseOver","handleBarsMouseOut","yMax","yScale2","xScale2","horizontalBarsTween","verticalBarsTween","animationDelays","getMousePosition","adjustedMouseX","nearest","found","find","getNearestDataPoint2","adjustedMouseY","_getMousePosition","_getMousePosition2","moveTooltipOriginXY","originXPosition","originYPosition","maxBarNumber","animationDelayStep","nameLabelFormat","drawStackedBar","stacks","stackLabel","dataInitial","getStack","dataByValueParsed","stackedArray","_this","_this2","drawSteps","yTickPadding","yAxisTickFormat","getKey","xAxisLabel","xAxisLabelOffset","yAxisLabel","yAxisLabelOffset","steps","_toConsumableArray","arr2","from","d3Brush","timeAxisHelper","cloneData","buildBrush","drawBrush","drawHandles","_timeAxisHelper$getXA","brushX","handleBrush","handleBrushEnded","gradient","dataToClone","JSON","stringify","chartBrush","handleFillColor","handle","dateExtent","onBrush","move","setBrushByDates","dateA","dateB","dateRange","d3Drag","d3Transition","nopropagation","stopImmediatePropagation","defaultFilter","button","defaultExtent","__brush","brushSelection","dim","brush$1","brushY","initialize","cursors","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","shifting","lockX","lockY","moving","noevent","point0","mode","MODE_SPACE","MODE_DRAG","signX","e0","e1","signY","N","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touchending","dragEnable","view","keydowned","keyCode","keyupped","altKey","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","listeners","selection1","selection0","starting","BrushEvent","xy","XY","nw","ne","se","sw","yesdrag","noclick","MozUserSelect","__noselect","DragEvent","subject","dispatch$$1","defaultContainer","defaultSubject","nodrag","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","mousemoving","gestures","sublisteners"],"mappings":"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","file":"britecharts.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"britecharts\"] = factory();\n\telse\n\t\troot[\"britecharts\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"britecharts\"] = factory();\n\telse\n\t\troot[\"britecharts\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t        value: true\n\t});\n\texports.colors = exports.brush = exports.step = exports.stackedBar = exports.groupedBar = exports.stackedArea = exports.sparkline = exports.miniTooltip = exports.tooltip = exports.line = exports.legend = exports.donut = exports.bar = undefined;\n\t\n\tvar _bar = __webpack_require__(1);\n\t\n\tvar _bar2 = _interopRequireDefault(_bar);\n\t\n\tvar _donut = __webpack_require__(23);\n\t\n\tvar _donut2 = _interopRequireDefault(_donut);\n\t\n\tvar _legend = __webpack_require__(27);\n\t\n\tvar _legend2 = _interopRequireDefault(_legend);\n\t\n\tvar _line = __webpack_require__(28);\n\t\n\tvar _line2 = _interopRequireDefault(_line);\n\t\n\tvar _tooltip = __webpack_require__(31);\n\t\n\tvar _tooltip2 = _interopRequireDefault(_tooltip);\n\t\n\tvar _miniTooltip = __webpack_require__(32);\n\t\n\tvar _miniTooltip2 = _interopRequireDefault(_miniTooltip);\n\t\n\tvar _sparkline = __webpack_require__(33);\n\t\n\tvar _sparkline2 = _interopRequireDefault(_sparkline);\n\t\n\tvar _stackedArea = __webpack_require__(34);\n\t\n\tvar _stackedArea2 = _interopRequireDefault(_stackedArea);\n\t\n\tvar _groupedBar = __webpack_require__(36);\n\t\n\tvar _groupedBar2 = _interopRequireDefault(_groupedBar);\n\t\n\tvar _stackedBar = __webpack_require__(37);\n\t\n\tvar _stackedBar2 = _interopRequireDefault(_stackedBar);\n\t\n\tvar _step = __webpack_require__(38);\n\t\n\tvar _step2 = _interopRequireDefault(_step);\n\t\n\tvar _brush = __webpack_require__(39);\n\t\n\tvar _brush2 = _interopRequireDefault(_brush);\n\t\n\tvar _colors = __webpack_require__(18);\n\t\n\tvar _colors2 = _interopRequireDefault(_colors);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.bar = _bar2.default;\n\texports.donut = _donut2.default;\n\texports.legend = _legend2.default;\n\texports.line = _line2.default;\n\texports.tooltip = _tooltip2.default;\n\texports.miniTooltip = _miniTooltip2.default;\n\texports.sparkline = _sparkline2.default;\n\texports.stackedArea = _stackedArea2.default;\n\texports.groupedBar = _groupedBar2.default;\n\texports.stackedBar = _stackedBar2.default;\n\texports.step = _step2.default;\n\texports.brush = _brush2.default;\n\texports.colors = _colors2.default;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Axis = __webpack_require__(4);\n\t    var d3Color = __webpack_require__(5);\n\t    var d3Dispatch = __webpack_require__(6);\n\t    var d3Format = __webpack_require__(7);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t\n\t    var textHelper = __webpack_require__(16);\n\t\n\t    var _require = __webpack_require__(17),\n\t        exportChart = _require.exportChart;\n\t\n\t    var colorHelper = __webpack_require__(18);\n\t\n\t    var PERCENTAGE_FORMAT = '%';\n\t    var NUMBER_FORMAT = ',f';\n\t\n\t    /**\n\t     * @typedef BarChartData\n\t     * @type {Object[]}\n\t     * @property {Number} value        Value of the group (required)\n\t     * @property {String} name         Name of the group (required)\n\t     *\n\t     * @example\n\t     * [\n\t     *     {\n\t     *         value: 1,\n\t     *         name: 'glittering'\n\t     *     },\n\t     *     {\n\t     *         value: 1,\n\t     *         name: 'luminous'\n\t     *     }\n\t     * ]\n\t     */\n\t\n\t    /**\n\t     * Bar Chart reusable API class that renders a\n\t     * simple and configurable bar chart.\n\t     *\n\t     * @module Bar\n\t     * @tutorial bar\n\t     * @requires d3-array, d3-axis, d3-dispatch, d3-scale, d3-selection\n\t     *\n\t     * @example\n\t     * var barChart = bar();\n\t     *\n\t     * barChart\n\t     *     .height(500)\n\t     *     .width(800);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(barChart);\n\t     *\n\t     */\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 20,\n\t            right: 20,\n\t            bottom: 30,\n\t            left: 40\n\t        },\n\t            width = 960,\n\t            height = 500,\n\t            data = void 0,\n\t            dataZeroed = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            xScale = void 0,\n\t            yScale = void 0,\n\t            colorSchema = colorHelper.singleColors.aloeGreen,\n\t            colorList = void 0,\n\t            colorMap = void 0,\n\t            numOfVerticalTicks = 5,\n\t            numOfHorizontalTicks = 5,\n\t            percentageAxisToMaxRatio = 1,\n\t            enablePercentageLabels = false,\n\t            percentageLabelMargin = 7,\n\t            percentageLabelSize = 12,\n\t            horizontalLabelFormat = '.0%',\n\t            verticalLabelFormat = '.0f',\n\t            valueLabelFormat = NUMBER_FORMAT,\n\t            xAxis = void 0,\n\t            yAxis = void 0,\n\t            xAxisPadding = {\n\t            top: 0,\n\t            left: 0,\n\t            bottom: 0,\n\t            right: 0\n\t        },\n\t            yAxisPaddingBetweenChart = 10,\n\t            yAxisLineWrapLimit = 1,\n\t            horizontal = false,\n\t            svg = void 0,\n\t            isAnimated = false,\n\t            ease = d3Ease.easeQuadInOut,\n\t            animationDuration = 800,\n\t            interBarDelay = function interBarDelay(d, i) {\n\t            return 70 * i;\n\t        },\n\t            valueLabel = 'value',\n\t            nameLabel = 'name',\n\t            maskGridLines = void 0,\n\t            baseLine = void 0,\n\t            reverseColorList = true,\n\t\n\t\n\t        // Dispatcher object to broadcast the mouse events\n\t        // Ref: https://github.com/mbostock/d3/wiki/Internals#d3_dispatch\n\t        dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove'),\n\t\n\t\n\t        // extractors\n\t        getName = function getName(_ref) {\n\t            var name = _ref.name;\n\t            return name;\n\t        },\n\t            getValue = function getValue(_ref2) {\n\t            var value = _ref2.value;\n\t            return value;\n\t        },\n\t            _percentageLabelHorizontalX = function _percentageLabelHorizontalX(_ref3) {\n\t            var value = _ref3.value;\n\t            return xScale(value) + percentageLabelMargin;\n\t        },\n\t            _percentageLabelHorizontalY = function _percentageLabelHorizontalY(_ref4) {\n\t            var name = _ref4.name;\n\t            return yScale(name) + yScale.bandwidth() / 2 + percentageLabelSize * (3 / 8);\n\t        },\n\t            _percentageLabelVerticalX = function _percentageLabelVerticalX(_ref5) {\n\t            var name = _ref5.name;\n\t            return xScale(name);\n\t        },\n\t            _percentageLabelVerticalY = function _percentageLabelVerticalY(_ref6) {\n\t            var value = _ref6.value;\n\t            return yScale(value) - percentageLabelMargin;\n\t        },\n\t            _percentageLabelHorizontalFormatValue = function _percentageLabelHorizontalFormatValue(_ref7) {\n\t            var value = _ref7.value;\n\t            return d3Format.format(horizontalLabelFormat)(value);\n\t        },\n\t            _percentageLabelVerticalFormatValue = function _percentageLabelVerticalFormatValue(_ref8) {\n\t            var value = _ref8.value;\n\t            return d3Format.format(verticalLabelFormat)(parseFloat(value) * 100);\n\t        };\n\t\n\t        /**\n\t         * This function creates the graph using the selection as container\n\t         * @param  {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {BarChartData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right - yAxisPaddingBetweenChart * 1.2;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t\n\t                var _cleanData = cleanData(_data);\n\t\n\t                data = _cleanData.data;\n\t                dataZeroed = _cleanData.dataZeroed;\n\t\n\t\n\t                buildScales();\n\t                buildAxis();\n\t                buildSVG(this);\n\t                drawGridLines();\n\t                drawBars();\n\t                drawAxis();\n\t                if (enablePercentageLabels) {\n\t                    drawPercentageLabels();\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates the d3 x and y axis, setting orientations\n\t         * @private\n\t         */\n\t        function buildAxis() {\n\t            if (!horizontal) {\n\t                xAxis = d3Axis.axisBottom(xScale);\n\t\n\t                yAxis = d3Axis.axisLeft(yScale).ticks(numOfVerticalTicks, valueLabelFormat);\n\t            } else {\n\t                xAxis = d3Axis.axisBottom(xScale).ticks(numOfHorizontalTicks, valueLabelFormat).tickSizeInner([-chartHeight]);\n\t\n\t                yAxis = d3Axis.axisLeft(yScale);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * Also applies the Margin convention\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + (margin.left + yAxisPaddingBetweenChart) + ', ' + margin.top + ')');\n\t\n\t            container.append('g').classed('grid-lines-group', true);\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('x-axis-group axis', true);\n\t            container.append('g').attr('transform', 'translate(' + -1 * yAxisPaddingBetweenChart + ', 0)').classed('y-axis-group axis', true);\n\t            container.append('g').classed('metadata-group', true);\n\t        }\n\t\n\t        /**\n\t         * Creates the x and y scales of the graph\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t            var percentageAxis = Math.min(percentageAxisToMaxRatio * d3Array.max(data, getValue));\n\t\n\t            if (!horizontal) {\n\t                xScale = d3Scale.scaleBand().domain(data.map(getName)).rangeRound([0, chartWidth]).padding(0.1);\n\t\n\t                yScale = d3Scale.scaleLinear().domain([0, percentageAxis]).rangeRound([chartHeight, 0]);\n\t            } else {\n\t                xScale = d3Scale.scaleLinear().domain([0, percentageAxis]).rangeRound([0, chartWidth]);\n\t\n\t                yScale = d3Scale.scaleBand().domain(data.map(getName)).rangeRound([chartHeight, 0]).padding(0.1);\n\t            }\n\t\n\t            if (reverseColorList) {\n\t                colorList = data.map(function (d) {\n\t                    return d;\n\t                }).reverse().map(function (_ref9, i) {\n\t                    var name = _ref9.name;\n\t                    return {\n\t                        name: name,\n\t                        color: colorSchema[i % colorSchema.length] };\n\t                });\n\t            } else {\n\t                colorList = data.map(function (d) {\n\t                    return d;\n\t                }).map(function (_ref10, i) {\n\t                    var name = _ref10.name;\n\t                    return {\n\t                        name: name,\n\t                        color: colorSchema[i % colorSchema.length] };\n\t                });\n\t            }\n\t\n\t            colorMap = function colorMap(item) {\n\t                return colorList.filter(function (_ref11) {\n\t                    var name = _ref11.name;\n\t                    return name === item;\n\t                })[0].color;\n\t            };\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart bar-chart', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Cleaning data adding the proper format\n\t         * @param  {BarChartData} originalData Data\n\t         * @private\n\t         */\n\t        function cleanData(originalData) {\n\t            var data = originalData.map(function (d) {\n\t                return {\n\t                    value: +d[valueLabel],\n\t                    name: String(d[nameLabel])\n\t                };\n\t            });\n\t            var dataZeroed = data.map(function (d) {\n\t                return {\n\t                    value: 0,\n\t                    name: String(d[nameLabel])\n\t                };\n\t            });\n\t\n\t            return { data: data, dataZeroed: dataZeroed };\n\t        }\n\t\n\t        /**\n\t         * Utility function that wraps a text into the given width\n\t         * @param  {D3Selection} text         Text to write\n\t         * @param  {Number} containerWidth\n\t         * @private\n\t         */\n\t        function wrapText(text, containerWidth) {\n\t            textHelper.wrapTextWithEllipses(text, containerWidth, 0, yAxisLineWrapLimit);\n\t        }\n\t\n\t        /**\n\t         * Draws the x and y axis on the svg object within their\n\t         * respective groups\n\t         * @private\n\t         */\n\t        function drawAxis() {\n\t            svg.select('.x-axis-group.axis').attr('transform', 'translate(0, ' + chartHeight + ')').call(xAxis);\n\t\n\t            svg.select('.y-axis-group.axis').call(yAxis);\n\t\n\t            svg.selectAll('.y-axis-group .tick text').call(wrapText, margin.left - yAxisPaddingBetweenChart);\n\t        }\n\t\n\t        /**\n\t         * Draws the bars along the x axis\n\t         * @param  {D3Selection} bars Selection of bars\n\t         * @return {void}\n\t         */\n\t        function drawHorizontalBars(bars) {\n\t            // Enter + Update\n\t            bars.enter().append('rect').classed('bar', true).attr('y', chartHeight).attr('x', 0).attr('height', yScale.bandwidth()).attr('width', function (_ref12) {\n\t                var value = _ref12.value;\n\t                return xScale(value);\n\t            }).attr('fill', function (_ref13) {\n\t                var name = _ref13.name;\n\t                return colorMap(name);\n\t            }).on('mouseover', function () {\n\t                dispatcher.call('customMouseOver', this);\n\t                d3Selection.select(this).attr('fill', function (_ref14) {\n\t                    var name = _ref14.name;\n\t                    return d3Color.color(colorMap(name)).darker();\n\t                });\n\t            }).on('mousemove', function (d) {\n\t                dispatcher.call('customMouseMove', this, d, d3Selection.mouse(this), [chartWidth, chartHeight]);\n\t            }).on('mouseout', function () {\n\t                dispatcher.call('customMouseOut', this);\n\t                d3Selection.select(this).attr('fill', function (_ref15) {\n\t                    var name = _ref15.name;\n\t                    return colorMap(name);\n\t                });\n\t            }).merge(bars).attr('x', 0).attr('y', function (_ref16) {\n\t                var name = _ref16.name;\n\t                return yScale(name);\n\t            }).attr('height', yScale.bandwidth()).attr('width', function (_ref17) {\n\t                var value = _ref17.value;\n\t                return xScale(value);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws and animates the bars along the x axis\n\t         * @param  {D3Selection} bars Selection of bars\n\t         * @return {void}\n\t         */\n\t        function drawAnimatedHorizontalBars(bars) {\n\t            // Enter + Update\n\t            bars.enter().append('rect').classed('bar', true).attr('x', 0).attr('y', chartHeight).attr('height', yScale.bandwidth()).attr('width', function (_ref18) {\n\t                var value = _ref18.value;\n\t                return xScale(value);\n\t            }).attr('fill', function (_ref19) {\n\t                var name = _ref19.name;\n\t                return colorMap(name);\n\t            }).on('mouseover', function () {\n\t                dispatcher.call('customMouseOver', this);\n\t                d3Selection.select(this).attr('fill', function (_ref20) {\n\t                    var name = _ref20.name;\n\t                    return d3Color.color(colorMap(name)).darker();\n\t                });\n\t            }).on('mousemove', function (d) {\n\t                dispatcher.call('customMouseMove', this, d, d3Selection.mouse(this), [chartWidth, chartHeight]);\n\t            }).on('mouseout', function () {\n\t                dispatcher.call('customMouseOut', this);\n\t                d3Selection.select(this).attr('fill', function (_ref21) {\n\t                    var name = _ref21.name;\n\t                    return colorMap(name);\n\t                });\n\t            });\n\t\n\t            bars.attr('x', 0).attr('y', function (_ref22) {\n\t                var name = _ref22.name;\n\t                return yScale(name);\n\t            }).attr('height', yScale.bandwidth()).transition().duration(animationDuration).delay(interBarDelay).ease(ease).attr('width', function (_ref23) {\n\t                var value = _ref23.value;\n\t                return xScale(value);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws and animates the bars along the y axis\n\t         * @param  {D3Selection} bars Selection of bars\n\t         * @return {void}\n\t         */\n\t        function drawAnimatedVerticalBars(bars) {\n\t            // Enter + Update\n\t            bars.enter().append('rect').classed('bar', true).attr('x', chartWidth).attr('y', function (_ref24) {\n\t                var value = _ref24.value;\n\t                return yScale(value);\n\t            }).attr('width', xScale.bandwidth()).attr('height', function (_ref25) {\n\t                var value = _ref25.value;\n\t                return chartHeight - yScale(value);\n\t            }).attr('fill', function (_ref26) {\n\t                var name = _ref26.name;\n\t                return colorMap(name);\n\t            }).on('mouseover', function () {\n\t                dispatcher.call('customMouseOver', this);\n\t                d3Selection.select(this).attr('fill', function (_ref27) {\n\t                    var name = _ref27.name;\n\t                    return d3Color.color(colorMap(name)).darker();\n\t                });\n\t            }).on('mousemove', function (d) {\n\t                dispatcher.call('customMouseMove', this, d, d3Selection.mouse(this), [chartWidth, chartHeight]);\n\t            }).on('mouseout', function () {\n\t                dispatcher.call('customMouseOut', this);\n\t                d3Selection.select(this).attr('fill', function (_ref28) {\n\t                    var name = _ref28.name;\n\t                    return colorMap(name);\n\t                });\n\t            }).merge(bars).attr('x', function (_ref29) {\n\t                var name = _ref29.name;\n\t                return xScale(name);\n\t            }).attr('width', xScale.bandwidth()).transition().duration(animationDuration).delay(interBarDelay).ease(ease).attr('y', function (_ref30) {\n\t                var value = _ref30.value;\n\t                return yScale(value);\n\t            }).attr('height', function (_ref31) {\n\t                var value = _ref31.value;\n\t                return chartHeight - yScale(value);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws the bars along the y axis\n\t         * @param  {D3Selection} bars Selection of bars\n\t         * @return {void}\n\t         */\n\t        function drawVerticalBars(bars) {\n\t            // Enter + Update\n\t            bars.enter().append('rect').classed('bar', true).attr('x', chartWidth).attr('y', function (_ref32) {\n\t                var value = _ref32.value;\n\t                return yScale(value);\n\t            }).attr('width', xScale.bandwidth()).attr('height', function (_ref33) {\n\t                var value = _ref33.value;\n\t                return chartHeight - yScale(value);\n\t            }).attr('fill', function (_ref34) {\n\t                var name = _ref34.name;\n\t                return colorMap(name);\n\t            }).on('mouseover', function () {\n\t                dispatcher.call('customMouseOver', this);\n\t                d3Selection.select(this).attr('fill', function (_ref35) {\n\t                    var name = _ref35.name;\n\t                    return d3Color.color(colorMap(name)).darker();\n\t                });\n\t            }).on('mousemove', function (d) {\n\t                dispatcher.call('customMouseMove', this, d, d3Selection.mouse(this), [chartWidth, chartHeight]);\n\t            }).on('mouseout', function () {\n\t                dispatcher.call('customMouseOut', this);\n\t                d3Selection.select(this).attr('fill', function (_ref36) {\n\t                    var name = _ref36.name;\n\t                    return colorMap(name);\n\t                });\n\t            }).merge(bars).attr('x', function (_ref37) {\n\t                var name = _ref37.name;\n\t                return xScale(name);\n\t            }).attr('y', function (_ref38) {\n\t                var value = _ref38.value;\n\t                return yScale(value);\n\t            }).attr('width', xScale.bandwidth()).attr('height', function (_ref39) {\n\t                var value = _ref39.value;\n\t                return chartHeight - yScale(value);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws percentage labels at the end of each bar\n\t         * @private\n\t         * @return {void}\n\t         */\n\t        function drawPercentageLabels() {\n\t            var labelXPosition = horizontal ? _percentageLabelHorizontalX : _percentageLabelVerticalX;\n\t            var labelYPosition = horizontal ? _percentageLabelHorizontalY : _percentageLabelVerticalY;\n\t            var text = horizontal ? _percentageLabelHorizontalFormatValue : _percentageLabelVerticalFormatValue;\n\t\n\t            var percentageLabels = svg.select('.metadata-group').append('g').classed('percentage-label-group', true).selectAll('text').data(data.reverse()).enter().append('text');\n\t\n\t            percentageLabels.classed('percentage-label', true).attr('x', labelXPosition).attr('y', labelYPosition).text(text).attr('font-size', percentageLabelSize + 'px');\n\t        }\n\t\n\t        /**\n\t         * Draws the bar elements within the chart group\n\t         * @private\n\t         */\n\t        function drawBars() {\n\t            var bars = void 0;\n\t\n\t            if (isAnimated) {\n\t                bars = svg.select('.chart-group').selectAll('.bar').data(dataZeroed);\n\t\n\t                if (!horizontal) {\n\t                    drawVerticalBars(bars);\n\t                } else {\n\t                    drawHorizontalBars(bars);\n\t                }\n\t\n\t                bars = svg.select('.chart-group').selectAll('.bar').data(data);\n\t\n\t                if (!horizontal) {\n\t                    drawAnimatedVerticalBars(bars);\n\t                } else {\n\t                    drawAnimatedHorizontalBars(bars);\n\t                }\n\t            } else {\n\t                bars = svg.select('.chart-group').selectAll('.bar').data(data);\n\t\n\t                if (!horizontal) {\n\t                    drawVerticalBars(bars);\n\t                } else {\n\t                    drawHorizontalBars(bars);\n\t                }\n\t            }\n\t\n\t            // Exit\n\t            bars.exit().transition().style('opacity', 0).remove();\n\t        }\n\t\n\t        /**\n\t         * Draws grid lines on the background of the chart\n\t         * @return void\n\t         */\n\t        function drawGridLines() {\n\t            if (!horizontal) {\n\t                drawVerticalGridLines();\n\t            } else {\n\t                drawHorizontalGridLines();\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the grid lines for an horizontal bar chart\n\t         * @return {void}\n\t         */\n\t        function drawHorizontalGridLines() {\n\t            maskGridLines = svg.select('.grid-lines-group').selectAll('line.vertical-grid-line').data(xScale.ticks(4)).enter().append('line').attr('class', 'vertical-grid-line').attr('y1', xAxisPadding.left).attr('y2', chartHeight).attr('x1', function (d) {\n\t                return xScale(d);\n\t            }).attr('x2', function (d) {\n\t                return xScale(d);\n\t            });\n\t\n\t            drawVerticalExtendedLine();\n\t        }\n\t\n\t        /**\n\t         * Draws a vertical line to extend y-axis till the edges\n\t         * @return {void}\n\t         */\n\t        function drawVerticalExtendedLine() {\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-y-line').data([0]).enter().append('line').attr('class', 'extended-y-line').attr('y1', xAxisPadding.bottom).attr('y2', chartHeight).attr('x1', 0).attr('x2', 0);\n\t        }\n\t\n\t        /**\n\t         * Draws the grid lines for a vertical bar chart\n\t         * @return {void}\n\t         */\n\t        function drawVerticalGridLines() {\n\t            maskGridLines = svg.select('.grid-lines-group').selectAll('line.horizontal-grid-line').data(yScale.ticks(4)).enter().append('line').attr('class', 'horizontal-grid-line').attr('x1', xAxisPadding.left).attr('x2', chartWidth).attr('y1', function (d) {\n\t                return yScale(d);\n\t            }).attr('y2', function (d) {\n\t                return yScale(d);\n\t            });\n\t\n\t            drawHorizontalExtendedLine();\n\t        }\n\t\n\t        /**\n\t         * Draws a vertical line to extend x-axis till the edges\n\t         * @return {void}\n\t         */\n\t        function drawHorizontalExtendedLine() {\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-x-line').data([0]).enter().append('line').attr('class', 'extended-x-line').attr('x1', xAxisPadding.left).attr('x2', chartWidth).attr('y1', chartHeight).attr('y2', chartHeight);\n\t        }\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename) {\n\t            exportChart.call(exports, svg, filename);\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Bar Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            height = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {object} _x Margin object to get/set\n\t         * @return { margin | module} Current margin or Bar Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { width | module} Current width or Bar Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            width = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the horizontal direction of the chart\n\t         * @param  {number} _x Desired horizontal direction for the graph\n\t         * @return { horizontal | module} Current horizontal direction or Bar Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.horizontal = function (_x) {\n\t            if (!arguments.length) {\n\t                return horizontal;\n\t            }\n\t            horizontal = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n\t         * By default this is 'false'\n\t         *\n\t         * @param  {Boolean} _x Desired animation flag\n\t         * @return { isAnimated | module} Current isAnimated flag or Chart module\n\t         * @public\n\t         */\n\t        exports.isAnimated = function (_x) {\n\t            if (!arguments.length) {\n\t                return isAnimated;\n\t            }\n\t            isAnimated = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n\t         * We are going to expose this events:\n\t         * customMouseOver, customMouseMove and customMouseOut\n\t         *\n\t         * @return {module} Bar Chart\n\t         * @public\n\t         */\n\t        exports.on = function () {\n\t            var value = dispatcher.on.apply(dispatcher, arguments);\n\t\n\t            return value === dispatcher ? exports : value;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename, title) {\n\t            exportChart.call(exports, svg, filename, title);\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the colorSchema of the chart\n\t         * @param  {String[]} _x Desired colorSchema for the graph\n\t         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.colorSchema = function (_x) {\n\t            if (!arguments.length) {\n\t                return colorSchema;\n\t            }\n\t            colorSchema = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabelFormat to a percentage format if true (default false)\n\t         * @param  {boolean} _x     Should use percentage as value format\n\t         * @return { valueLabelFormat | module} Is percentage value format used or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.usePercentage = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabelFormat === PERCENTAGE_FORMAT;\n\t            }\n\t            if (_x) {\n\t                valueLabelFormat = PERCENTAGE_FORMAT;\n\t            } else {\n\t                valueLabelFormat = NUMBER_FORMAT;\n\t            }\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Configurable extension of the x axis\n\t         * if your max point was 50% you might want to show x axis to 60%, pass 1.2\n\t         * @param  {number} _x ratio to max data point to add to the x axis\n\t         * @return { ratio | module} Current ratio or Bar Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.percentageAxisToMaxRatio = function (_x) {\n\t            if (!arguments.length) {\n\t                return percentageAxisToMaxRatio;\n\t            }\n\t            percentageAxisToMaxRatio = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Default 10px. Offset between end of bar and start of the percentage bars\n\t         * @param  {number} _x percentage margin offset from end of bar\n\t         * @return {number | module}    Currnet offset or Bar Chart module to chain calls\n\t         */\n\t        exports.percentageLabelMargin = function (_x) {\n\t            if (!arguments.length) {\n\t                return percentageLabelMargin;\n\t            }\n\t            percentageLabelMargin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Default false. If true, adds percentage labels at the end of the bars\n\t         * @param  {Boolean} _x\n\t         * @return {Boolean | module}    Current value of enablePercentageLables or Bar Chart module to chain calls\n\t         */\n\t        exports.enablePercentageLabels = function (_x) {\n\t            if (!arguments.length) {\n\t                return enablePercentageLabels;\n\t            }\n\t            enablePercentageLabels = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Default 10. Space between y axis and chart\n\t         * @param  {number} _x space between y axis and chart\n\t         * @return {number| module}    Current value of yAxisPaddingBetweenChart or Bar Chart module to chain calls\n\t         */\n\t        exports.yAxisPaddingBetweenChart = function (_x) {\n\t            if (!arguments.length) {\n\t                return yAxisPaddingBetweenChart;\n\t            }\n\t            yAxisPaddingBetweenChart = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabel of the chart\n\t         * @param  {Number} _x Desired valueLabel for the graph\n\t         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabel;\n\t            }\n\t            valueLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the nameLabel of the chart\n\t         * @param  {Number} _x Desired nameLabel for the graph\n\t         * @return { nameLabel | module} Current nameLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.nameLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return nameLabel;\n\t            }\n\t            nameLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets whether the color list should be reversed or not\n\t         * @param  {boolean} _x     Should reverse the color list\n\t         * @return { boolean | module} Is color list being reversed\n\t         * @public\n\t         */\n\t        exports.reverseColorList = function (_x) {\n\t            if (!arguments.length) {\n\t                return reverseColorList;\n\t            }\n\t            reverseColorList = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-array/ Version 1.2.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse = stop < start,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  if (reverse) n = start, start = stop, stop = n;\n\t\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar quantile = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return quantile(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = quantile;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-ease/ Version 1.0.3. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tfunction linear(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\texports.easeLinear = linear;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-axis/ Version 1.0.6. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar slice = Array.prototype.slice;\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon = 1e-6;\n\t\n\tfunction translateX(x) {\n\t  return \"translate(\" + x + \",0)\";\n\t}\n\t\n\tfunction translateY(y) {\n\t  return \"translate(0,\" + y + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = scale.bandwidth() / 2;\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3,\n\t      k = orient === top || orient === left ? -1 : 1,\n\t      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n\t      transform = orient === top || orient === bottom ? translateX : translateY;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner)\n\t        .attr(y + \"1\", 0.5)\n\t        .attr(y + \"2\", 0.5));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(y, 0.5)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position(d)); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-color/ Version 1.0.3. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-dispatch/ Version 1.0.3. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar noop = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\texports.dispatch = dispatch;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-format/ Version 1.2.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatNumerals = function(numerals) {\n\t  return function(value) {\n\t    return value.replace(/[0-9]/g, function(i) {\n\t      return numerals[+i];\n\t    });\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tfunction formatSpecifier(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal,\n\t      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n\t      percent = locale.percent || \"%\";\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Perform the initial formatting.\n\t        var valueNegative = value < 0;\n\t        value = formatType(Math.abs(value), precision);\n\t\n\t        // If a negative value rounds to zero during formatting, treat as positive.\n\t        if (valueNegative && +value === 0) valueNegative = false;\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n\t        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n\t        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n\t        default: value = padding + valuePrefix + value + valueSuffix; break;\n\t      }\n\t\n\t      return numerals(value);\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale = formatLocale(definition);\n\t  exports.format = locale.format;\n\t  exports.formatPrefix = locale.formatPrefix;\n\t  return locale;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent(max) - exponent(step)) + 1;\n\t};\n\t\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-scale/ Version 1.0.5. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(2), __webpack_require__(9), __webpack_require__(10), __webpack_require__(7), __webpack_require__(11), __webpack_require__(12), __webpack_require__(5)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n\t}(this, (function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\t\n\tvar array = Array.prototype;\n\t\n\tvar map$1 = array.map;\n\tvar slice = array.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range$$1) {\n\t  var index = d3Collection.map(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range$$1 = range$$1 == null ? [] : slice.call(range$$1);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range$$1[(i - 1) % range$$1.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = d3Collection.map();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range$$1)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = d3Array.bisect(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = d3Interpolate.interpolate,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice.call(_), interpolate$$1 = d3Interpolate.interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n\t      return d3Format.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return d3Format.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    var d = domain(),\n\t        i = d.length - 1,\n\t        n = count == null ? 10 : count,\n\t        start = d[0],\n\t        stop = d[i],\n\t        step = d3Array.tickStep(start, stop, n);\n\t\n\t    if (step) {\n\t      step = d3Array.tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t      d[0] = Math.floor(start / step) * step;\n\t      d[i] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear() {\n\t  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant(b);\n\t}\n\t\n\tfunction reinterpolate(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log() {\n\t  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t        ? function(x) { return (raise(x, exponent) - a) / b; }\n\t        : constant(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise(b, exponent) - (a = raise(a, exponent));\n\t    return function(t) { return raise(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt() {\n\t  return pow().exponent(0.5);\n\t}\n\t\n\tfunction quantile$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[d3Array.bisect(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(d3Array.ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$1(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year, month, week, day, hour, minute, second, millisecond, format$$1) {\n\t  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format$$1(\".%L\"),\n\t      formatSecond = format$$1(\":%S\"),\n\t      formatMinute = format$$1(\"%I:%M\"),\n\t      formatHour = format$$1(\"%I %p\"),\n\t      formatDay = format$$1(\"%a %d\"),\n\t      formatWeek = format$$1(\"%b %d\"),\n\t      formatMonth = format$$1(\"%B\"),\n\t      formatYear = format$$1(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second,  1,      durationSecond],\n\t    [second,  5,  5 * durationSecond],\n\t    [second, 15, 15 * durationSecond],\n\t    [second, 30, 30 * durationSecond],\n\t    [minute,  1,      durationMinute],\n\t    [minute,  5,  5 * durationMinute],\n\t    [minute, 15, 15 * durationMinute],\n\t    [minute, 30, 30 * durationMinute],\n\t    [  hour,  1,      durationHour  ],\n\t    [  hour,  3,  3 * durationHour  ],\n\t    [  hour,  6,  6 * durationHour  ],\n\t    [  hour, 12, 12 * durationHour  ],\n\t    [   day,  1,      durationDay   ],\n\t    [   day,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month,  1,      durationMonth ],\n\t    [ month,  3,  3 * durationMonth ],\n\t    [  year,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second(date) < date ? formatMillisecond\n\t        : minute(date) < date ? formatSecond\n\t        : hour(date) < date ? formatMinute\n\t        : day(date) < date ? formatHour\n\t        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = d3Array.tickStep(start, stop, interval);\n\t        interval = millisecond;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format$$1(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format$$1));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = d3Color.cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range$$1) {\n\t  var n = range$$1.length;\n\t  return function(t) {\n\t    return range$$1[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\texports.scaleBand = band;\n\texports.scalePoint = point;\n\texports.scaleIdentity = identity;\n\texports.scaleLinear = linear;\n\texports.scaleLog = log;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow;\n\texports.scaleSqrt = sqrt;\n\texports.scaleQuantile = quantile$1;\n\texports.scaleQuantize = quantize;\n\texports.scaleThreshold = threshold;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$1;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-collection/ Version 1.0.3. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map$$1, depth) {\n\t    if (++depth > keys.length) return map$$1;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n\t    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map();\n\t}\n\t\n\tfunction setMap(map$$1, key, value) {\n\t  map$$1.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map.prototype;\n\t\n\tSet.prototype = set.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\texports.nest = nest;\n\texports.set = set;\n\texports.map = map;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-interpolate/ Version 1.1.4. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(5)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Color) { 'use strict';\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$1 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n\t}\n\t\n\tvar rgb$1 = ((function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t}))(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = d3Color.rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tvar array = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar number = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = value(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar string = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: number(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar value = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant(b)\n\t      : (t === \"number\" ? number\n\t      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)\n\t      : b instanceof d3Color.color ? rgb$1\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array\n\t      : isNaN(b) ? object\n\t      : number)(a, b);\n\t};\n\t\n\tvar round = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar zoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\texports.interpolate = value;\n\texports.interpolateArray = array;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = number;\n\texports.interpolateObject = object;\n\texports.interpolateRound = round;\n\texports.interpolateString = string;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = zoom;\n\texports.interpolateRgb = rgb$1;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-time/ Version 1.0.6. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar t0 = new Date;\n\tvar t1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0.setTime(+start), t1.setTime(+end);\n\t      floori(t0), floori(t1);\n\t      return Math.floor(count(t0, t1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond = 1e3;\n\tvar durationMinute = 6e4;\n\tvar durationHour = 36e5;\n\tvar durationDay = 864e5;\n\tvar durationWeek = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t  if (offset < 0) offset += durationHour;\n\t  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-time-format/ Version 2.0.5. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(11)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Time) { 'use strict';\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.timeFormat = locale$1.format;\n\t  exports.timeParse = locale$1.parse;\n\t  exports.utcFormat = locale$1.utcFormat;\n\t  exports.utcParse = locale$1.utcParse;\n\t  return locale$1;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\texports.timeFormatDefaultLocale = defaultLocale;\n\texports.timeFormatLocale = formatLocale;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-selection/ Version 1.0.5. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t};\n\t\n\tfunction none() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar defaultView = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  var node;\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : defaultView(node = this.node())\n\t          .getComputedStyle(node, null)\n\t          .getPropertyValue(name);\n\t};\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window = defaultView(node),\n\t      event = window.CustomEvent;\n\t\n\t  if (event) {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\texports.creator = creator;\n\texports.local = local;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = defaultView;\n\texports.customEvent = customEvent;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-transition/ Version 1.0.4. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(13), __webpack_require__(6), __webpack_require__(15), __webpack_require__(10), __webpack_require__(5), __webpack_require__(3)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-timer', 'd3-interpolate', 'd3-color', 'd3-ease'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n\t}(this, (function (exports,d3Selection,d3Dispatch,d3Timer,d3Interpolate,d3Color,d3Ease) { 'use strict';\n\t\n\tvar emptyOn = d3Dispatch.dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = d3Timer.timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return d3Timer.timeout(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    d3Timer.timeout(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state > STARTING && schedule.state < ENDING;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? d3Interpolate.interpolateNumber\n\t      : b instanceof d3Color.color ? d3Interpolate.interpolateRgb\n\t      : (c = d3Color.color(b)) ? (b = c, d3Interpolate.interpolateRgb)\n\t      : d3Interpolate.interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = d3Selection.namespace(name), i = fullname === \"transform\" ? d3Interpolate.interpolateTransformSvg : interpolate;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n\t      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = d3Selection.namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = d3Selection.matcher(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start(name) ? init : set;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = d3Selection.selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select !== \"function\") select = d3Selection.selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection = d3Selection.selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = d3Selection.window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = d3Selection.window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = d3Selection.window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? d3Interpolate.interpolateTransformCss : interpolate;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant(name, i, value + \"\"), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction(tweenValue(this, \"text\", value))\n\t      : textConstant(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return d3Selection.selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = d3Selection.selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: d3Ease.easeCubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = d3Timer.now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = d3Timer.now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\td3Selection.selection.prototype.interrupt = selection_interrupt;\n\td3Selection.selection.prototype.transition = selection_transition;\n\t\n\tvar root = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\texports.transition = transition;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-timer/ Version 1.0.5. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t\n\t    var d3Selection = __webpack_require__(13);\n\t\n\t    var wrapConfig = {\n\t        lineHeight: 1.2,\n\t        smallTextOffset: 10,\n\t        smallTextLineHeightRatio: 0.9,\n\t        smallTextRatio: 0.6,\n\t        valueClassName: 'value',\n\t        labelClassName: 'label'\n\t    };\n\t\n\t    var defaultTextSize = 12;\n\t    var defaultFontFace = 'Arial';\n\t\n\t    /**\n\t     * Wraps a selection of text within the available width\n\t     * @param  {Number} fontSize       Size of the base font\n\t     * @param  {Number} availableWidth Width of the container where the text needs to wrap on\n\t     * @param  {D3Selection} node      SVG text element that contains the text to wrap\n\t     *\n\t     * REF: http://bl.ocks.org/mbostock/7555321\n\t     * More discussions on https://github.com/mbostock/d3/issues/1642\n\t     * @return {void}\n\t     */\n\t    var wrapText = function wrapText(xOffset, fontSize, availableWidth, node, data, i) {\n\t        var text = d3Selection.select(node),\n\t            words = text.text().split(/\\s+/).reverse(),\n\t            word = void 0,\n\t            line = [],\n\t            lineNumber = 0,\n\t            smallLineHeight = wrapConfig.lineHeight * wrapConfig.smallTextLineHeightRatio,\n\t            y = text.attr('y'),\n\t            dy = parseFloat(text.attr('dy')),\n\t            smallFontSize = fontSize * wrapConfig.smallTextRatio,\n\t            tspan = text.text(null).append('tspan').attr('x', xOffset).attr('y', y - 5).attr('dy', dy + 'em').classed(wrapConfig.valueClassName, true).style('font-size', fontSize + 'px');\n\t\n\t        tspan.text(words.pop());\n\t        tspan = text.append('tspan').classed(wrapConfig.labelClassName, true).attr('x', xOffset).attr('y', y + wrapConfig.smallTextOffset).attr('dy', ++lineNumber * smallLineHeight + dy + 'em').style('font-size', smallFontSize + 'px');\n\t\n\t        while (word = words.pop()) {\n\t            line.push(word);\n\t            tspan.text(line.join(' '));\n\t            if (tspan.node().getComputedTextLength() > availableWidth - 50) {\n\t                line.pop();\n\t                tspan.text(line.join(' '));\n\t                line = [word];\n\t                tspan = text.append('tspan').classed(wrapConfig.labelClassName, true).attr('x', xOffset).attr('y', y + wrapConfig.smallTextOffset).attr('dy', ++lineNumber * smallLineHeight + dy + 'em').text(word).style('font-size', smallFontSize + 'px');\n\t            }\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Wraps a selection of text within the available width, also adds class .adjust-upwards\n\t     * to configure a y offset for entries with multiple rows\n\t     * @param  {D3Sekectuib} text       d3 text element\n\t     * @param  {Number} width           Width of the container where the text needs to wrap on\n\t     * @param  {Number} xpos            number passed to determine the x offset\n\t     * @param  {Number} limit           number of lines before an ellipses is added and the rest of the text is cut off\n\t     *\n\t     * REF: http://bl.ocks.org/mbostock/7555321\n\t     * More discussions on https://github.com/mbostock/d3/issues/1642\n\t     * @return {void}\n\t     */\n\t    var wrapTextWithEllipses = function wrapTextWithEllipses(text, width) {\n\t        var xpos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\t        var limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n\t\n\t\n\t        text.each(function () {\n\t            var words, word, line, lineNumber, lineHeight, y, dy, tspan;\n\t\n\t            text = d3Selection.select(this);\n\t\n\t            words = text.text().split(/\\s+/).reverse();\n\t            line = [];\n\t            lineNumber = 0;\n\t            lineHeight = 1.2;\n\t            y = text.attr('y');\n\t            dy = parseFloat(text.attr('dy'));\n\t            tspan = text.text(null).append('tspan').attr('x', xpos).attr('y', y).attr('dy', dy + 'em');\n\t\n\t            while (word = words.pop()) {\n\t                line.push(word);\n\t                tspan.text(line.join(' '));\n\t\n\t                if (tspan.node().getComputedTextLength() > width) {\n\t                    line.pop();\n\t                    tspan.text(line.join(' '));\n\t\n\t                    if (lineNumber < limit - 1) {\n\t                        line = [word];\n\t                        tspan = text.append('tspan').attr('x', xpos).attr('y', y).attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n\t                        // if we need two lines for the text, move them both up to center them\n\t                        text.classed('adjust-upwards', true);\n\t                    } else {\n\t                        line.push('...');\n\t                        tspan.text(line.join(' '));\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t        });\n\t    };\n\t\n\t    /**\n\t     * Figures out an approximate of the text width by using a canvas element\n\t     * This avoids having to actually render the text to measure it from the DOM itself\n\t     * @param  {String} text     Text to measure\n\t     * @param  {Number} fontSize Fontsize (or default)\n\t     * @param  {String} fontFace Font familty (or default)\n\t     * @return {String}          Approximate font size of the text\n\t     */\n\t    var getTextWidth = function getTextWidth(text) {\n\t        var fontSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultTextSize;\n\t        var fontFace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultFontFace;\n\t\n\t        var a = document.createElement('canvas'),\n\t            b = a.getContext('2d');\n\t\n\t        b.font = fontSize + 'px ' + fontFace;\n\t\n\t        return b.measureText(text).width;\n\t    };\n\t\n\t    return {\n\t        getTextWidth: getTextWidth,\n\t        wrapText: wrapText,\n\t        wrapTextWithEllipses: wrapTextWithEllipses\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var _require = __webpack_require__(18),\n\t        colorSchemas = _require.colorSchemas;\n\t\n\t    var constants = __webpack_require__(19);\n\t    var serializeWithStyles = __webpack_require__(20);\n\t\n\t    var encoder = window.btoa;\n\t\n\t    if (!encoder) {\n\t        encoder = __webpack_require__(21).encode;\n\t    }\n\t\n\t    // Base64 doesn't work really well with Unicode strings, so we need to use this function\n\t    // Ref: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n\t    var b64EncodeUnicode = function b64EncodeUnicode(str) {\n\t        return encoder(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (match, p1) {\n\t            return String.fromCharCode('0x' + p1);\n\t        }));\n\t    };\n\t\n\t    var config = {\n\t        styleClass: 'britechartStyle',\n\t        defaultFilename: 'britechart.png',\n\t        chartBackground: 'white',\n\t        imageSourceBase: 'data:image/svg+xml;base64,',\n\t        titleFontSize: '15px',\n\t        titleFontFamily: '\\'Benton Sans\\', sans-serif',\n\t        titleTopOffset: 30,\n\t        get styleBackgroundString() {\n\t            return '<style>svg{background:' + this.chartBackground + ';}</style>';\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Main function to be used as a method by chart instances to export charts to png\n\t     * @param  {array} svgs         (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n\t     * @param  {string} filename    [download to be called <filename>.png]\n\t     * @param  {string} title       Title for the image\n\t     */\n\t    function exportChart(d3svg, filename, title) {\n\t        var img = createImage(convertSvgToHtml.call(this, d3svg, title));\n\t\n\t        img.onload = handleImageLoad.bind(img, createCanvas(this.width(), this.height()), filename);\n\t    }\n\t\n\t    /**\n\t     * adds background styles to raw html\n\t     * @param {string} html raw html\n\t     */\n\t    function addBackground(html) {\n\t        return html.replace('>', '>' + config.styleBackgroundString);\n\t    }\n\t\n\t    /**\n\t     * takes d3 svg el, adds proper svg tags, adds inline styles\n\t     * from stylesheets, adds white background and returns string\n\t     * @param  {object} d3svg TYPE d3 svg element\n\t     * @return {string} string of passed d3\n\t     */\n\t    function convertSvgToHtml(d3svg, title) {\n\t        if (!d3svg) {\n\t            return;\n\t        }\n\t\n\t        d3svg.attr('version', 1.1).attr('xmlns', 'http://www.w3.org/2000/svg');\n\t        var serializer = serializeWithStyles.initializeSerializer();\n\t        var html = serializer(d3svg.node());\n\t        html = formatHtmlByBrowser(html);\n\t        html = prependTitle.call(this, html, title, parseInt(d3svg.attr('width')));\n\t        html = addBackground(html);\n\t\n\t        return html;\n\t    }\n\t\n\t    /**\n\t     * Create Canvas\n\t     * @param  {number} width\n\t     * @param  {number} height\n\t     * @return {object} TYPE canvas element\n\t     */\n\t    function createCanvas(width, height) {\n\t        var canvas = document.createElement('canvas');\n\t\n\t        canvas.height = height;\n\t        canvas.width = width;\n\t\n\t        return canvas;\n\t    }\n\t\n\t    /**\n\t     * Create Image\n\t     * @param  {string} svgHtml string representation of svg el\n\t     * @return {object}  TYPE element <img>, src points at svg\n\t     */\n\t    function createImage(svgHtml) {\n\t        var img = new Image();\n\t\n\t        img.src = '' + config.imageSourceBase + b64EncodeUnicode(svgHtml);\n\t\n\t        return img;\n\t    };\n\t\n\t    /**\n\t     * Draws image on canvas\n\t     * @param  {object} image TYPE:el <img>, to be drawn\n\t     * @param  {object} canvas TYPE: el <canvas>, to draw on\n\t     */\n\t    function drawImageOnCanvas(image, canvas) {\n\t        canvas.getContext('2d').drawImage(image, 0, 0);\n\t\n\t        return canvas;\n\t    }\n\t\n\t    /**\n\t     * Triggers browser to download image, convert canvas to url,\n\t     * we need to append the link el to the dom before clicking it for Firefox to register\n\t     * point <a> at it and trigger click\n\t     * @param  {object} canvas TYPE: el <canvas>\n\t     * @param  {string} filename\n\t     * @param  {string} extensionType\n\t     */\n\t    function downloadCanvas(canvas) {\n\t        var filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.defaultFilename;\n\t        var extensionType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'image/png';\n\t\n\t        var url = canvas.toDataURL(extensionType);\n\t        var link = document.createElement('a');\n\t\n\t        link.href = url;\n\t        link.download = filename;\n\t        document.body.appendChild(link);\n\t        link.click();\n\t        document.body.removeChild(link);\n\t    }\n\t\n\t    /**\n\t     * Some browsers need special formatting, we handle that here\n\t     * @param  {string} html string of svg html\n\t     * @return {string} string of svg html\n\t     */\n\t    function formatHtmlByBrowser(html) {\n\t        if (navigator.userAgent.search('FireFox') > -1) {\n\t            return html.replace(/url.*&quot;\\)/, 'url(&quot;#' + constants.lineGradientId + '&quot;);');\n\t        }\n\t\n\t        return html;\n\t    }\n\t\n\t    /**\n\t     * Handles on load event fired by img.onload, this=img\n\t     * @param  {object} canvas TYPE: el <canvas>\n\t     * @param  {string} filename\n\t     * @param  {object} e\n\t     */\n\t    function handleImageLoad(canvas, filename, e) {\n\t        e.preventDefault();\n\t\n\t        downloadCanvas(drawImageOnCanvas(this, canvas), filename);\n\t    }\n\t\n\t    /**\n\t     * if passed, append title to the raw html to appear on graph\n\t     * @param  {string} html     raw html string\n\t     * @param  {string} title    title of the graph\n\t     * @param  {number} svgWidth width of graph container\n\t     * @return {string}         raw html with title prepended\n\t     */\n\t    function prependTitle(html, title, svgWidth) {\n\t        if (!title || !svgWidth) {\n\t            return html;\n\t        }\n\t        var britechartsGreySchema = colorSchemas.britechartsGreySchema;\n\t\n\t        html = html.replace(/<g/, '<text x=\"' + this.margin().left + '\" y=\"' + config.titleTopOffset + '\" font-family=\"' + config.titleFontFamily + '\" font-size=\"' + config.titleFontSize + '\" fill=\"' + britechartsGreySchema[6] + '\"> ' + title + ' </text><g ');\n\t\n\t        return html;\n\t    }\n\t\n\t    return {\n\t        exportChart: exportChart,\n\t        convertSvgToHtml: convertSvgToHtml,\n\t        createImage: createImage,\n\t        drawImageOnCanvas: drawImageOnCanvas\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t\n\t    // Color Gradients\n\t    var britechartGradients = {\n\t        greenBlueGradient: ['#39C7EA', '#4CDCBA'],\n\t        orangePinkGradient: ['#FBC670', '#F766B8'],\n\t        bluePurpleGradient: ['#3DC3C9', '#824a9e']\n\t    };\n\t\n\t    // Color Schemas\n\t    // Standard Color Schema for Britecharts\n\t    var britechartsColorSchema = ['#6aedc7', //green\n\t    '#39c2c9', //blue\n\t    '#ffce00', //yellow\n\t    '#ffa71a', //orange\n\t    '#f866b9', //pink\n\t    '#998ce3' //purple\n\t    ];\n\t\n\t    // Grey Schema for Britecharts\n\t    var britechartsGreySchema = ['#F8F8FA', '#EFF2F5', '#D2D6DF', '#C3C6CF', '#ADB0B6', '#666A73', '#45494E', '#363A43', '#282C35'];\n\t\n\t    // Extended Orange Palette\n\t    var extendedOrangeColorSchema = ['#fcc870', '#ffa71a', '#fb8825', '#f6682f', '#db5a2c', '#bf4c28', '#a43b1c', '#892a10', '#f9e9c5'];\n\t    // Extended Blue Palette\n\t    var extendedBlueColorSchema = ['#ccf7f6', '#70e4e0', '#00d8d2', '#00acaf', '#007f8c', '#005e66', '#003c3f', '#002d2f', '#0d2223'];\n\t    // Extended LightBlue Palette\n\t    var extendedLightBlueColorSchema = ['#ccfffe', '#94f7f4', '#00fff8', '#1de1e1', '#39c2c9', '#2e9a9d', '#227270', '#1a5957', '#133f3e'];\n\t    // Extended Green Palette\n\t    var extendedGreenColorSchema = ['#edfff7', '#d7ffef', '#c0ffe7', '#95f5d7', '#6aedc7', '#59c3a3', '#479980', '#34816a', '#206953'];\n\t    // Extended Yellow Palette\n\t    var extendedYellowColorSchema = ['#f9f2b3', '#fbe986', '#fce05a', '#fed72d', '#ffce00', '#fcc11c', '#f9b438', '#eda629', '#e09819'];\n\t    // Extended Pink Palette\n\t    var extendedPinkColorSchema = ['#fdd1ea', '#fb9cd2', '#f866b9', '#fc40b6', '#ff1ab3', '#e3239d', '#c62c86', '#a62073', '#85135f'];\n\t    // Extended Purple Palette\n\t    var extendedPurpleColorSchema = ['#ddd6fc', '#bbb1f0', '#998ce3', '#8e6bc1', '#824a9e', '#77337f', '#6b1c60', '#591650', '#470f3f'];\n\t    // Extended Red Palette\n\t    var extendedRedColorSchema = ['#ffd8d4', '#ffb5b0', '#ff938c', '#ff766c', '#ff584c', '#f04b42', '#e03d38', '#be2e29', '#9c1e19'];\n\t\n\t    var aloeGreen = ['#7bdcc0'];\n\t\n\t    return {\n\t        colorSchemas: {\n\t            britechartsColorSchema: britechartsColorSchema,\n\t            britechartsGreySchema: britechartsGreySchema,\n\t            extendedOrangeColorSchema: extendedOrangeColorSchema,\n\t            extendedBlueColorSchema: extendedBlueColorSchema,\n\t            extendedLightBlueColorSchema: extendedLightBlueColorSchema,\n\t            extendedGreenColorSchema: extendedGreenColorSchema,\n\t            extendedYellowColorSchema: extendedYellowColorSchema,\n\t            extendedPinkColorSchema: extendedPinkColorSchema,\n\t            extendedPurpleColorSchema: extendedPurpleColorSchema,\n\t            extendedRedColorSchema: extendedRedColorSchema\n\t        },\n\t        colorSchemasHuman: {\n\t            'britechartsColorSchema': 'Britecharts Default',\n\t            'britechartsGreySchema': 'Britecharts Grey',\n\t            'extendedOrangeColorSchema': 'Orange',\n\t            'extendedBlueColorSchema': 'Blue',\n\t            'extendedLightBlueColorSchema': 'Light Blue',\n\t            'extendedGreenColorSchema': 'Green',\n\t            'extendedYellowColorSchema': 'Yellow',\n\t            'extendedPinkColorSchema': 'Pink',\n\t            'extendedPurpleColorSchema': 'Purple',\n\t            'extendedRedColorSchema': 'Red'\n\t        },\n\t        singleColors: {\n\t            aloeGreen: aloeGreen\n\t        },\n\t        colorGradients: britechartGradients,\n\t        colorGradientsHuman: {\n\t            greenBlueGradient: 'Green To Blue',\n\t            orangePinkGradient: 'Orange to Pink',\n\t            bluePurpleGradient: 'Blue to Purple'\n\t        }\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    var axisTimeCombinations = {\n\t        MINUTE_HOUR: 'minute-hour',\n\t        HOUR_DAY: 'hour-daymonth',\n\t        DAY_MONTH: 'day-month',\n\t        MONTH_YEAR: 'month-year'\n\t    };\n\t\n\t    var timeBenchmarks = {\n\t        ONE_AND_A_HALF_YEARS: 47304000000,\n\t        ONE_YEAR: 31536000365,\n\t        ONE_DAY: 86400001\n\t    };\n\t\n\t    return {\n\t        axisTimeCombinations: axisTimeCombinations,\n\t        timeBenchmarks: timeBenchmarks,\n\t        lineGradientId: 'lineGradientId'\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function () {\n\t\n\t    'use strict';\n\t\n\t    return {\n\t\n\t        /**\n\t         * returns serializer function, only run it when you know you want to serialize your chart\n\t         * @return {func} serializer to add styles in line to dom string\n\t         */\n\t        initializeSerializer: function initializeSerializer() {\n\t\n\t            // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n\t            var defaultStylesByTagName = {};\n\t\n\t            // Styles inherited from style sheets will not be rendered for elements with these tag names\n\t            var noStyleTags = { 'BASE': true, 'HEAD': true, 'HTML': true, 'META': true, 'NOFRAME': true, 'NOSCRIPT': true, 'PARAM': true, 'SCRIPT': true, 'STYLE': true, 'TITLE': true };\n\t\n\t            // This list determines which css default values lookup tables are precomputed at load time\n\t            // Lookup tables for other tag names will be automatically built at runtime if needed\n\t            var tagNames = ['A', 'ABBR', 'ADDRESS', 'AREA', 'ARTICLE', 'ASIDE', 'AUDIO', 'B', 'BASE', 'BDI', 'BDO', 'BLOCKQUOTE', 'BODY', 'BR', 'BUTTON', 'CANVAS', 'CAPTION', 'CENTER', 'CITE', 'CODE', 'COL', 'COLGROUP', 'COMMAND', 'DATALIST', 'DD', 'DEL', 'DETAILS', 'DFN', 'DIV', 'DL', 'DT', 'EM', 'EMBED', 'FIELDSET', 'FIGCAPTION', 'FIGURE', 'FONT', 'FOOTER', 'FORM', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEAD', 'HEADER', 'HGROUP', 'HR', 'HTML', 'I', 'IFRAME', 'IMG', 'INPUT', 'INS', 'KBD', 'LABEL', 'LEGEND', 'LI', 'LINK', 'MAP', 'MARK', 'MATH', 'MENU', 'META', 'METER', 'NAV', 'NOBR', 'NOSCRIPT', 'OBJECT', 'OL', 'OPTION', 'OPTGROUP', 'OUTPUT', 'P', 'PARAM', 'PRE', 'PROGRESS', 'Q', 'RP', 'RT', 'RUBY', 'S', 'SAMP', 'SCRIPT', 'SECTION', 'SELECT', 'SMALL', 'SOURCE', 'SPAN', 'STRONG', 'STYLE', 'SUB', 'SUMMARY', 'SUP', 'SVG', 'TABLE', 'TBODY', 'TD', 'TEXTAREA', 'TFOOT', 'TH', 'THEAD', 'TIME', 'TITLE', 'TR', 'TRACK', 'U', 'UL', 'VAR', 'VIDEO', 'WBR'];\n\t\n\t            // Precompute the lookup tables.\n\t            [].forEach.call(tagNames, function (name) {\n\t                if (!noStyleTags[name]) {\n\t                    defaultStylesByTagName[name] = computeDefaultStyleByTagName(name);\n\t                }\n\t            });\n\t\n\t            function computeDefaultStyleByTagName(tagName) {\n\t                var defaultStyle = {},\n\t                    element = document.body.appendChild(document.createElement(tagName)),\n\t                    computedStyle = window.getComputedStyle(element);\n\t\n\t                [].forEach.call(computedStyle, function (style) {\n\t                    defaultStyle[style] = computedStyle[style];\n\t                });\n\t                document.body.removeChild(element);\n\t                return defaultStyle;\n\t            }\n\t\n\t            function getDefaultStyleByTagName(tagName) {\n\t                tagName = tagName.toUpperCase();\n\t                if (!defaultStylesByTagName[tagName]) {\n\t                    defaultStylesByTagName[tagName] = computeDefaultStyleByTagName(tagName);\n\t                }\n\t                return defaultStylesByTagName[tagName];\n\t            };\n\t\n\t            function serializeWithStyles(elem) {\n\t\n\t                var cssTexts = [],\n\t                    elements = void 0,\n\t                    computedStyle = void 0,\n\t                    defaultStyle = void 0,\n\t                    result = void 0;\n\t\n\t                if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n\t                    console.error('Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE');\n\t                    return;\n\t                }\n\t\n\t                cssTexts = [];\n\t                elements = elem.querySelectorAll('*');\n\t\n\t                [].forEach.call(elements, function (el, i) {\n\t                    if (!noStyleTags[el.tagName]) {\n\t                        computedStyle = window.getComputedStyle(el);\n\t                        defaultStyle = getDefaultStyleByTagName(el.tagName);\n\t                        cssTexts[i] = el.style.cssText;\n\t                        [].forEach.call(computedStyle, function (cssPropName) {\n\t                            if (computedStyle[cssPropName] !== defaultStyle[cssPropName]) {\n\t                                el.style[cssPropName] = computedStyle[cssPropName];\n\t                            }\n\t                        });\n\t                    }\n\t                });\n\t\n\t                result = elem.outerHTML;\n\t                elements = [].map.call(elements, function (el, i) {\n\t                    el.style.cssText = cssTexts[i];\n\t                    return el;\n\t                });\n\t\n\t                return result;\n\t            };\n\t\n\t            return serializeWithStyles;\n\t        }\n\t    };\n\t}();\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n\t;(function(root) {\n\t\n\t\t// Detect free variables `exports`.\n\t\tvar freeExports = typeof exports == 'object' && exports;\n\t\n\t\t// Detect free variable `module`.\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\tmodule.exports == freeExports && module;\n\t\n\t\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t\t// it as `root`.\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar InvalidCharacterError = function(message) {\n\t\t\tthis.message = message;\n\t\t};\n\t\tInvalidCharacterError.prototype = new Error;\n\t\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\t\n\t\tvar error = function(message) {\n\t\t\t// Note: the error messages used throughout this file match those used by\n\t\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\t\tthrow new InvalidCharacterError(message);\n\t\t};\n\t\n\t\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\t\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\t\n\t\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t\t// implementation. https://gist.github.com/atk/1020396\n\t\tvar decode = function(input) {\n\t\t\tinput = String(input)\n\t\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\t\tvar length = input.length;\n\t\t\tif (length % 4 == 0) {\n\t\t\t\tinput = input.replace(/==?$/, '');\n\t\t\t\tlength = input.length;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tlength % 4 == 1 ||\n\t\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t\t) {\n\t\t\t\terror(\n\t\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t\t);\n\t\t\t}\n\t\t\tvar bitCounter = 0;\n\t\t\tvar bitStorage;\n\t\t\tvar buffer;\n\t\t\tvar output = '';\n\t\t\tvar position = -1;\n\t\t\twhile (++position < length) {\n\t\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t};\n\t\n\t\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\t\tvar encode = function(input) {\n\t\t\tinput = String(input);\n\t\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\t\terror(\n\t\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t\t'Latin1 range.'\n\t\t\t\t);\n\t\t\t}\n\t\t\tvar padding = input.length % 3;\n\t\t\tvar output = '';\n\t\t\tvar position = -1;\n\t\t\tvar a;\n\t\t\tvar b;\n\t\t\tvar c;\n\t\t\tvar d;\n\t\t\tvar buffer;\n\t\t\t// Make sure any padding is handled outside of the loop.\n\t\t\tvar length = input.length - padding;\n\t\n\t\t\twhile (++position < length) {\n\t\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\t\tc = input.charCodeAt(++position);\n\t\t\t\tbuffer = a + b + c;\n\t\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t\t// matching character for each of them to the output.\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t\t);\n\t\t\t}\n\t\n\t\t\tif (padding == 2) {\n\t\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\t\tb = input.charCodeAt(++position);\n\t\t\t\tbuffer = a + b;\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t\t'='\n\t\t\t\t);\n\t\t\t} else if (padding == 1) {\n\t\t\t\tbuffer = input.charCodeAt(position);\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t\t'=='\n\t\t\t\t);\n\t\t\t}\n\t\n\t\t\treturn output;\n\t\t};\n\t\n\t\tvar base64 = {\n\t\t\t'encode': encode,\n\t\t\t'decode': decode,\n\t\t\t'version': '0.1.0'\n\t\t};\n\t\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn base64;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = base64;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tfor (var key in base64) {\n\t\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.base64 = base64;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)(module), (function() { return this; }())))\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Dispatch = __webpack_require__(6);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Interpolate = __webpack_require__(10);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Shape = __webpack_require__(24);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t\n\t    var _require = __webpack_require__(17),\n\t        exportChart = _require.exportChart;\n\t\n\t    var textHelper = __webpack_require__(16);\n\t    var colorHelper = __webpack_require__(18);\n\t\n\t    var _require2 = __webpack_require__(26),\n\t        calculatePercent = _require2.calculatePercent;\n\t\n\t    /**\n\t     * @typedef DonutChartData\n\t     * @type {Object[]}\n\t     * @property {Number} quantity     Quantity of the group (required)\n\t     * @property {Number} percentage   Percentage of the total (optional)\n\t     * @property {String} name         Name of the group (required)\n\t     * @property {Number} id           Identifier for the group required for legend feature (optional)\n\t     *\n\t     * @example\n\t     * [\n\t     *     {\n\t     *         quantity: 1,\n\t     *         percentage: 50,\n\t     *         name: 'glittering',\n\t     *         id: 1\n\t     *     },\n\t     *     {\n\t     *         quantity: 1,\n\t     *         percentage: 50,\n\t     *         name: 'luminous',\n\t     *         id: 2\n\t     *     }\n\t     * ]\n\t     */\n\t\n\t    /**\n\t     * Reusable Donut Chart API class that renders a\n\t     * simple and configurable donut chart.\n\t     *\n\t     * @module Donut\n\t     * @tutorial donut\n\t     * @requires d3-dispatch, d3-ease, d3-interpolate, d3-scale, d3-shape, d3-selection\n\t     *\n\t     * @example\n\t     * var donutChart = donut();\n\t     *\n\t     * donutChart\n\t     *     .externalRadius(500)\n\t     *     .internalRadius(200);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(donutChart);\n\t     *\n\t     */\n\t\n\t\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 0,\n\t            right: 0,\n\t            bottom: 0,\n\t            left: 0\n\t        },\n\t            width = 300,\n\t            height = 300,\n\t            ease = d3Ease.easeCubicInOut,\n\t            arcTransitionDuration = 750,\n\t            pieDrawingTransitionDuration = 1200,\n\t            pieHoverTransitionDuration = 150,\n\t            radiusHoverOffset = 12,\n\t            paddingAngle = 0,\n\t            data = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            externalRadius = 140,\n\t            internalRadius = 45.5,\n\t            legendWidth = externalRadius + internalRadius,\n\t            layout = void 0,\n\t            shape = void 0,\n\t            slices = void 0,\n\t            svg = void 0,\n\t            isAnimated = false,\n\t            highlightedSliceId = void 0,\n\t            highlightedSlice = void 0,\n\t            hasFixedHighlightedSlice = false,\n\t            quantityLabel = 'quantity',\n\t            nameLabel = 'name',\n\t            percentageLabel = 'percentage',\n\t            percentageFormat = '.1f',\n\t\n\t\n\t        // colors\n\t        colorScale = void 0,\n\t            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\t\n\t\n\t        // utils\n\t        storeAngle = function storeAngle(d) {\n\t            this._current = d;\n\t        },\n\t            reduceOuterRadius = function reduceOuterRadius(d) {\n\t            d.outerRadius = externalRadius - radiusHoverOffset;\n\t        },\n\t            sortComparator = function sortComparator(a, b) {\n\t            return b.quantity - a.quantity;\n\t        },\n\t            sumValues = function sumValues(data) {\n\t            return data.reduce(function (total, d) {\n\t                return d.quantity + total;\n\t            }, 0);\n\t        },\n\t\n\t\n\t        // extractors\n\t        getQuantity = function getQuantity(_ref) {\n\t            var quantity = _ref.quantity;\n\t            return quantity;\n\t        },\n\t            getSliceFill = function getSliceFill(_ref2) {\n\t            var data = _ref2.data;\n\t            return colorScale(data.name);\n\t        },\n\t\n\t\n\t        // events\n\t        dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\t\n\t        /**\n\t         * This function creates the graph using the selection as container\n\t         *\n\t         * @param {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {DonutChartData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = cleanData(_data);\n\t\n\t                buildLayout();\n\t                buildColorScale();\n\t                buildShape();\n\t                buildSVG(this);\n\t                drawSlices();\n\t                initTooltip();\n\t\n\t                if (highlightedSliceId) {\n\t                    initHighlightSlice();\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Builds color scale for chart, if any colorSchema was defined\n\t         * @private\n\t         */\n\t        function buildColorScale() {\n\t            if (colorSchema) {\n\t                colorScale = d3Scale.scaleOrdinal().range(colorSchema);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the legend and a wrapper for all of them\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + width / 2 + ', ' + height / 2 + ')');\n\t\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('legend-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds the pie layout that will produce data ready to draw\n\t         * @private\n\t         */\n\t        function buildLayout() {\n\t            layout = d3Shape.pie().padAngle(paddingAngle).value(getQuantity).sort(sortComparator);\n\t        }\n\t\n\t        /**\n\t         * Builds the shape function\n\t         * @private\n\t         */\n\t        function buildShape() {\n\t            shape = d3Shape.arc().innerRadius(internalRadius).padRadius(externalRadius);\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         *\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart donut-chart', true).data([data]); //TO REVIEW\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Cleaning data adding the proper format\n\t         * @param  {DonutChartData} data Data\n\t         * @private\n\t         */\n\t        function cleanData(data) {\n\t            var cleanData = data.reduce(function (acc, d) {\n\t                // Skip data without quantity\n\t                if (!d[quantityLabel]) {\n\t                    return acc;\n\t                }\n\t\n\t                d.quantity = +d[quantityLabel];\n\t                d.name = String(d[nameLabel]);\n\t                d.percentage = d[percentageLabel] || null;\n\t                acc.push(d);\n\t\n\t                return acc;\n\t            }, []);\n\t            var totalQuantity = sumValues(cleanData);\n\t            var dataWithPercentages = cleanData.map(function (d) {\n\t                d.percentage = String(d.percentage || calculatePercent(d[quantityLabel], totalQuantity, percentageFormat));\n\t\n\t                return d;\n\t            });\n\t\n\t            return dataWithPercentages;\n\t        }\n\t\n\t        /**\n\t         * Cleans any value that could be on the legend text element\n\t         * @private\n\t         */\n\t        function cleanLegend() {\n\t            svg.select('.donut-text').text('');\n\t        }\n\t\n\t        /**\n\t         * Draws the values on the donut slice inside the text element\n\t         *\n\t         * @param  {Object} obj Data object\n\t         * @private\n\t         */\n\t        function drawLegend(obj) {\n\t            if (obj.data) {\n\t                svg.select('.donut-text').text(function () {\n\t                    return obj.data.percentage + '% ' + obj.data.name;\n\t                }).attr('dy', '.2em').attr('text-anchor', 'middle');\n\t\n\t                svg.select('.donut-text').call(wrapText, legendWidth);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the slices of the donut\n\t         * @private\n\t         */\n\t        function drawSlices() {\n\t            if (!slices) {\n\t                slices = svg.select('.chart-group').selectAll('g.arc').data(layout(data));\n\t\n\t                var newSlices = slices.enter().append('g').each(storeAngle).each(reduceOuterRadius).classed('arc', true);\n\t\n\t                if (isAnimated) {\n\t                    newSlices.merge(slices).append('path').attr('fill', getSliceFill).on('mouseover', handleMouseOver).on('mouseout', handleMouseOut).transition().ease(ease).duration(pieDrawingTransitionDuration).attrTween('d', tweenLoading);\n\t                } else {\n\t                    newSlices.merge(slices).append('path').attr('fill', getSliceFill).attr('d', shape).on('mouseover', handleMouseOver).on('mouseout', handleMouseOut);\n\t                }\n\t            } else {\n\t                slices = svg.select('.chart-group').selectAll('path').data(layout(data));\n\t\n\t                slices.attr('d', shape);\n\t\n\t                // Redraws the angles of the data\n\t                slices.transition().duration(arcTransitionDuration).attrTween('d', tweenArc);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Checks if the given element id is the same as the highlightedSliceId and returns the\n\t         * element if that's the case\n\t         * @param  {DOMElement} options.data Dom element to check\n\t         * @return {DOMElement}              Dom element if it has the same id\n\t         */\n\t        function filterHighlightedSlice(_ref3) {\n\t            var data = _ref3.data;\n\t\n\t            if (data.id === highlightedSliceId) {\n\t                return this;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Handles a path mouse over\n\t         * @return {void}\n\t         * @private\n\t         */\n\t        function handleMouseOver(datum) {\n\t            drawLegend(datum);\n\t            dispatcher.call('customMouseOver', this, datum);\n\t\n\t            if (highlightedSlice && this !== highlightedSlice) {\n\t                tweenGrowth(highlightedSlice, externalRadius - radiusHoverOffset);\n\t            }\n\t            tweenGrowth(this, externalRadius);\n\t        }\n\t\n\t        /**\n\t         * Handles a path mouse out\n\t         * @return {void}\n\t         * @private\n\t         */\n\t        function handleMouseOut() {\n\t            if (highlightedSlice && hasFixedHighlightedSlice) {\n\t                drawLegend(highlightedSlice.__data__);\n\t            } else {\n\t                cleanLegend();\n\t            }\n\t            dispatcher.call('customMouseOut', this);\n\t\n\t            if (highlightedSlice && hasFixedHighlightedSlice && this !== highlightedSlice) {\n\t                tweenGrowth(highlightedSlice, externalRadius);\n\t            }\n\t            tweenGrowth(this, externalRadius - radiusHoverOffset, pieHoverTransitionDuration);\n\t        }\n\t\n\t        /**\n\t         * Find the slice by id and growth it if needed\n\t         * @private\n\t         */\n\t        function initHighlightSlice() {\n\t            highlightedSlice = svg.selectAll('.chart-group .arc path').select(filterHighlightedSlice).node();\n\t\n\t            if (highlightedSlice) {\n\t                drawLegend(highlightedSlice.__data__);\n\t                tweenGrowth(highlightedSlice, externalRadius, pieDrawingTransitionDuration);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Creates the text element that will hold the legend of the chart\n\t         */\n\t        function initTooltip() {\n\t            svg.select('.legend-group').append('text').attr('class', 'donut-text');\n\t        }\n\t\n\t        /**\n\t         * Stores current angles and interpolates with new angles\n\t         * Check out {@link http://bl.ocks.org/mbostock/1346410| this example}\n\t         *\n\t         * @param  {Object}     a   New data for slice\n\t         * @return {Function}       Tweening function for the donut shape\n\t         * @private\n\t         */\n\t        function tweenArc(a) {\n\t            var i = d3Interpolate.interpolate(this._current, a);\n\t\n\t            this._current = i(0);\n\t\n\t            return function (t) {\n\t                return shape(i(t));\n\t            };\n\t        }\n\t\n\t        /**\n\t         * Animate slice with tweens depending on the attributes given\n\t         *\n\t         * @param  {DOMElement} slice   Slice to growth\n\t         * @param  {Number} outerRadius Final outer radius value\n\t         * @param  {Number} delay       Delay of animation\n\t         * @private\n\t         */\n\t        function tweenGrowth(slice, outerRadius) {\n\t            var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\t\n\t            d3Selection.select(slice).transition().delay(delay).attrTween('d', function (d) {\n\t                var i = d3Interpolate.interpolate(d.outerRadius, outerRadius);\n\t\n\t                return function (t) {\n\t                    d.outerRadius = i(t);\n\t\n\t                    return shape(d);\n\t                };\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Animation for chart loading\n\t         * Check out {@link http://bl.ocks.org/mbostock/4341574| this example}\n\t         *\n\t         * @param  {Object} b Data point\n\t         * @return {Function}   Tween function\n\t         * @private\n\t         */\n\t        function tweenLoading(b) {\n\t            var i = void 0;\n\t\n\t            b.innerRadius = 0;\n\t            i = d3Interpolate.interpolate({ startAngle: 0, endAngle: 0 }, b);\n\t\n\t            return function (t) {\n\t                return shape(i(t));\n\t            };\n\t        }\n\t\n\t        /**\n\t         * Utility function that wraps a text into the given width\n\t         *\n\t         * @param  {D3Selection} text         Text to write\n\t         * @param  {Number} legendWidth Width of the container\n\t         * @private\n\t         */\n\t        function wrapText(text, legendWidth) {\n\t            var fontSize = externalRadius / 5;\n\t\n\t            textHelper.wrapText.call(null, 0, fontSize, legendWidth, text.node());\n\t        }\n\t\n\t        /**\n\t         * Gets or Sets the colorSchema of the chart\n\t         * @param  {String[]} _x Desired colorSchema for the graph\n\t         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.colorSchema = function (_x) {\n\t            if (!arguments.length) {\n\t                return colorSchema;\n\t            }\n\t            colorSchema = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the externalRadius of the chart\n\t         * @param  {Number} _x ExternalRadius number to get/set\n\t         * @return { (Number | Module) } Current externalRadius or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.externalRadius = function (_x) {\n\t            if (!arguments.length) {\n\t                return externalRadius;\n\t            }\n\t            externalRadius = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the hasFixedHighlightedSlice property of the chart, making it to\n\t         * highlight the selected slice id set with `highlightSliceById` all the time.\n\t         *\n\t         * @param  {Boolean} _x                         If we want to make the highlighted slice permanently highlighted\n\t         * @return { hasFixedHighlightedSlice | module} Current hasFixedHighlightedSlice flag or Chart module\n\t         * @public\n\t         */\n\t        exports.hasFixedHighlightedSlice = function (_x) {\n\t            if (!arguments.length) {\n\t                return hasFixedHighlightedSlice;\n\t            }\n\t            hasFixedHighlightedSlice = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { (Number | Module) } Current height or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            height = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n\t         * By default this is 'false'\n\t         *\n\t         * @param  {Boolean} _x Desired animation flag\n\t         * @return { isAnimated | module} Current isAnimated flag or Chart module\n\t         * @public\n\t         */\n\t        exports.isAnimated = function (_x) {\n\t            if (!arguments.length) {\n\t                return isAnimated;\n\t            }\n\t            isAnimated = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the internalRadius of the chart\n\t         * @param  {Number} _x InternalRadius number to get/set\n\t         * @return { (Number | Module) } Current internalRadius or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.internalRadius = function (_x) {\n\t            if (!arguments.length) {\n\t                return internalRadius;\n\t            }\n\t            internalRadius = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { (Number | Module) } Current margin or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { (Number | Module) } Current width or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            width = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename, title) {\n\t            exportChart.call(exports, svg, filename, title);\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the id of the slice to highlight\n\t         * @param  {Number} _x Slice id\n\t         * @return { (Number | Module) } Current highlighted slice id or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.highlightSliceById = function (_x) {\n\t            if (!arguments.length) {\n\t                return highlightedSliceId;\n\t            }\n\t            highlightedSliceId = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n\t         * We are going to expose this events:\n\t         * customMouseOver, customMouseMove and customMouseOut\n\t         *\n\t         * @return {module} Bar Chart\n\t         * @public\n\t         */\n\t        exports.on = function () {\n\t            var value = dispatcher.on.apply(dispatcher, arguments);\n\t\n\t            return value === dispatcher ? exports : value;\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-shape/ Version 1.0.6. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(25)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3));\n\t}(this, (function (exports,d3Path) { 'use strict';\n\t\n\tvar constant = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar abs = Math.abs;\n\tvar atan2 = Math.atan2;\n\tvar cos = Math.cos;\n\tvar max = Math.max;\n\tvar min = Math.min;\n\tvar sin = Math.sin;\n\tvar sqrt = Math.sqrt;\n\t\n\tvar epsilon = 1e-12;\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\tvar tau = 2 * pi;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n\t}\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi,\n\t        a1 = endAngle.apply(this, arguments) - halfPi,\n\t        da = abs(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = d3Path.path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau - epsilon) {\n\t      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon) {\n\t        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n\t          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon) {\n\t        var p0 = asin(rp / r0 * sin(ap)),\n\t            p1 = asin(rp / r1 * sin(ap));\n\t        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * cos(a01),\n\t          y01 = r1 * sin(a01),\n\t          x10 = r0 * cos(a10),\n\t          y10 = r0 * sin(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon) {\n\t        var x11 = r1 * cos(a11),\n\t            y11 = r1 * sin(a11),\n\t            x00 = r0 * cos(a00),\n\t            y00 = r0 * sin(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi) {\n\t          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n\t              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n\t    return [cos(a) * r, sin(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x,\n\t      y$$1 = y,\n\t      defined = constant(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = d3Path.path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area = function() {\n\t  var x0 = x,\n\t      x1 = null,\n\t      y0 = constant(0),\n\t      y1 = y,\n\t      defined = constant(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = d3Path.path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity,\n\t      sortValues = descending,\n\t      sort = null,\n\t      startAngle = constant(0),\n\t      endAngle = constant(tau),\n\t      padAngle = constant(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar radialArea = function() {\n\t  var a = area().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar circle = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau);\n\t  }\n\t};\n\t\n\tvar cross = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);\n\tvar kx = Math.sin(tau / 10) * kr;\n\tvar ky = -Math.cos(tau / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle,\n\t  cross,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant(circle),\n\t      size = constant(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = d3Path.path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop = function() {};\n\t\n\tfunction point(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = ((function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t}))(0.85);\n\t\n\tfunction point$1(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$1(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction point$2(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$3(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar slice = Array.prototype.slice;\n\t\n\tvar none = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (var j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$1 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant([]),\n\t      order = none$1,\n\t      offset = none,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none(series, order);\n\t};\n\t\n\tvar ascending = function(series) {\n\t  var sums = series.map(sum);\n\t  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$1 = function(series) {\n\t  return ascending(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum),\n\t      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$1(series).reverse();\n\t};\n\t\n\texports.arc = arc;\n\texports.area = area;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle;\n\texports.symbolCross = cross;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetNone = none;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending;\n\texports.stackOrderDescending = descending$1;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$1;\n\texports.stackOrderReverse = reverse;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-path/ Version 1.0.5. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar pi = Math.PI;\n\tvar tau = 2 * pi;\n\tvar epsilon = 1e-6;\n\tvar tauEpsilon = tau - epsilon;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Does the angle go the wrong way? Flip the direction.\n\t    if (da < 0) da = da % tau + tau;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Is this arc non-empty? Draw an arc!\n\t    else if (da > epsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\texports.path = path;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Format = __webpack_require__(7);\n\t\n\t    /**\n\t     * Calculates percentage of value from total\n\t     * @param  {Number}  value    Value to check\n\t     * @param  {Number}  total    Sum of values\n\t     * @param  {String}  decimals Specifies number of decimals https://github.com/d3/d3-format\n\t     * @return {String}           Percentage\n\t     */\n\t    function calculatePercent(value, total, decimals) {\n\t        return d3Format.format(decimals)(value / total * 100);\n\t    }\n\t\n\t    /**\n\t     * Checks if a number is an integer of has decimal values\n\t     * @param  {Number}  value Value to check\n\t     * @return {Boolean}       If it is an iteger\n\t     */\n\t    function isInteger(value) {\n\t        return value % 1 === 0;\n\t    }\n\t\n\t    return {\n\t        calculatePercent: calculatePercent,\n\t        isInteger: isInteger\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Format = __webpack_require__(7);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t\n\t    var textHelper = __webpack_require__(16);\n\t    var colorHelper = __webpack_require__(18);\n\t\n\t    /**\n\t     * @typedef LegendChartData\n\t     * @type {Object[]}\n\t     * @property {Number} id        Id of the group (required)\n\t     * @property {Number} quantity  Quantity of the group (required)\n\t     * @property {String} name      Name of the group (required)\n\t     *\n\t     * @example\n\t     * [\n\t     *     {\n\t     *         id: 1,\n\t     *         quantity: 2,\n\t     *         name: 'glittering'\n\t     *     },\n\t     *     {\n\t     *         id: 2,\n\t     *         quantity: 3,\n\t     *         name: 'luminous'\n\t     *     }\n\t     */\n\t\n\t    /**\n\t     * @fileOverview Legend Component reusable API class that renders a\n\t     * simple and configurable legend element.\n\t     *\n\t     * @example\n\t     * var donutChart = donut(),\n\t     *     legendBox = legend();\n\t     *\n\t     * donutChart\n\t     *     .externalRadius(500)\n\t     *     .internalRadius(200)\n\t     *     .on('customMouseOver', function(data) {\n\t     *         legendBox.highlight(data.data.id);\n\t     *     })\n\t     *     .on('customMouseOut', function() {\n\t     *         legendBox.clearHighlight();\n\t     *     });\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(donutChart);\n\t     *\n\t     * d3Selection.select('.other-css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(legendBox);\n\t     *\n\t     * @module Legend\n\t     * @tutorial legend\n\t     * @exports charts/legend\n\t     * @requires d3\n\t     */\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 5,\n\t            right: 5,\n\t            bottom: 5,\n\t            left: 5\n\t        },\n\t            width = 320,\n\t            height = 180,\n\t            textSize = 12,\n\t            textLetterSpacing = 0.5,\n\t            markerSize = 16,\n\t            markerYOffset = -(textSize - 2) / 2,\n\t            marginRatio = 1.5,\n\t            valueReservedSpace = 40,\n\t            numberLetterSpacing = 0.8,\n\t            numberFormat = d3Format.format('s'),\n\t            isFadedClassName = 'is-faded',\n\t            horizontal = false,\n\t\n\t\n\t        // colors\n\t        colorScale = void 0,\n\t            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\t            getId = function getId(_ref) {\n\t            var id = _ref.id;\n\t            return id;\n\t        },\n\t            getName = function getName(_ref2) {\n\t            var name = _ref2.name;\n\t            return name;\n\t        },\n\t            getFormattedQuantity = function getFormattedQuantity(_ref3) {\n\t            var quantity = _ref3.quantity;\n\t            return numberFormat(quantity);\n\t        },\n\t            getCircleFill = function getCircleFill(_ref4) {\n\t            var name = _ref4.name;\n\t            return colorScale(name);\n\t        },\n\t            entries = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            data = void 0,\n\t            svg = void 0;\n\t\n\t        /**\n\t         * This function creates the graph using the selection as container\n\t         * @param  {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {object} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = _data;\n\t\n\t                buildColorScale();\n\t                buildSVG(this);\n\t                if (horizontal) {\n\t                    drawHorizontalLegend();\n\t                } else {\n\t                    drawVerticalLegend();\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Depending on the size of the horizontal legend, we are going to either\n\t         * center the legend or add a new line with the last entry of the legend\n\t         * @return {void}\n\t         */\n\t        function adjustLines() {\n\t            var lineWidth = svg.select('.legend-line').node().getBoundingClientRect().width;\n\t            var lineWidthSpace = chartWidth - lineWidth;\n\t\n\t            if (lineWidthSpace > 0) {\n\t                centerLegendOnSVG();\n\t            } else {\n\t                splitInLines();\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the legend\n\t         * Also applies the Margin convention\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('legend-container-group', true).attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container.append('g').classed('legend-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds color scale for chart, if any colorSchema was defined\n\t         * @private\n\t         */\n\t        function buildColorScale() {\n\t            if (colorSchema) {\n\t                colorScale = d3Scale.scaleOrdinal().range(colorSchema);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart britechart-legend', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Centers the legend on the chart given that is a single line of labels\n\t         * @return {void}\n\t         */\n\t        function centerLegendOnSVG() {\n\t            var legendGroupSize = svg.select('g.legend-container-group').node().getBoundingClientRect().width;\n\t            var emptySpace = width - legendGroupSize;\n\t\n\t            if (emptySpace > 0) {\n\t                svg.select('g.legend-container-group').attr('transform', 'translate(' + emptySpace / 2 + ',0)');\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Removes the faded class from all the entry lines\n\t         */\n\t        function cleanFadedLines() {\n\t            svg.select('.legend-group').selectAll('g.legend-entry').classed(isFadedClassName, false);\n\t        }\n\t\n\t        /**\n\t         * Draws the entries of the legend within a single line\n\t         * @private\n\t         */\n\t        function drawHorizontalLegend() {\n\t            var xOffset = markerSize;\n\t\n\t            // We want a single line\n\t            svg.select('.legend-group').append('g').classed('legend-line', true);\n\t\n\t            // And one entry per data item\n\t            entries = svg.select('.legend-line').selectAll('g.legend-entry').data(data);\n\t\n\t            // Enter\n\t            entries.enter().append('g').classed('legend-entry', true).attr('data-item', getId).attr('transform', function (d, i) {\n\t                var horizontalOffset = xOffset,\n\t                    lineHeight = chartHeight / 2,\n\t                    verticalOffset = lineHeight,\n\t                    labelWidth = textHelper.getTextWidth(d.name, textSize);\n\t\n\t                xOffset += markerSize + 2 * getLineElementMargin() + labelWidth;\n\t\n\t                return 'translate(' + horizontalOffset + ',' + verticalOffset + ')';\n\t            }).merge(entries).append('circle').classed('legend-circle', true).attr('cx', markerSize / 2).attr('cy', markerYOffset).attr('r', markerSize / 2).style('fill', getCircleFill).style('stroke-width', 1);\n\t\n\t            svg.select('.legend-group').selectAll('g.legend-entry').append('text').classed('legend-entry-name', true).text(getName).attr('x', getLineElementMargin()).style('font-size', textSize + 'px').style('letter-spacing', textLetterSpacing + 'px');\n\t\n\t            // Exit\n\t            svg.select('.legend-group').selectAll('g.legend-entry').exit().transition().style('opacity', 0).remove();\n\t\n\t            adjustLines();\n\t        }\n\t\n\t        /**\n\t         * Draws the entries of the legend\n\t         * @private\n\t         */\n\t        function drawVerticalLegend() {\n\t            entries = svg.select('.legend-group').selectAll('g.legend-line').data(data);\n\t\n\t            // Enter\n\t            entries.enter().append('g').classed('legend-line', true).append('g').classed('legend-entry', true).attr('data-item', getId).attr('transform', function (d, i) {\n\t                var horizontalOffset = markerSize + getLineElementMargin(),\n\t                    lineHeight = chartHeight / (data.length + 1),\n\t                    verticalOffset = (i + 1) * lineHeight;\n\t\n\t                return 'translate(' + horizontalOffset + ',' + verticalOffset + ')';\n\t            }).merge(entries).append('circle').classed('legend-circle', true).attr('cx', markerSize / 2).attr('cy', markerYOffset).attr('r', markerSize / 2).style('fill', getCircleFill).style('stroke-width', 1);\n\t\n\t            svg.select('.legend-group').selectAll('g.legend-line').selectAll('g.legend-entry').append('text').classed('legend-entry-name', true).text(getName).attr('x', getLineElementMargin()).style('font-size', textSize + 'px').style('letter-spacing', textLetterSpacing + 'px');\n\t\n\t            svg.select('.legend-group').selectAll('g.legend-line').selectAll('g.legend-entry').append('text').classed('legend-entry-value', true).text(getFormattedQuantity).attr('x', chartWidth - valueReservedSpace).style('font-size', textSize + 'px').style('letter-spacing', numberLetterSpacing + 'px').style('text-anchor', 'end').style('startOffset', '100%');\n\t\n\t            // Exit\n\t            svg.select('.legend-group').selectAll('g.legend-line').exit().transition().style('opacity', 0).remove();\n\t        }\n\t\n\t        /**\n\t         * Applies the faded class to all lines but the one that has the given id\n\t         * @param  {number} exceptionItemId Id of the line that needs to stay the same\n\t         */\n\t        function fadeLinesBut(exceptionItemId) {\n\t            var classToFade = 'g.legend-entry';\n\t\n\t            svg.select('.legend-group').selectAll(classToFade).classed(isFadedClassName, true);\n\t\n\t            svg.select('[data-item=\"' + exceptionItemId + '\"]').classed(isFadedClassName, false);\n\t        }\n\t\n\t        /**\n\t         * Calculates the margin between elements of the legend\n\t         * @return {Number} Margin to apply between elements\n\t         */\n\t        function getLineElementMargin() {\n\t            return marginRatio * markerSize;\n\t        }\n\t\n\t        /**\n\t         * Simple method to move the last item of an overflowing legend into the next line\n\t         * @return {void}\n\t         * @private\n\t         */\n\t        function splitInLines() {\n\t            var legendEntries = svg.selectAll('.legend-entry');\n\t            var numberOfEntries = legendEntries.size();\n\t            var lineHeight = chartHeight / 2 * 1.7;\n\t\n\t            var newLine = svg.select('.legend-group').append('g').classed('legend-line', true).attr('transform', 'translate(0, ' + lineHeight + ')');\n\t\n\t            var lastEntry = legendEntries.filter(':nth-child(' + numberOfEntries + ')');\n\t            lastEntry.attr('transform', 'translate(' + markerSize + ',0)');\n\t            newLine.append(function () {\n\t                return lastEntry.node();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Clears the highlighted line entry\n\t         */\n\t        exports.clearHighlight = function () {\n\t            cleanFadedLines();\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the colorSchema of the chart\n\t         * @param  {array} _x Color scheme array to get/set\n\t         * @return {number | module} Current colorSchema or Donut Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.colorSchema = function (_x) {\n\t            if (!arguments.length) {\n\t                return colorSchema;\n\t            }\n\t            colorSchema = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the legend chart\n\t         * @param  {number} _x Desired width for the chart\n\t         * @return {height | module} Current height or Legend module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            height = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Highlights a line entry by fading the rest of lines\n\t         * @param  {number} entryId ID of the entry line\n\t         */\n\t        exports.highlight = function (entryId) {\n\t            cleanFadedLines();\n\t            fadeLinesBut(entryId);\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the horizontal mode on the legend\n\t         * @param  {boolean} _x Desired horizontal mode for the graph\n\t         * @return {horizontal | module} Current horizontal mode or Legend module to chain calls\n\t         * @public\n\t         */\n\t        exports.horizontal = function (_x) {\n\t            if (!arguments.length) {\n\t                return horizontal;\n\t            }\n\t            horizontal = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the legend chart\n\t         * @param  {object} _x Margin object to get/set\n\t         * @return {margin | module} Current margin or Legend module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the markerSize of the legend chart.\n\t         * This markerSize will determine the horizontal and vertical size of the colored marks\n\t         * added as color identifiers for the chart's categories.\n\t         *\n\t         * @param  {object} _x Margin object to get/set\n\t         * @return {markerSize | module} Current markerSize or Legend module to chain calls\n\t         * @public\n\t         */\n\t        exports.markerSize = function (_x) {\n\t            if (!arguments.length) {\n\t                return markerSize;\n\t            }\n\t            markerSize = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the legend chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return {width | module} Current width or Legend module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            width = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Axis = __webpack_require__(4);\n\t    var d3Collection = __webpack_require__(9);\n\t    var d3Dispatch = __webpack_require__(6);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Shape = __webpack_require__(24);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t    var d3TimeFormat = __webpack_require__(12);\n\t\n\t    var _require = __webpack_require__(17),\n\t        exportChart = _require.exportChart;\n\t\n\t    var colorHelper = __webpack_require__(18);\n\t\n\t    var _require2 = __webpack_require__(26),\n\t        isInteger = _require2.isInteger;\n\t\n\t    var _require3 = __webpack_require__(29),\n\t        getXAxisSettings = _require3.getXAxisSettings,\n\t        getLocaleDateFormatter = _require3.getLocaleDateFormatter;\n\t\n\t    var _require4 = __webpack_require__(19),\n\t        axisTimeCombinations = _require4.axisTimeCombinations,\n\t        lineGradientId = _require4.lineGradientId;\n\t\n\t    var _require5 = __webpack_require__(30),\n\t        formatIntegerValue = _require5.formatIntegerValue,\n\t        formatDecimalValue = _require5.formatDecimalValue;\n\t\n\t    /**\n\t     * @typedef D3Selection\n\t     * @type {Array[]}\n\t     * @property {Number} length            Size of the selection\n\t     * @property {DOMElement} parentNode    Parent of the selection\n\t     */\n\t\n\t    /**\n\t     * @typedef lineChartDataByTopic\n\t     * @type {Object}\n\t     * @property {String} topicName    Topic name (required)\n\t     * @property {Number} topic        Topic identifier (required)\n\t     * @property {Object[]} dates      All date entries with values for that topic (required)\n\t     *\n\t     * @example\n\t     * {\n\t     *     topicName: 'San Francisco',\n\t     *     topic: 123,\n\t     *     dates: [\n\t     *         {\n\t     *             date: '2017-01-16T16:00:00-08:00',\n\t     *             value: 1\n\t     *         },\n\t     *         {\n\t     *             date: '2017-01-16T17:00:00-08:00',\n\t     *             value: 2\n\t     *         }\n\t     *     ]\n\t     * }\n\t     */\n\t\n\t    /**\n\t     * @typedef LineChartData\n\t     * @type {Object[]}\n\t     * @property {lineChartDataByTopic[]} dataByTopic  Data values to chart (required)\n\t     *\n\t     * @example\n\t     * {\n\t     *     dataByTopic: [\n\t     *         {\n\t     *             topicName: 'San Francisco',\n\t     *             topic: 123,\n\t     *             dates: [\n\t     *                 {\n\t     *                     date: '2017-01-16T16:00:00-08:00',\n\t     *                     value: 1\n\t     *                 },\n\t     *                 {\n\t     *                     date: '2017-01-16T17:00:00-08:00',\n\t     *                     value: 2\n\t     *                 }\n\t     *             ]\n\t     *         },\n\t     *         {\n\t     *             topicName: 'Other',\n\t     *             topic: 345,\n\t     *             dates: [\n\t     *                 {...},\n\t     *                 {...}\n\t     *             ]\n\t     *         }\n\t     *     ]\n\t     * }\n\t     */\n\t\n\t    /**\n\t     * Line Chart reusable API module that allows us\n\t     * rendering a multi line and configurable chart.\n\t     *\n\t     * @module Line\n\t     * @tutorial line\n\t     * @requires d3-array, d3-axis, d3-brush, d3-ease, d3-format, d3-scale, d3-shape, d3-selection, d3-time, d3-time-format\n\t     *\n\t     * @example\n\t     * let lineChart = line();\n\t     *\n\t     * lineChart\n\t     *     .aspectRatio(0.5)\n\t     *     .width(500);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(lineChart);\n\t     *\n\t     */\n\t\n\t\n\t    return function line() {\n\t\n\t        var margin = {\n\t            top: 60,\n\t            right: 30,\n\t            bottom: 40,\n\t            left: 70\n\t        },\n\t            width = 960,\n\t            height = 500,\n\t            aspectRatio = null,\n\t            tooltipThreshold = 480,\n\t            svg = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            xScale = void 0,\n\t            yScale = void 0,\n\t            colorScale = void 0,\n\t            xAxis = void 0,\n\t            xMonthAxis = void 0,\n\t            yAxis = void 0,\n\t            xAxisPadding = {\n\t            top: 0,\n\t            left: 15,\n\t            bottom: 0,\n\t            right: 0\n\t        },\n\t            monthAxisPadding = 28,\n\t            tickPadding = 5,\n\t            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\t            singleLineGradientColors = colorHelper.colorGradients.greenBlueGradient,\n\t            topicColorMap = void 0,\n\t            forceAxisSettings = null,\n\t            forcedXTicks = null,\n\t            forcedXFormat = null,\n\t            locale = void 0,\n\t            isAnimated = false,\n\t            ease = d3Ease.easeQuadInOut,\n\t            animationDuration = 1500,\n\t            maskingRectangle = void 0,\n\t            dataByTopic = void 0,\n\t            dataByDate = void 0,\n\t            dateLabel = 'date',\n\t            valueLabel = 'value',\n\t            topicLabel = 'topic',\n\t            topicNameLabel = 'topicName',\n\t            verticalTicks = 5,\n\t            overlay = void 0,\n\t            overlayColor = 'rgba(0, 0, 0, 0)',\n\t            verticalMarkerContainer = void 0,\n\t            verticalMarkerLine = void 0,\n\t            verticalGridLines = void 0,\n\t            horizontalGridLines = void 0,\n\t            grid = null,\n\t            baseLine = void 0,\n\t\n\t\n\t        // extractors\n\t        getDate = function getDate(_ref) {\n\t            var date = _ref.date;\n\t            return date;\n\t        },\n\t            getValue = function getValue(_ref2) {\n\t            var value = _ref2.value;\n\t            return value;\n\t        },\n\t            getTopic = function getTopic(_ref3) {\n\t            var topic = _ref3.topic;\n\t            return topic;\n\t        },\n\t            getLineColor = function getLineColor(_ref4) {\n\t            var topic = _ref4.topic;\n\t            return colorScale(topic);\n\t        },\n\t\n\t\n\t        // events\n\t        dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\t\n\t        /**\n\t         * This function creates the graph using the selection and data provided\n\t         *\n\t         * @param {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {LineChartData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                var _cleanData = cleanData(_data);\n\t\n\t                dataByTopic = _cleanData.dataByTopic;\n\t                dataByDate = _cleanData.dataByDate;\n\t\n\t\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t\n\t                buildScales();\n\t                buildSVG(this);\n\t                buildAxis();\n\t                drawAxis();\n\t                buildGradient();\n\t                drawLines();\n\t                createMaskingClip();\n\t\n\t                if (shouldShowTooltip()) {\n\t                    drawVerticalMarker();\n\t                    drawHoverOverlay();\n\t                    addMouseEvents();\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Adds events to the container group if the environment is not mobile\n\t         * Adding: mouseover, mouseout and mousemove\n\t         */\n\t        function addMouseEvents() {\n\t            svg.on('mouseover', handleMouseOver).on('mouseout', handleMouseOut).on('mousemove', handleMouseMove);\n\t        }\n\t\n\t        /**\n\t         * Adjusts the position of the y axis' ticks\n\t         * @param  {D3Selection} selection Y axis group\n\t         * @return void\n\t         */\n\t        function adjustYTickLabels(selection) {\n\t            selection.selectAll('.tick text').attr('transform', 'translate(0, -7)');\n\t        }\n\t\n\t        /**\n\t         * Formats the value depending on its characteristics\n\t         * @param  {Number} value Value to format\n\t         * @return {Number}       Formatted value\n\t         */\n\t        function getFormattedValue(value) {\n\t            var format = void 0;\n\t\n\t            if (isInteger(value)) {\n\t                format = formatIntegerValue;\n\t            } else {\n\t                format = formatDecimalValue;\n\t            }\n\t\n\t            return format(value);\n\t        }\n\t\n\t        /**\n\t         * Creates the d3 x and y axis, setting orientations\n\t         * @private\n\t         */\n\t        function buildAxis() {\n\t            var dataTimeSpan = yScale.domain()[1] - yScale.domain()[0];\n\t            var yTickNumber = dataTimeSpan < verticalTicks - 1 ? dataTimeSpan : verticalTicks;\n\t            var minor = void 0,\n\t                major = void 0;\n\t\n\t            if (forceAxisSettings === 'custom' && typeof forcedXFormat === 'string') {\n\t                minor = {\n\t                    tick: forcedXTicks,\n\t                    format: d3TimeFormat.timeFormat(forcedXFormat)\n\t                };\n\t                major = null;\n\t            } else {\n\t                var _getXAxisSettings = getXAxisSettings(dataByDate, width, forceAxisSettings, locale);\n\t\n\t                minor = _getXAxisSettings.minor;\n\t                major = _getXAxisSettings.major;\n\t\n\t\n\t                xMonthAxis = d3Axis.axisBottom(xScale).ticks(major.tick).tickSize(0, 0).tickFormat(major.format);\n\t            }\n\t\n\t            xAxis = d3Axis.axisBottom(xScale).ticks(minor.tick).tickSize(10, 0).tickPadding(tickPadding).tickFormat(minor.format);\n\t\n\t            yAxis = d3Axis.axisLeft(yScale).ticks(yTickNumber).tickSize([0]).tickPadding(tickPadding).tickFormat(getFormattedValue);\n\t\n\t            drawGridLines(minor.tick, yTickNumber);\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * NOTE: The order of drawing of this group elements is really important,\n\t         * as everything else will be drawn on top of them\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container.append('g').classed('x-axis-group', true).append('g').classed('axis x', true);\n\t            container.selectAll('.x-axis-group').append('g').classed('month-axis', true);\n\t            container.append('g').classed('y-axis-group axis y', true);\n\t            container.append('g').classed('grid-lines-group', true);\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('metadata-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds the gradient element to be used later\n\t         * @return {void}\n\t         */\n\t        function buildGradient() {\n\t            svg.select('.metadata-group').append('linearGradient').attr('id', lineGradientId).attr('x1', '0%').attr('y1', '0%').attr('x2', '100%').attr('y2', '0%').selectAll('stop').data([{ offset: '0%', color: singleLineGradientColors[0] }, { offset: '100%', color: singleLineGradientColors[1] }]).enter().append('stop').attr('offset', function (_ref5) {\n\t                var offset = _ref5.offset;\n\t                return offset;\n\t            }).attr('stop-color', function (_ref6) {\n\t                var color = _ref6.color;\n\t                return color;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates the x and y scales of the graph\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t            var minX = d3Array.min(dataByTopic, function (_ref7) {\n\t                var dates = _ref7.dates;\n\t                return d3Array.min(dates, getDate);\n\t            }),\n\t                maxX = d3Array.max(dataByTopic, function (_ref8) {\n\t                var dates = _ref8.dates;\n\t                return d3Array.max(dates, getDate);\n\t            }),\n\t                maxY = d3Array.max(dataByTopic, function (_ref9) {\n\t                var dates = _ref9.dates;\n\t                return d3Array.max(dates, getValue);\n\t            }),\n\t                minY = d3Array.min(dataByTopic, function (_ref10) {\n\t                var dates = _ref10.dates;\n\t                return d3Array.min(dates, getValue);\n\t            });\n\t            var yScaleBottomValue = Math.abs(minY) < 0 ? Math.abs(minY) : 0;\n\t\n\t            xScale = d3Scale.scaleTime().domain([minX, maxX]).rangeRound([0, chartWidth]);\n\t\n\t            yScale = d3Scale.scaleLinear().domain([yScaleBottomValue, Math.abs(maxY)]).rangeRound([chartHeight, 0]).nice();\n\t\n\t            colorScale = d3Scale.scaleOrdinal().range(colorSchema).domain(dataByTopic.map(getTopic));\n\t\n\t            var range = colorScale.range();\n\t            topicColorMap = colorScale.domain().reduce(function (memo, item, i) {\n\t                memo[item] = range[i];\n\t\n\t                return memo;\n\t            }, {});\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         *\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart line-chart', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Parses dates and values into JS Date objects and numbers\n\t         * @param  {obj} dataByTopic    Raw data grouped by topic\n\t         * @return {obj}                Parsed data with dataByTopic and dataByDate\n\t         */\n\t        function cleanData(_ref11) {\n\t            var dataByTopic = _ref11.dataByTopic,\n\t                dataByDate = _ref11.dataByDate;\n\t\n\t\n\t            if (dataByTopic) {\n\t                var flatData = [];\n\t\n\t                dataByTopic.forEach(function (topic) {\n\t                    topic.dates.forEach(function (date) {\n\t                        flatData.push({\n\t                            topicName: topic[topicNameLabel],\n\t                            name: topic[topicLabel],\n\t                            date: date[dateLabel],\n\t                            value: date[valueLabel]\n\t                        });\n\t                    });\n\t                });\n\t\n\t                // Nest data by date and format\n\t                dataByDate = d3Collection.nest().key(getDate).entries(flatData).map(function (d) {\n\t                    return {\n\t                        date: new Date(d.key),\n\t                        topics: d.values\n\t                    };\n\t                });\n\t\n\t                // Normalize dates in keys\n\t                dataByDate = dataByDate.map(function (d) {\n\t                    d.date = new Date(d.date);\n\t\n\t                    return d;\n\t                });\n\t\n\t                // Normalize dataByTopic\n\t                dataByTopic.forEach(function (kv) {\n\t                    kv.dates.forEach(function (d) {\n\t                        d.date = new Date(d[dateLabel]);\n\t                        d.value = +d[valueLabel];\n\t                    });\n\t                });\n\t            }\n\t\n\t            return { dataByTopic: dataByTopic, dataByDate: dataByDate };\n\t        }\n\t\n\t        /**\n\t         * Removes all the datapoints highlighter circles added to the marker container\n\t         * @return void\n\t         */\n\t        function cleanDataPointHighlights() {\n\t            verticalMarkerContainer.selectAll('.circle-container').remove();\n\t        }\n\t\n\t        /**\n\t         * Creates a masking clip that would help us fake an animation if the\n\t         * proper flag is true\n\t         *\n\t         * @return {void}\n\t         */\n\t        function createMaskingClip() {\n\t            if (isAnimated) {\n\t                // We use a white rectangle to simulate the line drawing animation\n\t                maskingRectangle = svg.append('rect').attr('class', 'masking-rectangle').attr('width', width).attr('height', height).attr('x', 0).attr('y', 0);\n\t\n\t                maskingRectangle.transition().duration(animationDuration).ease(ease).attr('x', width).on('end', function () {\n\t                    return maskingRectangle.remove();\n\t                });\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the x and y axis on the svg object within their\n\t         * respective groups\n\t         * @private\n\t         */\n\t        function drawAxis() {\n\t            svg.select('.x-axis-group .axis.x').attr('transform', 'translate(0, ' + chartHeight + ')').call(xAxis);\n\t\n\t            if (forceAxisSettings !== 'custom') {\n\t                svg.select('.x-axis-group .month-axis').attr('transform', 'translate(0, ' + (chartHeight + monthAxisPadding) + ')').call(xMonthAxis);\n\t            }\n\t\n\t            svg.select('.y-axis-group.axis.y').transition().ease(ease).attr('transform', 'translate(' + -xAxisPadding.left + ', 0)').call(yAxis).call(adjustYTickLabels);\n\t        }\n\t\n\t        /**\n\t         * Draws the line elements within the chart group\n\t         * @private\n\t         */\n\t        function drawLines() {\n\t            var lines = void 0,\n\t                topicLine = void 0;\n\t\n\t            topicLine = d3Shape.line().x(function (_ref12) {\n\t                var date = _ref12.date;\n\t                return xScale(date);\n\t            }).y(function (_ref13) {\n\t                var value = _ref13.value;\n\t                return yScale(value);\n\t            });\n\t\n\t            lines = svg.select('.chart-group').selectAll('.line').data(dataByTopic);\n\t\n\t            lines.enter().append('g').attr('class', 'topic').append('path').attr('class', 'line').attr('d', function (_ref14) {\n\t                var dates = _ref14.dates;\n\t                return topicLine(dates);\n\t            }).style('stroke', function (d) {\n\t                return dataByTopic.length === 1 ? 'url(#' + lineGradientId + ')' : getLineColor(d);\n\t            });\n\t\n\t            lines.exit().remove();\n\t        }\n\t\n\t        /**\n\t         * Draws grid lines on the background of the chart\n\t         * @return void\n\t         */\n\t        function drawGridLines(xTicks, yTicks) {\n\t            if (grid === 'horizontal' || grid === 'full') {\n\t                horizontalGridLines = svg.select('.grid-lines-group').selectAll('line.horizontal-grid-line').data(yScale.ticks(yTicks)).enter().append('line').attr('class', 'horizontal-grid-line').attr('x1', -xAxisPadding.left - 30).attr('x2', chartWidth).attr('y1', function (d) {\n\t                    return yScale(d);\n\t                }).attr('y2', function (d) {\n\t                    return yScale(d);\n\t                });\n\t            }\n\t\n\t            if (grid === 'vertical' || grid === 'full') {\n\t                verticalGridLines = svg.select('.grid-lines-group').selectAll('line.vertical-grid-line').data(xScale.ticks(xTicks)).enter().append('line').attr('class', 'vertical-grid-line').attr('y1', 0).attr('y2', chartHeight).attr('x1', function (d) {\n\t                    return xScale(d);\n\t                }).attr('x2', function (d) {\n\t                    return xScale(d);\n\t                });\n\t            }\n\t\n\t            //draw a horizontal line to extend x-axis till the edges\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-x-line').data([0]).enter().append('line').attr('class', 'extended-x-line').attr('x1', -xAxisPadding.left - 30).attr('x2', chartWidth).attr('y1', height - margin.bottom - margin.top).attr('y2', height - margin.bottom - margin.top);\n\t        }\n\t\n\t        /**\n\t         * Draws an overlay element over the graph\n\t         * @inner\n\t         * @return void\n\t         */\n\t        function drawHoverOverlay() {\n\t            overlay = svg.select('.metadata-group').append('rect').attr('class', 'overlay').attr('y1', 0).attr('y2', height).attr('height', chartHeight).attr('width', chartWidth).attr('fill', overlayColor).style('display', 'none');\n\t        }\n\t\n\t        /**\n\t         * Creates the vertical marker\n\t         * @return void\n\t         */\n\t        function drawVerticalMarker() {\n\t            verticalMarkerContainer = svg.select('.metadata-group').append('g').attr('class', 'hover-marker vertical-marker-container').attr('transform', 'translate(9999, 0)');\n\t\n\t            verticalMarkerLine = verticalMarkerContainer.selectAll('path').data([{\n\t                x1: 0,\n\t                y1: 0,\n\t                x2: 0,\n\t                y2: 0\n\t            }]).enter().append('line').classed('vertical-marker', true).attr('x1', 0).attr('y1', chartHeight).attr('x2', 0).attr('y2', 0);\n\t        }\n\t\n\t        /**\n\t         * Finds out which datapoint is closer to the given x position\n\t         * @param  {Number} x0 Date value for data point\n\t         * @param  {Object} d0 Previous datapoint\n\t         * @param  {Object} d1 Next datapoint\n\t         * @return {Object}    d0 or d1, the datapoint with closest date to x0\n\t         */\n\t        function findOutNearestDate(x0, d0, d1) {\n\t            return new Date(x0).getTime() - new Date(d0.date).getTime() > new Date(d1.date).getTime() - new Date(x0).getTime() ? d0 : d1;\n\t        }\n\t\n\t        /**\n\t         * Extract X position on the graph from a given mouse event\n\t         * @param  {Object} event D3 mouse event\n\t         * @return {Number}       Position on the x axis of the mouse\n\t         */\n\t        function getMouseXPosition(event) {\n\t            return d3Selection.mouse(event)[0];\n\t        }\n\t\n\t        /**\n\t         * Finds out the data entry that is closer to the given position on pixels\n\t         * @param  {Number} mouseX X position of the mouse\n\t         * @return {Object}        Data entry that is closer to that x axis position\n\t         */\n\t        function getNearestDataPoint(mouseX) {\n\t            var dateFromInvertedX = xScale.invert(mouseX);\n\t            var bisectDate = d3Array.bisector(getDate).left;\n\t            var dataEntryIndex = bisectDate(dataByDate, dateFromInvertedX, 1);\n\t            var dataEntryForXPosition = dataByDate[dataEntryIndex];\n\t            var previousDataEntryForXPosition = dataByDate[dataEntryIndex - 1];\n\t            var nearestDataPoint = void 0;\n\t\n\t            if (previousDataEntryForXPosition && dataEntryForXPosition) {\n\t                nearestDataPoint = findOutNearestDate(dateFromInvertedX, dataEntryForXPosition, previousDataEntryForXPosition);\n\t            } else {\n\t                nearestDataPoint = dataEntryForXPosition;\n\t            }\n\t\n\t            return nearestDataPoint;\n\t        }\n\t\n\t        /**\n\t         * MouseMove handler, calculates the nearest dataPoint to the cursor\n\t         * and updates metadata related to it\n\t         * @private\n\t         */\n\t        function handleMouseMove() {\n\t            var xPositionOffset = -margin.left,\n\t                //Arbitrary number, will love to know how to assess it\n\t            dataPoint = getNearestDataPoint(getMouseXPosition(this) + xPositionOffset),\n\t                dataPointXPosition = void 0;\n\t\n\t            if (dataPoint) {\n\t                dataPointXPosition = xScale(new Date(dataPoint.date));\n\t                // More verticalMarker to that datapoint\n\t                moveVerticalMarker(dataPointXPosition);\n\t                // Add data points highlighting\n\t                highlightDataPoints(dataPoint);\n\t                // Emit event with xPosition for tooltip or similar feature\n\t                dispatcher.call('customMouseMove', this, dataPoint, topicColorMap, dataPointXPosition);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n\t         * It also resets the container of the vertical marker\n\t         * @private\n\t         */\n\t        function handleMouseOut(data) {\n\t            overlay.style('display', 'none');\n\t            verticalMarkerLine.classed('bc-is-active', false);\n\t            verticalMarkerContainer.attr('transform', 'translate(9999, 0)');\n\t\n\t            dispatcher.call('customMouseOut', this, data);\n\t        }\n\t\n\t        /**\n\t         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n\t         * @private\n\t         */\n\t        function handleMouseOver(data) {\n\t            overlay.style('display', 'block');\n\t            verticalMarkerLine.classed('bc-is-active', true);\n\t\n\t            dispatcher.call('customMouseOver', this, data);\n\t        }\n\t\n\t        /**\n\t         * Creates coloured circles marking where the exact data y value is for a given data point\n\t         * @param  {Object} dataPoint Data point to extract info from\n\t         * @private\n\t         */\n\t        function highlightDataPoints(dataPoint) {\n\t            cleanDataPointHighlights();\n\t\n\t            // sorting the topics based on the order of the colors,\n\t            // so that the order always stays constant\n\t            dataPoint.topics = dataPoint.topics.filter(function (t) {\n\t                return !!t;\n\t            }).sort(function (a, b) {\n\t                return topicColorMap[a.name] < topicColorMap[b.name];\n\t            });\n\t\n\t            dataPoint.topics.forEach(function (_ref15, index) {\n\t                var name = _ref15.name;\n\t\n\t                var marker = verticalMarkerContainer.append('g').classed('circle-container', true),\n\t                    circleSize = 12;\n\t\n\t                marker.append('circle').classed('data-point-highlighter', true).attr('cx', circleSize).attr('cy', 0).attr('r', 5).style('stroke', topicColorMap[name]);\n\t\n\t                marker.attr('transform', 'translate( ' + -circleSize + ', ' + yScale(dataPoint.topics[index].value) + ' )');\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Helper method to update the x position of the vertical marker\n\t         * @param  {Object} dataPoint Data entry to extract info\n\t         * @return void\n\t         */\n\t        function moveVerticalMarker(verticalMarkerXPosition) {\n\t            verticalMarkerContainer.attr('transform', 'translate(' + verticalMarkerXPosition + ',0)');\n\t        }\n\t\n\t        /**\n\t         * Determines if we should add the tooltip related logic depending on the\n\t         * size of the chart and the tooltipThreshold variable value\n\t         * @return {Boolean} Should we build the tooltip?\n\t         */\n\t        function shouldShowTooltip() {\n\t            return width > tooltipThreshold;\n\t        }\n\t\n\t        // API Methods\n\t\n\t        /**\n\t         * Gets or Sets the aspect ratio of the chart\n\t         * @param  {Number} _x Desired aspect ratio for the graph\n\t         * @return { (Number | Module) } Current aspect ratio or Line Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.aspectRatio = function (_x) {\n\t            if (!arguments.length) {\n\t                return aspectRatio;\n\t            }\n\t            aspectRatio = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the colorSchema of the chart\n\t         * @param  {String[]} _x Desired colorSchema for the graph\n\t         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.colorSchema = function (_x) {\n\t            if (!arguments.length) {\n\t                return colorSchema;\n\t            }\n\t            colorSchema = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the dateLabel of the chart\n\t         * @param  {Number} _x Desired dateLabel for the graph\n\t         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.dateLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return dateLabel;\n\t            }\n\t            dateLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x axis grouping\n\t         * @param  {String} _x Desired format\n\t         * @return { (String|Module) }    Current format or module to chain calls\n\t         * @example\n\t         *     line.forceAxisFormat(line.axisTimeCombinations.HOUR_DAY)\n\t         */\n\t        exports.forceAxisFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return forceAxisSettings;\n\t            }\n\t            forceAxisSettings = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x format\n\t         * It requires a `forceAxisFormat` of 'custom' in order to work.\n\t         * NOTE: localization not supported\n\t         * @param  {String} _x              Desired format for x axis\n\t         * @return { (String|Module) }      Current format or module to chain calls\n\t         */\n\t        exports.forcedXFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return forcedXFormat;\n\t            }\n\t            forcedXFormat = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x ticks. It requires a `forceAxisFormat` of 'custom' in order to work.\n\t         * NOTE: This value needs to be a multiple of 2, 5 or 10. They won't always work as expected, as D3 decides at the end\n\t         * how many and where the ticks will appear.\n\t         *\n\t         * @param  {Number} _x              Desired number of x axis ticks (multiple of 2, 5 or 10)\n\t         * @return { (Number|Module) }      Current number or ticks or module to chain calls\n\t         */\n\t        exports.forcedXTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return forcedXTicks;\n\t            }\n\t            forcedXTicks = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the grid mode.\n\t         *\n\t         * @param  {String} _x Desired mode for the grid ('vertical'|'horizontal'|'full')\n\t         * @return { String | module} Current mode of the grid or Line Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.grid = function (_x) {\n\t            if (!arguments.length) {\n\t                return grid;\n\t            }\n\t            grid = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { (Number | Module) } Current height or Line Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            if (aspectRatio) {\n\t                width = Math.ceil(_x / aspectRatio);\n\t            }\n\t            height = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n\t         * By default this is 'false'\n\t         *\n\t         * @param  {Boolean} _x Desired animation flag\n\t         * @return { isAnimated | module} Current isAnimated flag or Chart module\n\t         * @public\n\t         */\n\t        exports.isAnimated = function (_x) {\n\t            if (!arguments.length) {\n\t                return isAnimated;\n\t            }\n\t            isAnimated = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { (Number | Module) } Current margin or Line Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the gradient colors of the line chart when there is only one line\n\t         * @param  {String[]} _x Desired color gradient for the line (array of two hexadecimal numbers)\n\t         * @return { (Number | Module) } Current color gradient or Line Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.lineGradient = function (_x) {\n\t            if (!arguments.length) {\n\t                return singleLineGradientColors;\n\t            }\n\t            singleLineGradientColors = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the minimum width of the graph in order to show the tooltip\n\t         * NOTE: This could also depend on the aspect ratio\n\t         * @param  {Number} _x Desired tooltip threshold for the graph\n\t         * @return { (Number | Module) } Current tooltip threshold or Line Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.tooltipThreshold = function (_x) {\n\t            if (!arguments.length) {\n\t                return tooltipThreshold;\n\t            }\n\t            tooltipThreshold = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the topicLabel of the chart\n\t         * @param  {Number} _x Desired topicLabel for the graph\n\t         * @return { topicLabel | module} Current topicLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.topicLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return topicLabel;\n\t            }\n\t            topicLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabel of the chart\n\t         * @param  {Number} _x Desired valueLabel for the graph\n\t         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabel;\n\t            }\n\t            valueLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the number of verticalTicks of the yAxis on the chart\n\t         * @param  {Number} _x Desired verticalTicks\n\t         * @return { verticalTicks | module} Current verticalTicks or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.verticalTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return verticalTicks;\n\t            }\n\t            verticalTicks = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { (Number | Module) } Current width or Line Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            if (aspectRatio) {\n\t                height = Math.ceil(_x * aspectRatio);\n\t            }\n\t            width = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Pass language tag for the tooltip to localize the date.\n\t         * Feature uses Intl.DateTimeFormat, for compatability and support, refer to\n\t         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n\t         * @param  {String} _x  must be a language tag (BCP 47) like 'en-US' or 'fr-FR'\n\t         * @return { (String|Module) }    Current locale or module to chain calls\n\t         */\n\t        exports.locale = function (_x) {\n\t            if (!arguments.length) {\n\t                return locale;\n\t            }\n\t            locale = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename, title) {\n\t            exportChart.call(exports, svg, filename, title);\n\t        };\n\t\n\t        /**\n\t         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n\t         * We are going to expose this events:\n\t         * customMouseHover, customMouseMove and customMouseOut\n\t         *\n\t         * @return {module} Bar Chart\n\t         * @public\n\t         */\n\t        exports.on = function () {\n\t            var value = dispatcher.on.apply(dispatcher, arguments);\n\t\n\t            return value === dispatcher ? exports : value;\n\t        };\n\t\n\t        /**\n\t         * Exposes the constants to be used to force the x axis to respect a certain granularity\n\t         * current options: MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR\n\t         * @example\n\t         *     line.forceAxisFormat(line.axisTimeCombinations.HOUR_DAY)\n\t         */\n\t        exports.axisTimeCombinations = axisTimeCombinations;\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var _settingsToMajorTickM;\n\t\n\t    var d3Time = __webpack_require__(11);\n\t    var d3TimeFormat = __webpack_require__(12);\n\t\n\t    var _require = __webpack_require__(19),\n\t        axisTimeCombinations = _require.axisTimeCombinations,\n\t        timeBenchmarks = _require.timeBenchmarks;\n\t\n\t    var singleTickWidth = 20;\n\t    var horizontalTickSpacing = 50;\n\t    var minEntryNumForDayFormat = 5;\n\t\n\t    var formatMap = {\n\t        minute: d3TimeFormat.timeFormat('%M m'),\n\t        hour: d3TimeFormat.timeFormat('%H %p'),\n\t        day: d3TimeFormat.timeFormat('%e'),\n\t        daymonth: d3TimeFormat.timeFormat('%d %b'),\n\t        month: d3TimeFormat.timeFormat('%b'),\n\t        year: d3TimeFormat.timeFormat('%Y')\n\t    };\n\t    var localeTimeMap = {\n\t        minute: { minute: 'numeric' },\n\t        hour: { hour: 'numeric' },\n\t        day: { day: 'numeric' },\n\t        daymonth: { day: 'numeric', month: 'short' },\n\t        month: { month: 'short' },\n\t        year: { year: 'numeric' }\n\t    };\n\t    var settingsToMajorTickMap = (_settingsToMajorTickM = {}, _defineProperty(_settingsToMajorTickM, axisTimeCombinations.MINUTE_HOUR, d3Time.timeHour.every(1)), _defineProperty(_settingsToMajorTickM, axisTimeCombinations.HOUR_DAY, d3Time.timeDay.every(1)), _defineProperty(_settingsToMajorTickM, axisTimeCombinations.DAY_MONTH, d3Time.timeMonth.every(1)), _defineProperty(_settingsToMajorTickM, axisTimeCombinations.MONTH_YEAR, d3Time.timeYear.every(1)), _settingsToMajorTickM);\n\t\n\t    /**\n\t     * Figures out the proper settings from the current time span\n\t     * @param  {Number} timeSpan    Span of time charted by the graph in milliseconds\n\t     * @return {String}             Type of settings for the given timeSpan\n\t     */\n\t    var getAxisSettingsFromTimeSpan = function getAxisSettingsFromTimeSpan(timeSpan) {\n\t        var ONE_YEAR = timeBenchmarks.ONE_YEAR,\n\t            ONE_DAY = timeBenchmarks.ONE_DAY;\n\t\n\t        var settings = void 0;\n\t\n\t        if (timeSpan < ONE_DAY) {\n\t            settings = axisTimeCombinations.HOUR_DAY;\n\t        } else if (timeSpan < ONE_YEAR) {\n\t            settings = axisTimeCombinations.DAY_MONTH;\n\t        } else {\n\t            settings = axisTimeCombinations.MONTH_YEAR;\n\t        }\n\t\n\t        return settings;\n\t    };\n\t\n\t    /**\n\t     * Calculates the maximum number of ticks for the x axis\n\t     * @param  {Number} width Chart width\n\t     * @param  {Number} dataPointNumber  Number of entries on the data\n\t     * @return {Number}       Number of ticks to render\n\t     */\n\t    var getMaxNumOfHorizontalTicks = function getMaxNumOfHorizontalTicks(width, dataPointNumber) {\n\t        var ticksForWidth = Math.ceil(width / (singleTickWidth + horizontalTickSpacing));\n\t\n\t        return dataPointNumber < minEntryNumForDayFormat ? d3Time.timeDay : Math.min(dataPointNumber, ticksForWidth);\n\t    };\n\t\n\t    /**\n\t     * Takes a locale (string) and the format to return and returns a function to format dates\n\t     * @param  {String} locale    locale tag eg. en-US, fr-FR, ru-RU\n\t     * @param  {string} timeUnit  minute, hour, day, dayMonth, month, year\n\t     * @return {function}         function that formats dates in the proper locale\n\t     */\n\t    var getLocaleDateFormatter = function getLocaleDateFormatter(locale) {\n\t        var timeUnit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'day';\n\t\n\t        var options = localeTimeMap[timeUnit];\n\t        var formatter = new Intl.DateTimeFormat(locale, options);\n\t\n\t        return function (date) {\n\t            return formatter.format(date);\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Returns tick object to be used when building the x axis\n\t     * @param {dataByDate} dataByDate       Chart data ordered by Date\n\t     * @param {Number} width                Chart width\n\t     * @param {String} settings             Optional forced settings for axis\n\t     * @return {object} tick settings for major and minr axis\n\t     */\n\t    var getXAxisSettings = function getXAxisSettings(dataByDate, width) {\n\t        var settings = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\t        var locale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\t\n\t        var firstDate = new Date(dataByDate[0].date);\n\t        var lastDate = new Date(dataByDate[dataByDate.length - 1].date);\n\t        var dateTimeSpan = lastDate - firstDate;\n\t\n\t        if (locale && (typeof Intl === 'undefined' || (typeof Intl === 'undefined' ? 'undefined' : _typeof(Intl)) === 'object' && !Intl.DateTimeFormat)) {\n\t            locale = null;\n\t        }\n\t\n\t        if (!settings) {\n\t            settings = getAxisSettingsFromTimeSpan(dateTimeSpan);\n\t        }\n\t\n\t        var _settings$split = settings.split('-'),\n\t            _settings$split2 = _slicedToArray(_settings$split, 2),\n\t            minor = _settings$split2[0],\n\t            major = _settings$split2[1];\n\t\n\t        var majorTickValue = settingsToMajorTickMap[settings];\n\t        var minorTickValue = getMaxNumOfHorizontalTicks(width, dataByDate.length);\n\t\n\t        return {\n\t            minor: {\n\t                format: locale ? getLocaleDateFormatter(locale, minor) : formatMap[minor],\n\t                tick: minorTickValue\n\t            },\n\t            major: {\n\t                format: locale ? getLocaleDateFormatter(locale, major) : formatMap[major],\n\t                tick: majorTickValue\n\t            }\n\t        };\n\t    };\n\t\n\t    return {\n\t        getXAxisSettings: getXAxisSettings,\n\t        getLocaleDateFormatter: getLocaleDateFormatter\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Format = __webpack_require__(7);\n\t\n\t    var valueRangeLimits = {\n\t        small: 10,\n\t        medium: 100\n\t    };\n\t    var integerValueFormats = {\n\t        small: d3Format.format(''),\n\t        medium: d3Format.format(''),\n\t        large: d3Format.format('.2s')\n\t    };\n\t    var decimalValueFormats = {\n\t        small: d3Format.format('.3f'),\n\t        medium: d3Format.format('.1f'),\n\t        large: d3Format.format('.2s')\n\t    };\n\t\n\t    function getValueSize(value) {\n\t        var size = 'large';\n\t\n\t        if (value < valueRangeLimits.small) {\n\t            size = 'small';\n\t        } else if (value < valueRangeLimits.medium) {\n\t            size = 'medium';\n\t        }\n\t        return size;\n\t    }\n\t\n\t    /**\n\t     * Formats an integer value depending on its value range\n\t     * @param  {Number} value Decimal point value to format\n\t     * @return {Number}       Formatted value to show\n\t     */\n\t    function formatIntegerValue(value) {\n\t        var format = integerValueFormats[getValueSize(value)];\n\t\n\t        return format(value);\n\t    }\n\t\n\t    /**\n\t     * Formats a floating point value depending on its value range\n\t     * @param  {Number} value Decimal point value to format\n\t     * @return {Number}       Formatted value to show\n\t     */\n\t    function formatDecimalValue(value) {\n\t        var format = decimalValueFormats[getValueSize(value)];\n\t\n\t        return format(value);\n\t    }\n\t\n\t    return {\n\t        formatDecimalValue: formatDecimalValue,\n\t        formatIntegerValue: formatIntegerValue\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Format = __webpack_require__(7);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t    var d3TimeFormat = __webpack_require__(12);\n\t\n\t    var _require = __webpack_require__(19),\n\t        axisTimeCombinations = _require.axisTimeCombinations;\n\t\n\t    var _require2 = __webpack_require__(30),\n\t        formatIntegerValue = _require2.formatIntegerValue,\n\t        formatDecimalValue = _require2.formatDecimalValue;\n\t\n\t    var _require3 = __webpack_require__(26),\n\t        isInteger = _require3.isInteger;\n\t\n\t    /**\n\t     * Tooltip Component reusable API class that renders a\n\t     * simple and configurable tooltip element for Britechart's\n\t     * line chart or stacked area chart.\n\t     *\n\t     * @module Tooltip\n\t     * @tutorial tooltip\n\t     * @requires d3-array, d3-axis, d3-dispatch, d3-format, d3-scale, d3-selection, d3-transition\n\t     *\n\t     * @example\n\t     * var lineChart = line(),\n\t     *     tooltip = tooltip();\n\t     *\n\t     * tooltip\n\t     *     .title('Tooltip title');\n\t     *\n\t     * lineChart\n\t     *     .width(500)\n\t     *     .on('customMouseOver', function() {\n\t     *          tooltip.show();\n\t     *     })\n\t     *     .on('customMouseMove', function(dataPoint, topicColorMap, dataPointXPosition) {\n\t     *          tooltip.update(dataPoint, topicColorMap, dataPointXPosition);\n\t     *     })\n\t     *     .on('customMouseOut', function() {\n\t     *          tooltip.hide();\n\t     *     });\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(lineChart);\n\t     *\n\t     * d3Selection.select('.metadata-group .hover-marker')\n\t     *     .datum([])\n\t     *     .call(tooltip);\n\t     *\n\t     */\n\t\n\t\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 2,\n\t            right: 2,\n\t            bottom: 2,\n\t            left: 2\n\t        },\n\t            width = 250,\n\t            height = 45,\n\t            title = 'Tooltip title',\n\t\n\t\n\t        // tooltip\n\t        tooltip = void 0,\n\t            tooltipOffset = {\n\t            y: -55,\n\t            x: 0\n\t        },\n\t            tooltipMaxTopicLength = 170,\n\t            tooltipTextContainer = void 0,\n\t            tooltipDivider = void 0,\n\t            tooltipBody = void 0,\n\t            tooltipTitle = void 0,\n\t            tooltipWidth = 250,\n\t            tooltipHeight = 48,\n\t            tooltipBorderRadius = 3,\n\t            ttTextX = 0,\n\t            ttTextY = 37,\n\t            textSize = void 0,\n\t            entryLineLimit = 3,\n\t\n\t\n\t        // Animations\n\t        mouseChaseDuration = 100,\n\t            ease = d3Ease.easeQuadInOut,\n\t            circleYOffset = 8,\n\t            colorMap = void 0,\n\t            bodyFillColor = '#FFFFFF',\n\t            borderStrokeColor = '#D2D6DF',\n\t            titleFillColor = '#6D717A',\n\t            textFillColor = '#282C35',\n\t            tooltipTextColor = '#000000',\n\t            dateLabel = 'date',\n\t            valueLabel = 'value',\n\t            nameLabel = 'name',\n\t            topicLabel = 'topics',\n\t            defaultAxisSettings = axisTimeCombinations.DAY_MONTH,\n\t            forceAxisSettings = null,\n\t            forceOrder = [],\n\t\n\t\n\t        // formats\n\t        monthDayYearFormat = d3TimeFormat.timeFormat('%b %d, %Y'),\n\t            monthDayHourFormat = d3TimeFormat.timeFormat('%b %d, %I %p'),\n\t            locale = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            data = void 0,\n\t            svg = void 0;\n\t\n\t        /**\n\t         * This function creates the graph using the selection as container\n\t         * @param {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {Object} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = _data;\n\t\n\t                buildSVG(this);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the tooltip\n\t         * Also applies the Margin convention\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('tooltip-container-group', true).attr('transform', 'translate( ' + margin.left + ', ' + margin.top + ')');\n\t\n\t            container.append('g').classed('tooltip-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('g').classed('britechart britechart-tooltip', true);\n\t\n\t                buildContainerGroups();\n\t                drawTooltip();\n\t            }\n\t            svg.transition().attr('width', width).attr('height', height);\n\t\n\t            // Hidden by default\n\t            exports.hide();\n\t        }\n\t\n\t        /**\n\t         * Resets the tooltipBody content\n\t         * @return void\n\t         */\n\t        function cleanContent() {\n\t            tooltipBody.selectAll('text').remove();\n\t            tooltipBody.selectAll('circle').remove();\n\t        }\n\t\n\t        /**\n\t         * Draws the different elements of the Tooltip box\n\t         * @return void\n\t         */\n\t        function drawTooltip() {\n\t            tooltipTextContainer = svg.selectAll('.tooltip-group').append('g').classed('tooltip-text', true);\n\t\n\t            tooltip = tooltipTextContainer.append('rect').classed('tooltip-text-container', true).attr('x', -tooltipWidth / 4 + 8).attr('y', 0).attr('width', tooltipWidth).attr('height', tooltipHeight).attr('rx', tooltipBorderRadius).attr('ry', tooltipBorderRadius).style('fill', bodyFillColor).style('stroke', borderStrokeColor).style('stroke-width', 1);\n\t\n\t            tooltipTitle = tooltipTextContainer.append('text').classed('tooltip-title', true).attr('x', -tooltipWidth / 4 + 17).attr('dy', '.35em').attr('y', 16).style('fill', titleFillColor);\n\t\n\t            tooltipDivider = tooltipTextContainer.append('line').classed('tooltip-divider', true).attr('x1', -tooltipWidth / 4 + 15).attr('x2', 265).attr('y1', 31).attr('y2', 31).style('stroke', borderStrokeColor);\n\t\n\t            tooltipBody = tooltipTextContainer.append('g').classed('tooltip-body', true).style('transform', 'translateY(8px)').style('fill', textFillColor);\n\t        }\n\t\n\t        /**\n\t         * Formats the value depending on its characteristics\n\t         * @param  {Number} value Value to format\n\t         * @return {Number}       Formatted value\n\t         */\n\t        function getFormattedValue(value) {\n\t            if (!value) {\n\t                return 0;\n\t            }\n\t\n\t            if (isInteger(value)) {\n\t                value = formatIntegerValue(value);\n\t            } else {\n\t                value = formatDecimalValue(value);\n\t            }\n\t\n\t            return value;\n\t        }\n\t\n\t        /**\n\t         * Calculates the desired position for the tooltip\n\t         * @param  {Number} mouseX             Current horizontal mouse position\n\t         * @param  {Number} mouseY             Current vertical mouse position\n\t         * @return {Number[]}                  X and Y position\n\t         */\n\t        function getTooltipPosition(_ref) {\n\t            var _ref2 = _slicedToArray(_ref, 2),\n\t                mouseX = _ref2[0],\n\t                mouseY = _ref2[1];\n\t\n\t            var tooltipX = void 0,\n\t                tooltipY = void 0;\n\t\n\t            // show tooltip to the right\n\t            if (mouseX - tooltipWidth < 0) {\n\t                // Tooltip on the right\n\t                tooltipX = tooltipWidth - 185;\n\t            } else {\n\t                // Tooltip on the left\n\t                tooltipX = -205;\n\t            }\n\t\n\t            if (mouseY) {\n\t                tooltipY = tooltipOffset.y;\n\t                // tooltipY = mouseY + tooltipOffset.y;\n\t            } else {\n\t                tooltipY = tooltipOffset.y;\n\t            }\n\t\n\t            return [tooltipX, tooltipY];\n\t        }\n\t\n\t        /**\n\t         * Extracts the value from the data object\n\t         * @param  {Object} data Data value containing the info\n\t         * @return {String}      Value to show\n\t         */\n\t        function getValueText(data) {\n\t            var value = data[valueLabel];\n\t            var valueText = void 0;\n\t\n\t            if (data.missingValue) {\n\t                valueText = '-';\n\t            } else {\n\t                valueText = getFormattedValue(value).toString();\n\t            }\n\t\n\t            return valueText;\n\t        }\n\t\n\t        /**\n\t         * Resets the height of the tooltip and the pointer for the text\n\t         * position\n\t         */\n\t        function resetSizeAndPositionPointers() {\n\t            tooltipHeight = 48;\n\t            ttTextY = 37;\n\t            ttTextX = 0;\n\t        }\n\t\n\t        /**\n\t         * Draws the data entries inside the tooltip for a given topic\n\t         * @param  {Object} topic Topic to extract data from\n\t         * @return void\n\t         */\n\t        function updateTopicContent(topic) {\n\t            var name = topic[nameLabel],\n\t                tooltipRight = void 0,\n\t                tooltipLeftText = void 0,\n\t                tooltipRightText = void 0,\n\t                elementText = void 0;\n\t\n\t            tooltipLeftText = topic.topicName || name;\n\t            tooltipRightText = getValueText(topic);\n\t\n\t            elementText = tooltipBody.append('text').classed('tooltip-left-text', true).attr('dy', '1em').attr('x', ttTextX - 20).attr('y', ttTextY).style('fill', tooltipTextColor).text(tooltipLeftText).call(textWrap, tooltipMaxTopicLength, -25);\n\t\n\t            tooltipRight = tooltipBody.append('text').classed('tooltip-right-text', true).attr('dy', '1em').attr('x', ttTextX + 8).attr('y', ttTextY).style('fill', tooltipTextColor).text(tooltipRightText);\n\t\n\t            textSize = elementText.node().getBBox();\n\t            tooltipHeight += textSize.height + 5;\n\t\n\t            // Not sure if necessary\n\t            tooltipRight.attr('x', tooltipWidth - tooltipRight.node().getBBox().width - 10 - tooltipWidth / 4);\n\t\n\t            tooltipBody.append('circle').classed('tooltip-circle', true).attr('cx', 23 - tooltipWidth / 4).attr('cy', ttTextY + circleYOffset).attr('r', 5).style('fill', colorMap[name]).style('stroke-width', 1);\n\t\n\t            ttTextY += textSize.height + 7;\n\t        }\n\t\n\t        /**\n\t         * Updates size and position of tooltip depending on the side of the chart we are in\n\t         * TODO: This needs a refactor, following the mini-tooltip code.\n\t         *\n\t         * @param  {Object} dataPoint DataPoint of the tooltip\n\t         * @param  {Number} xPosition DataPoint's x position in the chart\n\t         * @param  {Number} xPosition DataPoint's y position in the chart\n\t         * @return void\n\t         */\n\t        function updatePositionAndSize(dataPoint, xPosition, yPosition) {\n\t            var _getTooltipPosition = getTooltipPosition([xPosition, yPosition]),\n\t                _getTooltipPosition2 = _slicedToArray(_getTooltipPosition, 2),\n\t                tooltipX = _getTooltipPosition2[0],\n\t                tooltipY = _getTooltipPosition2[1];\n\t\n\t            tooltip.attr('width', tooltipWidth).attr('height', tooltipHeight + 10);\n\t\n\t            tooltipTextContainer.transition().duration(mouseChaseDuration).ease(ease).attr('transform', 'translate(' + tooltipX + ', ' + tooltipY + ')');\n\t\n\t            tooltipDivider.attr('x2', tooltipWidth - 60);\n\t        }\n\t\n\t        /**\n\t         * Updates value of tooltipTitle with the data meaning and the date\n\t         * @param  {Object} dataPoint Point of data to use as source\n\t         * @return void\n\t         */\n\t        function updateTitle(dataPoint) {\n\t            var date = new Date(dataPoint[dateLabel]),\n\t                tooltipTitleText = title + ' - ' + formatDate(date);\n\t\n\t            tooltipTitle.text(tooltipTitleText);\n\t        }\n\t\n\t        /**\n\t         * Figures out which date format to use when showing the date of the current data entry\n\t         * @return {Function} The proper date formatting function\n\t         */\n\t        function formatDate(date) {\n\t            var settings = forceAxisSettings || defaultAxisSettings;\n\t            var format = null;\n\t            var localeOptions = { month: 'short', day: 'numeric' };\n\t\n\t            if (settings === axisTimeCombinations.DAY_MONTH || settings === axisTimeCombinations.MONTH_YEAR) {\n\t                format = monthDayYearFormat;\n\t                localeOptions.year = 'numeric';\n\t            } else if (settings === axisTimeCombinations.HOUR_DAY || settings === axisTimeCombinations.MINUTE_HOUR) {\n\t                format = monthDayHourFormat;\n\t                localeOptions.hour = 'numeric';\n\t            }\n\t\n\t            if (locale && typeof Intl !== 'undefined' && (typeof Intl === 'undefined' ? 'undefined' : _typeof(Intl)) === 'object' && Intl.DateTimeFormat) {\n\t                var f = Intl.DateTimeFormat(locale, localeOptions);\n\t\n\t                return f.format(date);\n\t            }\n\t\n\t            return format(date);\n\t        }\n\t\n\t        /**\n\t         * Helper method to sort the passed topics array by the names passed int he order arary\n\t         * @param  {Object[]} topics    Topics data, retrieved from datapoint passed by line chart\n\t         * @param  {Object[]} order     Array of names in the order to sort topics by\n\t         * @return {Object[]}           sorted topics object\n\t         */\n\t        function _sortByForceOrder(topics) {\n\t            var order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : forceOrder;\n\t\n\t            return forceOrder.map(function (orderName) {\n\t                return topics.filter(function (_ref3) {\n\t                    var name = _ref3.name;\n\t                    return name === orderName;\n\t                })[0];\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Sorts topic by alphabetical order for arrays of objects with a name proeprty\n\t         * @param  {Array} topics   List of topic objects\n\t         * @return {Array}          List of topic name strings\n\t         */\n\t        function _sortByAlpha(topics) {\n\t            return topics.map(function (d) {\n\t                return d;\n\t            }).sort(function (a, b) {\n\t                if (a.name > b.name) return 1;\n\t                if (a.name === b.name) return 0;\n\t                return -1;\n\t            });\n\t\n\t            var otherIndex = topics.map(function (_ref4) {\n\t                var name = _ref4.name;\n\t                return name;\n\t            }).indexOf('Other');\n\t\n\t            if (otherIndex >= 0) {\n\t                var other = topics.splice(otherIndex, 1);\n\t\n\t                topics = topics.concat(other);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Wraps a text given the text, width, x position and textFormatter function\n\t         * @param  {D3Selection} text  Selection with the text to wrap inside\n\t         * @param  {Number} width Desired max width for that line\n\t         * @param  {Number} xpos  Initial x position of the text\n\t         *\n\t         * REF: http://bl.ocks.org/mbostock/7555321\n\t         * More discussions on https://github.com/mbostock/d3/issues/1642\n\t         */\n\t        function textWrap(text, width, xpos) {\n\t            xpos = xpos || 0;\n\t\n\t            text.each(function () {\n\t                var words, word, line, lineNumber, lineHeight, y, dy, tspan;\n\t\n\t                text = d3Selection.select(this);\n\t\n\t                words = text.text().split(/\\s+/).reverse();\n\t                line = [];\n\t                lineNumber = 0;\n\t                lineHeight = 1.2;\n\t                y = text.attr('y');\n\t                dy = parseFloat(text.attr('dy'));\n\t                tspan = text.text(null).append('tspan').attr('x', xpos).attr('y', y).attr('dy', dy + 'em');\n\t\n\t                while (word = words.pop()) {\n\t                    line.push(word);\n\t                    tspan.text(line.join(' '));\n\t\n\t                    if (tspan.node().getComputedTextLength() > width) {\n\t                        line.pop();\n\t                        tspan.text(line.join(' '));\n\t\n\t                        if (lineNumber < entryLineLimit - 1) {\n\t                            line = [word];\n\t                            tspan = text.append('tspan').attr('x', xpos).attr('y', y).attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws the data entries inside the tooltip\n\t         * @param  {Object} dataPoint   Data entry from to take the info\n\t         * @return void\n\t         */\n\t        function updateContent(dataPoint) {\n\t            var topics = dataPoint[topicLabel];\n\t\n\t            // sort order by forceOrder array if passed\n\t            if (forceOrder.length) {\n\t                topics = _sortByForceOrder(topics);\n\t            } else if (topics.length && topics[0].name) {\n\t                topics = _sortByAlpha(topics);\n\t            }\n\t\n\t            cleanContent();\n\t            updateTitle(dataPoint);\n\t            resetSizeAndPositionPointers();\n\t            topics.forEach(updateTopicContent);\n\t        }\n\t\n\t        /**\n\t         * Updates tooltip title, content, size and position\n\t         * sorts by alphatical name order if not forced order given\n\t         *\n\t         * @param  {lineChartPointByDate} dataPoint  Current datapoint to show info about\n\t         * @param  {Number} xPosition           Position of the mouse on the X axis\n\t         * @return void\n\t         */\n\t        function updateTooltip(dataPoint, xPosition, yPosition) {\n\t            updateContent(dataPoint);\n\t            updatePositionAndSize(dataPoint, xPosition, yPosition);\n\t        }\n\t\n\t        // API\n\t        /**\n\t        * Gets or Sets the nameLabel of the data\n\t        * @param  {Number} _x Desired nameLabel\n\t        * @return { nameLabel | module} Current nameLabel or Chart module to chain calls\n\t        * @public\n\t        */\n\t        exports.nameLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return nameLabel;\n\t            }\n\t            nameLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the dateLabel of the data\n\t         * @param  {Number} _x Desired dateLabel\n\t         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.dateLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return dateLabel;\n\t            }\n\t            dateLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabel of the data\n\t         * @param  {Number} _x Desired valueLabel\n\t         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabel;\n\t            }\n\t            valueLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the topicLabel of the data\n\t         * @param  {Number} _x Desired topicLabel\n\t         * @return { topicLabel | module} Current topicLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.topicLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return topicLabel;\n\t            }\n\t            topicLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Hides the tooltip\n\t         * @return {Module} Tooltip module to chain calls\n\t         * @public\n\t         */\n\t        exports.hide = function () {\n\t            svg.style('display', 'none');\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Shows the tooltip\n\t         * @return {Module} Tooltip module to chain calls\n\t         * @public\n\t         */\n\t        exports.show = function () {\n\t            svg.style('display', 'block');\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the title of the tooltip\n\t         * @param  {string} _x Desired title\n\t         * @return { string | module} Current title or module to chain calls\n\t         * @public\n\t         */\n\t        exports.title = function (_x) {\n\t            if (!arguments.length) {\n\t                return title;\n\t            }\n\t            title = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Pass an override for the ordering of your tooltip\n\t         * @param  {Object[]} _x    Array of the names of your tooltip items\n\t         * @return { overrideOrder | module} Current overrideOrder or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.forceOrder = function (_x) {\n\t            if (!arguments.length) {\n\t                return forceOrder;\n\t            }\n\t            forceOrder = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Updates the position and content of the tooltip\n\t         * @param  {Object} dataPoint    Datapoint to represent\n\t         * @param  {Object} colorMapping Color scheme of the topics\n\t         * @param  {Number} position     X-scale position in pixels\n\t         * @return {Module} Tooltip module to chain calls\n\t         * @public\n\t         */\n\t        exports.update = function (dataPoint, colorMapping, xPosition) {\n\t            var yPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\t\n\t            colorMap = colorMapping;\n\t            updateTooltip(dataPoint, xPosition, yPosition);\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the tooltip to use a certain date format\n\t         * @param  {String} _x Desired format\n\t         * @return { (String|Module) }    Current format or module to chain calls\n\t         */\n\t        exports.forceDateRange = function (_x) {\n\t            if (!arguments.length) {\n\t                return forceAxisSettings || defaultAxisSettings;\n\t            }\n\t            forceAxisSettings = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Pass locale for the tooltip to render the date in\n\t         * @param  {String} _x  must be a locale tag like 'en-US' or 'fr-FR'\n\t         * @return { (String|Module) }    Current locale or module to chain calls\n\t         */\n\t        exports.locale = function (_x) {\n\t            if (!arguments.length) {\n\t                return locale;\n\t            }\n\t            locale = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * constants to be used to force the x axis to respect a certain granularity\n\t         * current options: HOUR_DAY, DAY_MONTH, MONTH_YEAR\n\t         * @example tooltip.forceDateRange(tooltip.axisTimeCombinations.HOUR_DAY)\n\t         */\n\t        exports.axisTimeCombinations = axisTimeCombinations;\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Format = __webpack_require__(7);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t\n\t    /**\n\t     * Mini Tooltip Component reusable API class that renders a\n\t     * simple and configurable tooltip element for Britechart's\n\t     * bar and step chart.\n\t     *\n\t     * @module Mini-tooltip\n\t     * @tutorial bar\n\t     * @requires d3\n\t     *\n\t     * @example\n\t     * var barChart = line(),\n\t     *     miniTooltip = miniTooltip();\n\t     *\n\t     * barChart\n\t     *     .width(500)\n\t     *     .height(300)\n\t     *     .on('customMouseHover', miniTooltip.show)\n\t     *     .on('customMouseMove', miniTooltip.update)\n\t     *     .on('customMouseOut', miniTooltip.hide);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(barChart);\n\t     *\n\t     * d3Selection.select('.metadata-group .mini-tooltip-container')\n\t     *     .datum([])\n\t     *     .call(miniTooltip);\n\t     *\n\t     */\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 12,\n\t            right: 12,\n\t            bottom: 12,\n\t            left: 12\n\t        },\n\t            width = 100,\n\t            height = 100,\n\t\n\t\n\t        // Optional Title\n\t        title = '',\n\t\n\t\n\t        // Data Format\n\t        valueLabel = 'value',\n\t            nameLabel = 'name',\n\t\n\t\n\t        // Animations\n\t        mouseChaseDuration = 100,\n\t            ease = d3Ease.easeQuadInOut,\n\t\n\t\n\t        // tooltip\n\t        tooltipBackground = void 0,\n\t            backgroundBorderRadius = 1,\n\t            tooltipTextContainer = void 0,\n\t            tooltipOffset = {\n\t            y: 0,\n\t            x: 20\n\t        },\n\t\n\t\n\t        // Fonts\n\t        textSize = 14,\n\t            textLineHeight = 1.5,\n\t            valueTextSize = 27,\n\t            valueTextLineHeight = 1.18,\n\t\n\t\n\t        // Colors\n\t        bodyFillColor = '#FFFFFF',\n\t            borderStrokeColor = '#D2D6DF',\n\t            titleFillColor = '#666a73',\n\t            nameTextFillColor = '#666a73',\n\t            valueTextFillColor = '#45494E',\n\t            valueTextWeight = 200,\n\t\n\t\n\t        // formats\n\t        tooltipValueFormat = d3Format.format('.2f'),\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            svg = void 0;\n\t\n\t        /**\n\t         * This function creates the graph using the selection as container\n\t         * @param {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {Array} _data The data to attach and generate the chart (usually an empty array)\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t\n\t                buildSVG(this);\n\t                drawTooltip();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the tooltip\n\t         * Also applies the Margin convention\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('tooltip-container-group', true).attr('transform', 'translate( ' + margin.left + ', ' + margin.top + ')');\n\t\n\t            container.append('g').classed('tooltip-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('g').classed('britechart britechart-mini-tooltip', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t            svg.transition().attr('width', width).attr('height', height);\n\t\n\t            // Hidden by default\n\t            exports.hide();\n\t        }\n\t\n\t        /**\n\t         * Draws the different elements of the Tooltip box\n\t         * @return void\n\t         */\n\t        function drawTooltip() {\n\t            tooltipTextContainer = svg.selectAll('.tooltip-group').append('g').classed('tooltip-text', true);\n\t\n\t            tooltipBackground = tooltipTextContainer.append('rect').classed('tooltip-background', true).attr('width', width).attr('height', height).attr('rx', backgroundBorderRadius).attr('ry', backgroundBorderRadius).attr('y', -margin.top).attr('x', -margin.left).style('fill', bodyFillColor).style('stroke', borderStrokeColor).style('stroke-width', 1).style('pointer-events', 'none').style('opacity', 0.9);\n\t        }\n\t\n\t        /**\n\t         * Figures out the max length of the tooltip lines\n\t         * @param  {D3Selection[]} texts    List of svg elements of each line\n\t         * @return {Number}                 Max size of the lines\n\t         */\n\t        function getMaxLengthLine() {\n\t            for (var _len = arguments.length, texts = Array(_len), _key = 0; _key < _len; _key++) {\n\t                texts[_key] = arguments[_key];\n\t            }\n\t\n\t            var textSizes = texts.filter(function (x) {\n\t                return !!x;\n\t            }).map(function (x) {\n\t                return x.node().getBBox().width;\n\t            });\n\t\n\t            return d3Array.max(textSizes);\n\t        }\n\t\n\t        /**\n\t         * Calculates the desired position for the tooltip\n\t         * @param  {Number} mouseX             Current horizontal mouse position\n\t         * @param  {Number} mouseY             Current vertical mouse position\n\t         * @param  {Number} parentChartWidth   Parent's chart width\n\t         * @param  {Number} parentChartHeight  Parent's chart height\n\t         * @return {Number[]}                  X and Y position\n\t         * @private\n\t         */\n\t        function getTooltipPosition(_ref, _ref2) {\n\t            var _ref4 = _slicedToArray(_ref, 2),\n\t                mouseX = _ref4[0],\n\t                mouseY = _ref4[1];\n\t\n\t            var _ref3 = _slicedToArray(_ref2, 2),\n\t                parentChartWidth = _ref3[0],\n\t                parentChartHeight = _ref3[1];\n\t\n\t            var tooltipX = void 0,\n\t                tooltipY = void 0;\n\t\n\t            if (hasEnoughHorizontalRoom(parentChartWidth, mouseX)) {\n\t                tooltipX = mouseX + tooltipOffset.x;\n\t            } else {\n\t                tooltipX = mouseX - chartWidth - tooltipOffset.x - margin.right;\n\t            }\n\t\n\t            if (hasEnoughVerticalRoom(parentChartHeight, mouseY)) {\n\t                tooltipY = mouseY + tooltipOffset.y;\n\t            } else {\n\t                tooltipY = mouseY - chartHeight - tooltipOffset.y - margin.bottom;\n\t            }\n\t\n\t            return [tooltipX, tooltipY];\n\t        }\n\t\n\t        /**\n\t         * Checks if the mouse is over the bounds of the parent chart\n\t         * @param  {Number}  chartWidth Parent's chart\n\t         * @param  {Number}  positionX  Mouse position\n\t         * @return {Boolean}            If the mouse position allows space for the tooltip\n\t         */\n\t        function hasEnoughHorizontalRoom(parentChartWidth, positionX) {\n\t            return parentChartWidth - margin.left - margin.right - chartWidth - positionX > 0;\n\t        }\n\t\n\t        /**\n\t         * Checks if the mouse is over the bounds of the parent chart\n\t         * @param  {Number}  chartWidth Parent's chart\n\t         * @param  {Number}  positionX  Mouse position\n\t         * @return {Boolean}            If the mouse position allows space for the tooltip\n\t         */\n\t        function hasEnoughVerticalRoom(parentChartHeight, positionY) {\n\t            return parentChartHeight - margin.top - margin.bottom - chartHeight - positionY > 0;\n\t        }\n\t\n\t        /**\n\t         * Hides the tooltip\n\t         * @return {void}\n\t         */\n\t        function hideTooltip() {\n\t            svg.style('display', 'none');\n\t        }\n\t\n\t        /**\n\t         * Shows the tooltip updating it's content\n\t         * @param  {Object} dataPoint Data point from the chart\n\t         * @return {void}\n\t         */\n\t        function showTooltip(dataPoint) {\n\t            updateContent(dataPoint);\n\t            svg.style('display', 'block');\n\t        }\n\t\n\t        /**\n\t         * Draws the data entries inside the tooltip for a given topic\n\t         * @param  {Object} topic Topic to extract data from\n\t         * @return void\n\t         */\n\t        function updateContent() {\n\t            var dataPoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t            var value = dataPoint[valueLabel] || '',\n\t                name = dataPoint[nameLabel] || '',\n\t                lineHeight = textSize * textLineHeight,\n\t                valueLineHeight = valueTextSize * valueTextLineHeight,\n\t                defaultDy = '1em',\n\t                temporalHeight = 0,\n\t                tooltipValue = void 0,\n\t                tooltipName = void 0,\n\t                tooltipTitle = void 0;\n\t\n\t            tooltipTextContainer.selectAll('text').remove();\n\t\n\t            if (title) {\n\t                tooltipTitle = tooltipTextContainer.append('text').classed('mini-tooltip-title', true).attr('dy', defaultDy).attr('y', 0).style('fill', titleFillColor).style('font-size', textSize).text(title);\n\t\n\t                temporalHeight = lineHeight + temporalHeight;\n\t            }\n\t\n\t            if (name) {\n\t                tooltipName = tooltipTextContainer.append('text').classed('mini-tooltip-name', true).attr('dy', defaultDy).attr('y', temporalHeight || 0).style('fill', nameTextFillColor).style('font-size', textSize).text(name);\n\t\n\t                temporalHeight = lineHeight + temporalHeight;\n\t            }\n\t\n\t            if (value) {\n\t                tooltipValue = tooltipTextContainer.append('text').classed('mini-tooltip-value', true).attr('dy', defaultDy).attr('y', temporalHeight || 0).style('fill', valueTextFillColor).style('font-size', valueTextSize).style('font-weight', valueTextWeight).text(tooltipValueFormat(value));\n\t\n\t                temporalHeight = valueLineHeight + temporalHeight;\n\t            }\n\t\n\t            chartWidth = getMaxLengthLine(tooltipName, tooltipTitle, tooltipValue);\n\t            chartHeight = temporalHeight;\n\t        }\n\t\n\t        /**\n\t         * Updates size and position of tooltip depending on the side of the chart we are in\n\t         * @param  {Object} dataPoint DataPoint of the tooltip\n\t         * @return void\n\t         */\n\t        function updatePositionAndSize(mousePosition, parentChartSize) {\n\t            var _getTooltipPosition = getTooltipPosition(mousePosition, parentChartSize),\n\t                _getTooltipPosition2 = _slicedToArray(_getTooltipPosition, 2),\n\t                tooltipX = _getTooltipPosition2[0],\n\t                tooltipY = _getTooltipPosition2[1];\n\t\n\t            svg.transition().duration(mouseChaseDuration).ease(ease).attr('height', chartHeight + margin.top + margin.bottom).attr('width', chartWidth + margin.left + margin.right).attr('transform', 'translate(' + tooltipX + ',' + tooltipY + ')');\n\t\n\t            tooltipBackground.attr('height', chartHeight + margin.top + margin.bottom).attr('width', chartWidth + margin.left + margin.right);\n\t        }\n\t\n\t        /**\n\t         * Updates tooltip content, size and position\n\t         *\n\t         * @param  {Object} dataPoint Current datapoint to show info about\n\t         * @return void\n\t         */\n\t        function updateTooltip(dataPoint, position, chartSize) {\n\t            updateContent(dataPoint);\n\t            updatePositionAndSize(position, chartSize);\n\t        }\n\t\n\t        /**\n\t         * Hides the tooltip\n\t         * @return {Module} Tooltip module to chain calls\n\t         * @public\n\t         */\n\t        exports.hide = function () {\n\t            hideTooltip();\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets data's nameLabel\n\t         * @param  {text} _x Desired nameLabel\n\t         * @return { text | module} nameLabel or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.nameLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return nameLabel;\n\t            }\n\t            nameLabel = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Shows the tooltip\n\t         * @return {Module} Tooltip module to chain calls\n\t         * @public\n\t         */\n\t        exports.show = function () {\n\t            showTooltip();\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the title of the tooltip\n\t         * @param  {string} _x Desired title\n\t         * @return { string | module} Current title or module to chain calls\n\t         * @public\n\t         */\n\t        exports.title = function (_x) {\n\t            if (!arguments.length) {\n\t                return title;\n\t            }\n\t            title = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Updates the position and content of the tooltip\n\t         * @param  {Object} dataPoint       Datapoint of the hovered element\n\t         * @param  {Array} mousePosition    Mouse position relative to the parent chart [x, y]\n\t         * @param  {Array} chartSize        Parent chart size [x, y]\n\t         * @return {module}                 Current component\n\t         */\n\t        exports.update = function (dataPoint, mousePosition, chartSize) {\n\t            updateTooltip(dataPoint, mousePosition, chartSize);\n\t\n\t            return this;\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Shape = __webpack_require__(24);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t\n\t    var _require = __webpack_require__(17),\n\t        exportChart = _require.exportChart;\n\t\n\t    var colorHelper = __webpack_require__(18);\n\t\n\t    /**\n\t     * @typedef SparklineChartData\n\t     * @type {Object[]}\n\t     * @property {Number} value        Value of the group (required)\n\t     * @property {String} name         Name of the group (required)\n\t     *\n\t     * @example\n\t     * [\n\t     *     {\n\t     *         value: 1,\n\t     *         date: '2011-01-06T00:00:00Z'\n\t     *     },\n\t     *     {\n\t     *         value: 2,\n\t     *         date: '2011-01-07T00:00:00Z'\n\t     *     }\n\t     */\n\t\n\t    /**\n\t     * Sparkline Chart reusable API module that allows us\n\t     * rendering a sparkline configurable chart.\n\t     *\n\t     * @module Sparkline\n\t     * @tutorial sparkline\n\t     * @requires d3\n\t     *\n\t     * @example\n\t     * var sparkLineChart = sparkline();\n\t     *\n\t     * sparkLineChart\n\t     *     .width(200)\n\t     *     .height(100);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(sparkLineChart);\n\t     *\n\t     */\n\t    return function module() {\n\t\n\t        var margin = {\n\t            left: 5,\n\t            right: 5,\n\t            top: 5,\n\t            bottom: 5\n\t        },\n\t            width = 100,\n\t            height = 30,\n\t            xScale = void 0,\n\t            yScale = void 0,\n\t            areaGradient = ['#F5FDFF', '#F6FEFC'],\n\t            lineGradient = colorHelper.colorGradients.greenBlueGradient,\n\t            svg = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            data = void 0,\n\t            hasArea = true,\n\t            isAnimated = false,\n\t            clipDuration = 3000,\n\t            ease = d3Ease.easeQuadInOut,\n\t            line = void 0,\n\t            markerSize = 1.5,\n\t            valueLabel = 'value',\n\t            dateLabel = 'date',\n\t\n\t\n\t        // getters\n\t        getDate = function getDate(_ref) {\n\t            var date = _ref.date;\n\t            return date;\n\t        },\n\t            getValue = function getValue(_ref2) {\n\t            var value = _ref2.value;\n\t            return value;\n\t        };\n\t\n\t        /**\n\t         * This function creates the graph using the selection and data provided\n\t         *\n\t         * @param {D3Selection} _selection A d3 selection that represents\n\t         * the container(s) where the chart(s) will be rendered\n\t         * @param {SparklineChartData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = cleanData(_data);\n\t\n\t                buildScales();\n\t                buildSVG(this);\n\t                createGradients();\n\t                createMaskingClip();\n\t                drawLine();\n\t                drawArea();\n\t                drawEndMarker();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * NOTE: The order of drawing of this group elements is really important,\n\t         * as everything else will be drawn on top of them\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('metadata-group', true);\n\t        }\n\t\n\t        /**\n\t         * Creates the x, y and color scales of the chart\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t            xScale = d3Scale.scaleLinear().domain(d3Array.extent(data, getDate)).range([0, chartWidth]);\n\t\n\t            yScale = d3Scale.scaleLinear().domain(d3Array.extent(data, getValue)).range([chartHeight, 0]);\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart sparkline', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Cleaning data adding the proper format\n\t         * @param  {array} data Data\n\t         * @private\n\t         */\n\t        function cleanData(data) {\n\t            return data.map(function (d) {\n\t                d.date = new Date(d[dateLabel]);\n\t                d.value = +d[valueLabel];\n\t\n\t                return d;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates the gradient on the area below the line\n\t         * @return {void}\n\t         */\n\t        function createGradients() {\n\t            var metadataGroup = svg.select('.metadata-group');\n\t\n\t            metadataGroup.append('linearGradient').attr('id', 'sparkline-area-gradient').attr('gradientUnits', 'userSpaceOnUse').attr('x1', 0).attr('x2', xScale(data[data.length - 1].date)).attr('y1', 0).attr('y2', 0).selectAll('stop').data([{ offset: '0%', color: areaGradient[0] }, { offset: '100%', color: areaGradient[1] }]).enter().append('stop').attr('offset', function (_ref3) {\n\t                var offset = _ref3.offset;\n\t                return offset;\n\t            }).attr('stop-color', function (_ref4) {\n\t                var color = _ref4.color;\n\t                return color;\n\t            });\n\t\n\t            metadataGroup.append('linearGradient').attr('id', 'sparkline-line-gradient').attr('gradientUnits', 'userSpaceOnUse').attr('x1', 0).attr('x2', xScale(data[data.length - 1].date)).attr('y1', 0).attr('y2', 0).selectAll('stop').data([{ offset: '0%', color: lineGradient[0] }, { offset: '100%', color: lineGradient[1] }]).enter().append('stop').attr('offset', function (_ref5) {\n\t                var offset = _ref5.offset;\n\t                return offset;\n\t            }).attr('stop-color', function (_ref6) {\n\t                var color = _ref6.color;\n\t                return color;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates a masking clip that would help us fake an animation if the\n\t         * proper flag is true\n\t         *\n\t         * @return {void}\n\t         */\n\t        function createMaskingClip() {\n\t            if (isAnimated) {\n\t                svg.select('.metadata-group').append('clipPath').attr('id', 'maskingClip').append('rect').attr('width', 0).attr('height', height);\n\t\n\t                d3Selection.select('#maskingClip rect').transition().ease(ease).duration(clipDuration).attr('width', width);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the area that will be placed below the line\n\t         * @private\n\t         */\n\t        function drawArea() {\n\t            var area = d3Shape.area().x(function (_ref7) {\n\t                var date = _ref7.date;\n\t                return xScale(date);\n\t            }).y0(function () {\n\t                return yScale(0);\n\t            }).y1(function (_ref8) {\n\t                var value = _ref8.value;\n\t                return yScale(value);\n\t            }).curve(d3Shape.curveBasis);\n\t\n\t            svg.select('.chart-group').append('path').datum(data).attr('class', 'sparkline-area').attr('d', area).attr('clip-path', 'url(#maskingClip)');\n\t        }\n\t\n\t        /**\n\t         * Draws the line element within the chart group\n\t         * @private\n\t         */\n\t        function drawLine() {\n\t            line = d3Shape.line().curve(d3Shape.curveBasis).x(function (_ref9) {\n\t                var date = _ref9.date;\n\t                return xScale(date);\n\t            }).y(function (_ref10) {\n\t                var value = _ref10.value;\n\t                return yScale(value);\n\t            });\n\t\n\t            svg.select('.chart-group').append('path').datum(data).attr('class', 'line').attr('d', line).attr('clip-path', 'url(#maskingClip)');\n\t        }\n\t\n\t        /**\n\t         * Draws a marker at the end of the sparkline\n\t         */\n\t        function drawEndMarker() {\n\t            svg.selectAll('.chart-group').append('circle').attr('class', 'sparkline-circle').attr('cx', xScale(data[data.length - 1].date)).attr('cy', yScale(data[data.length - 1].value)).attr('r', markerSize);\n\t        }\n\t\n\t        // Accessors\n\t        /**\n\t         * Gets or Sets the dateLabel of the chart\n\t         * @param  {Number} _x Desired dateLabel for the graph\n\t         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.dateLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return dateLabel;\n\t            }\n\t            dateLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the duration of the animation\n\t         * @param  {Number} _x Desired animation duration for the graph\n\t         * @return { dateLabel | module} Current animation duration or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.duration = function (_x) {\n\t            if (!arguments.length) {\n\t                return clipDuration;\n\t            }\n\t            clipDuration = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the areaGradient of the chart\n\t         * @param  {String[]} _x Desired areaGradient for the graph\n\t         * @return { areaGradient | module} Current areaGradient or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.areaGradient = function (_x) {\n\t            if (!arguments.length) {\n\t                return areaGradient;\n\t            }\n\t            areaGradient = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the lineGradient of the chart\n\t         * @param  {String[]} _x Desired lineGradient for the graph\n\t         * @return { lineGradient | module} Current lineGradient or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.lineGradient = function (_x) {\n\t            if (!arguments.length) {\n\t                return lineGradient;\n\t            }\n\t            lineGradient = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            height = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n\t         * By default this is 'false'\n\t         *\n\t         * @param  {Boolean} _x Desired animation flag\n\t         * @return { isAnimated | module} Current isAnimated flag or Chart module\n\t         * @public\n\t         */\n\t        exports.isAnimated = function (_x) {\n\t            if (!arguments.length) {\n\t                return isAnimated;\n\t            }\n\t            isAnimated = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { margin | module} Current margin or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { width | module} Current width or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            width = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabel of the chart\n\t         * @param  {Number} _x Desired valueLabel for the graph\n\t         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabel;\n\t            }\n\t            valueLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename, title) {\n\t            exportChart.call(exports, svg, filename, title);\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Axis = __webpack_require__(4);\n\t    var d3Collection = __webpack_require__(9);\n\t    var d3Dispatch = __webpack_require__(6);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Shape = __webpack_require__(24);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t    var d3TimeFormat = __webpack_require__(12);\n\t\n\t    var assign = __webpack_require__(35);\n\t\n\t    var _require = __webpack_require__(17),\n\t        exportChart = _require.exportChart;\n\t\n\t    var colorHelper = __webpack_require__(18);\n\t\n\t    var _require2 = __webpack_require__(29),\n\t        getXAxisSettings = _require2.getXAxisSettings,\n\t        getLocaleDateFormatter = _require2.getLocaleDateFormatter;\n\t\n\t    var _require3 = __webpack_require__(26),\n\t        isInteger = _require3.isInteger;\n\t\n\t    var _require4 = __webpack_require__(19),\n\t        axisTimeCombinations = _require4.axisTimeCombinations;\n\t\n\t    var _require5 = __webpack_require__(30),\n\t        formatIntegerValue = _require5.formatIntegerValue,\n\t        formatDecimalValue = _require5.formatDecimalValue;\n\t\n\t    var uniq = function uniq(arrArg) {\n\t        return arrArg.filter(function (elem, pos, arr) {\n\t            return arr.indexOf(elem) === pos;\n\t        });\n\t    };\n\t\n\t    /**\n\t     * @typdef D3Layout\n\t     * @type function\n\t     */\n\t\n\t    /**\n\t     * @typedef areaChartData\n\t     * @type {Object}\n\t     * @property {Object[]} data       All data entries\n\t     * @property {String} date         Date of the entry\n\t     * @property {String} name         Name of the entry\n\t     * @property {Number} value        Value of the entry\n\t     *\n\t     * @example\n\t     * {\n\t     *     'data': [\n\t     *         {\n\t     *             \"date\": \"2011-01-05T00:00:00Z\",\n\t     *             \"name\": \"Direct\",\n\t     *             \"value\": 0\n\t     *         }\n\t     *     ]\n\t     * }\n\t     */\n\t\n\t    /**\n\t     * Stacked Area Chart reusable API module that allows us\n\t     * rendering a multi area and configurable chart.\n\t     *\n\t     * @module Stacked-area\n\t     * @tutorial stacked-area\n\t     * @requires d3-array, d3-axis, d3-collection, d3-ease, d3-scale, d3-shape, d3-selection, d3-time, d3-time-format\n\t     *\n\t     * @example\n\t     * let stackedArea = stackedArea();\n\t     *\n\t     * stackedArea\n\t     *     .width(containerWidth);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset.data)\n\t     *     .call(stackedArea);\n\t     *\n\t     */\n\t\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 70,\n\t            right: 30,\n\t            bottom: 60,\n\t            left: 70\n\t        },\n\t            width = 960,\n\t            height = 500,\n\t            xScale = void 0,\n\t            xAxis = void 0,\n\t            xMonthAxis = void 0,\n\t            yScale = void 0,\n\t            yAxis = void 0,\n\t            aspectRatio = null,\n\t            monthAxisPadding = 30,\n\t            verticalTicks = 5,\n\t            yTickTextYOffset = -8,\n\t            yTickTextXOffset = -20,\n\t            tickPadding = 5,\n\t            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\t            areaOpacity = 0.64,\n\t            categoryColorMap = void 0,\n\t            order = void 0,\n\t            forceAxisSettings = null,\n\t            forcedXTicks = null,\n\t            forcedXFormat = null,\n\t            locale = void 0,\n\t            baseLine = void 0,\n\t            layers = void 0,\n\t            layersInitial = void 0,\n\t            area = void 0,\n\t\n\t\n\t        // Area Animation\n\t        maxAreaNumber = 8,\n\t            areaAnimationDelayStep = 20,\n\t            areaAnimationDelays = d3Array.range(areaAnimationDelayStep, maxAreaNumber * areaAnimationDelayStep, areaAnimationDelayStep),\n\t            overlay = void 0,\n\t            verticalMarkerContainer = void 0,\n\t            verticalMarker = void 0,\n\t            epsilon = void 0,\n\t            dataPoints = {},\n\t            pointsSize = 1.5,\n\t            pointsColor = '#c0c6cc',\n\t            pointsBorderColor = '#ffffff',\n\t            isAnimated = false,\n\t            ease = d3Ease.easeQuadInOut,\n\t            areaAnimationDuration = 1000,\n\t            svg = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            data = void 0,\n\t            dataByDate = void 0,\n\t            dataByDateFormatted = void 0,\n\t            dataByDateZeroed = void 0,\n\t            verticalGridLines = void 0,\n\t            horizontalGridLines = void 0,\n\t            grid = null,\n\t            tooltipThreshold = 480,\n\t            xAxisPadding = {\n\t            top: 0,\n\t            left: 15,\n\t            bottom: 0,\n\t            right: 0\n\t        },\n\t            dateLabel = 'date',\n\t            valueLabel = 'value',\n\t            keyLabel = 'name',\n\t\n\t\n\t        // getters\n\t        getName = function getName(_ref) {\n\t            var name = _ref.name;\n\t            return name;\n\t        },\n\t            getDate = function getDate(_ref2) {\n\t            var date = _ref2.date;\n\t            return date;\n\t        },\n\t\n\t\n\t        // events\n\t        dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\t\n\t        /**\n\t          * This function creates the graph using the selection and data provided\n\t          * @param {D3Selection} _selection A d3 selection that represents\n\t          * the container(s) where the chart(s) will be rendered\n\t          * @param {areaChartData} _data The data to attach and generate the chart\n\t          */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = cleanData(_data);\n\t                dataByDate = getDataByDate(data);\n\t\n\t                buildLayers();\n\t                buildScales();\n\t                buildSVG(this);\n\t                buildAxis();\n\t                drawAxis();\n\t                drawStackedAreas();\n\t\n\t                if (shouldShowTooltip()) {\n\t                    drawHoverOverlay();\n\t                    drawVerticalMarker();\n\t                    addMouseEvents();\n\t                }\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Adds events to the container group if the environment is not mobile\n\t         * Adding: mouseover, mouseout and mousemove\n\t         */\n\t        function addMouseEvents() {\n\t            svg.on('mouseover', handleMouseOver).on('mouseout', handleMouseOut).on('mousemove', handleMouseMove);\n\t        }\n\t\n\t        /**\n\t         * Formats the value depending on its characteristics\n\t         * @param  {Number} value Value to format\n\t         * @return {Number}       Formatted value\n\t         */\n\t        function getFormattedValue(value) {\n\t            var format = void 0;\n\t\n\t            if (isInteger(value)) {\n\t                format = formatIntegerValue;\n\t            } else {\n\t                format = formatDecimalValue;\n\t            }\n\t\n\t            return format(value);\n\t        }\n\t\n\t        /**\n\t         * Creates the d3 x and y axis, setting orientations\n\t         * @private\n\t         */\n\t        function buildAxis() {\n\t            var dataSpan = yScale.domain()[1] - yScale.domain()[0];\n\t            var yTickNumber = dataSpan < verticalTicks - 1 ? dataSpan : verticalTicks;\n\t            var minor = void 0,\n\t                major = void 0;\n\t\n\t            if (forceAxisSettings === 'custom' && typeof forcedXFormat === 'string') {\n\t                minor = {\n\t                    tick: forcedXTicks,\n\t                    format: d3TimeFormat.timeFormat(forcedXFormat)\n\t                };\n\t                major = null;\n\t            } else {\n\t                var _getXAxisSettings = getXAxisSettings(dataByDate, width, forceAxisSettings, locale);\n\t\n\t                minor = _getXAxisSettings.minor;\n\t                major = _getXAxisSettings.major;\n\t\n\t\n\t                xMonthAxis = d3Axis.axisBottom(xScale).ticks(major.tick).tickSize(0, 0).tickFormat(major.format);\n\t            }\n\t\n\t            xAxis = d3Axis.axisBottom(xScale).ticks(minor.tick).tickSize(10, 0).tickPadding(tickPadding).tickFormat(minor.format);\n\t\n\t            yAxis = d3Axis.axisRight(yScale).ticks(yTickNumber).tickSize([0]).tickPadding(tickPadding).tickFormat(getFormattedValue);\n\t\n\t            drawGridLines(minor.tick, yTickNumber);\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * NOTE: The order of drawing of this group elements is really important,\n\t         * as everything else will be drawn on top of them\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container.append('g').classed('x-axis-group', true).append('g').classed('x axis', true);\n\t            container.selectAll('.x-axis-group').append('g').classed('month-axis', true);\n\t            container.append('g').classed('y-axis-group axis', true);\n\t            container.append('g').classed('grid-lines-group', true);\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('metadata-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds the stacked layers layout\n\t         * @return {D3Layout} Layout for drawing the chart\n\t         * @private\n\t         */\n\t        function buildLayers() {\n\t            dataByDateFormatted = dataByDate.map(function (d) {\n\t                return assign({}, d, d.values);\n\t            }).map(function (d) {\n\t                Object.keys(d).forEach(function (k) {\n\t                    var entry = d[k];\n\t\n\t                    if (entry && entry.name) {\n\t                        d[entry.name] = entry.value;\n\t                    }\n\t                });\n\t\n\t                return assign({}, d, {\n\t                    date: new Date(d['key'])\n\t                });\n\t            });\n\t\n\t            dataByDateZeroed = dataByDate.map(function (d) {\n\t                return assign({}, d, d.values);\n\t            }).map(function (d) {\n\t                Object.keys(d).forEach(function (k) {\n\t                    var entry = d[k];\n\t\n\t                    if (entry && entry.name) {\n\t                        d[entry.name] = 0;\n\t                    }\n\t                });\n\t\n\t                return assign({}, d, {\n\t                    date: new Date(d['key'])\n\t                });\n\t            });\n\t\n\t            var initialTotalsObject = uniq(data.map(function (_ref3) {\n\t                var name = _ref3.name;\n\t                return name;\n\t            })).reduce(function (memo, key) {\n\t                return assign({}, memo, _defineProperty({}, key, 0));\n\t            }, {});\n\t\n\t            var totals = data.reduce(function (memo, item) {\n\t                return assign({}, memo, _defineProperty({}, item.name, memo[item.name] += item.value));\n\t            }, initialTotalsObject);\n\t\n\t            order = formatOrder(totals);\n\t\n\t            var stack3 = d3Shape.stack().keys(order).order(d3Shape.stackOrderNone).offset(d3Shape.stackOffsetNone);\n\t\n\t            layersInitial = stack3(dataByDateZeroed);\n\t            layers = stack3(dataByDateFormatted);\n\t        }\n\t\n\t        /**\n\t         * Takes an object with all topics as keys and their aggregate totals as values,\n\t         * sorts them into a list by descending total value and\n\t         * moves \"Other\" to the end\n\t         * @param  {Object} totals  Keys of all the topics and their corresponding totals\n\t         * @return {Array}          List of topic names in aggregate order\n\t         */\n\t        function formatOrder(totals) {\n\t            var order = Object.keys(totals).sort(function (a, b) {\n\t                if (totals[a] > totals[b]) return -1;\n\t                if (totals[a] === totals[b]) return 0;\n\t                return 1;\n\t            });\n\t\n\t            var otherIndex = order.indexOf('Other');\n\t\n\t            if (otherIndex >= 0) {\n\t                var other = order.splice(otherIndex, 1);\n\t\n\t                order = order.concat(other);\n\t            }\n\t\n\t            return order;\n\t        }\n\t\n\t        /**\n\t         * Creates the x, y and color scales of the chart\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t            xScale = d3Scale.scaleTime().domain(d3Array.extent(dataByDate, function (_ref4) {\n\t                var date = _ref4.date;\n\t                return date;\n\t            })).rangeRound([0, chartWidth]);\n\t\n\t            yScale = d3Scale.scaleLinear().domain([0, getMaxValueByDate()]).rangeRound([chartHeight, 0]).nice();\n\t\n\t            categoryColorMap = order.reduce(function (memo, topic, index) {\n\t                return assign({}, memo, _defineProperty({}, topic, colorSchema[index]));\n\t            }, {});\n\t        }\n\t\n\t        /**\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart stacked-area', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Parses dates and values into JS Date objects and numbers\n\t         * @param  {obj} data Raw data from JSON file\n\t         * @return {obj}      Parsed data with values and dates\n\t         */\n\t        function cleanData(data) {\n\t            return data.map(function (d) {\n\t                d.date = new Date(d[dateLabel]), d.value = +d[valueLabel];\n\t\n\t                return d;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws the x and y axis on the svg object within their\n\t         * respective groups\n\t         * @private\n\t         */\n\t        function drawAxis() {\n\t            svg.select('.x-axis-group .axis.x').attr('transform', 'translate( 0, ' + chartHeight + ' )').call(xAxis);\n\t\n\t            if (forceAxisSettings !== 'custom') {\n\t                svg.select('.x-axis-group .month-axis').attr('transform', 'translate(0, ' + (chartHeight + monthAxisPadding) + ')').call(xMonthAxis);\n\t            }\n\t\n\t            svg.select('.y-axis-group.axis').attr('transform', 'translate( ' + -xAxisPadding.left + ', 0)').call(yAxis).call(adjustYTickLabels);\n\t\n\t            // Moving the YAxis tick labels to the right side\n\t            // d3Selection.selectAll('.y-axis-group .tick text')\n\t            //     .attr('transform', `translate( ${-chartWidth - yTickTextXOffset}, ${yTickTextYOffset})` );\n\t        }\n\t\n\t        /**\n\t         * Adjusts the position of the y axis' ticks\n\t         * @param  {D3Selection} selection Y axis group\n\t         * @return void\n\t         */\n\t        function adjustYTickLabels(selection) {\n\t            selection.selectAll('.tick text').attr('transform', 'translate(' + yTickTextXOffset + ', ' + yTickTextYOffset + ')');\n\t        }\n\t\n\t        /**\n\t         * Creates SVG dot elements for each data entry and draws them\n\t         * TODO: Plug\n\t         */\n\t        function drawDataReferencePoints() {\n\t            // Creates Dots on Data points\n\t            var points = svg.select('.chart-group').selectAll('.dots').data(layers).enter().append('g').attr('class', 'dots').attr('d', function (_ref5) {\n\t                var values = _ref5.values;\n\t                return area(values);\n\t            }).attr('clip-path', 'url(#clip)');\n\t\n\t            // Processes the points\n\t            // TODO: Optimize this code\n\t            points.selectAll('.dot').data(function (_ref6, index) {\n\t                var values = _ref6.values;\n\t                return values.map(function (point) {\n\t                    return { index: index, point: point };\n\t                });\n\t            }).enter().append('circle').attr('class', 'dot').attr('r', function () {\n\t                return pointsSize;\n\t            }).attr('fill', function () {\n\t                return pointsColor;\n\t            }).attr('stroke-width', '0').attr('stroke', pointsBorderColor).attr('transform', function (d) {\n\t                var point = d.point;\n\t\n\t                var key = xScale(point.date);\n\t\n\t                dataPoints[key] = dataPoints[key] || [];\n\t                dataPoints[key].push(d);\n\t\n\t                var date = point.date,\n\t                    y = point.y,\n\t                    y0 = point.y0;\n\t\n\t                return 'translate( ' + xScale(date) + ', ' + yScale(y + y0) + ' )';\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws grid lines on the background of the chart\n\t         * @return void\n\t         */\n\t        function drawGridLines(xTicks, yTicks) {\n\t            if (grid === 'horizontal' || grid === 'full') {\n\t                horizontalGridLines = svg.select('.grid-lines-group').selectAll('line.horizontal-grid-line').data(yScale.ticks(yTicks)).enter().append('line').attr('class', 'horizontal-grid-line').attr('x1', -xAxisPadding.left - 30).attr('x2', chartWidth).attr('y1', function (d) {\n\t                    return yScale(d);\n\t                }).attr('y2', function (d) {\n\t                    return yScale(d);\n\t                });\n\t            }\n\t\n\t            if (grid === 'vertical' || grid === 'full') {\n\t                verticalGridLines = svg.select('.grid-lines-group').selectAll('line.vertical-grid-line').data(xScale.ticks(xTicks)).enter().append('line').attr('class', 'vertical-grid-line').attr('y1', 0).attr('y2', chartHeight).attr('x1', function (d) {\n\t                    return xScale(d);\n\t                }).attr('x2', function (d) {\n\t                    return xScale(d);\n\t                });\n\t            }\n\t\n\t            //draw a horizontal line to extend x-axis till the edges\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-x-line').data([0]).enter().append('line').attr('class', 'extended-x-line').attr('x1', -xAxisPadding.left - 30).attr('x2', chartWidth).attr('y1', height - margin.bottom - margin.top).attr('y2', height - margin.bottom - margin.top);\n\t        }\n\t\n\t        /**\n\t         * Draws an overlay element over the graph\n\t         * @private\n\t         */\n\t        function drawHoverOverlay() {\n\t            overlay = svg.select('.metadata-group').append('rect').attr('class', 'overlay').attr('y1', 0).attr('y2', chartHeight).attr('height', chartHeight).attr('width', chartWidth).attr('fill', 'rgba(0,0,0,0)').style('display', 'none');\n\t        }\n\t\n\t        /**\n\t         * Draws the different areas into the chart-group element\n\t         * @private\n\t         */\n\t        function drawStackedAreas() {\n\t            var series = void 0;\n\t\n\t            area = d3Shape.area().curve(d3Shape.curveMonotoneX).x(function (_ref7) {\n\t                var data = _ref7.data;\n\t                return xScale(data.date);\n\t            }).y0(function (d) {\n\t                return yScale(d[0]);\n\t            }).y1(function (d) {\n\t                return yScale(d[1]);\n\t            });\n\t\n\t            if (isAnimated) {\n\t                series = svg.select('.chart-group').selectAll('.layer').data(layersInitial).enter().append('g').classed('layer-container', true);\n\t\n\t                series.append('path').attr('class', 'layer').attr('d', area).style('fill', function (_ref8) {\n\t                    var key = _ref8.key;\n\t                    return categoryColorMap[key];\n\t                });\n\t\n\t                // Update\n\t                svg.select('.chart-group').selectAll('.layer').data(layers).transition().delay(function (_, i) {\n\t                    return areaAnimationDelays[i];\n\t                }).duration(areaAnimationDuration).ease(ease).attr('d', area).style('opacity', areaOpacity).style('fill', function (_ref9) {\n\t                    var key = _ref9.key;\n\t                    return categoryColorMap[key];\n\t                });\n\t            } else {\n\t                series = svg.select('.chart-group').selectAll('.layer').data(layers).enter().append('g').classed('layer-container', true);\n\t\n\t                series.append('path').attr('class', 'layer').attr('d', area).style('fill', function (_ref10) {\n\t                    var key = _ref10.key;\n\t                    return categoryColorMap[key];\n\t                });\n\t\n\t                // Update\n\t                series.attr('d', area).style('opacity', areaOpacity).style('fill', function (_ref11) {\n\t                    var key = _ref11.key;\n\t                    return categoryColorMap[key];\n\t                });\n\t            }\n\t\n\t            // Exit\n\t            series.exit().transition().style('opacity', 0).remove();\n\t        }\n\t\n\t        /**\n\t         * Creates the vertical marker\n\t         * @return void\n\t         */\n\t        function drawVerticalMarker() {\n\t            verticalMarkerContainer = svg.select('.metadata-group').append('g').attr('class', 'vertical-marker-container').attr('transform', 'translate(9999, 0)');\n\t\n\t            verticalMarker = verticalMarkerContainer.selectAll('path').data([{\n\t                x1: 0,\n\t                y1: 0,\n\t                x2: 0,\n\t                y2: 0\n\t            }]).enter().append('line').classed('vertical-marker', true).attr('x1', 0).attr('y1', chartHeight).attr('x2', 0).attr('y2', 0);\n\t        }\n\t\n\t        /**\n\t         * Removes all the datapoints highlighter circles added to the marker container\n\t         * @return void\n\t         */\n\t        function eraseDataPointHighlights() {\n\t            verticalMarkerContainer.selectAll('.circle-container').remove();\n\t        }\n\t\n\t        /**\n\t         * Orders the data by date for consumption on the chart tooltip\n\t         * @param  {areaChartData} data    Chart data\n\t         * @return {Object[]}               Chart data ordered by date\n\t         * @private\n\t         */\n\t        function getDataByDate(data) {\n\t            return d3Collection.nest().key(getDate).entries(data.sort(function (a, b) {\n\t                return a.date - b.date;\n\t            })).map(function (d) {\n\t                return assign({}, d, {\n\t                    date: new Date(d.key)\n\t                });\n\t            });\n\t\n\t            // let b =  d3Collection.nest()\n\t            //                     .key(getDate).sortKeys(d3Array.ascending)\n\t            //                     .entries(data);\n\t        }\n\t\n\t        /**\n\t         * Computes the maximum sum of values for any date\n\t         *\n\t         * @return {Number} Max value\n\t         */\n\t        function getMaxValueByDate() {\n\t            var keys = uniq(data.map(function (o) {\n\t                return o.name;\n\t            }));\n\t            var maxValueByDate = d3Array.max(dataByDateFormatted, function (d) {\n\t                var vals = keys.map(function (key) {\n\t                    return d[key];\n\t                });\n\t\n\t                return d3Array.sum(vals);\n\t            });\n\t\n\t            return maxValueByDate;\n\t        }\n\t\n\t        /**\n\t         * Extract X position on the chart from a given mouse event\n\t         * @param  {obj} event D3 mouse event\n\t         * @return {Number}       Position on the x axis of the mouse\n\t         * @private\n\t         */\n\t        function getMouseXPosition(event) {\n\t            return d3Selection.mouse(event)[0];\n\t        }\n\t\n\t        /**\n\t         * Finds out the data entry that is closer to the given position on pixels\n\t         * @param  {Number} mouseX X position of the mouse\n\t         * @return {obj}        Data entry that is closer to that x axis position\n\t         */\n\t        function getNearestDataPoint(mouseX) {\n\t            var points = dataByDate.filter(function (_ref12) {\n\t                var date = _ref12.date;\n\t                return Math.abs(xScale(date) - mouseX) <= epsilon;\n\t            });\n\t\n\t            if (points.length) {\n\t                return points[0];\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Epsilon is the value given to the number representing half of the distance in\n\t         * pixels between two date data points\n\t         * @return {Number} half distance between any two points\n\t         */\n\t        function setEpsilon() {\n\t            var dates = dataByDate.map(function (_ref13) {\n\t                var date = _ref13.date;\n\t                return date;\n\t            });\n\t\n\t            epsilon = (xScale(dates[1]) - xScale(dates[0])) / 2;\n\t        }\n\t\n\t        /**\n\t         * MouseMove handler, calculates the nearest dataPoint to the cursor\n\t         * and updates metadata related to it\n\t         * @private\n\t         */\n\t        function handleMouseMove() {\n\t            epsilon || setEpsilon();\n\t\n\t            var dataPoint = getNearestDataPoint(getMouseXPosition(this) - margin.left),\n\t                dataPointXPosition = void 0;\n\t\n\t            if (dataPoint) {\n\t                dataPointXPosition = xScale(new Date(dataPoint.key));\n\t                // Move verticalMarker to that datapoint\n\t                moveVerticalMarker(dataPointXPosition);\n\t                // Add data points highlighting\n\t                highlightDataPoints(dataPoint);\n\t                // Emit event with xPosition for tooltip or similar feature\n\t                dispatcher.call('customMouseMove', this, dataPoint, categoryColorMap, dataPointXPosition);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n\t         * It also resets the container of the vertical marker\n\t         * @private\n\t         */\n\t        function handleMouseOut(data) {\n\t            overlay.style('display', 'none');\n\t            verticalMarker.classed('bc-is-active', false);\n\t            verticalMarkerContainer.attr('transform', 'translate(9999, 0)');\n\t\n\t            dispatcher.call('customMouseOut', this, data);\n\t        }\n\t\n\t        /**\n\t         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n\t         * @private\n\t         */\n\t        function handleMouseOver(data) {\n\t            overlay.style('display', 'block');\n\t            verticalMarker.classed('bc-is-active', true);\n\t\n\t            dispatcher.call('customMouseOver', this, data);\n\t        }\n\t\n\t        /**\n\t         * Creates coloured circles marking where the exact data y value is for a given data point\n\t         * @param  {obj} dataPoint Data point to extract info from\n\t         * @private\n\t         */\n\t        function highlightDataPoints(_ref14) {\n\t            var values = _ref14.values;\n\t\n\t            var accumulator = 0;\n\t\n\t            eraseDataPointHighlights();\n\t\n\t            // ensure order stays constant\n\t            values = values.filter(function (v) {\n\t                return !!v;\n\t            }).sort(function (a, b) {\n\t                return order.indexOf(a.name) > order.indexOf(b.name);\n\t            });\n\t\n\t            values.forEach(function (_ref15, index) {\n\t                var name = _ref15.name;\n\t\n\t                var marker = verticalMarkerContainer.append('g').classed('circle-container', true),\n\t                    circleSize = 12;\n\t\n\t                accumulator = accumulator + values[index][valueLabel];\n\t\n\t                marker.append('circle').classed('data-point-highlighter', true).attr('cx', circleSize).attr('cy', 0).attr('r', 5).style('stroke-width', 2).style('stroke', categoryColorMap[name]);\n\t\n\t                marker.attr('transform', 'translate( ' + -circleSize + ', ' + yScale(accumulator) + ' )');\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Helper method to update the x position of the vertical marker\n\t         * @param  {obj} dataPoint Data entry to extract info\n\t         * @return void\n\t         */\n\t        function moveVerticalMarker(verticalMarkerXPosition) {\n\t            verticalMarkerContainer.attr('transform', 'translate(' + verticalMarkerXPosition + ',0)');\n\t        }\n\t\n\t        /**\n\t         * Determines if we should add the tooltip related logic depending on the\n\t         * size of the chart and the tooltipThreshold variable value\n\t         * @return {boolean} Should we build the tooltip?\n\t         * @private\n\t         */\n\t        function shouldShowTooltip() {\n\t            return width > tooltipThreshold;\n\t        }\n\t\n\t        // Accessors\n\t\n\t        /**\n\t         * Gets or Sets the opacity of the stacked areas in the chart (all of them will have the same opacity)\n\t         * @param  {Object} _x                  Opacity to get/set\n\t         * @return { opacity | module}          Current opacity or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.areaOpacity = function (_x) {\n\t            if (!arguments.length) {\n\t                return areaOpacity;\n\t            }\n\t            areaOpacity = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the aspect ratio of the chart\n\t         * @param  {Number} _x Desired aspect ratio for the graph\n\t         * @return { (Number | Module) } Current aspect ratio or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.aspectRatio = function (_x) {\n\t            if (!arguments.length) {\n\t                return aspectRatio;\n\t            }\n\t            aspectRatio = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the colorSchema of the chart\n\t         * @param  {String[]} _x Desired colorSchema for the graph\n\t         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.colorSchema = function (_x) {\n\t            if (!arguments.length) {\n\t                return colorSchema;\n\t            }\n\t            colorSchema = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the dateLabel of the chart\n\t         * @param  {Number} _x Desired dateLabel for the graph\n\t         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.dateLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return dateLabel;\n\t            }\n\t            dateLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x axis grouping\n\t         * @param  {String} _x Desired format\n\t         * @return { (String|Module) }    Current format or module to chain calls\n\t         * @example\n\t         *     area.forceAxisFormat(area.axisTimeCombinations.HOUR_DAY)\n\t         */\n\t        exports.forceAxisFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return forceAxisSettings;\n\t            }\n\t            forceAxisSettings = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x format\n\t         * It requires a `forceAxisFormat` of 'custom' in order to work.\n\t         * NOTE: localization not supported\n\t         * @param  {String} _x              Desired format for x axis\n\t         * @return { (String|Module) }      Current format or module to chain calls\n\t         */\n\t        exports.forcedXFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return forcedXFormat;\n\t            }\n\t            forcedXFormat = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x ticks. It requires a `forceAxisFormat` of 'custom' in order to work.\n\t         * NOTE: This value needs to be a multiple of 2, 5 or 10. They won't always work as expected, as D3 decides at the end\n\t         * how many and where the ticks will appear.\n\t         *\n\t         * @param  {Number} _x              Desired number of x axis ticks (multiple of 2, 5 or 10)\n\t         * @return { (Number|Module) }      Current number or ticks or module to chain calls\n\t         */\n\t        exports.forcedXTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return forcedXTicks;\n\t            }\n\t            forcedXTicks = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the grid mode.\n\t         *\n\t         * @param  {String} _x Desired mode for the grid ('vertical'|'horizontal'|'full')\n\t         * @return { String | module} Current mode of the grid or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.grid = function (_x) {\n\t            if (!arguments.length) {\n\t                return grid;\n\t            }\n\t            grid = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            if (aspectRatio) {\n\t                width = Math.ceil(_x / aspectRatio);\n\t            }\n\t            height = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n\t         * By default this is 'false'\n\t         *\n\t         * @param  {Boolean} _x Desired animation flag\n\t         * @return { isAnimated | module} Current isAnimated flag or Chart module\n\t         * @public\n\t         */\n\t        exports.isAnimated = function (_x) {\n\t            if (!arguments.length) {\n\t                return isAnimated;\n\t            }\n\t            isAnimated = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the keyLabel of the chart\n\t         * @param  {Number} _x Desired keyLabel for the graph\n\t         * @return { keyLabel | module} Current keyLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.keyLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return keyLabel;\n\t            }\n\t            keyLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { margin | module} Current margin or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the minimum width of the graph in order to show the tooltip\n\t         * NOTE: This could also depend on the aspect ratio\n\t         *\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { tooltipThreshold | module} Current tooltipThreshold or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.tooltipThreshold = function (_x) {\n\t            if (!arguments.length) {\n\t                return tooltipThreshold;\n\t            }\n\t            tooltipThreshold = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabel of the chart\n\t         * @param  {Number} _x Desired valueLabel for the graph\n\t         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabel;\n\t            }\n\t            valueLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the number of verticalTicks of the yAxis on the chart\n\t         * @param  {Number} _x Desired verticalTicks\n\t         * @return { verticalTicks | module} Current verticalTicks or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.verticalTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return verticalTicks;\n\t            }\n\t            verticalTicks = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { width | module} Current width or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            if (aspectRatio) {\n\t                height = Math.ceil(_x * aspectRatio);\n\t            }\n\t            width = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Pass language tag for the tooltip to localize the date.\n\t         * Feature uses Intl.DateTimeFormat, for compatability and support, refer to\n\t         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n\t         * @param  {String} _x  must be a language tag (BCP 47) like 'en-US' or 'fr-FR'\n\t         * @return { (String|Module) }    Current locale or module to chain calls\n\t         */\n\t        exports.locale = function (_x) {\n\t            if (!arguments.length) {\n\t                return locale;\n\t            }\n\t            locale = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename, title) {\n\t            exportChart.call(exports, svg, filename, title);\n\t        };\n\t\n\t        /**\n\t         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n\t         * We are going to expose this events:\n\t         * customMouseOver, customMouseMove and customMouseOut\n\t         *\n\t         * @return {module} Bar Chart\n\t         * @public\n\t         */\n\t        exports.on = function () {\n\t            var value = dispatcher.on.apply(dispatcher, arguments);\n\t\n\t            return value === dispatcher ? exports : value;\n\t        };\n\t\n\t        /**\n\t         * Exposes the constants to be used to force the x axis to respect a certain granularity\n\t         * current options: MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR\n\t         * @example\n\t         *     area.forceAxisFormat(area.axisTimeCombinations.HOUR_DAY)\n\t         */\n\t        exports.axisTimeCombinations = axisTimeCombinations;\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * lodash (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modularize exports=\"npm\" -o ./`\n\t * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t\n\t/** Used as references for various `Number` constants. */\n\tvar MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t/** `Object#toString` result references. */\n\tvar argsTag = '[object Arguments]',\n\t    funcTag = '[object Function]',\n\t    genTag = '[object GeneratorFunction]';\n\t\n\t/** Used to detect unsigned integer values. */\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t/**\n\t * A faster alternative to `Function#apply`, this function invokes `func`\n\t * with the `this` binding of `thisArg` and the arguments of `args`.\n\t *\n\t * @private\n\t * @param {Function} func The function to invoke.\n\t * @param {*} thisArg The `this` binding of `func`.\n\t * @param {Array} args The arguments to invoke `func` with.\n\t * @returns {*} Returns the result of `func`.\n\t */\n\tfunction apply(func, thisArg, args) {\n\t  switch (args.length) {\n\t    case 0: return func.call(thisArg);\n\t    case 1: return func.call(thisArg, args[0]);\n\t    case 2: return func.call(thisArg, args[0], args[1]);\n\t    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t  }\n\t  return func.apply(thisArg, args);\n\t}\n\t\n\t/**\n\t * The base implementation of `_.times` without support for iteratee shorthands\n\t * or max array length checks.\n\t *\n\t * @private\n\t * @param {number} n The number of times to invoke `iteratee`.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Array} Returns the array of results.\n\t */\n\tfunction baseTimes(n, iteratee) {\n\t  var index = -1,\n\t      result = Array(n);\n\t\n\t  while (++index < n) {\n\t    result[index] = iteratee(index);\n\t  }\n\t  return result;\n\t}\n\t\n\t/**\n\t * Creates a unary function that invokes `func` with its argument transformed.\n\t *\n\t * @private\n\t * @param {Function} func The function to wrap.\n\t * @param {Function} transform The argument transform.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction overArg(func, transform) {\n\t  return function(arg) {\n\t    return func(transform(arg));\n\t  };\n\t}\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objectToString = objectProto.toString;\n\t\n\t/** Built-in value references. */\n\tvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\t\n\t/* Built-in method references for those with the same name as other `lodash` methods. */\n\tvar nativeKeys = overArg(Object.keys, Object),\n\t    nativeMax = Math.max;\n\t\n\t/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n\tvar nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\t\n\t/**\n\t * Creates an array of the enumerable property names of the array-like `value`.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @param {boolean} inherited Specify returning inherited property names.\n\t * @returns {Array} Returns the array of property names.\n\t */\n\tfunction arrayLikeKeys(value, inherited) {\n\t  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n\t  // Safari 9 makes `arguments.length` enumerable in strict mode.\n\t  var result = (isArray(value) || isArguments(value))\n\t    ? baseTimes(value.length, String)\n\t    : [];\n\t\n\t  var length = result.length,\n\t      skipIndexes = !!length;\n\t\n\t  for (var key in value) {\n\t    if ((inherited || hasOwnProperty.call(value, key)) &&\n\t        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n\t      result.push(key);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\t/**\n\t * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t * for equality comparisons.\n\t *\n\t * @private\n\t * @param {Object} object The object to modify.\n\t * @param {string} key The key of the property to assign.\n\t * @param {*} value The value to assign.\n\t */\n\tfunction assignValue(object, key, value) {\n\t  var objValue = object[key];\n\t  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t      (value === undefined && !(key in object))) {\n\t    object[key] = value;\n\t  }\n\t}\n\t\n\t/**\n\t * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t */\n\tfunction baseKeys(object) {\n\t  if (!isPrototype(object)) {\n\t    return nativeKeys(object);\n\t  }\n\t  var result = [];\n\t  for (var key in Object(object)) {\n\t    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n\t      result.push(key);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\t/**\n\t * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n\t *\n\t * @private\n\t * @param {Function} func The function to apply a rest parameter to.\n\t * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction baseRest(func, start) {\n\t  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n\t  return function() {\n\t    var args = arguments,\n\t        index = -1,\n\t        length = nativeMax(args.length - start, 0),\n\t        array = Array(length);\n\t\n\t    while (++index < length) {\n\t      array[index] = args[start + index];\n\t    }\n\t    index = -1;\n\t    var otherArgs = Array(start + 1);\n\t    while (++index < start) {\n\t      otherArgs[index] = args[index];\n\t    }\n\t    otherArgs[start] = array;\n\t    return apply(func, this, otherArgs);\n\t  };\n\t}\n\t\n\t/**\n\t * Copies properties of `source` to `object`.\n\t *\n\t * @private\n\t * @param {Object} source The object to copy properties from.\n\t * @param {Array} props The property identifiers to copy.\n\t * @param {Object} [object={}] The object to copy properties to.\n\t * @param {Function} [customizer] The function to customize copied values.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction copyObject(source, props, object, customizer) {\n\t  object || (object = {});\n\t\n\t  var index = -1,\n\t      length = props.length;\n\t\n\t  while (++index < length) {\n\t    var key = props[index];\n\t\n\t    var newValue = customizer\n\t      ? customizer(object[key], source[key], key, object, source)\n\t      : undefined;\n\t\n\t    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n\t  }\n\t  return object;\n\t}\n\t\n\t/**\n\t * Creates a function like `_.assign`.\n\t *\n\t * @private\n\t * @param {Function} assigner The function to assign values.\n\t * @returns {Function} Returns the new assigner function.\n\t */\n\tfunction createAssigner(assigner) {\n\t  return baseRest(function(object, sources) {\n\t    var index = -1,\n\t        length = sources.length,\n\t        customizer = length > 1 ? sources[length - 1] : undefined,\n\t        guard = length > 2 ? sources[2] : undefined;\n\t\n\t    customizer = (assigner.length > 3 && typeof customizer == 'function')\n\t      ? (length--, customizer)\n\t      : undefined;\n\t\n\t    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t      customizer = length < 3 ? undefined : customizer;\n\t      length = 1;\n\t    }\n\t    object = Object(object);\n\t    while (++index < length) {\n\t      var source = sources[index];\n\t      if (source) {\n\t        assigner(object, source, index, customizer);\n\t      }\n\t    }\n\t    return object;\n\t  });\n\t}\n\t\n\t/**\n\t * Checks if `value` is a valid array-like index.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t */\n\tfunction isIndex(value, length) {\n\t  length = length == null ? MAX_SAFE_INTEGER : length;\n\t  return !!length &&\n\t    (typeof value == 'number' || reIsUint.test(value)) &&\n\t    (value > -1 && value % 1 == 0 && value < length);\n\t}\n\t\n\t/**\n\t * Checks if the given arguments are from an iteratee call.\n\t *\n\t * @private\n\t * @param {*} value The potential iteratee value argument.\n\t * @param {*} index The potential iteratee index or key argument.\n\t * @param {*} object The potential iteratee object argument.\n\t * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n\t *  else `false`.\n\t */\n\tfunction isIterateeCall(value, index, object) {\n\t  if (!isObject(object)) {\n\t    return false;\n\t  }\n\t  var type = typeof index;\n\t  if (type == 'number'\n\t        ? (isArrayLike(object) && isIndex(index, object.length))\n\t        : (type == 'string' && index in object)\n\t      ) {\n\t    return eq(object[index], value);\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Checks if `value` is likely a prototype object.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t */\n\tfunction isPrototype(value) {\n\t  var Ctor = value && value.constructor,\n\t      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t  return value === proto;\n\t}\n\t\n\t/**\n\t * Performs a\n\t * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t * comparison between two values to determine if they are equivalent.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to compare.\n\t * @param {*} other The other value to compare.\n\t * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t * @example\n\t *\n\t * var object = { 'a': 1 };\n\t * var other = { 'a': 1 };\n\t *\n\t * _.eq(object, object);\n\t * // => true\n\t *\n\t * _.eq(object, other);\n\t * // => false\n\t *\n\t * _.eq('a', 'a');\n\t * // => true\n\t *\n\t * _.eq('a', Object('a'));\n\t * // => false\n\t *\n\t * _.eq(NaN, NaN);\n\t * // => true\n\t */\n\tfunction eq(value, other) {\n\t  return value === other || (value !== value && other !== other);\n\t}\n\t\n\t/**\n\t * Checks if `value` is likely an `arguments` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t *  else `false`.\n\t * @example\n\t *\n\t * _.isArguments(function() { return arguments; }());\n\t * // => true\n\t *\n\t * _.isArguments([1, 2, 3]);\n\t * // => false\n\t */\n\tfunction isArguments(value) {\n\t  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n\t  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n\t    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n\t}\n\t\n\t/**\n\t * Checks if `value` is classified as an `Array` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n\t * @example\n\t *\n\t * _.isArray([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArray(document.body.children);\n\t * // => false\n\t *\n\t * _.isArray('abc');\n\t * // => false\n\t *\n\t * _.isArray(_.noop);\n\t * // => false\n\t */\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Checks if `value` is array-like. A value is considered array-like if it's\n\t * not a function and has a `value.length` that's an integer greater than or\n\t * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t * @example\n\t *\n\t * _.isArrayLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArrayLike(document.body.children);\n\t * // => true\n\t *\n\t * _.isArrayLike('abc');\n\t * // => true\n\t *\n\t * _.isArrayLike(_.noop);\n\t * // => false\n\t */\n\tfunction isArrayLike(value) {\n\t  return value != null && isLength(value.length) && !isFunction(value);\n\t}\n\t\n\t/**\n\t * This method is like `_.isArrayLike` except that it also checks if `value`\n\t * is an object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an array-like object,\n\t *  else `false`.\n\t * @example\n\t *\n\t * _.isArrayLikeObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArrayLikeObject(document.body.children);\n\t * // => true\n\t *\n\t * _.isArrayLikeObject('abc');\n\t * // => false\n\t *\n\t * _.isArrayLikeObject(_.noop);\n\t * // => false\n\t */\n\tfunction isArrayLikeObject(value) {\n\t  return isObjectLike(value) && isArrayLike(value);\n\t}\n\t\n\t/**\n\t * Checks if `value` is classified as a `Function` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n\t * @example\n\t *\n\t * _.isFunction(_);\n\t * // => true\n\t *\n\t * _.isFunction(/abc/);\n\t * // => false\n\t */\n\tfunction isFunction(value) {\n\t  // The use of `Object#toString` avoids issues with the `typeof` operator\n\t  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n\t  var tag = isObject(value) ? objectToString.call(value) : '';\n\t  return tag == funcTag || tag == genTag;\n\t}\n\t\n\t/**\n\t * Checks if `value` is a valid array-like length.\n\t *\n\t * **Note:** This method is loosely based on\n\t * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t * @example\n\t *\n\t * _.isLength(3);\n\t * // => true\n\t *\n\t * _.isLength(Number.MIN_VALUE);\n\t * // => false\n\t *\n\t * _.isLength(Infinity);\n\t * // => false\n\t *\n\t * _.isLength('3');\n\t * // => false\n\t */\n\tfunction isLength(value) {\n\t  return typeof value == 'number' &&\n\t    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t}\n\t\n\t/**\n\t * Checks if `value` is the\n\t * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(_.noop);\n\t * // => true\n\t *\n\t * _.isObject(null);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  var type = typeof value;\n\t  return !!value && (type == 'object' || type == 'function');\n\t}\n\t\n\t/**\n\t * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t * and has a `typeof` result of \"object\".\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t * @example\n\t *\n\t * _.isObjectLike({});\n\t * // => true\n\t *\n\t * _.isObjectLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObjectLike(_.noop);\n\t * // => false\n\t *\n\t * _.isObjectLike(null);\n\t * // => false\n\t */\n\tfunction isObjectLike(value) {\n\t  return !!value && typeof value == 'object';\n\t}\n\t\n\t/**\n\t * Assigns own enumerable string keyed properties of source objects to the\n\t * destination object. Source objects are applied from left to right.\n\t * Subsequent sources overwrite property assignments of previous sources.\n\t *\n\t * **Note:** This method mutates `object` and is loosely based on\n\t * [`Object.assign`](https://mdn.io/Object/assign).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.10.0\n\t * @category Object\n\t * @param {Object} object The destination object.\n\t * @param {...Object} [sources] The source objects.\n\t * @returns {Object} Returns `object`.\n\t * @see _.assignIn\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t * }\n\t *\n\t * function Bar() {\n\t *   this.c = 3;\n\t * }\n\t *\n\t * Foo.prototype.b = 2;\n\t * Bar.prototype.d = 4;\n\t *\n\t * _.assign({ 'a': 0 }, new Foo, new Bar);\n\t * // => { 'a': 1, 'c': 3 }\n\t */\n\tvar assign = createAssigner(function(object, source) {\n\t  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t    copyObject(source, keys(source), object);\n\t    return;\n\t  }\n\t  for (var key in source) {\n\t    if (hasOwnProperty.call(source, key)) {\n\t      assignValue(object, key, source[key]);\n\t    }\n\t  }\n\t});\n\t\n\t/**\n\t * Creates an array of the own enumerable property names of `object`.\n\t *\n\t * **Note:** Non-object values are coerced to objects. See the\n\t * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t * for more details.\n\t *\n\t * @static\n\t * @since 0.1.0\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.keys(new Foo);\n\t * // => ['a', 'b'] (iteration order is not guaranteed)\n\t *\n\t * _.keys('hi');\n\t * // => ['0', '1']\n\t */\n\tfunction keys(object) {\n\t  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n\t}\n\t\n\tmodule.exports = assign;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Axis = __webpack_require__(4);\n\t    var d3Color = __webpack_require__(5);\n\t    var d3Collection = __webpack_require__(9);\n\t    var d3Dispatch = __webpack_require__(6);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Interpolate = __webpack_require__(10);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Selection = __webpack_require__(13);\n\t    var assign = __webpack_require__(35);\n\t\n\t    var _require = __webpack_require__(17),\n\t        exportChart = _require.exportChart;\n\t\n\t    var colorHelper = __webpack_require__(18);\n\t    var NUMBER_FORMAT = ',f';\n\t    var uniq = function uniq(arrArg) {\n\t        return arrArg.filter(function (elem, pos, arr) {\n\t            return arr.indexOf(elem) == pos;\n\t        });\n\t    };\n\t\n\t    /**\n\t     * @typdef D3Layout\n\t     * @type function\n\t     */\n\t\n\t    /**\n\t     * @typedef GroupedBarChartData\n\t     * @type {Object}\n\t     * @property {Object[]} data       All data entries\n\t     * @property {String} name         Name of the entry\n\t     * @property {String} group        group of the entry\n\t     * @property {Number} value        Value of the entry\n\t     *\n\t     * @example\n\t     * {\n\t     *     'data': [\n\t     *         {\n\t     *             \"name\": \"2011-01\",\n\t     *             \"group\": \"Direct\",\n\t     *             \"value\": 0\n\t     *         }\n\t     *     ]\n\t     * }\n\t     */\n\t\n\t    /**\n\t     * Grouped Bar Chart reusable API module that allows us\n\t     * rendering a multi grouped bar and configurable chart.\n\t     *\n\t     * @module Grouped-bar\n\t     * @tutorial grouped-bar\n\t     * @requires d3-array, d3-axis, d3-color, d3-collection, d3-dispatch, d3-ease,\n\t     *  d3-interpolate, d3-scale, d3-selection, lodash assign\n\t     *\n\t     * @example\n\t     * let groupedBar = GroupedBar();\n\t     *\n\t     * groupedBar\n\t     *     .width(containerWidth);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset.data)\n\t     *     .call(groupedBar);\n\t     *\n\t     */\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 40,\n\t            right: 30,\n\t            bottom: 60,\n\t            left: 70\n\t        },\n\t            width = 960,\n\t            height = 500,\n\t            xScale = void 0,\n\t            xScale2 = void 0,\n\t            xAxis = void 0,\n\t            yScale = void 0,\n\t            yScale2 = void 0,\n\t            yAxis = void 0,\n\t            aspectRatio = null,\n\t            verticalTicks = 5,\n\t            yTickTextYOffset = -8,\n\t            yTickTextXOffset = -20,\n\t            numOfVerticalTicks = 5,\n\t            numOfHorizontalTicks = 5,\n\t            percentageAxisToMaxRatio = 1,\n\t            baseLine = void 0,\n\t            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\t            colorScale = void 0,\n\t            categoryColorMap = void 0,\n\t            layers = void 0,\n\t            ease = d3Ease.easeQuadInOut,\n\t            horizontal = false,\n\t            svg = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            data = void 0,\n\t            groups = void 0,\n\t            transformedData = void 0,\n\t            tooltipThreshold = 480,\n\t            xAxisPadding = {\n\t            top: 0,\n\t            left: 0,\n\t            bottom: 0,\n\t            right: 0\n\t        },\n\t            maxBarNumber = 8,\n\t            animationDelayStep = 20,\n\t            animationDelays = d3Array.range(animationDelayStep, maxBarNumber * animationDelayStep, animationDelayStep),\n\t            animationDuration = 1000,\n\t            grid = null,\n\t            nameLabel = 'name',\n\t            valueLabel = 'value',\n\t            groupLabel = 'group',\n\t            nameLabelFormat = void 0,\n\t            valueLabelFormat = NUMBER_FORMAT,\n\t\n\t\n\t        // getters\n\t        getName = function getName(_ref) {\n\t            var name = _ref.name;\n\t            return name;\n\t        },\n\t            getValue = function getValue(_ref2) {\n\t            var value = _ref2.value;\n\t            return value;\n\t        },\n\t            getGroup = function getGroup(_ref3) {\n\t            var group = _ref3.group;\n\t            return group;\n\t        },\n\t            isAnimated = false,\n\t\n\t\n\t        // events\n\t        dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\t\n\t        /**\n\t         * This function creates the graph using the selection and data provided\n\t         * @param {D3Selection} _selection A d3 selection that represents\n\t         * the container(s) where the chart(s) will be rendered\n\t         * @param {GroupedBarChartData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = cleanData(_data);\n\t\n\t                prepareData(data);\n\t                buildScales();\n\t                buildLayers();\n\t                buildSVG(this);\n\t                drawGridLines();\n\t                buildAxis();\n\t                drawAxis();\n\t                drawGroupedBar();\n\t                addMouseEvents();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Prepare data for create chart.\n\t         * @private\n\t         */\n\t        function prepareData(data) {\n\t            groups = uniq(data.map(function (d) {\n\t                return getGroup(d);\n\t            }));\n\t            transformedData = d3Collection.nest().key(getName).rollup(function (values) {\n\t                var ret = {};\n\t\n\t                values.forEach(function (entry) {\n\t                    if (entry && entry[groupLabel]) {\n\t                        ret[entry[groupLabel]] = getValue(entry);\n\t                    }\n\t                });\n\t                //for tooltip\n\t                ret.values = values;\n\t                return ret;\n\t            }).entries(data).map(function (data) {\n\t                return assign({}, {\n\t                    total: d3Array.sum(d3Array.permute(data.value, groups)),\n\t                    key: data.key\n\t                }, data.value);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Adds events to the container group if the environment is not mobile\n\t         * Adding: mouseover, mouseout and mousemove\n\t         */\n\t        function addMouseEvents() {\n\t            if (shouldShowTooltip()) {\n\t                svg.on('mouseover', handleMouseOver).on('mouseout', handleMouseOut).on('mousemove', handleMouseMove);\n\t            }\n\t\n\t            svg.selectAll('.bar').on('mouseover', handleBarsMouseOver).on('mouseout', handleBarsMouseOut);\n\t        }\n\t\n\t        /**\n\t         * Creates the d3 x and y axis, setting orientations\n\t         * @private\n\t         */\n\t        function buildAxis() {\n\t            if (!horizontal) {\n\t                xAxis = d3Axis.axisBottom(xScale);\n\t                yAxis = d3Axis.axisLeft(yScale).ticks(numOfVerticalTicks, valueLabelFormat);\n\t            } else {\n\t                xAxis = d3Axis.axisBottom(xScale).ticks(numOfHorizontalTicks, valueLabelFormat);\n\t                yAxis = d3Axis.axisLeft(yScale);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * NOTE: The order of drawing of this group elements is really important,\n\t         * as everything else will be drawn on top of them\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container.append('g').classed('x-axis-group', true).append('g').classed('x axis', true);\n\t            container.selectAll('.x-axis-group').append('g').classed('month-axis', true);\n\t            container.append('g').classed('y-axis-group axis', true);\n\t            container.append('g').classed('grid-lines-group', true);\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('metadata-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds the grouped layers layout\n\t         * @return {D3Layout} Layout for drawing the chart\n\t         * @private\n\t         */\n\t        function buildLayers() {\n\t            layers = transformedData.map(function (item) {\n\t                var ret = {};\n\t\n\t                groups.forEach(function (key) {\n\t                    ret[key] = item[key];\n\t                });\n\t\n\t                return assign({}, item, ret);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates the x, y and color scales of the chart\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t\n\t            var yMax = d3Array.max(data.map(getValue));\n\t\n\t            if (!horizontal) {\n\t                xScale = d3Scale.scaleBand().domain(data.map(getName)).rangeRound([0, chartWidth]).padding(0.1);\n\t                xScale2 = d3Scale.scaleBand().domain(data.map(getGroup)).rangeRound([0, xScale.bandwidth()]).padding(0.1);\n\t\n\t                yScale = d3Scale.scaleLinear().domain([0, yMax]).rangeRound([chartHeight, 0]).nice();\n\t            } else {\n\t                xScale = d3Scale.scaleLinear().domain([0, yMax]).rangeRound([0, chartWidth - 1]);\n\t                // 1 pix for edge tick\n\t\n\t                yScale = d3Scale.scaleBand().domain(data.map(getName)).rangeRound([chartHeight, 0]).padding(0.1);\n\t\n\t                yScale2 = d3Scale.scaleBand().domain(data.map(getGroup)).rangeRound([yScale.bandwidth(), 0]).padding(0.1);\n\t            }\n\t\n\t            colorScale = d3Scale.scaleOrdinal().range(colorSchema).domain(data.map(getGroup));\n\t\n\t            categoryColorMap = colorScale.domain(data.map(getName)).domain().reduce(function (memo, item) {\n\t                data.forEach(function (v) {\n\t                    if (getName(v) == item) {\n\t                        memo[v.name] = colorScale(v.group);\n\t                        memo[v.group] = colorScale(v.group);\n\t                        memo[v.group + item] = colorScale(v.group);\n\t                    }\n\t                });\n\t                return memo;\n\t            }, {});\n\t        }\n\t\n\t        /**\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart grouped-bar', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Parses dates and values into JS Date objects and numbers\n\t         * @param  {obj} data Raw data from JSON file\n\t         * @return {obj}      Parsed data with values and dates\n\t         */\n\t        function cleanData(data) {\n\t            return data.map(function (d) {\n\t                d.value = +d[valueLabel];\n\t                d.group = d[groupLabel];\n\t                // for tooltip\n\t                d.topicName = getGroup(d);\n\t                d.name = d[nameLabel];\n\t\n\t                return d;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws the x and y axis on the svg object within their\n\t         * respective groups\n\t         * @private\n\t         */\n\t        function drawAxis() {\n\t            if (!horizontal) {\n\t                svg.select('.x-axis-group .axis.x').attr('transform', 'translate( 0, ' + chartHeight + ' )').call(xAxis);\n\t\n\t                svg.select('.y-axis-group.axis').attr('transform', 'translate( ' + -xAxisPadding.left + ', 0)').call(yAxis).call(adjustYTickLabels);\n\t            } else {\n\t                svg.select('.x-axis-group .axis.x').attr('transform', 'translate( 0, ' + chartHeight + ' )').call(xAxis);\n\t\n\t                svg.select('.y-axis-group.axis').attr('transform', 'translate( ' + -xAxisPadding.left + ', 0)').call(yAxis);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws a vertical line to extend x-axis till the edges\n\t         * @return {void}\n\t         */\n\t        function drawHorizontalExtendedLine() {\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-x-line').data([0]).enter().append('line').attr('class', 'extended-x-line').attr('x1', xAxisPadding.left).attr('x2', chartWidth).attr('y1', chartHeight).attr('y2', chartHeight);\n\t        }\n\t\n\t        /**\n\t         * Draws a vertical line to extend y-axis till the edges\n\t         * @return {void}\n\t         */\n\t        function drawVerticalExtendedLine() {\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-y-line').data([0]).enter().append('line').attr('class', 'extended-y-line').attr('y1', xAxisPadding.bottom).attr('y2', chartHeight).attr('x1', 0).attr('x2', 0);\n\t        }\n\t\n\t        /**\n\t         * Adjusts the position of the y axis' ticks\n\t         * @param  {D3Selection} selection Y axis group\n\t         * @return void\n\t         */\n\t        function adjustYTickLabels(selection) {\n\t            selection.selectAll('.tick text').attr('transform', 'translate(' + yTickTextXOffset + ', ' + yTickTextYOffset + ')');\n\t        }\n\t\n\t        /**\n\t         * Draws grid lines on the background of the chart\n\t         * @return void\n\t         */\n\t        function drawGridLines(xTicks, yTicks) {\n\t            if (grid === 'horizontal' || grid === 'full') {\n\t                svg.select('.grid-lines-group').selectAll('line.horizontal-grid-line').data(yScale.ticks(yTicks).slice(1)).enter().append('line').attr('class', 'horizontal-grid-line').attr('x1', -xAxisPadding.left + 1).attr('x2', chartWidth).attr('y1', function (d) {\n\t                    return yScale(d);\n\t                }).attr('y2', function (d) {\n\t                    return yScale(d);\n\t                });\n\t            }\n\t\n\t            if (grid === 'vertical' || grid === 'full') {\n\t                svg.select('.grid-lines-group').selectAll('line.vertical-grid-line').data(xScale.ticks(xTicks).slice(1)).enter().append('line').attr('class', 'vertical-grid-line').attr('y1', 0).attr('y2', chartHeight).attr('x1', function (d) {\n\t                    return xScale(d);\n\t                }).attr('x2', function (d) {\n\t                    return xScale(d);\n\t                });\n\t            }\n\t\n\t            if (horizontal) {\n\t                drawVerticalExtendedLine();\n\t            } else {\n\t                drawHorizontalExtendedLine();\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Animation tween of horizontal bars\n\t         * @param  {obj} d data of bar\n\t         * @return {void}\n\t         */\n\t        function horizontalBarsTween(d) {\n\t            var node = d3Selection.select(this),\n\t                i = d3Interpolate.interpolateRound(0, xScale(getValue(d))),\n\t                j = d3Interpolate.interpolateNumber(0, 1);\n\t\n\t            return function (t) {\n\t                node.attr('width', i(t)).style('opacity', j(t));\n\t            };\n\t        }\n\t\n\t        /**\n\t         * Animation tween of vertical bars\n\t         * @param  {obj} d data of bar\n\t         * @return {void}\n\t         */\n\t        function verticalBarsTween(d) {\n\t            var node = d3Selection.select(this),\n\t                i = d3Interpolate.interpolateRound(0, chartHeight - yScale(getValue(d))),\n\t                y = d3Interpolate.interpolateRound(chartHeight, yScale(getValue(d))),\n\t                j = d3Interpolate.interpolateNumber(0, 1);\n\t\n\t            return function (t) {\n\t                node.attr('y', y(t)).attr('height', i(t)).style('opacity', j(t));\n\t            };\n\t        }\n\t\n\t        /**\n\t         * Draws the bars along the x axis\n\t         * @param  {D3Selection} bars Selection of bars\n\t         * @return {void}\n\t         */\n\t        function drawHorizontalBars(series) {\n\t            // Enter + Update\n\t            var bars = series.data(layers).enter().append('g').attr('transform', function (d) {\n\t                return 'translate(0,' + yScale(d.key) + ')';\n\t            }).classed('layer', true).selectAll('.bar').data(function (d) {\n\t                return d.values;\n\t            }).enter().append('rect').classed('bar', true).attr('x', 1).attr('y', function (d) {\n\t                return yScale2(getGroup(d));\n\t            }).attr('height', yScale2.bandwidth()).attr('fill', function (data) {\n\t                return categoryColorMap[data.group];\n\t            });\n\t\n\t            if (isAnimated) {\n\t                bars.style('opacity', 0.24).transition().delay(function (_, i) {\n\t                    return animationDelays[i];\n\t                }).duration(animationDuration).ease(ease).tween('attr.width', horizontalBarsTween);\n\t            } else {\n\t                bars.attr('width', function (d) {\n\t                    return xScale(getValue(d));\n\t                });\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the bars along the y axis\n\t         * @param  {D3Selection} bars Selection of bars\n\t         * @return {void}\n\t         */\n\t        function drawVerticalBars(series) {\n\t            // Enter + Update\n\t            var bars = series.data(layers).enter().append('g').attr('transform', function (d) {\n\t                return 'translate(' + xScale(d.key) + ',0)';\n\t            }).classed('layer', true).selectAll('.bar').data(function (d) {\n\t                return d.values;\n\t            }).enter().append('rect').classed('bar', true).attr('x', function (d) {\n\t                return xScale2(getGroup(d));\n\t            }).attr('y', function (d) {\n\t                return yScale(d.value);\n\t            }).attr('width', xScale2.bandwidth).attr('fill', function (data) {\n\t                return categoryColorMap[data.group];\n\t            });\n\t\n\t            if (isAnimated) {\n\t                bars.style('opacity', 0.24).transition().delay(function (_, i) {\n\t                    return animationDelays[i];\n\t                }).duration(animationDuration).ease(ease).tween('attr.height', verticalBarsTween);\n\t            } else {\n\t                bars.attr('height', function (d) {\n\t                    return chartHeight - yScale(getValue(d));\n\t                });\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the different areas into the chart-group element\n\t         * @private\n\t         */\n\t        function drawGroupedBar() {\n\t            var series = svg.select('.chart-group').selectAll('.layer');\n\t\n\t            if (!horizontal) {\n\t                drawVerticalBars(series);\n\t            } else {\n\t                drawHorizontalBars(series);\n\t            }\n\t            // Exit\n\t            series.exit().transition().style('opacity', 0).remove();\n\t        }\n\t\n\t        /**\n\t         * Extract X position on the chart from a given mouse event\n\t         * @param  {obj} event D3 mouse event\n\t         * @return {Number}       Position on the x axis of the mouse\n\t         * @private\n\t         */\n\t        function getMousePosition(event) {\n\t            return d3Selection.mouse(event);\n\t        }\n\t\n\t        /**\n\t         * Finds out the data entry that is closer to the given position on pixels\n\t         * @param  {Number} mouseX X position of the mouse\n\t         * @return {obj}        Data entry that is closer to that x axis position\n\t         */\n\t        function getNearestDataPoint(mouseX) {\n\t            var adjustedMouseX = mouseX - margin.left,\n\t                epsilon = xScale2.bandwidth(),\n\t                nearest = [];\n\t\n\t            layers.forEach(function (data) {\n\t                var found = data.values.find(function (d2) {\n\t                    return Math.abs(adjustedMouseX >= xScale(d2[nameLabel]) + xScale2(d2[groupLabel])) && Math.abs(adjustedMouseX - xScale2(d2[groupLabel]) - xScale(d2[nameLabel]) <= epsilon);\n\t                });\n\t\n\t                if (found) {\n\t                    found.values = data.values;\n\t                    found.key = found.name;\n\t                    nearest.push(found);\n\t                }\n\t            });\n\t\n\t            return nearest.length ? nearest[0] : undefined;\n\t        }\n\t\n\t        /**\n\t        * Finds out the data entry that is closer to the given position on pixels\n\t        * @param  {Number} mouseX X position of the mouse\n\t        * @return {obj}        Data entry that is closer to that x axis position\n\t        */\n\t        function getNearestDataPoint2(mouseY) {\n\t            var adjustedMouseY = mouseY - margin.bottom,\n\t                epsilon = yScale.bandwidth(),\n\t                nearest = [];\n\t\n\t            layers.map(function (data) {\n\t                var found = data.values.find(function (d2) {\n\t                    return Math.abs(adjustedMouseY >= yScale(d2[nameLabel])) && Math.abs(adjustedMouseY - yScale(d2[nameLabel]) <= epsilon * 2);\n\t                });\n\t\n\t                if (found) {\n\t                    found.values = data.values;\n\t                    found.key = found.name;\n\t                    nearest.push(found);\n\t                }\n\t            });\n\t\n\t            return nearest.length ? nearest[0] : undefined;\n\t        }\n\t\n\t        /**\n\t         * Handles a mouseover event on top of a bar\n\t         * @param  {obj} d data of bar\n\t         * @return {void}\n\t         */\n\t        function handleBarsMouseOver(d) {\n\t            d3Selection.select(this).attr('fill', function () {\n\t                return d3Color.color(categoryColorMap[d.group]).darker();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Handles a mouseout event out of a bar\n\t         * @param  {obj} d data of bar\n\t         * @return {void}\n\t         */\n\t        function handleBarsMouseOut(d) {\n\t            d3Selection.select(this).attr('fill', function () {\n\t                return categoryColorMap[d.group];\n\t            });\n\t        }\n\t\n\t        /**\n\t         * MouseMove handler, calculates the nearest dataPoint to the cursor\n\t         * and updates metadata related to it\n\t         * @private\n\t         */\n\t        function handleMouseMove() {\n\t            var _getMousePosition = getMousePosition(this),\n\t                _getMousePosition2 = _slicedToArray(_getMousePosition, 2),\n\t                mouseX = _getMousePosition2[0],\n\t                mouseY = _getMousePosition2[1],\n\t                dataPoint = !horizontal ? getNearestDataPoint(mouseX) : getNearestDataPoint2(mouseY),\n\t                x = void 0,\n\t                y = void 0;\n\t\n\t            if (dataPoint) {\n\t                // Move verticalMarker to that datapoint\n\t                if (horizontal) {\n\t                    x = mouseX - margin.left;\n\t                    y = yScale(dataPoint.key) + yScale.bandwidth() / 2;\n\t                } else {\n\t                    x = xScale(dataPoint.key) + xScale2(dataPoint[groupLabel]);\n\t                    y = mouseY - margin.bottom;\n\t                }\n\t                moveTooltipOriginXY(x, y);\n\t\n\t                // Emit event with xPosition for tooltip or similar feature\n\t                dispatcher.call('customMouseMove', this, dataPoint, categoryColorMap, x, y);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n\t         * It also resets the container of the vertical marker\n\t         * @private\n\t         */\n\t        function handleMouseOut(d) {\n\t            svg.select('.metadata-group').attr('transform', 'translate(9999, 0)');\n\t            dispatcher.call('customMouseOut', this, d);\n\t        }\n\t\n\t        /**\n\t         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n\t         * @private\n\t         */\n\t        function handleMouseOver(d) {\n\t            dispatcher.call('customMouseOver', this, d);\n\t        }\n\t\n\t        /**\n\t         * Helper method to update the x position of the vertical marker\n\t         * @param  {obj} dataPoint Data entry to extract info\n\t         * @return void\n\t         */\n\t        function moveTooltipOriginXY(originXPosition, originYPosition) {\n\t            svg.select('.metadata-group').attr('transform', 'translate(' + originXPosition + ',' + originYPosition + ')');\n\t        }\n\t\n\t        /**\n\t         * Determines if we should add the tooltip related logic depending on the\n\t         * size of the chart and the tooltipThreshold variable value\n\t         * @return {boolean} Should we build the tooltip?\n\t         * @private\n\t         */\n\t        function shouldShowTooltip() {\n\t            return width > tooltipThreshold;\n\t        }\n\t\n\t        // API\n\t\n\t        /**\n\t         * Gets or Sets the aspect ratio of the chart\n\t         * @param  {Number} _x Desired aspect ratio for the graph\n\t         * @return { (Number | Module) } Current aspect ratio or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.aspectRatio = function (_x) {\n\t            if (!arguments.length) {\n\t                return aspectRatio;\n\t            }\n\t            aspectRatio = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the colorSchema of the chart\n\t         * @param  {String[]} _x Desired colorSchema for the graph\n\t         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.colorSchema = function (_x) {\n\t            if (!arguments.length) {\n\t                return colorSchema;\n\t            }\n\t            colorSchema = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the nameLabel of the chart\n\t         * @param  {Number} _x Desired dateLabel for the graph\n\t         * @return { nameLabel | module} Current nameLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.nameLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return nameLabel;\n\t            }\n\t            nameLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabelFormat of the chart\n\t         * @param  {String[]} _x Desired valueLabelFormat for the graph\n\t         * @return { valueLabelFormat | module} Current valueLabelFormat or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.nameLabelFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return nameLabelFormat;\n\t            }\n\t            nameLabelFormat = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Configurable extension of the x axis\n\t         * if your max point was 50% you might want to show x axis to 60%, pass 1.2\n\t         * @param  {number} _x ratio to max data point to add to the x axis\n\t         * @return { ratio | module} Current ratio or Bar Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.percentageAxisToMaxRatio = function (_x) {\n\t            if (!arguments.length) {\n\t                return percentageAxisToMaxRatio;\n\t            }\n\t            percentageAxisToMaxRatio = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the groupLabel of the chart\n\t         * @param  {String} _x Desired groupLabel for the graph\n\t         * @return { groupLabel | module} Current groupLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.groupLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return groupLabel;\n\t            }\n\t            groupLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the grid mode.\n\t         *\n\t         * @param  {String} _x Desired mode for the grid ('vertical'|'horizontal'|'full')\n\t         * @return { String | module} Current mode of the grid or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.grid = function (_x) {\n\t            if (!arguments.length) {\n\t                return grid;\n\t            }\n\t            grid = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            if (aspectRatio) {\n\t                width = Math.ceil(_x / aspectRatio);\n\t            }\n\t            height = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the horizontal direction of the chart\n\t         * @param  {number} _x Desired horizontal direction for the graph\n\t         * @return { horizontal | module} Current horizontal direction or Bar Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.horizontal = function (_x) {\n\t            if (!arguments.length) {\n\t                return horizontal;\n\t            }\n\t            horizontal = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n\t         * By default this is 'false'\n\t         *\n\t         * @param  {Boolean} _x Desired animation flag\n\t         * @return { isAnimated | module} Current isAnimated flag or Chart module\n\t         * @public\n\t         */\n\t        exports.isAnimated = function (_x) {\n\t            if (!arguments.length) {\n\t                return isAnimated;\n\t            }\n\t            isAnimated = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { margin | module} Current margin or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the minimum width of the graph in order to show the tooltip\n\t         * NOTE: This could also depend on the aspect ratio\n\t         *\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { tooltipThreshold | module} Current tooltipThreshold or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.tooltipThreshold = function (_x) {\n\t            if (!arguments.length) {\n\t                return tooltipThreshold;\n\t            }\n\t            tooltipThreshold = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabel of the chart\n\t         * @param  {Number} _x Desired valueLabel for the graph\n\t         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabel;\n\t            }\n\t            valueLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabelFormat of the chart\n\t         * @param  {String[]} _x Desired valueLabelFormat for the graph\n\t         * @return { valueLabelFormat | module} Current valueLabelFormat or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabelFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabelFormat;\n\t            }\n\t            valueLabelFormat = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the number of verticalTicks of the yAxis on the chart\n\t         * @param  {Number} _x Desired verticalTicks\n\t         * @return { verticalTicks | module} Current verticalTicks or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.verticalTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return verticalTicks;\n\t            }\n\t            verticalTicks = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { width | module} Current width or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            if (aspectRatio) {\n\t                height = Math.ceil(_x * aspectRatio);\n\t            }\n\t            width = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename, title) {\n\t            exportChart.call(exports, svg, filename, title);\n\t        };\n\t\n\t        /**\n\t         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n\t         * We are going to expose this events:\n\t         * customMouseOver, customMouseMove and customMouseOut\n\t         *\n\t         * @return {module} Bar Chart\n\t         * @public\n\t         */\n\t        exports.on = function () {\n\t            var value = dispatcher.on.apply(dispatcher, arguments);\n\t\n\t            return value === dispatcher ? exports : value;\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Axis = __webpack_require__(4);\n\t    var d3Color = __webpack_require__(5);\n\t    var d3Collection = __webpack_require__(9);\n\t    var d3Dispatch = __webpack_require__(6);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Interpolate = __webpack_require__(10);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Shape = __webpack_require__(24);\n\t    var d3Selection = __webpack_require__(13);\n\t    var assign = __webpack_require__(35);\n\t\n\t    var _require = __webpack_require__(17),\n\t        exportChart = _require.exportChart;\n\t\n\t    var colorHelper = __webpack_require__(18);\n\t    var NUMBER_FORMAT = ',f';\n\t    var uniq = function uniq(arrArg) {\n\t        return arrArg.filter(function (elem, pos, arr) {\n\t            return arr.indexOf(elem) == pos;\n\t        });\n\t    };\n\t\n\t    /**\n\t     * @typdef D3Layout\n\t     * @type function\n\t     */\n\t\n\t    /**\n\t     * @typedef stackedBarData\n\t     * @type {Object}\n\t     * @property {Object[]} data       All data entries\n\t     * @property {String} name         Name of the entry\n\t     * @property {String} stack        Stack of the entry\n\t     * @property {Number} value        Value of the entry\n\t     *\n\t     * @example\n\t     * {\n\t     *     'data': [\n\t     *         {\n\t     *             \"name\": \"2011-01\",\n\t     *             \"stack\": \"Direct\",\n\t     *             \"value\": 0\n\t     *         }\n\t     *     ]\n\t     * }\n\t     */\n\t\n\t    /**\n\t     * Stacked Area Chart reusable API module that allows us\n\t     * rendering a multi area and configurable chart.\n\t     *\n\t     * @module Stacked-bar\n\t     * @tutorial stacked-bar\n\t     * @requires d3-array, d3-axis, d3-color, d3-collection, d3-dispatch, d3-ease,\n\t     *  d3-interpolate, d3-scale, d3-shape, d3-selection, lodash assign\n\t     *\n\t     * @example\n\t     * let stackedBar = stackedBar();\n\t     *\n\t     * stackedBar\n\t     *     .width(containerWidth);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset.data)\n\t     *     .call(stackedBar);\n\t     *\n\t     */\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 40,\n\t            right: 30,\n\t            bottom: 60,\n\t            left: 70\n\t        },\n\t            width = 960,\n\t            height = 500,\n\t            xScale = void 0,\n\t            xAxis = void 0,\n\t            yScale = void 0,\n\t            yAxis = void 0,\n\t            aspectRatio = null,\n\t            verticalTicks = 5,\n\t            yTickTextYOffset = -8,\n\t            yTickTextXOffset = -20,\n\t            numOfVerticalTicks = 5,\n\t            numOfHorizontalTicks = 5,\n\t            percentageAxisToMaxRatio = 1,\n\t            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\t            colorScale = void 0,\n\t            categoryColorMap = void 0,\n\t            layers = void 0,\n\t            ease = d3Ease.easeQuadInOut,\n\t            horizontal = false,\n\t            svg = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            data = void 0,\n\t            transformedData = void 0,\n\t            stacks = void 0,\n\t            tooltipThreshold = 480,\n\t            baseLine = void 0,\n\t            xAxisPadding = {\n\t            top: 0,\n\t            left: 0,\n\t            bottom: 0,\n\t            right: 0\n\t        },\n\t            maxBarNumber = 8,\n\t            animationDelayStep = 20,\n\t            animationDelays = d3Array.range(animationDelayStep, maxBarNumber * animationDelayStep, animationDelayStep),\n\t            animationDuration = 1000,\n\t            grid = null,\n\t            nameLabel = 'name',\n\t            valueLabel = 'value',\n\t            stackLabel = 'stack',\n\t            nameLabelFormat = void 0,\n\t            valueLabelFormat = NUMBER_FORMAT,\n\t\n\t\n\t        // getters\n\t        getName = function getName(data) {\n\t            return data[nameLabel];\n\t        },\n\t            getValue = function getValue(data) {\n\t            return data[valueLabel];\n\t        },\n\t            getStack = function getStack(data) {\n\t            return data[stackLabel];\n\t        },\n\t            isAnimated = false,\n\t\n\t\n\t        // events\n\t        dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\t\n\t        /**\n\t         * This function creates the graph using the selection and data provided\n\t         * @param {D3Selection} _selection A d3 selection that represents\n\t         * the container(s) where the chart(s) will be rendered\n\t         * @param {stackedBarData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = cleanData(_data);\n\t\n\t                prepareData(data);\n\t                buildScales();\n\t                buildLayers();\n\t                buildSVG(this);\n\t                drawGridLines();\n\t                buildAxis();\n\t                drawAxis();\n\t                drawStackedBar();\n\t                addMouseEvents();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Prepare data for create chart.\n\t         * @private\n\t         */\n\t        function prepareData(data) {\n\t            stacks = uniq(data.map(function (_ref) {\n\t                var stack = _ref.stack;\n\t                return stack;\n\t            }));\n\t            transformedData = d3Collection.nest().key(getName).rollup(function (values) {\n\t                var ret = {};\n\t\n\t                values.forEach(function (entry) {\n\t                    if (entry && entry[stackLabel]) {\n\t                        ret[entry[stackLabel]] = getValue(entry);\n\t                    }\n\t                });\n\t                ret.values = values; //for tooltip\n\t\n\t                return ret;\n\t            }).entries(data).map(function (data) {\n\t                return assign({}, {\n\t                    total: d3Array.sum(d3Array.permute(data.value, stacks)),\n\t                    key: data.key\n\t                }, data.value);\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Adds events to the container group if the environment is not mobile\n\t         * Adding: mouseover, mouseout and mousemove\n\t         */\n\t        function addMouseEvents() {\n\t            if (shouldShowTooltip()) {\n\t                svg.on('mouseover', handleMouseOver).on('mouseout', handleMouseOut).on('mousemove', handleMouseMove);\n\t            }\n\t\n\t            svg.selectAll('.bar').on('mouseover', handleBarsMouseOver).on('mouseout', handleBarsMouseOut);\n\t        }\n\t\n\t        /**\n\t         * Creates the d3 x and y axis, setting orientations\n\t         * @private\n\t         */\n\t        function buildAxis() {\n\t            if (!horizontal) {\n\t                xAxis = d3Axis.axisBottom(xScale);\n\t                yAxis = d3Axis.axisLeft(yScale).ticks(numOfVerticalTicks, valueLabelFormat);\n\t            } else {\n\t                xAxis = d3Axis.axisBottom(xScale).ticks(numOfHorizontalTicks, valueLabelFormat);\n\t                yAxis = d3Axis.axisLeft(yScale);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * NOTE: The order of drawing of this group elements is really important,\n\t         * as everything else will be drawn on top of them\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\t\n\t            container.append('g').classed('x-axis-group', true).append('g').classed('x axis', true);\n\t            container.selectAll('.x-axis-group').append('g').classed('month-axis', true);\n\t            container.append('g').classed('y-axis-group axis', true);\n\t            container.append('g').classed('grid-lines-group', true);\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('metadata-group', true);\n\t        }\n\t\n\t        /**\n\t         * Builds the stacked layers layout\n\t         * @return {D3Layout} Layout for drawing the chart\n\t         * @private\n\t         */\n\t        function buildLayers() {\n\t            var stack3 = d3Shape.stack().keys(stacks),\n\t                dataInitial = transformedData.map(function (item) {\n\t                var ret = {};\n\t\n\t                stacks.forEach(function (key) {\n\t                    ret[key] = item[key];\n\t                });\n\t\n\t                return assign({}, item, ret);\n\t            });\n\t\n\t            layers = stack3(dataInitial);\n\t        }\n\t\n\t        /**\n\t         * Creates the x, y and color scales of the chart\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t            var yMax = d3Array.max(transformedData.map(function (d) {\n\t                return d.total;\n\t            }));\n\t\n\t            if (!horizontal) {\n\t                xScale = d3Scale.scaleBand().domain(data.map(getName)).rangeRound([0, chartWidth]).padding(0.1);\n\t\n\t                yScale = d3Scale.scaleLinear().domain([0, yMax]).rangeRound([chartHeight, 0]).nice();\n\t            } else {\n\t                xScale = d3Scale.scaleLinear().domain([0, yMax]).rangeRound([0, chartWidth - 1]);\n\t                // 1 pix for edge tick\n\t\n\t                yScale = d3Scale.scaleBand().domain(data.map(getName)).rangeRound([chartHeight, 0]).padding(0.1);\n\t            }\n\t\n\t            colorScale = d3Scale.scaleOrdinal().range(colorSchema).domain(data.map(getStack));\n\t\n\t            categoryColorMap = colorScale.domain(data.map(getName)).domain().reduce(function (memo, item, i) {\n\t                data.forEach(function (v) {\n\t                    if (getName(v) == item) {\n\t                        memo[v.name] = colorScale(v.stack);\n\t                        memo[v.stack] = colorScale(v.stack);\n\t                        memo[v.stack + item] = colorScale(v.stack);\n\t                    }\n\t                });\n\t                return memo;\n\t            }, {});\n\t        }\n\t\n\t        /**\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart stacked-bar', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Parses dates and values into JS Date objects and numbers\n\t         * @param  {obj} data Raw data from JSON file\n\t         * @return {obj}      Parsed data with values and dates\n\t         */\n\t        function cleanData(data) {\n\t            return data.map(function (d) {\n\t                d.value = +d[valueLabel];\n\t                d.stack = d[stackLabel];\n\t                d.topicName = getStack(d); // for tooltip\n\t                d.name = d[nameLabel];\n\t\n\t                return d;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws the x and y axis on the svg object within their\n\t         * respective groups\n\t         * @private\n\t         */\n\t        function drawAxis() {\n\t            if (!horizontal) {\n\t                svg.select('.x-axis-group .axis.x').attr('transform', 'translate( 0, ' + chartHeight + ' )').call(xAxis);\n\t\n\t                svg.select('.y-axis-group.axis').attr('transform', 'translate( ' + -xAxisPadding.left + ', 0)').call(yAxis).call(adjustYTickLabels);\n\t            } else {\n\t                svg.select('.x-axis-group .axis.x').attr('transform', 'translate( 0, ' + chartHeight + ' )').call(xAxis);\n\t\n\t                svg.select('.y-axis-group.axis').attr('transform', 'translate( ' + -xAxisPadding.left + ', 0)').call(yAxis);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Adjusts the position of the y axis' ticks\n\t         * @param  {D3Selection} selection Y axis group\n\t         * @return void\n\t         */\n\t        function adjustYTickLabels(selection) {\n\t            selection.selectAll('.tick text').attr('transform', 'translate(' + yTickTextXOffset + ', ' + yTickTextYOffset + ')');\n\t        }\n\t\n\t        /**\n\t         * Draws grid lines on the background of the chart\n\t         * @return void\n\t         */\n\t        function drawGridLines(xTicks, yTicks) {\n\t            if (grid === 'horizontal' || grid === 'full') {\n\t                svg.select('.grid-lines-group').selectAll('line.horizontal-grid-line').data(yScale.ticks(yTicks).slice(1)).enter().append('line').attr('class', 'horizontal-grid-line').attr('x1', -xAxisPadding.left + 1).attr('x2', chartWidth).attr('y1', function (d) {\n\t                    return yScale(d);\n\t                }).attr('y2', function (d) {\n\t                    return yScale(d);\n\t                });\n\t            }\n\t\n\t            if (grid === 'vertical' || grid === 'full') {\n\t                svg.select('.grid-lines-group').selectAll('line.vertical-grid-line').data(xScale.ticks(xTicks).slice(1)).enter().append('line').attr('class', 'vertical-grid-line').attr('y1', 0).attr('y2', chartHeight).attr('x1', function (d) {\n\t                    return xScale(d);\n\t                }).attr('x2', function (d) {\n\t                    return xScale(d);\n\t                });\n\t            }\n\t\n\t            if (horizontal) {\n\t                drawVerticalExtendedLine();\n\t            } else {\n\t                drawHorizontalExtendedLine();\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the bars along the x axis\n\t         * @param  {D3Selection} bars Selection of bars\n\t         * @return {void}\n\t         */\n\t        function drawHorizontalBars(series) {\n\t            // Enter + Update\n\t            var context = void 0,\n\t                bars = series.data(layers).enter().append('g').classed('layer', true).attr('fill', function (_ref2) {\n\t                var key = _ref2.key;\n\t                return categoryColorMap[key];\n\t            }).selectAll('.bar').data(function (d) {\n\t                return d;\n\t            }).enter().append('rect').classed('bar', true).attr('x', function (d) {\n\t                return xScale(d[0]);\n\t            }).attr('y', function (d) {\n\t                return yScale(d.data.key);\n\t            }).attr('height', yScale.bandwidth()).attr('fill', function (_ref3) {\n\t                var data = _ref3.data;\n\t                return categoryColorMap[data.stack + data.key];\n\t            });\n\t\n\t            if (isAnimated) {\n\t                bars.style('opacity', 0.24).transition().delay(function (_, i) {\n\t                    return animationDelays[i];\n\t                }).duration(animationDuration).ease(ease).tween('attr.width', function (d) {\n\t                    var node = d3Selection.select(this),\n\t                        i = d3Interpolate.interpolateRound(0, xScale(d[1] - d[0])),\n\t                        j = d3Interpolate.interpolateNumber(0, 1);\n\t\n\t                    return function (t) {\n\t                        node.attr('width', i(t));\n\t                        node.style('opacity', j(t));\n\t                    };\n\t                });\n\t            } else {\n\t                bars.attr('width', function (d) {\n\t                    return xScale(d[1] - d[0]);\n\t                });\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws a vertical line to extend x-axis till the edges\n\t         * @return {void}\n\t         */\n\t        function drawHorizontalExtendedLine() {\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-x-line').data([0]).enter().append('line').attr('class', 'extended-x-line').attr('x1', xAxisPadding.left).attr('x2', chartWidth).attr('y1', chartHeight).attr('y2', chartHeight);\n\t        }\n\t\n\t        /**\n\t         * Draws the bars along the y axis\n\t         * @param  {D3Selection} bars Selection of bars\n\t         * @return {void}\n\t         */\n\t        function drawVerticalBars(series) {\n\t            // Enter + Update\n\t            var bars = series.data(layers).enter().append('g').classed('layer', true).attr('fill', function (_ref4) {\n\t                var key = _ref4.key;\n\t                return categoryColorMap[key];\n\t            }).selectAll('.bar').data(function (d) {\n\t                return d;\n\t            }).enter().append('rect').classed('bar', true).attr('x', function (d) {\n\t                return xScale(d.data.key);\n\t            }).attr('y', function (d) {\n\t                return yScale(d[1]);\n\t            }).attr('width', xScale.bandwidth).attr('fill', function (_ref5) {\n\t                var data = _ref5.data;\n\t                return categoryColorMap[data.stack + data.key];\n\t            }),\n\t                context = void 0;\n\t\n\t            if (isAnimated) {\n\t                bars.style('opacity', 0.24).transition().delay(function (_, i) {\n\t                    return animationDelays[i];\n\t                }).duration(animationDuration).ease(ease).tween('attr.height', function (d) {\n\t                    var node = d3Selection.select(this),\n\t                        i = d3Interpolate.interpolateRound(0, yScale(d[0]) - yScale(d[1])),\n\t                        j = d3Interpolate.interpolateNumber(0, 1);\n\t\n\t                    return function (t) {\n\t                        node.attr('height', i(t));\n\t                        node.style('opacity', j(t));\n\t                    };\n\t                });\n\t            } else {\n\t                bars.attr('height', function (d) {\n\t                    return yScale(d[0]) - yScale(d[1]);\n\t                });\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws a vertical line to extend y-axis till the edges\n\t         * @return {void}\n\t         */\n\t        function drawVerticalExtendedLine() {\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-y-line').data([0]).enter().append('line').attr('class', 'extended-y-line').attr('y1', xAxisPadding.bottom).attr('y2', chartHeight).attr('x1', 0).attr('x2', 0);\n\t        }\n\t\n\t        /**\n\t         * Draws the different areas into the chart-group element\n\t         * @private\n\t         */\n\t        function drawStackedBar() {\n\t            var series = svg.select('.chart-group').selectAll('.layer');\n\t\n\t            if (!horizontal) {\n\t                drawVerticalBars(series);\n\t            } else {\n\t                drawHorizontalBars(series);\n\t            }\n\t            // Exit\n\t            series.exit().transition().style('opacity', 0).remove();\n\t        }\n\t\n\t        /**\n\t         * Extract X position on the chart from a given mouse event\n\t         * @param  {obj} event D3 mouse event\n\t         * @return {Number}       Position on the x axis of the mouse\n\t         * @private\n\t         */\n\t        function getMousePosition(event) {\n\t            return d3Selection.mouse(event);\n\t        }\n\t\n\t        /**\n\t         * Finds out the data entry that is closer to the given position on pixels\n\t         * @param  {Number} mouseX  X position of the mouse\n\t         * @return {obj}            Data entry that is closer to that x axis position\n\t         */\n\t        function getNearestDataPoint(mouseX) {\n\t            var adjustedMouseX = mouseX - margin.left,\n\t                dataByValueParsed = transformedData.map(function (item) {\n\t                item.key = item.key;\n\t                return item;\n\t            }),\n\t                epsilon = void 0,\n\t                nearest = void 0;\n\t\n\t            epsilon = xScale(dataByValueParsed[1].key) - xScale(dataByValueParsed[0].key);\n\t            nearest = dataByValueParsed.find(function (_ref6) {\n\t                var key = _ref6.key;\n\t                return Math.abs(xScale(key) - adjustedMouseX) <= epsilon;\n\t            });\n\t\n\t            return nearest;\n\t        }\n\t\n\t        /**\n\t        * Finds out the data entry that is closer to the given position on pixels\n\t        * @param  {Number} mouseY  Y position of the mouse\n\t        * @return {obj}            Data entry that is closer to that y axis position\n\t        */\n\t        function getNearestDataPoint2(mouseY) {\n\t            var adjustedMouseY = mouseY - margin.bottom,\n\t                epsilon = yScale.bandwidth(),\n\t                nearest = void 0;\n\t\n\t            nearest = layers.map(function (stackedArray) {\n\t                return stackedArray.map(function (d1) {\n\t                    var found = d1.data.values.find(function (d2) {\n\t                        return Math.abs(adjustedMouseY >= yScale(d2[nameLabel])) && Math.abs(adjustedMouseY - yScale(d2[nameLabel]) <= epsilon * 2);\n\t                    });\n\t                    return found ? d1.data : undefined;\n\t                });\n\t            });\n\t            nearest = d3Array.merge(nearest).filter(function (e) {\n\t                return e;\n\t            });\n\t\n\t            return nearest.length ? nearest[0] : undefined;\n\t        }\n\t\n\t        /**\n\t         * Handles a mouseover event on top of a bar\n\t         * @param  {obj} d data of bar\n\t         * @return {void}\n\t         */\n\t        function handleBarsMouseOver(d) {\n\t            var _this = this;\n\t\n\t            d3Selection.select(this).attr('fill', function () {\n\t                return d3Color.color(d3Selection.select(_this.parentNode).attr('fill')).darker();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Handles a mouseout event out of a bar\n\t         * @param  {obj} d data of bar\n\t         * @return {void}\n\t         */\n\t        function handleBarsMouseOut(d) {\n\t            var _this2 = this;\n\t\n\t            d3Selection.select(this).attr('fill', function () {\n\t                return d3Selection.select(_this2.parentNode).attr('fill');\n\t            });\n\t        }\n\t\n\t        /**\n\t         * MouseMove handler, calculates the nearest dataPoint to the cursor\n\t         * and updates metadata related to it\n\t         * @private\n\t         */\n\t        function handleMouseMove() {\n\t            var _getMousePosition = getMousePosition(this),\n\t                _getMousePosition2 = _slicedToArray(_getMousePosition, 2),\n\t                mouseX = _getMousePosition2[0],\n\t                mouseY = _getMousePosition2[1],\n\t                dataPoint = !horizontal ? getNearestDataPoint(mouseX) : getNearestDataPoint2(mouseY),\n\t                x = void 0,\n\t                y = void 0;\n\t\n\t            if (dataPoint) {\n\t                // Move verticalMarker to that datapoint\n\t                if (horizontal) {\n\t                    x = mouseX - margin.left;\n\t                    y = yScale(dataPoint.key) + yScale.bandwidth() / 2;\n\t                } else {\n\t                    x = xScale(dataPoint.key) + margin.left;\n\t                    y = mouseY - margin.bottom;\n\t                }\n\t                moveTooltipOriginXY(x, y);\n\t\n\t                // Emit event with xPosition for tooltip or similar feature\n\t                dispatcher.call('customMouseMove', this, dataPoint, categoryColorMap, x, y);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n\t         * It also resets the container of the vertical marker\n\t         * @private\n\t         */\n\t        function handleMouseOut(d) {\n\t            svg.select('.metadata-group').attr('transform', 'translate(9999, 0)');\n\t            dispatcher.call('customMouseOut', this, d);\n\t        }\n\t\n\t        /**\n\t         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n\t         * @private\n\t         */\n\t        function handleMouseOver(d) {\n\t            dispatcher.call('customMouseOver', this, d);\n\t        }\n\t\n\t        /**\n\t         * Helper method to update the x position of the vertical marker\n\t         * @param  {obj} dataPoint Data entry to extract info\n\t         * @return void\n\t         */\n\t        function moveTooltipOriginXY(originXPosition, originYPosition) {\n\t            svg.select('.metadata-group').attr('transform', 'translate(' + originXPosition + ',' + originYPosition + ')');\n\t        }\n\t\n\t        /**\n\t         * Determines if we should add the tooltip related logic depending on the\n\t         * size of the chart and the tooltipThreshold variable value\n\t         * @return {boolean} Should we build the tooltip?\n\t         * @private\n\t         */\n\t        function shouldShowTooltip() {\n\t            return width > tooltipThreshold;\n\t        }\n\t\n\t        // API\n\t        /**\n\t         * Gets or Sets the aspect ratio of the chart\n\t         * @param  {Number} _x Desired aspect ratio for the graph\n\t         * @return { (Number | Module) } Current aspect ratio or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.aspectRatio = function (_x) {\n\t            if (!arguments.length) {\n\t                return aspectRatio;\n\t            }\n\t            aspectRatio = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the colorSchema of the chart\n\t         * @param  {String[]} _x Desired colorSchema for the graph\n\t         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.colorSchema = function (_x) {\n\t            if (!arguments.length) {\n\t                return colorSchema;\n\t            }\n\t            colorSchema = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the nameLabel of the chart\n\t         * @param  {Number} _x Desired dateLabel for the graph\n\t         * @return { nameLabel | module} Current nameLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.nameLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return nameLabel;\n\t            }\n\t            nameLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabelFormat of the chart\n\t         * @param  {String[]} _x Desired valueLabelFormat for the graph\n\t         * @return { valueLabelFormat | module} Current valueLabelFormat or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.nameLabelFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return nameLabelFormat;\n\t            }\n\t            nameLabelFormat = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Configurable extension of the x axis\n\t         * if your max point was 50% you might want to show x axis to 60%, pass 1.2\n\t         * @param  {number} _x ratio to max data point to add to the x axis\n\t         * @return { ratio | module} Current ratio or Bar Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.percentageAxisToMaxRatio = function (_x) {\n\t            if (!arguments.length) {\n\t                return percentageAxisToMaxRatio;\n\t            }\n\t            percentageAxisToMaxRatio = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the stackLabel of the chart\n\t         * @param  {String} _x Desired stackLabel for the graph\n\t         * @return { stackLabel | module} Current stackLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.stackLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return stackLabel;\n\t            }\n\t            stackLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the grid mode.\n\t         *\n\t         * @param  {String} _x Desired mode for the grid ('vertical'|'horizontal'|'full')\n\t         * @return { String | module} Current mode of the grid or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.grid = function (_x) {\n\t            if (!arguments.length) {\n\t                return grid;\n\t            }\n\t            grid = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            if (aspectRatio) {\n\t                width = Math.ceil(_x / aspectRatio);\n\t            }\n\t            height = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the horizontal direction of the chart\n\t         * @param  {number} _x Desired horizontal direction for the graph\n\t         * @return { horizontal | module} Current horizontal direction or Bar Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.horizontal = function (_x) {\n\t            if (!arguments.length) {\n\t                return horizontal;\n\t            }\n\t            horizontal = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n\t         * By default this is 'false'\n\t         *\n\t         * @param  {Boolean} _x Desired animation flag\n\t         * @return { isAnimated | module} Current isAnimated flag or Chart module\n\t         * @public\n\t         */\n\t        exports.isAnimated = function (_x) {\n\t            if (!arguments.length) {\n\t                return isAnimated;\n\t            }\n\t            isAnimated = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { margin | module} Current margin or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the minimum width of the graph in order to show the tooltip\n\t         * NOTE: This could also depend on the aspect ratio\n\t         *\n\t         * @param  {Object} _x Margin object to get/set\n\t         * @return { tooltipThreshold | module} Current tooltipThreshold or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.tooltipThreshold = function (_x) {\n\t            if (!arguments.length) {\n\t                return tooltipThreshold;\n\t            }\n\t            tooltipThreshold = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabel of the chart\n\t         * @param  {Number} _x Desired valueLabel for the graph\n\t         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabel;\n\t            }\n\t            valueLabel = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the valueLabelFormat of the chart\n\t         * @param  {String[]} _x Desired valueLabelFormat for the graph\n\t         * @return { valueLabelFormat | module} Current valueLabelFormat or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.valueLabelFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return valueLabelFormat;\n\t            }\n\t            valueLabelFormat = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the number of verticalTicks of the yAxis on the chart\n\t         * @param  {Number} _x Desired verticalTicks\n\t         * @return { verticalTicks | module} Current verticalTicks or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.verticalTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return verticalTicks;\n\t            }\n\t            verticalTicks = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {Number} _x Desired width for the graph\n\t         * @return { width | module} Current width or Area Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            if (aspectRatio) {\n\t                height = Math.ceil(_x * aspectRatio);\n\t            }\n\t            width = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename, title) {\n\t            exportChart.call(exports, svg, filename, title);\n\t        };\n\t\n\t        /**\n\t         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n\t         * We are going to expose this events:\n\t         * customMouseOver, customMouseMove and customMouseOut\n\t         *\n\t         * @return {module} Bar Chart\n\t         * @public\n\t         */\n\t        exports.on = function () {\n\t            var value = dispatcher.on.apply(dispatcher, arguments);\n\t\n\t            return value === dispatcher ? exports : value;\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Axis = __webpack_require__(4);\n\t    var d3Dispatch = __webpack_require__(6);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Format = __webpack_require__(7);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Transition = __webpack_require__(14);\n\t\n\t    var _require = __webpack_require__(17),\n\t        exportChart = _require.exportChart;\n\t\n\t    /**\n\t     * @typedef StepChartData\n\t     * @type Object[]\n\t     *\n\t     * @property {String} key      Key we measure (required)\n\t     * @property {Number} value    value of the key (required)\n\t     *\n\t     * @example\n\t     * [\n\t     *     {\n\t     *         value: 1,\n\t     *         key: 'glittering'\n\t     *     },\n\t     *     {\n\t     *         value: 1,\n\t     *         key: 'luminous'\n\t     *     }\n\t     * ]\n\t     */\n\t\n\t    /**\n\t     * Step Chart reusable API class that renders a\n\t     * simple and configurable step chart.\n\t     *\n\t     * @module Step\n\t     * @tutorial step\n\t     * @requires d3-array, d3-axis, d3-dispatch, d3-format, d3-scale, d3-selection, d3-transition\n\t     *\n\t     * @example\n\t     * var stepChart= step();\n\t     *\n\t     * stepChart\n\t     *     .height(500)\n\t     *     .width(800);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(stepChart);\n\t     *\n\t     */\n\t\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 20,\n\t            right: 20,\n\t            bottom: 30,\n\t            left: 40\n\t        },\n\t            width = 960,\n\t            height = 500,\n\t            ease = d3Ease.easeQuadInOut,\n\t            data = void 0,\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            xScale = void 0,\n\t            yScale = void 0,\n\t            numOfVerticalTicks = 6,\n\t            xAxis = void 0,\n\t            xAxisLabel = void 0,\n\t            yAxis = void 0,\n\t            yAxisLabel = void 0,\n\t            xAxisLabelOffset = 45,\n\t            yAxisLabelOffset = -20,\n\t            xAxisPadding = {\n\t            top: 0,\n\t            left: 0,\n\t            bottom: 0,\n\t            right: 0\n\t        },\n\t            yTickPadding = 8,\n\t            svg = void 0,\n\t            valueLabel = 'value',\n\t            nameLabel = 'key',\n\t            maskGridLines = void 0,\n\t            baseLine = void 0,\n\t\n\t\n\t        // Dispatcher object to broadcast the mouse events\n\t        // Ref: https://github.com/mbostock/d3/wiki/Internals#d3_dispatch\n\t        dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove'),\n\t\n\t\n\t        // Formats\n\t        yAxisTickFormat = d3Format.format('.3'),\n\t\n\t\n\t        // extractors\n\t        getKey = function getKey(_ref) {\n\t            var key = _ref.key;\n\t            return key;\n\t        },\n\t            getValue = function getValue(_ref2) {\n\t            var value = _ref2.value;\n\t            return value;\n\t        };\n\t\n\t        /**\n\t         * This function creates the graph using the selection as container\n\t         * @param  {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {StepChartData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                // Make space on the left of the graph for the y axis label\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = cleanData(_data);\n\t\n\t                buildScales();\n\t                buildAxis();\n\t                buildSVG(this);\n\t                drawGridLines();\n\t                drawSteps();\n\t                drawAxis();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates the d3 x and y axis, setting orientations\n\t         * @private\n\t         */\n\t        function buildAxis() {\n\t            xAxis = d3Axis.axisBottom(xScale);\n\t\n\t            yAxis = d3Axis.axisLeft(yScale).ticks(numOfVerticalTicks).tickPadding(yTickPadding).tickFormat(yAxisTickFormat);\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * Also applies the Margin convention\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');\n\t\n\t            container.append('g').classed('grid-lines-group', true);\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('x-axis-group axis', true).append('g').classed('x-axis-label', true);\n\t            container.append('g').classed('y-axis-group axis', true).append('g').classed('y-axis-label', true);\n\t            container.append('g').classed('metadata-group', true);\n\t        }\n\t\n\t        /**\n\t         * Creates the x and y scales of the graph\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t            xScale = d3Scale.scaleBand().domain(data.map(getKey)).rangeRound([0, chartWidth]).paddingInner(0);\n\t\n\t            yScale = d3Scale.scaleLinear().domain([0, d3Array.max(data, getValue)]).rangeRound([chartHeight, 0]);\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart step-chart', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Cleaning data adding the proper format\n\t         * @param  {StepChartData} data Data\n\t         * @private\n\t         */\n\t        function cleanData(data) {\n\t            return data.map(function (d) {\n\t                d.value = +d[valueLabel];\n\t                d.key = String(d[nameLabel]);\n\t\n\t                return d;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Draws the x and y axis on the svg object within their\n\t         * respective groups\n\t         * @private\n\t         */\n\t        function drawAxis() {\n\t            svg.select('.x-axis-group.axis').attr('transform', 'translate(0, ' + chartHeight + ')').call(xAxis);\n\t\n\t            if (xAxisLabel) {\n\t                svg.select('.x-axis-label').append('text').attr('text-anchor', 'middle').attr('x', chartWidth / 2).attr('y', xAxisLabelOffset).text(xAxisLabel);\n\t            }\n\t\n\t            svg.select('.y-axis-group.axis').call(yAxis);\n\t\n\t            if (yAxisLabel) {\n\t                svg.select('.y-axis-label').append('text').attr('x', -chartHeight / 2).attr('y', yAxisLabelOffset).attr('text-anchor', 'middle').attr('transform', 'rotate(270 0 0)').text(yAxisLabel);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Draws the step elements within the chart group\n\t         * @private\n\t         */\n\t        function drawSteps() {\n\t            var steps = svg.select('.chart-group').selectAll('.step').data(data);\n\t\n\t            // Enter\n\t            steps.enter().append('rect').classed('step', true).attr('x', chartWidth) // Initially drawing the steps at the end of Y axis\n\t            .attr('y', function (_ref3) {\n\t                var value = _ref3.value;\n\t                return yScale(value);\n\t            }).attr('width', xScale.bandwidth()).attr('height', function (d) {\n\t                return chartHeight - yScale(d.value);\n\t            }).on('mouseover', function () {\n\t                dispatcher.call('customMouseOver', this);\n\t            }).on('mousemove', function (d) {\n\t                dispatcher.call('customMouseMove', this, d, d3Selection.mouse(this), [chartWidth, chartHeight]);\n\t            }).on('mouseout', function () {\n\t                dispatcher.call('customMouseOut', this);\n\t            }).merge(steps).transition().ease(ease).attr('x', function (_ref4) {\n\t                var key = _ref4.key;\n\t                return xScale(key);\n\t            }).attr('y', function (d) {\n\t                return yScale(d.value);\n\t            }).attr('width', xScale.bandwidth()).attr('height', function (d) {\n\t                return chartHeight - yScale(d.value);\n\t            });\n\t\n\t            // Exit\n\t            steps.exit().transition().style('opacity', 0).remove();\n\t        }\n\t\n\t        /**\n\t         * Draws grid lines on the background of the chart\n\t         * @return void\n\t         */\n\t        function drawGridLines() {\n\t            maskGridLines = svg.select('.grid-lines-group').selectAll('line.horizontal-grid-line').data(yScale.ticks(numOfVerticalTicks)).enter().append('line').attr('class', 'horizontal-grid-line').attr('x1', xAxisPadding.left).attr('x2', chartWidth).attr('y1', function (d) {\n\t                return yScale(d);\n\t            }).attr('y2', function (d) {\n\t                return yScale(d);\n\t            });\n\t\n\t            //draw a horizontal line to extend x-axis till the edges\n\t            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-x-line').data([0]).enter().append('line').attr('class', 'extended-x-line').attr('x1', xAxisPadding.left).attr('x2', chartWidth).attr('y1', height - margin.bottom - margin.top).attr('y2', height - margin.bottom - margin.top);\n\t        }\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename) {\n\t            exportChart.call(exports, svg, filename);\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {object} _x Margin object to get/set\n\t         * @return { margin | module} Current margin or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { width | module} Current width or step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            width = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            height = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the number of vertical ticks on the chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.numOfVerticalTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return numOfVerticalTicks;\n\t            }\n\t            numOfVerticalTicks = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the text of the xAxisLabel on the chart\n\t         * @param  {text} _x Desired text for the label\n\t         * @return { text | module} label or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.xAxisLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return xAxisLabel;\n\t            }\n\t            xAxisLabel = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the offset of the xAxisLabel on the chart\n\t         * @param  {integer} _x Desired offset for the label\n\t         * @return { integer | module} label or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.xAxisLabelOffset = function (_x) {\n\t            if (!arguments.length) {\n\t                return xAxisLabelOffset;\n\t            }\n\t            xAxisLabelOffset = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the text of the yAxisLabel on the chart\n\t         * @param  {text} _x Desired text for the label\n\t         * @return { text | module} label or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.yAxisLabel = function (_x) {\n\t            if (!arguments.length) {\n\t                return yAxisLabel;\n\t            }\n\t            yAxisLabel = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the offset of the yAxisLabel on the chart\n\t         * @param  {integer} _x Desired offset for the label\n\t         * @return { integer | module} label or Step Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.yAxisLabelOffset = function (_x) {\n\t            if (!arguments.length) {\n\t                return yAxisLabelOffset;\n\t            }\n\t            yAxisLabelOffset = _x;\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n\t         * We are going to expose this events:\n\t         * customMouseOver, customMouseMove and customMouseOut\n\t         *\n\t         * @return {module} Bar Chart\n\t         * @public\n\t         */\n\t        exports.on = function () {\n\t            var value = dispatcher.on.apply(dispatcher, arguments);\n\t\n\t            return value === dispatcher ? exports : value;\n\t        };\n\t\n\t        /**\n\t         * Chart exported to png and a download action is fired\n\t         * @public\n\t         */\n\t        exports.exportChart = function (filename, title) {\n\t            exportChart.call(exports, svg, filename, title);\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\t    'use strict';\n\t\n\t    var d3Array = __webpack_require__(2);\n\t    var d3Axis = __webpack_require__(4);\n\t    var d3Brush = __webpack_require__(40);\n\t    var d3Ease = __webpack_require__(3);\n\t    var d3Scale = __webpack_require__(8);\n\t    var d3Shape = __webpack_require__(24);\n\t    var d3Selection = __webpack_require__(13);\n\t    var d3Time = __webpack_require__(11);\n\t    var d3Transition = __webpack_require__(14);\n\t    var d3TimeFormat = __webpack_require__(12);\n\t\n\t    var colorHelper = __webpack_require__(18);\n\t    var timeAxisHelper = __webpack_require__(29);\n\t\n\t    var _require = __webpack_require__(19),\n\t        axisTimeCombinations = _require.axisTimeCombinations;\n\t\n\t    /**\n\t     * @typedef BrushChartData\n\t     * @type {Object[]}\n\t     * @property {Number} value        Value to chart (required)\n\t     * @property {Date} date           Date of the value (required)\n\t     *\n\t     * @example\n\t     * [\n\t     *     {\n\t     *         value: 1,\n\t     *         date: '2011-01-06T00:00:00Z'\n\t     *     },\n\t     *     {\n\t     *         value: 2,\n\t     *         date: '2011-01-07T00:00:00Z'\n\t     *     }\n\t     * ]\n\t     */\n\t\n\t    /**\n\t     * Brush Chart reusable API class that renders a\n\t     * simple and configurable brush chart.\n\t     *\n\t     * @module Brush\n\t     * @tutorial brush\n\t     * @requires d3-array, d3-axis, d3-brush, d3-ease, d3-scale, d3-shape, d3-selection, d3-time, d3-time-format\n\t     *\n\t     * @example\n\t     * let brushChart = brush();\n\t     *\n\t     * brushChart\n\t     *     .height(500)\n\t     *     .width(800);\n\t     *\n\t     * d3Selection.select('.css-selector')\n\t     *     .datum(dataset)\n\t     *     .call(brushChart);\n\t     *\n\t     */\n\t\n\t    return function module() {\n\t\n\t        var margin = {\n\t            top: 20,\n\t            right: 20,\n\t            bottom: 30,\n\t            left: 20\n\t        },\n\t            width = 960,\n\t            height = 500,\n\t            data = void 0,\n\t            svg = void 0,\n\t            ease = d3Ease.easeQuadOut,\n\t            dateLabel = 'date',\n\t            valueLabel = 'value',\n\t            dateRange = [null, null],\n\t            chartWidth = void 0,\n\t            chartHeight = void 0,\n\t            xScale = void 0,\n\t            yScale = void 0,\n\t            xAxis = void 0,\n\t            forceAxisSettings = null,\n\t            forcedXTicks = null,\n\t            forcedXFormat = null,\n\t            brush = void 0,\n\t            chartBrush = void 0,\n\t            handle = void 0,\n\t            tickPadding = 5,\n\t            onBrush = null,\n\t            gradient = colorHelper.colorGradients.greenBlueGradient,\n\t\n\t\n\t        // extractors\n\t        getValue = function getValue(_ref) {\n\t            var value = _ref.value;\n\t            return value;\n\t        },\n\t            getDate = function getDate(_ref2) {\n\t            var date = _ref2.date;\n\t            return date;\n\t        };\n\t\n\t        /**\n\t         * This function creates the graph using the selection as container\n\t         * @param  {D3Selection} _selection A d3 selection that represents\n\t         *                                  the container(s) where the chart(s) will be rendered\n\t         * @param {BrushChartData} _data The data to attach and generate the chart\n\t         */\n\t        function exports(_selection) {\n\t            _selection.each(function (_data) {\n\t                chartWidth = width - margin.left - margin.right;\n\t                chartHeight = height - margin.top - margin.bottom;\n\t                data = cleanData(cloneData(_data));\n\t\n\t                buildScales();\n\t                buildAxis();\n\t                buildSVG(this);\n\t                buildGradient();\n\t                buildBrush();\n\t                drawArea();\n\t                drawAxis();\n\t                drawBrush();\n\t                drawHandles();\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates the d3 x axis, setting orientation\n\t         * @private\n\t         */\n\t        function buildAxis() {\n\t            var minor = void 0,\n\t                major = void 0;\n\t\n\t            if (forceAxisSettings === 'custom' && typeof forcedXFormat === 'string') {\n\t                minor = {\n\t                    tick: forcedXTicks,\n\t                    format: d3TimeFormat.timeFormat(forcedXFormat)\n\t                };\n\t            } else {\n\t                var _timeAxisHelper$getXA = timeAxisHelper.getXAxisSettings(data, width, forceAxisSettings);\n\t\n\t                minor = _timeAxisHelper$getXA.minor;\n\t                major = _timeAxisHelper$getXA.major;\n\t            }\n\t\n\t            xAxis = d3Axis.axisBottom(xScale).ticks(minor.tick).tickSize(10, 0).tickPadding([tickPadding]).tickFormat(minor.format);\n\t        }\n\t\n\t        /**\n\t         * Creates the brush element and attaches a listener\n\t         * @return {void}\n\t         */\n\t        function buildBrush() {\n\t            brush = d3Brush.brushX().extent([[0, 0], [chartWidth, chartHeight]]).on('brush', handleBrush).on('end', handleBrushEnded);\n\t        }\n\t\n\t        /**\n\t         * Builds containers for the chart, the axis and a wrapper for all of them\n\t         * Also applies the Margin convention\n\t         * @private\n\t         */\n\t        function buildContainerGroups() {\n\t            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');\n\t\n\t            container.append('g').classed('chart-group', true);\n\t            container.append('g').classed('metadata-group', true);\n\t            container.append('g').classed('x-axis-group', true);\n\t            container.append('g').classed('brush-group', true);\n\t        }\n\t\n\t        /**\n\t         * Creates the gradient on the area\n\t         * @return {void}\n\t         */\n\t        function buildGradient() {\n\t            var metadataGroup = svg.select('.metadata-group');\n\t\n\t            metadataGroup.append('linearGradient').attr('id', 'brush-area-gradient').attr('gradientUnits', 'userSpaceOnUse').attr('x1', 0).attr('x2', xScale(data[data.length - 1].date)).attr('y1', 0).attr('y2', 0).selectAll('stop').data([{ offset: '0%', color: gradient[0] }, { offset: '100%', color: gradient[1] }]).enter().append('stop').attr('offset', function (_ref3) {\n\t                var offset = _ref3.offset;\n\t                return offset;\n\t            }).attr('stop-color', function (_ref4) {\n\t                var color = _ref4.color;\n\t                return color;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Creates the x and y scales of the graph\n\t         * @private\n\t         */\n\t        function buildScales() {\n\t            xScale = d3Scale.scaleTime().domain(d3Array.extent(data, getDate)).range([0, chartWidth]);\n\t\n\t            yScale = d3Scale.scaleLinear().domain([0, d3Array.max(data, getValue)]).range([chartHeight, 0]);\n\t        }\n\t\n\t        /**\n\t         * Builds the SVG element that will contain the chart\n\t         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n\t         * @private\n\t         */\n\t        function buildSVG(container) {\n\t            if (!svg) {\n\t                svg = d3Selection.select(container).append('svg').classed('britechart brush-chart', true);\n\t\n\t                buildContainerGroups();\n\t            }\n\t\n\t            svg.attr('width', width).attr('height', height);\n\t        }\n\t\n\t        /**\n\t         * Cleaning data adding the proper format\n\t         *\n\t         * @param  {BrushChartData} data Data\n\t         */\n\t        function cleanData(data) {\n\t            return data.map(function (d) {\n\t                d.date = new Date(d[dateLabel]);\n\t                d.value = +d[valueLabel];\n\t\n\t                return d;\n\t            });\n\t        }\n\t\n\t        /**\n\t         * Clones the passed array of data\n\t         * @param  {Object[]} dataToClone Data to clone\n\t         * @return {Object[]}             Cloned data\n\t         */\n\t        function cloneData(dataToClone) {\n\t            return JSON.parse(JSON.stringify(dataToClone));\n\t        }\n\t\n\t        /**\n\t         * Draws the x axis on the svg object within its group\n\t         *\n\t         * @private\n\t         */\n\t        function drawAxis() {\n\t            svg.select('.x-axis-group').append('g').attr('class', 'x axis').attr('transform', 'translate(0, ' + chartHeight + ')').call(xAxis);\n\t        }\n\t\n\t        /**\n\t         * Draws the area that is going to represent the data\n\t         *\n\t         * @return {void}\n\t         */\n\t        function drawArea() {\n\t            // Create and configure the area generator\n\t            var area = d3Shape.area().x(function (_ref5) {\n\t                var date = _ref5.date;\n\t                return xScale(date);\n\t            }).y0(chartHeight).y1(function (_ref6) {\n\t                var value = _ref6.value;\n\t                return yScale(value);\n\t            }).curve(d3Shape.curveBasis);\n\t\n\t            // Create the area path\n\t            svg.select('.chart-group').append('path').datum(data).attr('class', 'brush-area').attr('d', area);\n\t        }\n\t\n\t        /**\n\t         * Draws the Brush components on its group\n\t         * @return {void}\n\t         */\n\t        function drawBrush() {\n\t            chartBrush = svg.select('.brush-group').call(brush);\n\t\n\t            // Update the height of the brushing rectangle\n\t            chartBrush.selectAll('rect').classed('brush-rect', true).attr('height', chartHeight);\n\t        }\n\t\n\t        /**\n\t         * Draws a handle for the Brush section\n\t         * @return {void}\n\t         */\n\t        function drawHandles() {\n\t            var handleFillColor = colorHelper.colorSchemasHuman.britechartsGreySchema[1];\n\t\n\t            // Styling\n\t            handle = chartBrush.selectAll('.handle.brush-rect').style('fill', handleFillColor);\n\t        }\n\t\n\t        /**\n\t         * When a brush event happens, we can extract info from the extension\n\t         * of the brush.\n\t         *\n\t         * @return {void}\n\t         */\n\t        function handleBrush() {\n\t            var s = d3Selection.event.selection,\n\t                dateExtent = s.map(xScale.invert);\n\t\n\t            if (typeof onBrush === 'function') {\n\t                onBrush.call(null, dateExtent);\n\t            }\n\t\n\t            // updateHandlers(dateExtent);\n\t        }\n\t\n\t        /**\n\t         * Processes the end brush event, snapping the boundaries to days\n\t         * as showed on the example on https://bl.ocks.org/mbostock/6232537\n\t         * @return {void}\n\t         * @private\n\t         */\n\t        function handleBrushEnded() {\n\t            if (!d3Selection.event.sourceEvent) return; // Only transition after input.\n\t            if (!d3Selection.event.selection) return; // Ignore empty selections.\n\t\n\t            var d0 = d3Selection.event.selection.map(xScale.invert),\n\t                d1 = d0.map(d3Time.timeDay.round);\n\t\n\t            // If empty when rounded, use floor & ceil instead.\n\t            if (d1[0] >= d1[1]) {\n\t                d1[0] = d3Time.timeDay.floor(d0[0]);\n\t                d1[1] = d3Time.timeDay.offset(d1[0]);\n\t            }\n\t\n\t            d3Selection.select(this).transition().call(d3Selection.event.target.move, d1.map(xScale));\n\t        }\n\t\n\t        /**\n\t         * Sets a new brush extent within the passed percentage positions\n\t         * @param {Number} a Percentage of data that the brush start with\n\t         * @param {Number} b Percentage of data that the brush ends with\n\t         * @example\n\t         *     setBrushByPercentages(0.25, 0.5)\n\t         */\n\t        function setBrushByPercentages(a, b) {\n\t            var x0 = a * chartWidth,\n\t                x1 = b * chartWidth;\n\t\n\t            brush.move(chartBrush, [x0, x1]);\n\t        }\n\t\n\t        /**\n\t         * Sets a new brush extent within the passed dates\n\t         * @param {String | Date} dateA Initial Date\n\t         * @param {String | Date} dateB End Date\n\t         */\n\t        function setBrushByDates(dateA, dateB) {\n\t            var x0 = xScale(new Date(dateA)),\n\t                x1 = xScale(new Date(dateB));\n\t\n\t            brush.move(chartBrush, [x0, x1]);\n\t        }\n\t\n\t        /**\n\t         * Updates visibility and position of the brush handlers\n\t         * @param  {Number[]} dateExtent Date range\n\t         * @return {void}\n\t         */\n\t        function updateHandlers(dateExtent) {\n\t            if (dateExtent == null) {\n\t                handle.attr('display', 'none');\n\t            } else {\n\t                handle.attr('display', null).attr('transform', function (d, i) {\n\t                    return 'translate(' + dateExtent[i] + ',' + chartHeight / 2 + ')';\n\t                });\n\t            }\n\t        }\n\t\n\t        // API\n\t\n\t        /**\n\t         * Gets or Sets the dateRange for the selected part of the brush\n\t         * @param  {String[]} _x Desired dateRange for the graph\n\t         * @return { dateRange | module} Current dateRange or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.dateRange = function (_x) {\n\t            if (!arguments.length) {\n\t                return dateRange;\n\t            }\n\t            dateRange = _x;\n\t\n\t            if (Array.isArray(dateRange)) {\n\t                setBrushByDates.apply(undefined, _toConsumableArray(dateRange));\n\t            }\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x axis grouping\n\t         * @param  {String} _x Desired format\n\t         * @return { (String|Module) }    Current format or module to chain calls\n\t         * @example\n\t         *     brush.forceAxisFormat(brush.axisTimeCombinations.HOUR_DAY)\n\t         */\n\t        exports.forceAxisFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return forceAxisSettings;\n\t            }\n\t            forceAxisSettings = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x format\n\t         * It requires a `forceAxisFormat` of 'custom' in order to work.\n\t         * @param  {String} _x              Desired format for x axis\n\t         * @return { (String|Module) }      Current format or module to chain calls\n\t         */\n\t        exports.forcedXFormat = function (_x) {\n\t            if (!arguments.length) {\n\t                return forcedXFormat;\n\t            }\n\t            forcedXFormat = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the ability to force the chart to show a certain x ticks. It requires a `forceAxisFormat` of 'custom' in order to work.\n\t         * NOTE: This value needs to be a multiple of 2, 5 or 10. They won't always work as expected, as D3 decides at the end\n\t         * how many and where the ticks will appear.\n\t         *\n\t         * @param  {Number} _x              Desired number of x axis ticks (multiple of 2, 5 or 10)\n\t         * @return { (Number|Module) }      Current number or ticks or module to chain calls\n\t         */\n\t        exports.forcedXTicks = function (_x) {\n\t            if (!arguments.length) {\n\t                return forcedXTicks;\n\t            }\n\t            forcedXTicks = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Exposes the constants to be used to force the x axis to respect a certain granularity\n\t         * current options: MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR\n\t         * @example\n\t         *     brush.forceAxisFormat(brush.axisTimeCombinations.HOUR_DAY)\n\t         */\n\t        exports.axisTimeCombinations = axisTimeCombinations;\n\t\n\t        /**\n\t         * Gets or Sets the gradient of the chart\n\t         * @param  {String[]} _x Desired gradient for the graph\n\t         * @return { gradient | module} Current gradient or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.gradient = function (_x) {\n\t            if (!arguments.length) {\n\t                return gradient;\n\t            }\n\t            gradient = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the height of the chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { height | module} Current height or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.height = function (_x) {\n\t            if (!arguments.length) {\n\t                return height;\n\t            }\n\t            height = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the margin of the chart\n\t         * @param  {object} _x Margin object to get/set\n\t         * @return { margin | module} Current margin or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.margin = function (_x) {\n\t            if (!arguments.length) {\n\t                return margin;\n\t            }\n\t            margin = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the callback that will be called when the user brushes over the area\n\t         * @param  {Function} _x Callback to call\n\t         * @return {Function | module}    Current callback function or the Chart Module\n\t         */\n\t        exports.onBrush = function (_x) {\n\t            if (!arguments.length) return onBrush;\n\t            onBrush = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        /**\n\t         * Gets or Sets the width of the chart\n\t         * @param  {number} _x Desired width for the graph\n\t         * @return { width | module} Current width or Chart module to chain calls\n\t         * @public\n\t         */\n\t        exports.width = function (_x) {\n\t            if (!arguments.length) {\n\t                return width;\n\t            }\n\t            width = _x;\n\t\n\t            return this;\n\t        };\n\t\n\t        return exports;\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-brush/ Version 1.0.4. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(6), __webpack_require__(41), __webpack_require__(10), __webpack_require__(13), __webpack_require__(14)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3));\n\t}(this, (function (exports,d3Dispatch,d3Drag,d3Interpolate,d3Selection,d3Transition) { 'use strict';\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation() {\n\t  d3Selection.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  d3Selection.event.preventDefault();\n\t  d3Selection.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !d3Selection.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent,\n\t      filter = defaultFilter,\n\t      listeners = d3Dispatch.dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local(this).extent;\n\t          d3Selection.select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n\t                i = d3Interpolate.interpolate(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            d3Transition.interrupt(that);\n\t            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = d3Selection.select(this),\n\t        selection = local(this).selection;\n\t\n\t    if (selection) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection[0][0])\n\t          .attr(\"y\", selection[0][1])\n\t          .attr(\"width\", selection[1][0] - selection[0][0])\n\t          .attr(\"height\", selection[1][1] - selection[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      d3Selection.customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (d3Selection.event.touches) { if (d3Selection.event.changedTouches.length < d3Selection.event.touches.length) return noevent(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = d3Selection.event.target.__data__.type,\n\t        mode = (d3Selection.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local(that),\n\t        extent = state.extent,\n\t        selection = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && d3Selection.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = d3Selection.mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection[0][0];\n\t      n0 = selection[0][1];\n\t      e0 = selection[1][0];\n\t      s0 = selection[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = d3Selection.select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (d3Selection.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = d3Selection.select(d3Selection.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      d3Drag.dragDisable(d3Selection.event.view);\n\t    }\n\t\n\t    nopropagation();\n\t    d3Transition.interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = d3Selection.mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n\t      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\t\n\t      if (selection[0][0] !== w1\n\t          || selection[0][1] !== n1\n\t          || selection[1][0] !== e1\n\t          || selection[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation();\n\t      if (d3Selection.event.touches) {\n\t        if (d3Selection.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        d3Drag.dragEnable(d3Selection.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n\t      if (empty(selection)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (d3Selection.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (d3Selection.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (d3Selection.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org/d3-drag/ Version 1.0.4. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports, __webpack_require__(6), __webpack_require__(13)) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-selection'], factory) :\n\t\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3));\n\t}(this, (function (exports,d3Dispatch,d3Selection) { 'use strict';\n\t\n\tfunction nopropagation() {\n\t  d3Selection.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  d3Selection.event.preventDefault();\n\t  d3Selection.event.stopImmediatePropagation();\n\t};\n\t\n\tvar nodrag = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection = d3Selection.select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection = d3Selection.select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch$$1) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch$$1;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !d3Selection.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: d3Selection.event.x, y: d3Selection.event.y} : d;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = d3Dispatch.dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousemoving,\n\t      touchending;\n\t\n\t  function drag(selection) {\n\t    selection\n\t        .on(\"mousedown.drag\", mousedowned)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), d3Selection.mouse, this, arguments);\n\t    if (!gesture) return;\n\t    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    nodrag(d3Selection.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    mousemoving = true;\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(d3Selection.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches = d3Selection.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches[i].identifier, c, d3Selection.touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches = d3Selection.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches = d3Selection.event.changedTouches,\n\t        n = touches.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!d3Selection.customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      d3Selection.customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\texports.drag = drag;\n\texports.dragDisable = nodrag;\n\texports.dragEnable = yesdrag;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// britecharts.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 010598eb78960021eb64","import bar from './charts/bar.js';\nimport donut from './charts/donut.js';\nimport legend from './charts/legend.js';\nimport line from './charts/line.js';\nimport tooltip from './charts/tooltip.js';\nimport miniTooltip from './charts/mini-tooltip.js';\nimport sparkline from './charts/sparkline.js';\nimport stackedArea from './charts/stacked-area.js';\nimport groupedBar from './charts/grouped-bar.js';\nimport stackedBar from './charts/stacked-bar.js';\nimport step from './charts/step.js';\nimport brush from './charts/brush.js';\nimport colors from './charts/helpers/colors.js';\n\nexport {\n        bar,\n        donut,\n        legend,\n        line,\n        tooltip,\n        miniTooltip,\n        sparkline,\n        stackedArea,\n        groupedBar,\n        stackedBar,\n        step,\n        brush,\n        colors\n    };\n\n\n\n// WEBPACK FOOTER //\n// ./src/bundle.js","define(function(require) {\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Ease = require('d3-ease');\n    const d3Axis = require('d3-axis');\n    const d3Color = require('d3-color');\n    const d3Dispatch = require('d3-dispatch');\n    const d3Format = require('d3-format');\n    const d3Scale = require('d3-scale');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n\n    const textHelper = require('./helpers/text');\n    const {exportChart} = require('./helpers/exportChart');\n    const colorHelper = require('./helpers/colors');\n\n\n    const PERCENTAGE_FORMAT = '%';\n    const NUMBER_FORMAT = ',f';\n\n\n    /**\n     * @typedef BarChartData\n     * @type {Object[]}\n     * @property {Number} value        Value of the group (required)\n     * @property {String} name         Name of the group (required)\n     *\n     * @example\n     * [\n     *     {\n     *         value: 1,\n     *         name: 'glittering'\n     *     },\n     *     {\n     *         value: 1,\n     *         name: 'luminous'\n     *     }\n     * ]\n     */\n\n    /**\n     * Bar Chart reusable API class that renders a\n     * simple and configurable bar chart.\n     *\n     * @module Bar\n     * @tutorial bar\n     * @requires d3-array, d3-axis, d3-dispatch, d3-scale, d3-selection\n     *\n     * @example\n     * var barChart = bar();\n     *\n     * barChart\n     *     .height(500)\n     *     .width(800);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(barChart);\n     *\n     */\n    return function module() {\n\n        let margin = {\n                top: 20,\n                right: 20,\n                bottom: 30,\n                left: 40\n            },\n            width = 960,\n            height = 500,\n            data,\n            dataZeroed,\n            chartWidth, chartHeight,\n            xScale, yScale,\n            colorSchema = colorHelper.singleColors.aloeGreen,\n            colorList,\n            colorMap,\n            numOfVerticalTicks = 5,\n            numOfHorizontalTicks = 5,\n            percentageAxisToMaxRatio = 1,\n            enablePercentageLabels = false,\n            percentageLabelMargin = 7,\n            percentageLabelSize = 12,\n            horizontalLabelFormat = '.0%',\n            verticalLabelFormat = '.0f',\n            valueLabelFormat = NUMBER_FORMAT,\n            xAxis, yAxis,\n            xAxisPadding = {\n                top: 0,\n                left: 0,\n                bottom: 0,\n                right: 0\n            },\n            yAxisPaddingBetweenChart = 10,\n            yAxisLineWrapLimit = 1,\n            horizontal = false,\n            svg,\n\n            isAnimated = false,\n            ease = d3Ease.easeQuadInOut,\n            animationDuration = 800,\n            interBarDelay = function(d, i) {return 70 * i},\n\n            valueLabel = 'value',\n            nameLabel = 'name',\n\n            maskGridLines,\n            baseLine,\n            reverseColorList = true,\n\n            // Dispatcher object to broadcast the mouse events\n            // Ref: https://github.com/mbostock/d3/wiki/Internals#d3_dispatch\n            dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove'),\n\n            // extractors\n            getName = ({name}) => name,\n            getValue = ({value}) => value,\n\n            _percentageLabelHorizontalX = ({value}) => xScale(value) + percentageLabelMargin,\n            _percentageLabelHorizontalY= ({name}) => yScale(name) + (yScale.bandwidth() / 2) + (percentageLabelSize * (3/8)),\n\n            _percentageLabelVerticalX = ({name}) => xScale(name),\n            _percentageLabelVerticalY = ({value}) => yScale(value) - percentageLabelMargin,\n\n            _percentageLabelHorizontalFormatValue = ({value}) => d3Format.format(horizontalLabelFormat)(value),\n            _percentageLabelVerticalFormatValue = ({value}) => d3Format.format(verticalLabelFormat)(parseFloat(value) * 100);\n\n        /**\n         * This function creates the graph using the selection as container\n         * @param  {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {BarChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data) {\n                chartWidth = width - margin.left - margin.right - (yAxisPaddingBetweenChart * 1.2);\n                chartHeight = height - margin.top - margin.bottom;\n                ({data, dataZeroed} = cleanData(_data));\n\n                buildScales();\n                buildAxis();\n                buildSVG(this);\n                drawGridLines();\n                drawBars();\n                drawAxis();\n                if (enablePercentageLabels) {\n                    drawPercentageLabels();\n                }\n            });\n        }\n\n        /**\n         * Creates the d3 x and y axis, setting orientations\n         * @private\n         */\n        function buildAxis() {\n            if (!horizontal) {\n                xAxis = d3Axis.axisBottom(xScale);\n\n                yAxis = d3Axis.axisLeft(yScale)\n                    .ticks(numOfVerticalTicks, valueLabelFormat)\n            } else {\n                xAxis = d3Axis.axisBottom(xScale)\n                    .ticks(numOfHorizontalTicks, valueLabelFormat)\n                    .tickSizeInner([-chartHeight]);\n\n                yAxis = d3Axis.axisLeft(yScale);\n            }\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * Also applies the Margin convention\n         * @private\n         */\n        function buildContainerGroups() {\n            let container = svg\n                .append('g')\n                  .classed('container-group', true)\n                  .attr('transform', `translate(${margin.left + yAxisPaddingBetweenChart}, ${margin.top})`);\n\n            container\n                .append('g').classed('grid-lines-group', true);\n            container\n                .append('g').classed('chart-group', true);\n            container\n                .append('g').classed('x-axis-group axis', true);\n            container\n                .append('g')\n                .attr('transform', `translate(${-1 * (yAxisPaddingBetweenChart)}, 0)`)\n                .classed('y-axis-group axis', true);\n            container\n                .append('g').classed('metadata-group', true);\n        }\n\n        /**\n         * Creates the x and y scales of the graph\n         * @private\n         */\n        function buildScales() {\n            let percentageAxis = Math.min(percentageAxisToMaxRatio * d3Array.max(data, getValue))\n\n            if (!horizontal) {\n                xScale = d3Scale.scaleBand()\n                    .domain(data.map(getName))\n                    .rangeRound([0, chartWidth])\n                    .padding(0.1);\n\n                yScale = d3Scale.scaleLinear()\n                    .domain([0, percentageAxis])\n                    .rangeRound([chartHeight, 0]);\n            } else {\n                xScale = d3Scale.scaleLinear()\n                    .domain([0, percentageAxis])\n                    .rangeRound([0, chartWidth]);\n\n                yScale = d3Scale.scaleBand()\n                    .domain(data.map(getName))\n                    .rangeRound([chartHeight, 0])\n                    .padding(0.1);\n            }\n\n            if (reverseColorList) {\n                colorList = data.map(d => d)\n                                .reverse()\n                                .map(({name}, i) => ({\n                                        name,\n                                        color: colorSchema[i % colorSchema.length]}\n                                    ));\n            } else {\n                colorList = data.map(d => d)\n                                .map(({name}, i) => ({\n                                        name,\n                                        color: colorSchema[i % colorSchema.length]}\n                                    ));\n            }\n\n            colorMap = (item) => colorList.filter(({name}) => name === item)[0].color;\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container)\n                    .append('svg')\n                      .classed('britechart bar-chart', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Cleaning data adding the proper format\n         * @param  {BarChartData} originalData Data\n         * @private\n         */\n        function cleanData(originalData) {\n            let data = originalData.map((d) => ({\n                    value: +d[valueLabel],\n                    name: String(d[nameLabel])\n                }));\n            let dataZeroed = data.map((d) => ({\n                    value: 0,\n                    name: String(d[nameLabel])\n                }));\n\n            return {data, dataZeroed}\n        }\n\n        /**\n         * Utility function that wraps a text into the given width\n         * @param  {D3Selection} text         Text to write\n         * @param  {Number} containerWidth\n         * @private\n         */\n        function wrapText(text, containerWidth) {\n            textHelper.wrapTextWithEllipses(text, containerWidth, 0, yAxisLineWrapLimit)\n        }\n\n        /**\n         * Draws the x and y axis on the svg object within their\n         * respective groups\n         * @private\n         */\n        function drawAxis() {\n            svg.select('.x-axis-group.axis')\n                .attr('transform', `translate(0, ${chartHeight})`)\n                .call(xAxis);\n\n            svg.select('.y-axis-group.axis')\n                .call(yAxis);\n\n            svg.selectAll('.y-axis-group .tick text')\n                .call(wrapText, margin.left - yAxisPaddingBetweenChart)\n        }\n\n        /**\n         * Draws the bars along the x axis\n         * @param  {D3Selection} bars Selection of bars\n         * @return {void}\n         */\n        function drawHorizontalBars(bars) {\n            // Enter + Update\n            bars.enter()\n              .append('rect')\n                .classed('bar', true)\n                .attr('y', chartHeight)\n                .attr('x', 0)\n                .attr('height', yScale.bandwidth())\n                .attr('width', ({value}) => xScale(value))\n                .attr('fill', ({name}) => colorMap(name))\n                .on('mouseover', function() {\n                    dispatcher.call('customMouseOver', this);\n                    d3Selection.select(this).attr('fill', ({name}) => d3Color.color(colorMap(name)).darker());\n                })\n                .on('mousemove', function(d) {\n                    dispatcher.call('customMouseMove', this, d, d3Selection.mouse(this), [chartWidth, chartHeight]);\n                })\n                .on('mouseout', function() {\n                    dispatcher.call('customMouseOut', this);\n                    d3Selection.select(this).attr('fill', ({name}) => colorMap(name))\n                })\n              .merge(bars)\n                .attr('x', 0)\n                .attr('y', ({name}) => yScale(name))\n                .attr('height', yScale.bandwidth())\n                .attr('width', ({value}) => xScale(value));\n        }\n\n        /**\n         * Draws and animates the bars along the x axis\n         * @param  {D3Selection} bars Selection of bars\n         * @return {void}\n         */\n        function drawAnimatedHorizontalBars(bars) {\n            // Enter + Update\n            bars.enter()\n              .append('rect')\n                .classed('bar', true)\n                .attr('x', 0)\n                .attr('y', chartHeight)\n                .attr('height', yScale.bandwidth())\n                .attr('width', ({value}) => xScale(value))\n                .attr('fill', ({name}) => colorMap(name))\n                .on('mouseover', function() {\n                    dispatcher.call('customMouseOver', this);\n                    d3Selection.select(this).attr('fill', ({name}) => d3Color.color(colorMap(name)).darker());\n                })\n                .on('mousemove', function(d) {\n                    dispatcher.call('customMouseMove', this, d, d3Selection.mouse(this), [chartWidth, chartHeight]);\n                })\n                .on('mouseout', function() {\n                    dispatcher.call('customMouseOut', this);\n                    d3Selection.select(this).attr('fill', ({name}) => colorMap(name))\n                });\n\n            bars\n                .attr('x', 0)\n                .attr('y', ({name}) => yScale(name))\n                .attr('height', yScale.bandwidth())\n                .transition()\n                .duration(animationDuration)\n                .delay(interBarDelay)\n                .ease(ease)\n                .attr('width', ({value}) => xScale(value));\n        }\n\n        /**\n         * Draws and animates the bars along the y axis\n         * @param  {D3Selection} bars Selection of bars\n         * @return {void}\n         */\n        function drawAnimatedVerticalBars(bars) {\n            // Enter + Update\n            bars.enter()\n              .append('rect')\n                .classed('bar', true)\n                .attr('x', chartWidth)\n                .attr('y', ({value}) => yScale(value))\n                .attr('width', xScale.bandwidth())\n                .attr('height', ({value}) => chartHeight - yScale(value))\n                .attr('fill', ({name}) => colorMap(name))\n                .on('mouseover', function() {\n                    dispatcher.call('customMouseOver', this);\n                    d3Selection.select(this).attr('fill', ({name}) => d3Color.color(colorMap(name)).darker())\n                })\n                .on('mousemove', function(d) {\n                    dispatcher.call('customMouseMove', this, d, d3Selection.mouse(this), [chartWidth, chartHeight]);\n                })\n                .on('mouseout', function() {\n                    dispatcher.call('customMouseOut', this);\n                    d3Selection.select(this).attr('fill', ({name}) => colorMap(name))\n                })\n              .merge(bars)\n                .attr('x', ({name}) => xScale(name))\n                .attr('width', xScale.bandwidth())\n                .transition()\n                .duration(animationDuration)\n                .delay(interBarDelay)\n                .ease(ease)\n                .attr('y', ({value}) => yScale(value))\n                .attr('height', ({value}) => chartHeight - yScale(value));\n        }\n\n        /**\n         * Draws the bars along the y axis\n         * @param  {D3Selection} bars Selection of bars\n         * @return {void}\n         */\n        function drawVerticalBars(bars) {\n            // Enter + Update\n            bars.enter()\n              .append('rect')\n                .classed('bar', true)\n                .attr('x', chartWidth)\n                .attr('y', ({value}) => yScale(value))\n                .attr('width', xScale.bandwidth())\n                .attr('height', ({value}) => chartHeight - yScale(value))\n                .attr('fill', ({name}) => colorMap(name))\n                .on('mouseover', function() {\n                    dispatcher.call('customMouseOver', this);\n                    d3Selection.select(this).attr('fill', ({name}) => d3Color.color(colorMap(name)).darker())\n                })\n                .on('mousemove', function(d) {\n                    dispatcher.call('customMouseMove', this, d, d3Selection.mouse(this), [chartWidth, chartHeight]);\n                })\n                .on('mouseout', function() {\n                    dispatcher.call('customMouseOut', this);\n                    d3Selection.select(this).attr('fill', ({name}) => colorMap(name))\n                })\n              .merge(bars)\n                .attr('x', ({name}) => xScale(name))\n                .attr('y', ({value}) => yScale(value))\n                .attr('width', xScale.bandwidth())\n                .attr('height', ({value}) => chartHeight - yScale(value));\n        }\n\n        /**\n         * Draws percentage labels at the end of each bar\n         * @private\n         * @return {void}\n         */\n        function drawPercentageLabels() {\n            let labelXPosition = horizontal ? _percentageLabelHorizontalX : _percentageLabelVerticalX;\n            let labelYPosition = horizontal ? _percentageLabelHorizontalY : _percentageLabelVerticalY;\n            let text = horizontal ? _percentageLabelHorizontalFormatValue : _percentageLabelVerticalFormatValue;\n\n            let percentageLabels = svg.select('.metadata-group')\n              .append('g')\n                .classed('percentage-label-group', true)\n                .selectAll('text')\n                .data(data.reverse())\n                .enter()\n              .append('text');\n\n            percentageLabels\n                .classed('percentage-label', true)\n                .attr('x', labelXPosition)\n                .attr('y', labelYPosition)\n                .text(text)\n                .attr('font-size', percentageLabelSize + 'px')\n        }\n\n        /**\n         * Draws the bar elements within the chart group\n         * @private\n         */\n        function drawBars() {\n            let bars;\n\n            if (isAnimated) {\n                bars = svg.select('.chart-group').selectAll('.bar')\n                    .data(dataZeroed);\n\n                if (!horizontal) {\n                    drawVerticalBars(bars);\n                } else {\n                    drawHorizontalBars(bars);\n                }\n\n                bars = svg.select('.chart-group').selectAll('.bar')\n                    .data(data);\n\n                if (!horizontal) {\n                    drawAnimatedVerticalBars(bars);\n                } else {\n                    drawAnimatedHorizontalBars(bars);\n                }\n            } else {\n                bars = svg.select('.chart-group').selectAll('.bar')\n                    .data(data);\n\n                if (!horizontal) {\n                    drawVerticalBars(bars);\n                } else {\n                    drawHorizontalBars(bars);\n                }\n            }\n\n            // Exit\n            bars.exit()\n                .transition()\n                .style('opacity', 0)\n                .remove();\n        }\n\n        /**\n         * Draws grid lines on the background of the chart\n         * @return void\n         */\n        function drawGridLines() {\n            if (!horizontal) {\n                drawVerticalGridLines();\n            } else {\n                drawHorizontalGridLines();\n            }\n        }\n\n        /**\n         * Draws the grid lines for an horizontal bar chart\n         * @return {void}\n         */\n        function drawHorizontalGridLines() {\n            maskGridLines = svg.select('.grid-lines-group')\n                .selectAll('line.vertical-grid-line')\n                .data(xScale.ticks(4))\n                .enter()\n                  .append('line')\n                    .attr('class', 'vertical-grid-line')\n                    .attr('y1', (xAxisPadding.left))\n                    .attr('y2', chartHeight)\n                    .attr('x1', (d) => xScale(d))\n                    .attr('x2', (d) => xScale(d))\n\n            drawVerticalExtendedLine();\n        }\n\n        /**\n         * Draws a vertical line to extend y-axis till the edges\n         * @return {void}\n         */\n        function drawVerticalExtendedLine() {\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-y-line')\n                .data([0])\n                .enter()\n                  .append('line')\n                    .attr('class', 'extended-y-line')\n                    .attr('y1', (xAxisPadding.bottom))\n                    .attr('y2', chartHeight)\n                    .attr('x1', 0)\n                    .attr('x2', 0);\n        }\n\n        /**\n         * Draws the grid lines for a vertical bar chart\n         * @return {void}\n         */\n        function drawVerticalGridLines() {\n            maskGridLines = svg.select('.grid-lines-group')\n                .selectAll('line.horizontal-grid-line')\n                .data(yScale.ticks(4))\n                .enter()\n                  .append('line')\n                    .attr('class', 'horizontal-grid-line')\n                    .attr('x1', (xAxisPadding.left))\n                    .attr('x2', chartWidth)\n                    .attr('y1', (d) => yScale(d))\n                    .attr('y2', (d) => yScale(d))\n\n            drawHorizontalExtendedLine();\n        }\n\n        /**\n         * Draws a vertical line to extend x-axis till the edges\n         * @return {void}\n         */\n        function drawHorizontalExtendedLine() {\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-x-line')\n                .data([0])\n                .enter()\n                  .append('line')\n                    .attr('class', 'extended-x-line')\n                    .attr('x1', (xAxisPadding.left))\n                    .attr('x2', chartWidth)\n                    .attr('y1', chartHeight)\n                    .attr('y2', chartHeight);\n        }\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename) {\n            exportChart.call(exports, svg, filename);\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { height | module} Current height or Bar Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Bar Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { width | module} Current width or Bar Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the horizontal direction of the chart\n         * @param  {number} _x Desired horizontal direction for the graph\n         * @return { horizontal | module} Current horizontal direction or Bar Chart module to chain calls\n         * @public\n         */\n        exports.horizontal = function(_x) {\n            if (!arguments.length) {\n                return horizontal;\n            }\n            horizontal = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n         * By default this is 'false'\n         *\n         * @param  {Boolean} _x Desired animation flag\n         * @return { isAnimated | module} Current isAnimated flag or Chart module\n         * @public\n         */\n        exports.isAnimated = function(_x) {\n            if (!arguments.length) {\n                return isAnimated;\n            }\n            isAnimated = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n         * We are going to expose this events:\n         * customMouseOver, customMouseMove and customMouseOut\n         *\n         * @return {module} Bar Chart\n         * @public\n         */\n        exports.on = function() {\n            let value = dispatcher.on.apply(dispatcher, arguments);\n\n            return value === dispatcher ? exports : value;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename, title) {\n            exportChart.call(exports, svg, filename, title);\n        };\n\n        /**\n         * Gets or Sets the colorSchema of the chart\n         * @param  {String[]} _x Desired colorSchema for the graph\n         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n         * @public\n         */\n        exports.colorSchema = function(_x) {\n            if (!arguments.length) {\n                return colorSchema;\n            }\n            colorSchema = _x;\n\n            return this;\n        }\n\n        /**\n         * Gets or Sets the valueLabelFormat to a percentage format if true (default false)\n         * @param  {boolean} _x     Should use percentage as value format\n         * @return { valueLabelFormat | module} Is percentage value format used or Chart module to chain calls\n         * @public\n         */\n        exports.usePercentage = function(_x) {\n            if (!arguments.length) {\n                return valueLabelFormat === PERCENTAGE_FORMAT;\n            }\n            if (_x) {\n                valueLabelFormat = PERCENTAGE_FORMAT;\n            } else {\n                valueLabelFormat = NUMBER_FORMAT;\n            }\n\n            return this;\n        }\n\n        /**\n         * Configurable extension of the x axis\n         * if your max point was 50% you might want to show x axis to 60%, pass 1.2\n         * @param  {number} _x ratio to max data point to add to the x axis\n         * @return { ratio | module} Current ratio or Bar Chart module to chain calls\n         * @public\n         */\n        exports.percentageAxisToMaxRatio = function(_x) {\n            if (!arguments.length) {\n                return percentageAxisToMaxRatio;\n            }\n            percentageAxisToMaxRatio = _x;\n\n            return this;\n        }\n\n        /**\n         * Default 10px. Offset between end of bar and start of the percentage bars\n         * @param  {number} _x percentage margin offset from end of bar\n         * @return {number | module}    Currnet offset or Bar Chart module to chain calls\n         */\n        exports.percentageLabelMargin = function(_x) {\n            if (!arguments.length) {\n                return percentageLabelMargin;\n            }\n            percentageLabelMargin = _x;\n\n            return this;\n        }\n\n        /**\n         * Default false. If true, adds percentage labels at the end of the bars\n         * @param  {Boolean} _x\n         * @return {Boolean | module}    Current value of enablePercentageLables or Bar Chart module to chain calls\n         */\n        exports.enablePercentageLabels = function(_x) {\n            if (!arguments.length) {\n                return enablePercentageLabels;\n            }\n            enablePercentageLabels = _x;\n\n            return this;\n        }\n\n        /**\n         * Default 10. Space between y axis and chart\n         * @param  {number} _x space between y axis and chart\n         * @return {number| module}    Current value of yAxisPaddingBetweenChart or Bar Chart module to chain calls\n         */\n        exports.yAxisPaddingBetweenChart = function(_x) {\n            if (!arguments.length) {\n                return yAxisPaddingBetweenChart;\n            }\n            yAxisPaddingBetweenChart = _x;\n\n            return this;\n        }\n\n        /**\n         * Gets or Sets the valueLabel of the chart\n         * @param  {Number} _x Desired valueLabel for the graph\n         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabel = function(_x) {\n            if (!arguments.length) {\n                return valueLabel;\n            }\n            valueLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the nameLabel of the chart\n         * @param  {Number} _x Desired nameLabel for the graph\n         * @return { nameLabel | module} Current nameLabel or Chart module to chain calls\n         * @public\n         */\n        exports.nameLabel = function(_x) {\n            if (!arguments.length) {\n                return nameLabel;\n            }\n            nameLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets whether the color list should be reversed or not\n         * @param  {boolean} _x     Should reverse the color list\n         * @return { boolean | module} Is color list being reversed\n         * @public\n         */\n        exports.reverseColorList = function(_x) {\n            if (!arguments.length) {\n                return reverseColorList;\n            }\n            reverseColorList = _x;\n\n            return this;\n        };\n\n        return exports;\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/bar.js","// https://d3js.org/d3-array/ Version 1.2.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar quantile = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-array/build/d3-array.js\n// module id = 2\n// module chunks = 0","// https://d3js.org/d3-ease/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-ease/build/d3-ease.js\n// module id = 3\n// module chunks = 0","// https://d3js.org/d3-axis/ Version 1.0.6. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar slice = Array.prototype.slice;\n\nvar identity = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-axis/build/d3-axis.js\n// module id = 4\n// module chunks = 0","// https://d3js.org/d3-color/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-color/build/d3-color.js\n// module id = 5\n// module chunks = 0","// https://d3js.org/d3-dispatch/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexports.dispatch = dispatch;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-dispatch/build/d3-dispatch.js\n// module id = 6\n// module chunks = 0","// https://d3js.org/d3-format/ Version 1.2.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n};\n\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-format/build/d3-format.js\n// module id = 7\n// module chunks = 0","// https://d3js.org/d3-scale/ Version 1.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-collection'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format'), require('d3-color')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\nvar array = Array.prototype;\n\nvar map$1 = array.map;\nvar slice = array.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range$$1) {\n  var index = d3Collection.map(),\n      domain = [],\n      unknown = implicit;\n\n  range$$1 = range$$1 == null ? [] : slice.call(range$$1);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range$$1[(i - 1) % range$$1.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = d3Collection.map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), scale) : range$$1.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range$$1)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = d3Array.bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = d3Interpolate.interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice.call(_), interpolate$$1 = d3Interpolate.interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n      return d3Format.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return d3Format.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = d3Array.tickStep(start, stop, n);\n\n    if (step) {\n      step = d3Array.tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear() {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[d3Array.bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number$1(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year, month, week, day, hour, minute, second, millisecond, format$$1) {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format$$1(\".%L\"),\n      formatSecond = format$$1(\":%S\"),\n      formatMinute = format$$1(\"%I:%M\"),\n      formatHour = format$$1(\"%I %p\"),\n      formatDay = format$$1(\"%a %d\"),\n      formatWeek = format$$1(\"%b %d\"),\n      formatMonth = format$$1(\"%B\"),\n      formatYear = format$$1(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = d3Array.tickStep(start, stop, interval);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format$$1(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format$$1));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\nvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar rainbow = d3Color.cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range$$1) {\n  var n = range$$1.length;\n  return function(t) {\n    return range$$1[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nexports.scaleBand = band;\nexports.scalePoint = point;\nexports.scaleIdentity = identity;\nexports.scaleLinear = linear;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$1;\nexports.scaleQuantize = quantize;\nexports.scaleThreshold = threshold;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$1;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-scale/build/d3-scale.js\n// module id = 8\n// module chunks = 0","// https://d3js.org/d3-collection/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map$$1, depth) {\n    if (++depth > keys.length) return map$$1;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map$$1, key, value) {\n  map$$1.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nexports.nest = nest;\nexports.set = set;\nexports.map = map;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-collection/build/d3-collection.js\n// module id = 9\n// module chunks = 0","// https://d3js.org/d3-interpolate/ Version 1.1.4. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-color')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Color) { 'use strict';\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n\nvar rgb$1 = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = d3Color.rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar number = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar string = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar value = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)\n      : b instanceof d3Color.color ? rgb$1\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : isNaN(b) ? object\n      : number)(a, b);\n};\n\nvar round = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar zoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nexports.interpolate = value;\nexports.interpolateArray = array;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = number;\nexports.interpolateObject = object;\nexports.interpolateRound = round;\nexports.interpolateString = string;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = zoom;\nexports.interpolateRgb = rgb$1;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-interpolate/build/d3-interpolate.js\n// module id = 10\n// module chunks = 0","// https://d3js.org/d3-time/ Version 1.0.6. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar t0 = new Date;\nvar t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-time/build/d3-time.js\n// module id = 11\n// module chunks = 0","// https://d3js.org/d3-time-format/ Version 2.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Time) { 'use strict';\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$1;\n\n\n\n\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nexports.timeFormatDefaultLocale = defaultLocale;\nexports.timeFormatLocale = formatLocale;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-time-format/build/d3-time-format.js\n// module id = 12\n// module chunks = 0","// https://d3js.org/d3-selection/ Version 1.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : defaultView(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nexports.creator = creator;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-selection/build/d3-selection.js\n// module id = 13\n// module chunks = 0","// https://d3js.org/d3-transition/ Version 1.0.4. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-dispatch'), require('d3-timer'), require('d3-interpolate'), require('d3-color'), require('d3-ease')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-timer', 'd3-interpolate', 'd3-color', 'd3-ease'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Selection,d3Dispatch,d3Timer,d3Interpolate,d3Color,d3Ease) { 'use strict';\n\nvar emptyOn = d3Dispatch.dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = d3Timer.timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return d3Timer.timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    d3Timer.timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n\nvar interpolate = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? d3Interpolate.interpolateNumber\n      : b instanceof d3Color.color ? d3Interpolate.interpolateRgb\n      : (c = d3Color.color(b)) ? (b = c, d3Interpolate.interpolateRgb)\n      : d3Interpolate.interpolateString)(a, b);\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = d3Selection.namespace(name), i = fullname === \"transform\" ? d3Interpolate.interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = d3Selection.namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = d3Selection.matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection = d3Selection.selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection(this._groups, this._parents);\n};\n\nfunction styleRemove(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = d3Selection.window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = d3Selection.window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = d3Selection.window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? d3Interpolate.interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return d3Selection.selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = d3Selection.selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: d3Ease.easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = d3Timer.now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = d3Timer.now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nd3Selection.selection.prototype.interrupt = selection_interrupt;\nd3Selection.selection.prototype.transition = selection_transition;\n\nvar root = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-transition/build/d3-transition.js\n// module id = 14\n// module chunks = 0","// https://d3js.org/d3-timer/ Version 1.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-timer/build/d3-timer.js\n// module id = 15\n// module chunks = 0","define(function(require) {\n\n    const d3Selection = require('d3-selection');\n\n    const wrapConfig = {\n        lineHeight: 1.2,\n        smallTextOffset: 10,\n        smallTextLineHeightRatio: 0.9,\n        smallTextRatio: 0.6,\n        valueClassName: 'value',\n        labelClassName: 'label'\n    };\n\n    const defaultTextSize = 12;\n    const defaultFontFace = 'Arial';\n\n    /**\n     * Wraps a selection of text within the available width\n     * @param  {Number} fontSize       Size of the base font\n     * @param  {Number} availableWidth Width of the container where the text needs to wrap on\n     * @param  {D3Selection} node      SVG text element that contains the text to wrap\n     *\n     * REF: http://bl.ocks.org/mbostock/7555321\n     * More discussions on https://github.com/mbostock/d3/issues/1642\n     * @return {void}\n     */\n    const wrapText = function(xOffset, fontSize, availableWidth, node, data, i) {\n        let text = d3Selection.select(node),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineNumber = 0,\n            smallLineHeight = wrapConfig.lineHeight * wrapConfig.smallTextLineHeightRatio,\n            y = text.attr('y'),\n            dy = parseFloat(text.attr('dy')),\n            smallFontSize = fontSize * wrapConfig.smallTextRatio,\n            tspan = text.text(null).append('tspan')\n                .attr('x', xOffset)\n                .attr('y', y - 5)\n                .attr('dy', dy + 'em')\n                .classed(wrapConfig.valueClassName, true)\n                .style('font-size', fontSize + 'px');\n\n        tspan.text(words.pop());\n        tspan = text.append('tspan')\n            .classed(wrapConfig.labelClassName, true)\n            .attr('x', xOffset)\n            .attr('y', y + wrapConfig.smallTextOffset)\n            .attr('dy', ++lineNumber * smallLineHeight + dy + 'em')\n            .style('font-size', smallFontSize + 'px');\n\n        while (word = words.pop()) {\n            line.push(word);\n            tspan.text(line.join(' '));\n            if (tspan.node().getComputedTextLength() > availableWidth - 50) {\n                line.pop();\n                tspan.text(line.join(' '));\n                line = [word];\n                tspan = text.append('tspan')\n                    .classed(wrapConfig.labelClassName, true)\n                    .attr('x', xOffset)\n                    .attr('y', y+ wrapConfig.smallTextOffset)\n                    .attr('dy', ++lineNumber * smallLineHeight + dy + 'em')\n                    .text(word)\n                    .style('font-size', smallFontSize + 'px');\n            }\n        }\n    };\n\n    /**\n     * Wraps a selection of text within the available width, also adds class .adjust-upwards\n     * to configure a y offset for entries with multiple rows\n     * @param  {D3Sekectuib} text       d3 text element\n     * @param  {Number} width           Width of the container where the text needs to wrap on\n     * @param  {Number} xpos            number passed to determine the x offset\n     * @param  {Number} limit           number of lines before an ellipses is added and the rest of the text is cut off\n     *\n     * REF: http://bl.ocks.org/mbostock/7555321\n     * More discussions on https://github.com/mbostock/d3/issues/1642\n     * @return {void}\n     */\n    const wrapTextWithEllipses = function(text, width, xpos=0, limit=2) {\n\n            text.each(function() {\n                var words,\n                    word,\n                    line,\n                    lineNumber,\n                    lineHeight,\n                    y,\n                    dy,\n                    tspan;\n\n                text = d3Selection.select(this);\n\n                words = text.text().split(/\\s+/).reverse();\n                line = [];\n                lineNumber = 0;\n                lineHeight = 1.2;\n                y = text.attr('y');\n                dy = parseFloat(text.attr('dy'));\n                tspan = text\n                    .text(null)\n                    .append('tspan')\n                    .attr('x', xpos)\n                    .attr('y', y)\n                    .attr('dy', dy + 'em');\n\n                while ((word = words.pop())) {\n                    line.push(word);\n                    tspan.text(line.join(' '));\n\n                    if (tspan.node().getComputedTextLength() > width) {\n                        line.pop();\n                        tspan.text(line.join(' '));\n\n                        if (lineNumber < limit - 1) {\n                            line = [word];\n                            tspan = text.append('tspan')\n                                .attr('x', xpos)\n                                .attr('y', y)\n                                .attr('dy', ++lineNumber * lineHeight + dy + 'em')\n                                .text(word);\n                            // if we need two lines for the text, move them both up to center them\n                            text.classed('adjust-upwards', true);\n                        } else {\n                            line.push('...');\n                            tspan.text(line.join(' '));\n                            break;\n                        }\n                    }\n                }\n            });\n    };\n\n    /**\n     * Figures out an approximate of the text width by using a canvas element\n     * This avoids having to actually render the text to measure it from the DOM itself\n     * @param  {String} text     Text to measure\n     * @param  {Number} fontSize Fontsize (or default)\n     * @param  {String} fontFace Font familty (or default)\n     * @return {String}          Approximate font size of the text\n     */\n    const getTextWidth = function(text, fontSize = defaultTextSize, fontFace = defaultFontFace) {\n        let a = document.createElement('canvas'),\n            b = a.getContext('2d');\n\n        b.font = fontSize + 'px ' + fontFace;\n\n        return b.measureText(text).width;\n    }\n\n    return {\n        getTextWidth,\n        wrapText,\n        wrapTextWithEllipses\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/text.js","define(function(require) {\n    'use strict';\n\n    const {colorSchemas} = require('./colors.js');\n    const constants = require('./constants.js');\n    const serializeWithStyles = require('./serializeWithStyles.js');\n\n    let encoder = window.btoa;\n\n    if (!encoder) {\n        encoder = require('base-64').encode;\n    }\n\n    // Base64 doesn't work really well with Unicode strings, so we need to use this function\n    // Ref: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n    const b64EncodeUnicode = (str) => {\n        return encoder(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function(match, p1) {\n            return String.fromCharCode('0x' + p1);\n        }));\n    };\n\n    const config = {\n        styleClass : 'britechartStyle',\n        defaultFilename: 'britechart.png',\n        chartBackground: 'white',\n        imageSourceBase: 'data:image/svg+xml;base64,',\n        titleFontSize: '15px',\n        titleFontFamily: '\\'Benton Sans\\', sans-serif',\n        titleTopOffset: 30,\n        get styleBackgroundString () {\n            return `<style>svg{background:${this.chartBackground};}</style>`;\n        }\n    };\n\n    /**\n     * Main function to be used as a method by chart instances to export charts to png\n     * @param  {array} svgs         (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n     * @param  {string} filename    [download to be called <filename>.png]\n     * @param  {string} title       Title for the image\n     */\n    function exportChart(d3svg, filename, title) {\n        let img = createImage(convertSvgToHtml.call(this, d3svg, title));\n\n        img.onload = handleImageLoad.bind(\n                img,\n                createCanvas(this.width(), this.height()),\n                filename\n            );\n    }\n\n    /**\n     * adds background styles to raw html\n     * @param {string} html raw html\n     */\n    function addBackground(html) {\n        return html.replace('>',`>${config.styleBackgroundString}`);\n    }\n\n    /**\n     * takes d3 svg el, adds proper svg tags, adds inline styles\n     * from stylesheets, adds white background and returns string\n     * @param  {object} d3svg TYPE d3 svg element\n     * @return {string} string of passed d3\n     */\n    function convertSvgToHtml (d3svg, title) {\n        if (!d3svg) {\n            return;\n        }\n\n        d3svg.attr('version', 1.1)\n            .attr('xmlns', 'http://www.w3.org/2000/svg');\n        let serializer = serializeWithStyles.initializeSerializer();\n        let html = serializer(d3svg.node());\n        html = formatHtmlByBrowser(html);\n        html = prependTitle.call(this, html, title, parseInt(d3svg.attr('width')));\n        html = addBackground(html);\n\n        return html;\n    }\n\n    /**\n     * Create Canvas\n     * @param  {number} width\n     * @param  {number} height\n     * @return {object} TYPE canvas element\n     */\n    function createCanvas(width, height) {\n        let canvas = document.createElement('canvas');\n\n        canvas.height = height;\n        canvas.width = width;\n\n        return canvas;\n    }\n\n    /**\n     * Create Image\n     * @param  {string} svgHtml string representation of svg el\n     * @return {object}  TYPE element <img>, src points at svg\n     */\n    function createImage(svgHtml) {\n        let img = new Image();\n\n        img.src = `${config.imageSourceBase}${ b64EncodeUnicode(svgHtml) }`;\n\n        return img;\n    };\n\n    /**\n     * Draws image on canvas\n     * @param  {object} image TYPE:el <img>, to be drawn\n     * @param  {object} canvas TYPE: el <canvas>, to draw on\n     */\n    function drawImageOnCanvas(image, canvas) {\n        canvas.getContext('2d').drawImage(image, 0, 0);\n\n        return canvas;\n    }\n\n    /**\n     * Triggers browser to download image, convert canvas to url,\n     * we need to append the link el to the dom before clicking it for Firefox to register\n     * point <a> at it and trigger click\n     * @param  {object} canvas TYPE: el <canvas>\n     * @param  {string} filename\n     * @param  {string} extensionType\n     */\n    function downloadCanvas(canvas, filename=config.defaultFilename, extensionType='image/png') {\n        let url = canvas.toDataURL(extensionType);\n        let link = document.createElement('a');\n\n        link.href = url;\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n    /**\n     * Some browsers need special formatting, we handle that here\n     * @param  {string} html string of svg html\n     * @return {string} string of svg html\n     */\n    function formatHtmlByBrowser(html) {\n        if (navigator.userAgent.search('FireFox') > -1) {\n            return html.replace(/url.*&quot;\\)/, `url(&quot;#${constants.lineGradientId}&quot;);`);\n        }\n\n        return html;\n    }\n\n    /**\n     * Handles on load event fired by img.onload, this=img\n     * @param  {object} canvas TYPE: el <canvas>\n     * @param  {string} filename\n     * @param  {object} e\n     */\n    function handleImageLoad(canvas, filename, e) {\n        e.preventDefault();\n\n        downloadCanvas(drawImageOnCanvas(this, canvas), filename);\n    }\n\n    /**\n     * if passed, append title to the raw html to appear on graph\n     * @param  {string} html     raw html string\n     * @param  {string} title    title of the graph\n     * @param  {number} svgWidth width of graph container\n     * @return {string}         raw html with title prepended\n     */\n    function prependTitle(html, title, svgWidth) {\n        if (!title || !svgWidth) {\n            return html;\n        }\n        let {britechartsGreySchema} = colorSchemas;\n        html =  html.replace(/<g/,`<text x=\"${this.margin().left}\" y=\"${config.titleTopOffset}\" font-family=\"${config.titleFontFamily}\" font-size=\"${config.titleFontSize}\" fill=\"${britechartsGreySchema[6]}\"> ${title} </text><g `);\n\n        return html;\n    }\n\n    return {\n        exportChart,\n        convertSvgToHtml,\n        createImage,\n        drawImageOnCanvas\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/exportChart.js","define(function(require) {\n\n    // Color Gradients\n    const britechartGradients = {\n            greenBlueGradient: ['#39C7EA', '#4CDCBA'],\n            orangePinkGradient: ['#FBC670', '#F766B8'],\n            bluePurpleGradient: ['#3DC3C9', '#824a9e']\n        };\n\n    // Color Schemas\n    // Standard Color Schema for Britecharts\n    const britechartsColorSchema = [\n            '#6aedc7', //green\n            '#39c2c9', //blue\n            '#ffce00', //yellow\n            '#ffa71a', //orange\n            '#f866b9', //pink\n            '#998ce3' //purple\n        ];\n\n    // Grey Schema for Britecharts\n    const britechartsGreySchema = [\n            '#F8F8FA',\n            '#EFF2F5',\n            '#D2D6DF',\n            '#C3C6CF',\n            '#ADB0B6',\n            '#666A73',\n            '#45494E',\n            '#363A43',\n            '#282C35'\n        ];\n\n    // Extended Orange Palette\n    const extendedOrangeColorSchema = [\n            '#fcc870',\n            '#ffa71a',\n            '#fb8825',\n            '#f6682f',\n            '#db5a2c',\n            '#bf4c28',\n            '#a43b1c',\n            '#892a10',\n            '#f9e9c5'\n        ];\n    // Extended Blue Palette\n    const extendedBlueColorSchema = [\n            '#ccf7f6',\n            '#70e4e0',\n            '#00d8d2',\n            '#00acaf',\n            '#007f8c',\n            '#005e66',\n            '#003c3f',\n            '#002d2f',\n            '#0d2223'\n        ];\n    // Extended LightBlue Palette\n    const extendedLightBlueColorSchema = [\n            '#ccfffe',\n            '#94f7f4',\n            '#00fff8',\n            '#1de1e1',\n            '#39c2c9',\n            '#2e9a9d',\n            '#227270',\n            '#1a5957',\n            '#133f3e'\n        ];\n    // Extended Green Palette\n    const extendedGreenColorSchema = [\n            '#edfff7',\n            '#d7ffef',\n            '#c0ffe7',\n            '#95f5d7',\n            '#6aedc7',\n            '#59c3a3',\n            '#479980',\n            '#34816a',\n            '#206953'\n        ];\n    // Extended Yellow Palette\n    const extendedYellowColorSchema = [\n            '#f9f2b3',\n            '#fbe986',\n            '#fce05a',\n            '#fed72d',\n            '#ffce00',\n            '#fcc11c',\n            '#f9b438',\n            '#eda629',\n            '#e09819'\n        ];\n    // Extended Pink Palette\n    const extendedPinkColorSchema = [\n            '#fdd1ea',\n            '#fb9cd2',\n            '#f866b9',\n            '#fc40b6',\n            '#ff1ab3',\n            '#e3239d',\n            '#c62c86',\n            '#a62073',\n            '#85135f'\n        ];\n    // Extended Purple Palette\n    const extendedPurpleColorSchema = [\n            '#ddd6fc',\n            '#bbb1f0',\n            '#998ce3',\n            '#8e6bc1',\n            '#824a9e',\n            '#77337f',\n            '#6b1c60',\n            '#591650',\n            '#470f3f'\n        ];\n    // Extended Red Palette\n    const extendedRedColorSchema = [\n            '#ffd8d4',\n            '#ffb5b0',\n            '#ff938c',\n            '#ff766c',\n            '#ff584c',\n            '#f04b42',\n            '#e03d38',\n            '#be2e29',\n            '#9c1e19'\n        ];\n\n    const aloeGreen = [\n            '#7bdcc0'\n        ];\n\n    return {\n        colorSchemas: {\n            britechartsColorSchema,\n            britechartsGreySchema,\n            extendedOrangeColorSchema,\n            extendedBlueColorSchema,\n            extendedLightBlueColorSchema,\n            extendedGreenColorSchema,\n            extendedYellowColorSchema,\n            extendedPinkColorSchema,\n            extendedPurpleColorSchema,\n            extendedRedColorSchema\n        },\n        colorSchemasHuman: {\n            'britechartsColorSchema': 'Britecharts Default',\n            'britechartsGreySchema': 'Britecharts Grey',\n            'extendedOrangeColorSchema': 'Orange',\n            'extendedBlueColorSchema': 'Blue',\n            'extendedLightBlueColorSchema': 'Light Blue',\n            'extendedGreenColorSchema': 'Green',\n            'extendedYellowColorSchema': 'Yellow',\n            'extendedPinkColorSchema': 'Pink',\n            'extendedPurpleColorSchema': 'Purple',\n            'extendedRedColorSchema': 'Red'\n        },\n        singleColors: {\n            aloeGreen\n        },\n        colorGradients: britechartGradients,\n        colorGradientsHuman: {\n            greenBlueGradient: 'Green To Blue',\n            orangePinkGradient: 'Orange to Pink',\n            bluePurpleGradient: 'Blue to Purple'\n        }\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/colors.js","define(function(require) {\n    const axisTimeCombinations = {\n        MINUTE_HOUR: 'minute-hour',\n        HOUR_DAY: 'hour-daymonth',\n        DAY_MONTH: 'day-month',\n        MONTH_YEAR: 'month-year'\n    };\n\n    const timeBenchmarks= {\n        ONE_AND_A_HALF_YEARS: 47304000000,\n        ONE_YEAR: 31536000365,\n        ONE_DAY: 86400001\n    };\n\n    return {\n        axisTimeCombinations,\n        timeBenchmarks,\n        lineGradientId: 'lineGradientId'\n    };\n});\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/constants.js","module.exports = (function() {\n\n    'use strict';\n\n    return {\n\n        /**\n         * returns serializer function, only run it when you know you want to serialize your chart\n         * @return {func} serializer to add styles in line to dom string\n         */\n        initializeSerializer() {\n\n            // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n            const defaultStylesByTagName = {};\n\n            // Styles inherited from style sheets will not be rendered for elements with these tag names\n            const noStyleTags = {'BASE':true,'HEAD':true,'HTML':true,'META':true,'NOFRAME':true,'NOSCRIPT':true,'PARAM':true,'SCRIPT':true,'STYLE':true,'TITLE':true};\n\n            // This list determines which css default values lookup tables are precomputed at load time\n            // Lookup tables for other tag names will be automatically built at runtime if needed\n            const tagNames = ['A','ABBR','ADDRESS','AREA','ARTICLE','ASIDE','AUDIO','B','BASE','BDI','BDO','BLOCKQUOTE','BODY','BR','BUTTON','CANVAS','CAPTION','CENTER','CITE','CODE','COL','COLGROUP','COMMAND','DATALIST','DD','DEL','DETAILS','DFN','DIV','DL','DT','EM','EMBED','FIELDSET','FIGCAPTION','FIGURE','FONT','FOOTER','FORM','H1','H2','H3','H4','H5','H6','HEAD','HEADER','HGROUP','HR','HTML','I','IFRAME','IMG','INPUT','INS','KBD','LABEL','LEGEND','LI','LINK','MAP','MARK','MATH','MENU','META','METER','NAV','NOBR','NOSCRIPT','OBJECT','OL','OPTION','OPTGROUP','OUTPUT','P','PARAM','PRE','PROGRESS','Q','RP','RT','RUBY','S','SAMP','SCRIPT','SECTION','SELECT','SMALL','SOURCE','SPAN','STRONG','STYLE','SUB','SUMMARY','SUP','SVG','TABLE','TBODY','TD','TEXTAREA','TFOOT','TH','THEAD','TIME','TITLE','TR','TRACK','U','UL','VAR','VIDEO','WBR'];\n\n            // Precompute the lookup tables.\n            [].forEach.call(tagNames, (name) => {\n                if (!noStyleTags[name]) {\n                    defaultStylesByTagName[name] = computeDefaultStyleByTagName(name);\n                }\n            });\n\n            function computeDefaultStyleByTagName(tagName) {\n                let defaultStyle = {},\n                    element = document.body.appendChild(document.createElement(tagName)),\n                    computedStyle = window.getComputedStyle(element);\n\n                [].forEach.call(computedStyle, (style) => {\n                    defaultStyle[style] = computedStyle[style];\n                });\n                document.body.removeChild(element);\n                return defaultStyle;\n            }\n\n            function getDefaultStyleByTagName (tagName) {\n                tagName = tagName.toUpperCase();\n                if (!defaultStylesByTagName[tagName]) {\n                    defaultStylesByTagName[tagName] = computeDefaultStyleByTagName(tagName);\n                }\n                return defaultStylesByTagName[tagName];\n            };\n\n            function serializeWithStyles(elem) {\n\n                let cssTexts = [],\n                    elements,\n                    computedStyle,\n                    defaultStyle,\n                    result;\n\n                if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n                    console.error('Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE');\n                    return;\n                }\n\n                cssTexts = [];\n                elements = elem.querySelectorAll('*');\n\n                [].forEach.call(elements, (el, i) => {\n                    if (!noStyleTags[el.tagName]) {\n                        computedStyle = window.getComputedStyle(el);\n                        defaultStyle = getDefaultStyleByTagName(el.tagName);\n                        cssTexts[i] = el.style.cssText;\n                        [].forEach.call(computedStyle, (cssPropName) => {\n                            if (computedStyle[cssPropName] !== defaultStyle[cssPropName]) {\n                                el.style[cssPropName] = computedStyle[cssPropName];\n                            }\n                        });\n                    }\n                });\n\n                result = elem.outerHTML;\n                elements = [].map.call(elements, (el, i) => {\n                    el.style.cssText = cssTexts[i];\n                    return el;\n                });\n\n                return result;\n\n            };\n\n            return serializeWithStyles;\n        }\n    }\n})();\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/serializeWithStyles.js","/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base-64/base64.js\n// module id = 21\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 22\n// module chunks = 0","define(function(require) {\n    'use strict';\n\n    const d3Dispatch = require('d3-dispatch');\n    const d3Ease = require('d3-ease');\n    const d3Interpolate = require('d3-interpolate');\n    const d3Scale = require('d3-scale');\n    const d3Shape = require('d3-shape');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n\n    const {exportChart} = require('./helpers/exportChart');\n    const textHelper = require('./helpers/text');\n    const colorHelper = require('./helpers/colors');\n    const {calculatePercent} = require('./helpers/common');\n\n\n    /**\n     * @typedef DonutChartData\n     * @type {Object[]}\n     * @property {Number} quantity     Quantity of the group (required)\n     * @property {Number} percentage   Percentage of the total (optional)\n     * @property {String} name         Name of the group (required)\n     * @property {Number} id           Identifier for the group required for legend feature (optional)\n     *\n     * @example\n     * [\n     *     {\n     *         quantity: 1,\n     *         percentage: 50,\n     *         name: 'glittering',\n     *         id: 1\n     *     },\n     *     {\n     *         quantity: 1,\n     *         percentage: 50,\n     *         name: 'luminous',\n     *         id: 2\n     *     }\n     * ]\n     */\n\n    /**\n     * Reusable Donut Chart API class that renders a\n     * simple and configurable donut chart.\n     *\n     * @module Donut\n     * @tutorial donut\n     * @requires d3-dispatch, d3-ease, d3-interpolate, d3-scale, d3-shape, d3-selection\n     *\n     * @example\n     * var donutChart = donut();\n     *\n     * donutChart\n     *     .externalRadius(500)\n     *     .internalRadius(200);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(donutChart);\n     *\n     */\n    return function module() {\n\n        let margin = {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            },\n            width = 300,\n            height = 300,\n            ease = d3Ease.easeCubicInOut,\n            arcTransitionDuration = 750,\n            pieDrawingTransitionDuration = 1200,\n            pieHoverTransitionDuration = 150,\n            radiusHoverOffset = 12,\n            paddingAngle = 0,\n            data,\n            chartWidth, chartHeight,\n            externalRadius = 140,\n            internalRadius = 45.5,\n            legendWidth = externalRadius + internalRadius,\n            layout,\n            shape,\n            slices,\n            svg,\n\n            isAnimated = false,\n\n            highlightedSliceId,\n            highlightedSlice,\n            hasFixedHighlightedSlice = false,\n\n            quantityLabel = 'quantity',\n            nameLabel = 'name',\n            percentageLabel = 'percentage',\n\n            percentageFormat = '.1f',\n\n            // colors\n            colorScale,\n            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\n            // utils\n            storeAngle = function(d) {\n                this._current = d;\n            },\n            reduceOuterRadius = d => {\n                d.outerRadius = externalRadius - radiusHoverOffset;\n            },\n            sortComparator = (a, b) => b.quantity - a.quantity,\n            sumValues = (data) => data.reduce((total, d) => d.quantity + total, 0),\n\n            // extractors\n            getQuantity = ({quantity}) => quantity,\n            getSliceFill = ({data}) => colorScale(data.name),\n\n            // events\n            dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\n        /**\n         * This function creates the graph using the selection as container\n         *\n         * @param {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {DonutChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data) {\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(_data);\n\n                buildLayout();\n                buildColorScale();\n                buildShape();\n                buildSVG(this);\n                drawSlices();\n                initTooltip();\n\n                if (highlightedSliceId) {\n                    initHighlightSlice();\n                }\n            });\n        }\n\n        /**\n         * Builds color scale for chart, if any colorSchema was defined\n         * @private\n         */\n        function buildColorScale() {\n            if (colorSchema) {\n                colorScale = d3Scale.scaleOrdinal().range(colorSchema);\n            }\n        }\n\n        /**\n         * Builds containers for the chart, the legend and a wrapper for all of them\n         * @private\n         */\n        function buildContainerGroups() {\n            let container = svg\n              .append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${width / 2}, ${height / 2})`);\n\n            container.append('g').classed('chart-group', true);\n            container.append('g').classed('legend-group', true);\n        }\n\n        /**\n         * Builds the pie layout that will produce data ready to draw\n         * @private\n         */\n        function buildLayout() {\n            layout = d3Shape.pie()\n                .padAngle(paddingAngle)\n                .value(getQuantity)\n                .sort(sortComparator);\n        }\n\n        /**\n         * Builds the shape function\n         * @private\n         */\n        function buildShape() {\n            shape = d3Shape.arc()\n                .innerRadius(internalRadius)\n                .padRadius(externalRadius);\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         *\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container)\n                  .append('svg')\n                    .classed('britechart donut-chart', true)\n                    .data([data]);  //TO REVIEW\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Cleaning data adding the proper format\n         * @param  {DonutChartData} data Data\n         * @private\n         */\n        function cleanData(data) {\n            let cleanData = data.reduce((acc, d) => {\n                // Skip data without quantity\n                if (!d[quantityLabel]) {\n                    return acc;\n                }\n\n                d.quantity = +d[quantityLabel];\n                d.name = String(d[nameLabel]);\n                d.percentage = d[percentageLabel] || null;\n                acc.push(d);\n\n                return acc;\n            }, []);\n            let totalQuantity = sumValues(cleanData);\n            let dataWithPercentages = cleanData.map((d) => {\n                d.percentage = String(d.percentage || calculatePercent(d[quantityLabel], totalQuantity, percentageFormat));\n\n                return d;\n            });\n\n            return dataWithPercentages;\n        }\n\n        /**\n         * Cleans any value that could be on the legend text element\n         * @private\n         */\n        function cleanLegend() {\n            svg.select('.donut-text').text('');\n        }\n\n        /**\n         * Draws the values on the donut slice inside the text element\n         *\n         * @param  {Object} obj Data object\n         * @private\n         */\n        function drawLegend(obj) {\n            if (obj.data) {\n                svg.select('.donut-text')\n                    .text(() => `${obj.data.percentage}% ${ obj.data.name}`)\n                    .attr('dy', '.2em')\n                    .attr('text-anchor', 'middle');\n\n                svg.select('.donut-text').call(wrapText, legendWidth);\n            }\n        }\n\n        /**\n         * Draws the slices of the donut\n         * @private\n         */\n        function drawSlices() {\n            if (!slices) {\n                slices = svg.select('.chart-group')\n                    .selectAll('g.arc')\n                    .data(layout(data));\n\n                let newSlices = slices.enter()\n                  .append('g')\n                    .each(storeAngle)\n                    .each(reduceOuterRadius)\n                    .classed('arc', true);\n\n                if (isAnimated) {\n                    newSlices.merge(slices)\n                      .append('path')\n                        .attr('fill', getSliceFill)\n                        .on('mouseover', handleMouseOver)\n                        .on('mouseout', handleMouseOut)\n                        .transition()\n                        .ease(ease)\n                        .duration(pieDrawingTransitionDuration)\n                        .attrTween('d', tweenLoading);\n                } else {\n                    newSlices.merge(slices)\n                      .append('path')\n                        .attr('fill', getSliceFill)\n                        .attr('d', shape)\n                        .on('mouseover', handleMouseOver)\n                        .on('mouseout', handleMouseOut)\n                }\n            } else {\n                slices = svg.select('.chart-group')\n                    .selectAll('path')\n                    .data(layout(data));\n\n                slices\n                    .attr('d', shape);\n\n                // Redraws the angles of the data\n                slices\n                    .transition()\n                    .duration(arcTransitionDuration)\n                    .attrTween('d', tweenArc);\n            }\n        }\n\n        /**\n         * Checks if the given element id is the same as the highlightedSliceId and returns the\n         * element if that's the case\n         * @param  {DOMElement} options.data Dom element to check\n         * @return {DOMElement}              Dom element if it has the same id\n         */\n        function filterHighlightedSlice({data}) {\n            if (data.id === highlightedSliceId) {\n                return this;\n            }\n        }\n\n        /**\n         * Handles a path mouse over\n         * @return {void}\n         * @private\n         */\n        function handleMouseOver(datum) {\n            drawLegend(datum);\n            dispatcher.call('customMouseOver', this, datum);\n\n            if (highlightedSlice && this !== highlightedSlice) {\n                tweenGrowth(highlightedSlice, externalRadius - radiusHoverOffset);\n            }\n            tweenGrowth(this, externalRadius);\n        }\n\n        /**\n         * Handles a path mouse out\n         * @return {void}\n         * @private\n         */\n        function handleMouseOut() {\n            if (highlightedSlice && hasFixedHighlightedSlice) {\n                drawLegend(highlightedSlice.__data__);\n            } else {\n                cleanLegend();\n            }\n            dispatcher.call('customMouseOut', this);\n\n            if (highlightedSlice && hasFixedHighlightedSlice && this !== highlightedSlice) {\n                tweenGrowth(highlightedSlice, externalRadius);\n            }\n            tweenGrowth(this, externalRadius - radiusHoverOffset, pieHoverTransitionDuration);\n        }\n\n        /**\n         * Find the slice by id and growth it if needed\n         * @private\n         */\n        function initHighlightSlice() {\n            highlightedSlice = svg.selectAll('.chart-group .arc path')\n                .select(filterHighlightedSlice).node();\n\n            if (highlightedSlice) {\n                drawLegend(highlightedSlice.__data__);\n                tweenGrowth(highlightedSlice, externalRadius, pieDrawingTransitionDuration);\n            }\n        }\n\n        /**\n         * Creates the text element that will hold the legend of the chart\n         */\n        function initTooltip() {\n            svg.select('.legend-group')\n                .append('text')\n                .attr('class', 'donut-text');\n        }\n\n        /**\n         * Stores current angles and interpolates with new angles\n         * Check out {@link http://bl.ocks.org/mbostock/1346410| this example}\n         *\n         * @param  {Object}     a   New data for slice\n         * @return {Function}       Tweening function for the donut shape\n         * @private\n         */\n        function tweenArc(a) {\n            let i = d3Interpolate.interpolate(this._current, a);\n\n            this._current = i(0);\n\n            return function(t) {\n                return shape(i(t));\n            };\n        }\n\n        /**\n         * Animate slice with tweens depending on the attributes given\n         *\n         * @param  {DOMElement} slice   Slice to growth\n         * @param  {Number} outerRadius Final outer radius value\n         * @param  {Number} delay       Delay of animation\n         * @private\n         */\n        function tweenGrowth(slice, outerRadius, delay = 0) {\n            d3Selection.select(slice)\n                .transition()\n                .delay(delay)\n                .attrTween('d', function(d) {\n                    let i = d3Interpolate.interpolate(d.outerRadius, outerRadius);\n\n                    return (t) => {\n                        d.outerRadius = i(t);\n\n                        return shape(d);\n                    };\n                });\n        }\n\n        /**\n         * Animation for chart loading\n         * Check out {@link http://bl.ocks.org/mbostock/4341574| this example}\n         *\n         * @param  {Object} b Data point\n         * @return {Function}   Tween function\n         * @private\n         */\n        function tweenLoading(b) {\n            let i;\n\n            b.innerRadius = 0;\n            i = d3Interpolate.interpolate({ startAngle: 0, endAngle: 0}, b);\n\n            return function(t) { return shape(i(t)); };\n        }\n\n        /**\n         * Utility function that wraps a text into the given width\n         *\n         * @param  {D3Selection} text         Text to write\n         * @param  {Number} legendWidth Width of the container\n         * @private\n         */\n        function wrapText(text, legendWidth) {\n            let fontSize = externalRadius / 5;\n\n            textHelper.wrapText.call(null, 0, fontSize, legendWidth, text.node());\n        }\n\n        /**\n         * Gets or Sets the colorSchema of the chart\n         * @param  {String[]} _x Desired colorSchema for the graph\n         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n         * @public\n         */\n        exports.colorSchema = function(_x) {\n            if (!arguments.length) {\n                return colorSchema;\n            }\n            colorSchema = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the externalRadius of the chart\n         * @param  {Number} _x ExternalRadius number to get/set\n         * @return { (Number | Module) } Current externalRadius or Donut Chart module to chain calls\n         * @public\n         */\n        exports.externalRadius = function(_x) {\n            if (!arguments.length) {\n                return externalRadius;\n            }\n            externalRadius = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the hasFixedHighlightedSlice property of the chart, making it to\n         * highlight the selected slice id set with `highlightSliceById` all the time.\n         *\n         * @param  {Boolean} _x                         If we want to make the highlighted slice permanently highlighted\n         * @return { hasFixedHighlightedSlice | module} Current hasFixedHighlightedSlice flag or Chart module\n         * @public\n         */\n        exports.hasFixedHighlightedSlice = function(_x) {\n            if (!arguments.length) {\n                return hasFixedHighlightedSlice;\n            }\n            hasFixedHighlightedSlice = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { (Number | Module) } Current height or Donut Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n         * By default this is 'false'\n         *\n         * @param  {Boolean} _x Desired animation flag\n         * @return { isAnimated | module} Current isAnimated flag or Chart module\n         * @public\n         */\n        exports.isAnimated = function(_x) {\n            if (!arguments.length) {\n                return isAnimated;\n            }\n            isAnimated = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the internalRadius of the chart\n         * @param  {Number} _x InternalRadius number to get/set\n         * @return { (Number | Module) } Current internalRadius or Donut Chart module to chain calls\n         * @public\n         */\n        exports.internalRadius = function(_x) {\n            if (!arguments.length) {\n                return internalRadius;\n            }\n            internalRadius = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {Object} _x Margin object to get/set\n         * @return { (Number | Module) } Current margin or Donut Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { (Number | Module) } Current width or Donut Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _x;\n            return this;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename, title) {\n            exportChart.call(exports, svg, filename, title);\n        };\n\n\n        /**\n         * Gets or Sets the id of the slice to highlight\n         * @param  {Number} _x Slice id\n         * @return { (Number | Module) } Current highlighted slice id or Donut Chart module to chain calls\n         * @public\n         */\n        exports.highlightSliceById = function(_x) {\n            if (!arguments.length) {\n                return highlightedSliceId;\n            }\n            highlightedSliceId = _x;\n            return this;\n        };\n\n        /**\n         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n         * We are going to expose this events:\n         * customMouseOver, customMouseMove and customMouseOut\n         *\n         * @return {module} Bar Chart\n         * @public\n         */\n        exports.on = function() {\n            let value = dispatcher.on.apply(dispatcher, arguments);\n\n            return value === dispatcher ? exports : value;\n        };\n\n        return exports;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/donut.js","// https://d3js.org/d3-shape/ Version 1.0.6. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-path')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Path) { 'use strict';\n\nvar constant = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs = Math.abs;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar max = Math.max;\nvar min = Math.min;\nvar sin = Math.sin;\nvar sqrt = Math.sqrt;\n\nvar epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = d3Path.path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant(0),\n      y1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n\nvar cross = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);\nvar kx = Math.sin(tau / 10) * kr;\nvar ky = -Math.cos(tau / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = d3Path.path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice = Array.prototype.slice;\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending = function(series) {\n  var sums = series.map(sum);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$1 = function(series) {\n  return ascending(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nexports.arc = arc;\nexports.area = area;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending;\nexports.stackOrderDescending = descending$1;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-shape/build/d3-shape.js\n// module id = 24\n// module chunks = 0","// https://d3js.org/d3-path/ Version 1.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar pi = Math.PI;\nvar tau = 2 * pi;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexports.path = path;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-path/build/d3-path.js\n// module id = 25\n// module chunks = 0","define(function(require) {\n    'use strict';\n\n    const d3Format = require('d3-format');\n\n    /**\n     * Calculates percentage of value from total\n     * @param  {Number}  value    Value to check\n     * @param  {Number}  total    Sum of values\n     * @param  {String}  decimals Specifies number of decimals https://github.com/d3/d3-format\n     * @return {String}           Percentage\n     */\n    function calculatePercent(value, total, decimals) {\n        return d3Format.format(decimals)(value / total * 100);\n    }\n\n    /**\n     * Checks if a number is an integer of has decimal values\n     * @param  {Number}  value Value to check\n     * @return {Boolean}       If it is an iteger\n     */\n    function isInteger(value) {\n        return value % 1 === 0;\n    }\n\n    return {\n        calculatePercent,\n        isInteger\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/common.js","define(function(require){\n    'use strict';\n\n    const d3Format = require('d3-format');\n    const d3Scale = require('d3-scale');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n\n    const textHelper = require('./helpers/text');\n    const colorHelper = require('./helpers/colors');\n\n    /**\n     * @typedef LegendChartData\n     * @type {Object[]}\n     * @property {Number} id        Id of the group (required)\n     * @property {Number} quantity  Quantity of the group (required)\n     * @property {String} name      Name of the group (required)\n     *\n     * @example\n     * [\n     *     {\n     *         id: 1,\n     *         quantity: 2,\n     *         name: 'glittering'\n     *     },\n     *     {\n     *         id: 2,\n     *         quantity: 3,\n     *         name: 'luminous'\n     *     }\n     */\n\n\n    /**\n     * @fileOverview Legend Component reusable API class that renders a\n     * simple and configurable legend element.\n     *\n     * @example\n     * var donutChart = donut(),\n     *     legendBox = legend();\n     *\n     * donutChart\n     *     .externalRadius(500)\n     *     .internalRadius(200)\n     *     .on('customMouseOver', function(data) {\n     *         legendBox.highlight(data.data.id);\n     *     })\n     *     .on('customMouseOut', function() {\n     *         legendBox.clearHighlight();\n     *     });\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(donutChart);\n     *\n     * d3Selection.select('.other-css-selector')\n     *     .datum(dataset)\n     *     .call(legendBox);\n     *\n     * @module Legend\n     * @tutorial legend\n     * @exports charts/legend\n     * @requires d3\n     */\n    return function module() {\n\n        let margin = {\n                top: 5,\n                right: 5,\n                bottom: 5,\n                left: 5\n            },\n            width = 320,\n            height = 180,\n\n            textSize = 12,\n            textLetterSpacing = 0.5,\n\n            markerSize = 16,\n            markerYOffset = - (textSize - 2) / 2,\n            marginRatio = 1.5,\n\n            valueReservedSpace = 40,\n            numberLetterSpacing = 0.8,\n            numberFormat = d3Format.format('s'),\n\n            isFadedClassName = 'is-faded',\n            horizontal = false,\n\n            // colors\n            colorScale,\n            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\n            getId = ({id}) => id,\n            getName = ({name}) => name,\n            getFormattedQuantity = ({quantity}) => numberFormat(quantity),\n            getCircleFill = ({name}) => colorScale(name),\n\n            entries,\n            chartWidth, chartHeight,\n            data,\n            svg;\n\n\n        /**\n         * This function creates the graph using the selection as container\n         * @param  {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {object} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data){\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = _data;\n\n                buildColorScale();\n                buildSVG(this);\n                if (horizontal) {\n                    drawHorizontalLegend();\n                } else {\n                    drawVerticalLegend();\n                }\n            });\n        }\n\n        /**\n         * Depending on the size of the horizontal legend, we are going to either\n         * center the legend or add a new line with the last entry of the legend\n         * @return {void}\n         */\n        function adjustLines() {\n            let lineWidth = svg.select('.legend-line').node().getBoundingClientRect().width;\n            let lineWidthSpace = chartWidth - lineWidth;\n\n            if (lineWidthSpace > 0) {\n                centerLegendOnSVG();\n            } else {\n                splitInLines();\n            }\n        }\n\n        /**\n         * Builds containers for the legend\n         * Also applies the Margin convention\n         * @private\n         */\n        function buildContainerGroups() {\n            let container = svg\n              .append('g')\n                .classed('legend-container-group', true)\n                .attr('transform', `translate(${margin.left},${margin.top})`);\n\n            container\n              .append('g')\n                .classed('legend-group', true);\n        }\n\n        /**\n         * Builds color scale for chart, if any colorSchema was defined\n         * @private\n         */\n        function buildColorScale() {\n            if (colorSchema) {\n                colorScale = d3Scale.scaleOrdinal().range(colorSchema);\n            }\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container)\n                  .append('svg')\n                    .classed('britechart britechart-legend', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Centers the legend on the chart given that is a single line of labels\n         * @return {void}\n         */\n        function centerLegendOnSVG() {\n            let legendGroupSize = svg.select('g.legend-container-group').node().getBoundingClientRect().width;\n            let emptySpace = width - legendGroupSize;\n\n            if (emptySpace > 0) {\n                svg.select('g.legend-container-group')\n                    .attr('transform', `translate(${emptySpace/2},0)`)\n            }\n        }\n\n        /**\n         * Removes the faded class from all the entry lines\n         */\n        function cleanFadedLines() {\n            svg.select('.legend-group')\n                .selectAll('g.legend-entry')\n                .classed(isFadedClassName, false);\n        }\n\n        /**\n         * Draws the entries of the legend within a single line\n         * @private\n         */\n        function drawHorizontalLegend() {\n            let xOffset = markerSize;\n\n            // We want a single line\n            svg.select('.legend-group')\n              .append('g')\n                .classed('legend-line', true);\n\n            // And one entry per data item\n            entries = svg.select('.legend-line')\n              .selectAll('g.legend-entry')\n              .data(data);\n\n            // Enter\n            entries.enter()\n              .append('g')\n                .classed('legend-entry', true)\n                .attr('data-item', getId)\n                .attr('transform', function(d, i) {\n                    let horizontalOffset = xOffset,\n                        lineHeight = chartHeight / 2,\n                        verticalOffset = lineHeight,\n                        labelWidth = textHelper.getTextWidth(d.name, textSize);\n\n                    xOffset += markerSize + 2 * getLineElementMargin() + labelWidth;\n\n                    return `translate(${horizontalOffset},${verticalOffset})`;\n                })\n                .merge(entries)\n              .append('circle')\n                .classed('legend-circle', true)\n                .attr('cx', markerSize/2)\n                .attr('cy', markerYOffset)\n                .attr('r', markerSize / 2)\n                .style('fill', getCircleFill)\n                .style('stroke-width', 1);\n\n            svg.select('.legend-group')\n                .selectAll('g.legend-entry')\n              .append('text')\n                .classed('legend-entry-name', true)\n                .text(getName)\n                .attr('x', getLineElementMargin())\n                .style('font-size', `${textSize}px`)\n                .style('letter-spacing', `${textLetterSpacing}px`);\n\n            // Exit\n            svg.select('.legend-group')\n                .selectAll('g.legend-entry')\n                .exit()\n                .transition()\n                .style('opacity', 0)\n                .remove();\n\n            adjustLines();\n        }\n\n        /**\n         * Draws the entries of the legend\n         * @private\n         */\n        function drawVerticalLegend() {\n            entries = svg.select('.legend-group')\n                .selectAll('g.legend-line')\n                .data(data);\n\n            // Enter\n            entries.enter()\n              .append('g')\n                .classed('legend-line', true)\n                  .append('g')\n                    .classed('legend-entry', true)\n                    .attr('data-item', getId)\n                    .attr('transform', function(d, i) {\n                        let horizontalOffset = markerSize + getLineElementMargin(),\n                            lineHeight = chartHeight/ (data.length + 1),\n                            verticalOffset = (i + 1) * lineHeight;\n\n                        return `translate(${horizontalOffset},${verticalOffset})`;\n                    })\n                    .merge(entries)\n                  .append('circle')\n                    .classed('legend-circle', true)\n                    .attr('cx', markerSize/2)\n                    .attr('cy', markerYOffset)\n                    .attr('r', markerSize/2 )\n                    .style('fill', getCircleFill)\n                    .style('stroke-width', 1);\n\n            svg.select('.legend-group')\n                .selectAll('g.legend-line')\n                .selectAll('g.legend-entry')\n              .append('text')\n                .classed('legend-entry-name', true)\n                .text(getName)\n                .attr('x', getLineElementMargin())\n                .style('font-size', `${textSize}px`)\n                .style('letter-spacing', `${textLetterSpacing}px`);\n\n            svg.select('.legend-group')\n                .selectAll('g.legend-line')\n                .selectAll('g.legend-entry')\n              .append('text')\n                .classed('legend-entry-value', true)\n                .text(getFormattedQuantity)\n                .attr('x', chartWidth - valueReservedSpace)\n                .style('font-size', `${textSize}px`)\n                .style('letter-spacing', `${numberLetterSpacing}px`)\n                .style('text-anchor', 'end')\n                .style('startOffset', '100%');\n\n            // Exit\n            svg.select('.legend-group')\n                .selectAll('g.legend-line')\n                .exit()\n                .transition()\n                .style('opacity', 0)\n                .remove();\n        }\n\n        /**\n         * Applies the faded class to all lines but the one that has the given id\n         * @param  {number} exceptionItemId Id of the line that needs to stay the same\n         */\n        function fadeLinesBut(exceptionItemId) {\n            let classToFade = 'g.legend-entry';\n\n            svg.select('.legend-group')\n                .selectAll(classToFade)\n                .classed(isFadedClassName, true);\n\n            svg.select(`[data-item=\"${exceptionItemId}\"]`)\n                .classed(isFadedClassName, false);\n        }\n\n        /**\n         * Calculates the margin between elements of the legend\n         * @return {Number} Margin to apply between elements\n         */\n        function getLineElementMargin() {\n            return marginRatio * markerSize;\n        }\n\n        /**\n         * Simple method to move the last item of an overflowing legend into the next line\n         * @return {void}\n         * @private\n         */\n        function splitInLines() {\n            let legendEntries = svg.selectAll('.legend-entry');\n            let numberOfEntries = legendEntries.size();\n            let lineHeight = (chartHeight / 2) * 1.7;\n\n            let newLine = svg.select('.legend-group')\n              .append('g')\n                .classed('legend-line', true)\n                .attr('transform', `translate(0, ${lineHeight})`);\n\n            let lastEntry = legendEntries.filter(`:nth-child(${numberOfEntries})`);\n            lastEntry.attr('transform', `translate(${markerSize},0)`);\n            newLine.append(() => lastEntry.node());\n        }\n\n        /**\n         * Clears the highlighted line entry\n         */\n        exports.clearHighlight = function() {\n            cleanFadedLines();\n        };\n\n        /**\n         * Gets or Sets the colorSchema of the chart\n         * @param  {array} _x Color scheme array to get/set\n         * @return {number | module} Current colorSchema or Donut Chart module to chain calls\n         * @public\n         */\n        exports.colorSchema = function(_x) {\n            if (!arguments.length) {\n                return colorSchema;\n            }\n            colorSchema = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the legend chart\n         * @param  {number} _x Desired width for the chart\n         * @return {height | module} Current height or Legend module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Highlights a line entry by fading the rest of lines\n         * @param  {number} entryId ID of the entry line\n         */\n        exports.highlight = function(entryId) {\n            cleanFadedLines();\n            fadeLinesBut(entryId);\n        };\n\n        /**\n         * Gets or Sets the horizontal mode on the legend\n         * @param  {boolean} _x Desired horizontal mode for the graph\n         * @return {horizontal | module} Current horizontal mode or Legend module to chain calls\n         * @public\n         */\n        exports.horizontal = function(_x) {\n            if (!arguments.length) {\n                return horizontal;\n            }\n            horizontal = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the legend chart\n         * @param  {object} _x Margin object to get/set\n         * @return {margin | module} Current margin or Legend module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the markerSize of the legend chart.\n         * This markerSize will determine the horizontal and vertical size of the colored marks\n         * added as color identifiers for the chart's categories.\n         *\n         * @param  {object} _x Margin object to get/set\n         * @return {markerSize | module} Current markerSize or Legend module to chain calls\n         * @public\n         */\n        exports.markerSize = function(_x) {\n            if (!arguments.length) {\n                return markerSize;\n            }\n            markerSize = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the legend chart\n         * @param  {number} _x Desired width for the graph\n         * @return {width | module} Current width or Legend module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _x;\n\n            return this;\n        };\n\n        return exports;\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/legend.js","define(function(require){\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Axis = require('d3-axis');\n    const d3Collection = require('d3-collection');\n    const d3Dispatch = require('d3-dispatch');\n    const d3Ease = require('d3-ease');\n    const d3Scale = require('d3-scale');\n    const d3Shape = require('d3-shape');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n    const d3TimeFormat = require('d3-time-format');\n\n    const {exportChart} = require('./helpers/exportChart');\n    const colorHelper = require('./helpers/colors');\n    const {isInteger} = require('./helpers/common');\n    const {\n        getXAxisSettings,\n        getLocaleDateFormatter\n    } = require('./helpers/timeAxis');\n\n    const {\n        axisTimeCombinations,\n        lineGradientId\n    } = require('./helpers/constants');\n\n    const {\n        formatIntegerValue,\n        formatDecimalValue,\n    } = require('./helpers/formatHelpers');\n\n    /**\n     * @typedef D3Selection\n     * @type {Array[]}\n     * @property {Number} length            Size of the selection\n     * @property {DOMElement} parentNode    Parent of the selection\n     */\n\n     /**\n      * @typedef lineChartDataByTopic\n      * @type {Object}\n      * @property {String} topicName    Topic name (required)\n      * @property {Number} topic        Topic identifier (required)\n      * @property {Object[]} dates      All date entries with values for that topic (required)\n      *\n      * @example\n      * {\n      *     topicName: 'San Francisco',\n      *     topic: 123,\n      *     dates: [\n      *         {\n      *             date: '2017-01-16T16:00:00-08:00',\n      *             value: 1\n      *         },\n      *         {\n      *             date: '2017-01-16T17:00:00-08:00',\n      *             value: 2\n      *         }\n      *     ]\n      * }\n      */\n\n     /**\n      * @typedef LineChartData\n      * @type {Object[]}\n      * @property {lineChartDataByTopic[]} dataByTopic  Data values to chart (required)\n      *\n      * @example\n      * {\n      *     dataByTopic: [\n      *         {\n      *             topicName: 'San Francisco',\n      *             topic: 123,\n      *             dates: [\n      *                 {\n      *                     date: '2017-01-16T16:00:00-08:00',\n      *                     value: 1\n      *                 },\n      *                 {\n      *                     date: '2017-01-16T17:00:00-08:00',\n      *                     value: 2\n      *                 }\n      *             ]\n      *         },\n      *         {\n      *             topicName: 'Other',\n      *             topic: 345,\n      *             dates: [\n      *                 {...},\n      *                 {...}\n      *             ]\n      *         }\n      *     ]\n      * }\n      */\n\n    /**\n     * Line Chart reusable API module that allows us\n     * rendering a multi line and configurable chart.\n     *\n     * @module Line\n     * @tutorial line\n     * @requires d3-array, d3-axis, d3-brush, d3-ease, d3-format, d3-scale, d3-shape, d3-selection, d3-time, d3-time-format\n     *\n     * @example\n     * let lineChart = line();\n     *\n     * lineChart\n     *     .aspectRatio(0.5)\n     *     .width(500);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(lineChart);\n     *\n     */\n    return function line() {\n\n        let margin = {\n                top: 60,\n                right: 30,\n                bottom: 40,\n                left: 70\n            },\n            width = 960,\n            height = 500,\n            aspectRatio = null,\n            tooltipThreshold = 480,\n            svg,\n            chartWidth, chartHeight,\n            xScale, yScale, colorScale,\n            xAxis, xMonthAxis, yAxis,\n            xAxisPadding = {\n                top: 0,\n                left: 15,\n                bottom: 0,\n                right: 0\n            },\n            monthAxisPadding = 28,\n            tickPadding = 5,\n            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n            singleLineGradientColors = colorHelper.colorGradients.greenBlueGradient,\n            topicColorMap,\n\n            forceAxisSettings = null,\n            forcedXTicks = null,\n            forcedXFormat = null,\n            locale,\n\n            isAnimated = false,\n            ease = d3Ease.easeQuadInOut,\n            animationDuration = 1500,\n            maskingRectangle,\n\n            dataByTopic,\n            dataByDate,\n\n            dateLabel = 'date',\n            valueLabel = 'value',\n            topicLabel = 'topic',\n            topicNameLabel = 'topicName',\n\n            verticalTicks = 5,\n\n            overlay,\n            overlayColor = 'rgba(0, 0, 0, 0)',\n            verticalMarkerContainer,\n            verticalMarkerLine,\n\n            verticalGridLines,\n            horizontalGridLines,\n            grid = null,\n\n            baseLine,\n\n            // extractors\n            getDate = ({date}) => date,\n            getValue = ({value}) => value,\n            getTopic = ({topic}) => topic,\n            getLineColor = ({topic}) => colorScale(topic),\n\n            // events\n            dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\n        /**\n         * This function creates the graph using the selection and data provided\n         *\n         * @param {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {LineChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data) {\n                ({\n                    dataByTopic,\n                    dataByDate\n                } = cleanData(_data));\n\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n\n                buildScales();\n                buildSVG(this);\n                buildAxis();\n                drawAxis();\n                buildGradient();\n                drawLines();\n                createMaskingClip();\n\n                if (shouldShowTooltip()) {\n                    drawVerticalMarker();\n                    drawHoverOverlay();\n                    addMouseEvents();\n                }\n            });\n        }\n\n        /**\n         * Adds events to the container group if the environment is not mobile\n         * Adding: mouseover, mouseout and mousemove\n         */\n        function addMouseEvents() {\n            svg\n                .on('mouseover', handleMouseOver)\n                .on('mouseout', handleMouseOut)\n                .on('mousemove', handleMouseMove);\n        }\n\n        /**\n         * Adjusts the position of the y axis' ticks\n         * @param  {D3Selection} selection Y axis group\n         * @return void\n         */\n        function adjustYTickLabels(selection) {\n            selection.selectAll('.tick text')\n                .attr('transform', 'translate(0, -7)');\n        }\n\n        /**\n         * Formats the value depending on its characteristics\n         * @param  {Number} value Value to format\n         * @return {Number}       Formatted value\n         */\n        function getFormattedValue(value) {\n            let format;\n\n            if (isInteger(value)) {\n                format = formatIntegerValue;\n            } else {\n                format = formatDecimalValue;\n            }\n\n            return format(value);\n        }\n\n        /**\n         * Creates the d3 x and y axis, setting orientations\n         * @private\n         */\n        function buildAxis() {\n            let dataTimeSpan = yScale.domain()[1] - yScale.domain()[0];\n            let yTickNumber = dataTimeSpan < verticalTicks - 1 ? dataTimeSpan : verticalTicks;\n            let minor, major;\n\n            if (forceAxisSettings === 'custom' && typeof forcedXFormat === 'string') {\n                minor = {\n                    tick: forcedXTicks,\n                    format: d3TimeFormat.timeFormat(forcedXFormat)\n                };\n                major = null;\n            } else {\n                ({minor, major} = getXAxisSettings(dataByDate, width, forceAxisSettings, locale));\n\n                xMonthAxis = d3Axis.axisBottom(xScale)\n                    .ticks(major.tick)\n                    .tickSize(0, 0)\n                    .tickFormat(major.format);\n            }\n\n            xAxis = d3Axis.axisBottom(xScale)\n                .ticks(minor.tick)\n                .tickSize(10, 0)\n                .tickPadding(tickPadding)\n                .tickFormat(minor.format);\n\n            yAxis = d3Axis.axisLeft(yScale)\n                .ticks(yTickNumber)\n                .tickSize([0])\n                .tickPadding(tickPadding)\n                .tickFormat(getFormattedValue);\n\n            drawGridLines(minor.tick, yTickNumber);\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * NOTE: The order of drawing of this group elements is really important,\n         * as everything else will be drawn on top of them\n         * @private\n         */\n        function buildContainerGroups(){\n            let container = svg\n              .append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${margin.left},${margin.top})`);\n\n            container\n              .append('g').classed('x-axis-group', true)\n              .append('g').classed('axis x', true);\n            container.selectAll('.x-axis-group')\n              .append('g').classed('month-axis', true);\n            container\n              .append('g').classed('y-axis-group axis y', true);\n            container\n              .append('g').classed('grid-lines-group', true);\n            container\n              .append('g').classed('chart-group', true);\n            container\n              .append('g').classed('metadata-group', true);\n        }\n\n        /**\n         * Builds the gradient element to be used later\n         * @return {void}\n         */\n        function buildGradient() {\n            svg.select('.metadata-group')\n              .append('linearGradient')\n                .attr('id', lineGradientId)\n                .attr('x1', '0%')\n                .attr('y1', '0%')\n                .attr('x2', '100%')\n                .attr('y2', '0%')\n                .selectAll('stop')\n                .data([\n                    {offset:'0%', color: singleLineGradientColors[0]},\n                    {offset:'100%', color: singleLineGradientColors[1]}\n                ])\n                .enter()\n              .append('stop')\n                .attr('offset', ({offset}) => offset)\n                .attr('stop-color', ({color}) => color)\n        }\n\n        /**\n         * Creates the x and y scales of the graph\n         * @private\n         */\n        function buildScales(){\n            let minX = d3Array.min(dataByTopic, ({dates}) => d3Array.min(dates, getDate)),\n                maxX = d3Array.max(dataByTopic, ({dates}) => d3Array.max(dates, getDate)),\n                maxY = d3Array.max(dataByTopic, ({dates}) => d3Array.max(dates, getValue)),\n                minY = d3Array.min(dataByTopic, ({dates}) => d3Array.min(dates, getValue));\n            let yScaleBottomValue = Math.abs(minY) < 0 ? Math.abs(minY) : 0;\n\n            xScale = d3Scale.scaleTime()\n                .domain([minX, maxX])\n                .rangeRound([0, chartWidth]);\n\n            yScale = d3Scale.scaleLinear()\n                .domain([yScaleBottomValue, Math.abs(maxY)])\n                .rangeRound([chartHeight, 0])\n                .nice();\n\n            colorScale = d3Scale.scaleOrdinal()\n                .range(colorSchema)\n                .domain(dataByTopic.map(getTopic));\n\n            let range = colorScale.range();\n            topicColorMap = colorScale.domain().reduce((memo, item, i) => {\n                memo[item] = range[i];\n\n                return memo;\n            }, {});\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         *\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container){\n            if (!svg) {\n                svg = d3Selection.select(container)\n                  .append('svg')\n                    .classed('britechart line-chart', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Parses dates and values into JS Date objects and numbers\n         * @param  {obj} dataByTopic    Raw data grouped by topic\n         * @return {obj}                Parsed data with dataByTopic and dataByDate\n         */\n        function cleanData({dataByTopic, dataByDate}) {\n\n            if (dataByTopic) {\n                let flatData = [];\n\n                dataByTopic.forEach((topic) => {\n                    topic.dates.forEach((date) => {\n                        flatData.push({\n                            topicName: topic[topicNameLabel],\n                            name: topic[topicLabel],\n                            date: date[dateLabel],\n                            value: date[valueLabel]\n                        });\n                    });\n                });\n\n                // Nest data by date and format\n                dataByDate = d3Collection.nest()\n                                .key( getDate )\n                                .entries(flatData)\n                                .map((d) => {\n                                    return {\n                                        date: new Date(d.key),\n                                        topics: d.values\n                                    }\n                                });\n\n                // Normalize dates in keys\n                dataByDate = dataByDate.map((d) => {\n                    d.date = new Date(d.date);\n\n                    return d;\n                });\n\n                // Normalize dataByTopic\n                dataByTopic.forEach(function(kv) {\n                    kv.dates.forEach(function(d) {\n                        d.date = new Date(d[dateLabel]);\n                        d.value = +d[valueLabel];\n                    });\n                });\n\n            }\n\n            return {dataByTopic, dataByDate};\n        }\n\n        /**\n         * Removes all the datapoints highlighter circles added to the marker container\n         * @return void\n         */\n        function cleanDataPointHighlights(){\n            verticalMarkerContainer.selectAll('.circle-container').remove();\n        }\n\n        /**\n         * Creates a masking clip that would help us fake an animation if the\n         * proper flag is true\n         *\n         * @return {void}\n         */\n        function createMaskingClip() {\n            if (isAnimated) {\n                // We use a white rectangle to simulate the line drawing animation\n                maskingRectangle = svg.append('rect')\n                    .attr('class', 'masking-rectangle')\n                    .attr('width', width)\n                    .attr('height', height)\n                    .attr('x', 0)\n                    .attr('y', 0);\n\n                maskingRectangle.transition()\n                    .duration(animationDuration)\n                    .ease(ease)\n                    .attr('x', width)\n                    .on('end', () => maskingRectangle.remove());\n            }\n        }\n\n        /**\n         * Draws the x and y axis on the svg object within their\n         * respective groups\n         * @private\n         */\n        function drawAxis(){\n            svg.select('.x-axis-group .axis.x')\n                .attr('transform', `translate(0, ${chartHeight})`)\n                .call(xAxis);\n\n            if (forceAxisSettings !== 'custom') {\n                svg.select('.x-axis-group .month-axis')\n                    .attr('transform', `translate(0, ${(chartHeight + monthAxisPadding)})`)\n                    .call(xMonthAxis);\n            }\n\n            svg.select('.y-axis-group.axis.y')\n                .transition()\n                .ease(ease)\n                .attr('transform', `translate(${-xAxisPadding.left}, 0)`)\n                .call(yAxis)\n                .call(adjustYTickLabels);\n        }\n\n        /**\n         * Draws the line elements within the chart group\n         * @private\n         */\n        function drawLines(){\n            let lines,\n                topicLine;\n\n            topicLine = d3Shape.line()\n                .x(({date}) => xScale(date))\n                .y(({value}) => yScale(value));\n\n            lines = svg.select('.chart-group').selectAll('.line')\n                .data(dataByTopic);\n\n            lines.enter()\n              .append('g')\n                .attr('class', 'topic')\n              .append('path')\n                .attr('class', 'line')\n                .attr('d', ({dates}) => topicLine(dates))\n                .style('stroke', (d) => (\n                    dataByTopic.length === 1 ? `url(#${lineGradientId})` : getLineColor(d)\n                ));\n\n            lines\n                .exit()\n                .remove();\n        }\n\n        /**\n         * Draws grid lines on the background of the chart\n         * @return void\n         */\n        function drawGridLines(xTicks, yTicks){\n            if (grid === 'horizontal' || grid === 'full') {\n                horizontalGridLines = svg.select('.grid-lines-group')\n                    .selectAll('line.horizontal-grid-line')\n                    .data(yScale.ticks(yTicks))\n                    .enter()\n                        .append('line')\n                        .attr('class', 'horizontal-grid-line')\n                        .attr('x1', (-xAxisPadding.left - 30))\n                        .attr('x2', chartWidth)\n                        .attr('y1', (d) => yScale(d))\n                        .attr('y2', (d) => yScale(d));\n            }\n\n            if (grid === 'vertical' || grid === 'full') {\n                verticalGridLines = svg.select('.grid-lines-group')\n                    .selectAll('line.vertical-grid-line')\n                    .data(xScale.ticks(xTicks))\n                    .enter()\n                        .append('line')\n                        .attr('class', 'vertical-grid-line')\n                        .attr('y1', 0)\n                        .attr('y2', chartHeight)\n                        .attr('x1', (d) => xScale(d))\n                        .attr('x2', (d) => xScale(d));\n            }\n\n            //draw a horizontal line to extend x-axis till the edges\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-x-line')\n                .data([0])\n                .enter()\n              .append('line')\n                .attr('class', 'extended-x-line')\n                .attr('x1', (-xAxisPadding.left - 30))\n                .attr('x2', chartWidth)\n                .attr('y1', height - margin.bottom - margin.top)\n                .attr('y2', height - margin.bottom - margin.top);\n        }\n\n        /**\n         * Draws an overlay element over the graph\n         * @inner\n         * @return void\n         */\n        function drawHoverOverlay(){\n            overlay = svg.select('.metadata-group')\n              .append('rect')\n                .attr('class','overlay')\n                .attr('y1', 0)\n                .attr('y2', height)\n                .attr('height', chartHeight)\n                .attr('width', chartWidth)\n                .attr('fill', overlayColor)\n                .style('display', 'none');\n        }\n\n        /**\n         * Creates the vertical marker\n         * @return void\n         */\n        function drawVerticalMarker(){\n            verticalMarkerContainer = svg.select('.metadata-group')\n              .append('g')\n                .attr('class', 'hover-marker vertical-marker-container')\n                .attr('transform', 'translate(9999, 0)');\n\n            verticalMarkerLine = verticalMarkerContainer.selectAll('path')\n                .data([{\n                    x1: 0,\n                    y1: 0,\n                    x2: 0,\n                    y2: 0\n                }])\n                .enter()\n              .append('line')\n                .classed('vertical-marker', true)\n                .attr('x1', 0)\n                .attr('y1', chartHeight)\n                .attr('x2', 0)\n                .attr('y2', 0);\n        }\n\n        /**\n         * Finds out which datapoint is closer to the given x position\n         * @param  {Number} x0 Date value for data point\n         * @param  {Object} d0 Previous datapoint\n         * @param  {Object} d1 Next datapoint\n         * @return {Object}    d0 or d1, the datapoint with closest date to x0\n         */\n        function findOutNearestDate(x0, d0, d1){\n            return (new Date(x0).getTime() - new Date(d0.date).getTime()) > (new Date(d1.date).getTime() - new Date(x0).getTime()) ? d0 : d1;\n        }\n\n        /**\n         * Extract X position on the graph from a given mouse event\n         * @param  {Object} event D3 mouse event\n         * @return {Number}       Position on the x axis of the mouse\n         */\n        function getMouseXPosition(event) {\n            return d3Selection.mouse(event)[0];\n        }\n\n        /**\n         * Finds out the data entry that is closer to the given position on pixels\n         * @param  {Number} mouseX X position of the mouse\n         * @return {Object}        Data entry that is closer to that x axis position\n         */\n        function getNearestDataPoint(mouseX) {\n            let dateFromInvertedX = xScale.invert(mouseX);\n            let bisectDate = d3Array.bisector(getDate).left;\n            let dataEntryIndex = bisectDate(dataByDate, dateFromInvertedX, 1);\n            let dataEntryForXPosition = dataByDate[dataEntryIndex];\n            let previousDataEntryForXPosition = dataByDate[dataEntryIndex - 1];\n            let nearestDataPoint;\n\n            if (previousDataEntryForXPosition && dataEntryForXPosition) {\n                nearestDataPoint = findOutNearestDate(dateFromInvertedX, dataEntryForXPosition, previousDataEntryForXPosition);\n            } else {\n                nearestDataPoint = dataEntryForXPosition;\n            }\n\n            return nearestDataPoint;\n        }\n\n        /**\n         * MouseMove handler, calculates the nearest dataPoint to the cursor\n         * and updates metadata related to it\n         * @private\n         */\n        function handleMouseMove(){\n            let xPositionOffset = -margin.left, //Arbitrary number, will love to know how to assess it\n                dataPoint = getNearestDataPoint(getMouseXPosition(this) + xPositionOffset),\n                dataPointXPosition;\n\n            if (dataPoint) {\n                dataPointXPosition = xScale(new Date(dataPoint.date));\n                // More verticalMarker to that datapoint\n                moveVerticalMarker(dataPointXPosition);\n                // Add data points highlighting\n                highlightDataPoints(dataPoint);\n                // Emit event with xPosition for tooltip or similar feature\n                dispatcher.call('customMouseMove', this, dataPoint, topicColorMap, dataPointXPosition);\n            }\n        }\n\n        /**\n         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n         * It also resets the container of the vertical marker\n         * @private\n         */\n        function handleMouseOut(data){\n            overlay.style('display', 'none');\n            verticalMarkerLine.classed('bc-is-active', false);\n            verticalMarkerContainer.attr('transform', 'translate(9999, 0)');\n\n            dispatcher.call('customMouseOut', this, data);\n        }\n\n        /**\n         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n         * @private\n         */\n        function handleMouseOver(data){\n            overlay.style('display', 'block');\n            verticalMarkerLine.classed('bc-is-active', true);\n\n            dispatcher.call('customMouseOver', this, data);\n        }\n\n        /**\n         * Creates coloured circles marking where the exact data y value is for a given data point\n         * @param  {Object} dataPoint Data point to extract info from\n         * @private\n         */\n        function highlightDataPoints(dataPoint) {\n            cleanDataPointHighlights();\n\n            // sorting the topics based on the order of the colors,\n            // so that the order always stays constant\n            dataPoint.topics = dataPoint.topics\n                                    .filter(t => !!t)\n                                    .sort((a, b) => topicColorMap[a.name] < topicColorMap[b.name]);\n\n            dataPoint.topics.forEach(({name}, index) => {\n                let marker = verticalMarkerContainer\n                                .append('g')\n                                .classed('circle-container', true),\n                    circleSize = 12;\n\n                marker.append('circle')\n                    .classed('data-point-highlighter', true)\n                    .attr('cx', circleSize)\n                    .attr('cy', 0)\n                    .attr('r', 5)\n                    .style('stroke', topicColorMap[name]);\n\n                marker.attr('transform', `translate( ${(- circleSize)}, ${(yScale(dataPoint.topics[index].value))} )` );\n            });\n        }\n\n        /**\n         * Helper method to update the x position of the vertical marker\n         * @param  {Object} dataPoint Data entry to extract info\n         * @return void\n         */\n        function moveVerticalMarker(verticalMarkerXPosition){\n            verticalMarkerContainer.attr('transform', `translate(${verticalMarkerXPosition},0)`);\n        }\n\n        /**\n         * Determines if we should add the tooltip related logic depending on the\n         * size of the chart and the tooltipThreshold variable value\n         * @return {Boolean} Should we build the tooltip?\n         */\n        function shouldShowTooltip() {\n            return width > tooltipThreshold;\n        }\n\n        // API Methods\n\n        /**\n         * Gets or Sets the aspect ratio of the chart\n         * @param  {Number} _x Desired aspect ratio for the graph\n         * @return { (Number | Module) } Current aspect ratio or Line Chart module to chain calls\n         * @public\n         */\n        exports.aspectRatio = function(_x) {\n            if (!arguments.length) {\n                return aspectRatio;\n            }\n            aspectRatio = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the colorSchema of the chart\n         * @param  {String[]} _x Desired colorSchema for the graph\n         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n         * @public\n         */\n        exports.colorSchema = function(_x) {\n            if (!arguments.length) {\n                return colorSchema;\n            }\n            colorSchema = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the dateLabel of the chart\n         * @param  {Number} _x Desired dateLabel for the graph\n         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n         * @public\n         */\n        exports.dateLabel = function(_x) {\n            if (!arguments.length) {\n                return dateLabel;\n            }\n            dateLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x axis grouping\n         * @param  {String} _x Desired format\n         * @return { (String|Module) }    Current format or module to chain calls\n         * @example\n         *     line.forceAxisFormat(line.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.forceAxisFormat = function(_x) {\n            if (!arguments.length) {\n              return forceAxisSettings;\n            }\n            forceAxisSettings = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x format\n         * It requires a `forceAxisFormat` of 'custom' in order to work.\n         * NOTE: localization not supported\n         * @param  {String} _x              Desired format for x axis\n         * @return { (String|Module) }      Current format or module to chain calls\n         */\n        exports.forcedXFormat = function(_x) {\n            if (!arguments.length) {\n              return forcedXFormat;\n            }\n            forcedXFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x ticks. It requires a `forceAxisFormat` of 'custom' in order to work.\n         * NOTE: This value needs to be a multiple of 2, 5 or 10. They won't always work as expected, as D3 decides at the end\n         * how many and where the ticks will appear.\n         *\n         * @param  {Number} _x              Desired number of x axis ticks (multiple of 2, 5 or 10)\n         * @return { (Number|Module) }      Current number or ticks or module to chain calls\n         */\n        exports.forcedXTicks = function(_x) {\n            if (!arguments.length) {\n              return forcedXTicks;\n            }\n            forcedXTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the grid mode.\n         *\n         * @param  {String} _x Desired mode for the grid ('vertical'|'horizontal'|'full')\n         * @return { String | module} Current mode of the grid or Line Chart module to chain calls\n         * @public\n         */\n        exports.grid = function(_x) {\n            if (!arguments.length) {\n                return grid;\n            }\n            grid = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { (Number | Module) } Current height or Line Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            if (aspectRatio) {\n                width = Math.ceil(_x / aspectRatio);\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n         * By default this is 'false'\n         *\n         * @param  {Boolean} _x Desired animation flag\n         * @return { isAnimated | module} Current isAnimated flag or Chart module\n         * @public\n         */\n        exports.isAnimated = function(_x) {\n            if (!arguments.length) {\n                return isAnimated;\n            }\n            isAnimated = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {Object} _x Margin object to get/set\n         * @return { (Number | Module) } Current margin or Line Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the gradient colors of the line chart when there is only one line\n         * @param  {String[]} _x Desired color gradient for the line (array of two hexadecimal numbers)\n         * @return { (Number | Module) } Current color gradient or Line Chart module to chain calls\n         * @public\n         */\n        exports.lineGradient = function(_x) {\n            if (!arguments.length) {\n                return singleLineGradientColors;\n            }\n            singleLineGradientColors = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the minimum width of the graph in order to show the tooltip\n         * NOTE: This could also depend on the aspect ratio\n         * @param  {Number} _x Desired tooltip threshold for the graph\n         * @return { (Number | Module) } Current tooltip threshold or Line Chart module to chain calls\n         * @public\n         */\n        exports.tooltipThreshold = function(_x) {\n            if (!arguments.length) {\n                return tooltipThreshold;\n            }\n            tooltipThreshold = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the topicLabel of the chart\n         * @param  {Number} _x Desired topicLabel for the graph\n         * @return { topicLabel | module} Current topicLabel or Chart module to chain calls\n         * @public\n         */\n        exports.topicLabel = function(_x) {\n            if (!arguments.length) {\n                return topicLabel;\n            }\n            topicLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabel of the chart\n         * @param  {Number} _x Desired valueLabel for the graph\n         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabel = function(_x) {\n            if (!arguments.length) {\n                return valueLabel;\n            }\n            valueLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the number of verticalTicks of the yAxis on the chart\n         * @param  {Number} _x Desired verticalTicks\n         * @return { verticalTicks | module} Current verticalTicks or Chart module to chain calls\n         * @public\n         */\n        exports.verticalTicks = function(_x) {\n            if (!arguments.length) {\n                return verticalTicks;\n            }\n            verticalTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { (Number | Module) } Current width or Line Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            if (aspectRatio) {\n                height = Math.ceil(_x * aspectRatio);\n            }\n            width = _x;\n\n            return this;\n        };\n\n        /**\n         * Pass language tag for the tooltip to localize the date.\n         * Feature uses Intl.DateTimeFormat, for compatability and support, refer to\n         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n         * @param  {String} _x  must be a language tag (BCP 47) like 'en-US' or 'fr-FR'\n         * @return { (String|Module) }    Current locale or module to chain calls\n         */\n        exports.locale = function(_x) {\n            if (!arguments.length) {\n                return locale;\n            }\n            locale = _x;\n\n            return this;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename, title) {\n            exportChart.call(exports, svg, filename, title);\n        };\n\n        /**\n         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n         * We are going to expose this events:\n         * customMouseHover, customMouseMove and customMouseOut\n         *\n         * @return {module} Bar Chart\n         * @public\n         */\n        exports.on = function() {\n            let value = dispatcher.on.apply(dispatcher, arguments);\n\n            return value === dispatcher ? exports : value;\n        };\n\n        /**\n         * Exposes the constants to be used to force the x axis to respect a certain granularity\n         * current options: MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR\n         * @example\n         *     line.forceAxisFormat(line.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.axisTimeCombinations = axisTimeCombinations;\n\n        return exports;\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/line.js","define(function(require) {\n    'use strict';\n\n    const d3Time = require('d3-time');\n    const d3TimeFormat = require('d3-time-format');\n\n    const {\n        axisTimeCombinations,\n        timeBenchmarks\n    } = require('./constants');\n\n\n    const singleTickWidth = 20;\n    const horizontalTickSpacing = 50;\n    const minEntryNumForDayFormat = 5;\n\n    const formatMap = {\n        minute: d3TimeFormat.timeFormat('%M m'),\n        hour: d3TimeFormat.timeFormat('%H %p'),\n        day: d3TimeFormat.timeFormat('%e'),\n        daymonth: d3TimeFormat.timeFormat('%d %b'),\n        month: d3TimeFormat.timeFormat('%b'),\n        year: d3TimeFormat.timeFormat('%Y')\n    };\n    const localeTimeMap = {\n        minute: {minute:'numeric'},\n        hour: {hour:'numeric'},\n        day: {day: 'numeric'},\n        daymonth: {day: 'numeric', month:'short'},\n        month: {month: 'short'},\n        year: {year: 'numeric'}\n    };\n    const settingsToMajorTickMap = {\n        [axisTimeCombinations.MINUTE_HOUR]: d3Time.timeHour.every(1),\n        [axisTimeCombinations.HOUR_DAY]: d3Time.timeDay.every(1),\n        [axisTimeCombinations.DAY_MONTH]: d3Time.timeMonth.every(1),\n        [axisTimeCombinations.MONTH_YEAR]: d3Time.timeYear.every(1)\n    };\n\n    /**\n     * Figures out the proper settings from the current time span\n     * @param  {Number} timeSpan    Span of time charted by the graph in milliseconds\n     * @return {String}             Type of settings for the given timeSpan\n     */\n    const getAxisSettingsFromTimeSpan = (timeSpan) => {\n        let {\n          ONE_YEAR,\n          ONE_DAY\n        } = timeBenchmarks;\n        let settings;\n\n        if (timeSpan < ONE_DAY) {\n            settings = axisTimeCombinations.HOUR_DAY;\n        } else if (timeSpan < ONE_YEAR) {\n            settings = axisTimeCombinations.DAY_MONTH;\n        } else {\n            settings = axisTimeCombinations.MONTH_YEAR;\n        }\n\n        return settings;\n    }\n\n    /**\n     * Calculates the maximum number of ticks for the x axis\n     * @param  {Number} width Chart width\n     * @param  {Number} dataPointNumber  Number of entries on the data\n     * @return {Number}       Number of ticks to render\n     */\n    const getMaxNumOfHorizontalTicks = (width, dataPointNumber) => {\n        let ticksForWidth = Math.ceil(width / (singleTickWidth + horizontalTickSpacing));\n\n        return dataPointNumber < minEntryNumForDayFormat ? d3Time.timeDay : Math.min(dataPointNumber, ticksForWidth);\n    }\n\n    /**\n     * Takes a locale (string) and the format to return and returns a function to format dates\n     * @param  {String} locale    locale tag eg. en-US, fr-FR, ru-RU\n     * @param  {string} timeUnit  minute, hour, day, dayMonth, month, year\n     * @return {function}         function that formats dates in the proper locale\n     */\n    const getLocaleDateFormatter = (locale, timeUnit='day') => {\n        let options = localeTimeMap[timeUnit];\n        let formatter = new Intl.DateTimeFormat(locale, options);\n\n        return (date) => formatter.format(date);\n    }\n\n    /**\n     * Returns tick object to be used when building the x axis\n     * @param {dataByDate} dataByDate       Chart data ordered by Date\n     * @param {Number} width                Chart width\n     * @param {String} settings             Optional forced settings for axis\n     * @return {object} tick settings for major and minr axis\n     */\n    const getXAxisSettings = (dataByDate, width, settings = null, locale=null) => {\n        let firstDate = new Date(dataByDate[0].date);\n        let lastDate = new Date(dataByDate[dataByDate.length - 1].date);\n        let dateTimeSpan = lastDate - firstDate;\n\n        if (locale && ((typeof Intl === 'undefined') || (typeof Intl === 'object' && !Intl.DateTimeFormat))) {\n            locale = null;\n        }\n\n        if (!settings) {\n            settings = getAxisSettingsFromTimeSpan(dateTimeSpan);\n        }\n\n        let [minor, major] = settings.split('-');\n\n        let majorTickValue = settingsToMajorTickMap[settings];\n        let minorTickValue = getMaxNumOfHorizontalTicks(width, dataByDate.length);\n\n        return {\n            minor: {\n              format: locale ? getLocaleDateFormatter(locale, minor) : formatMap[minor],\n              tick: minorTickValue\n            },\n            major: {\n              format: locale ? getLocaleDateFormatter(locale, major) : formatMap[major],\n              tick: majorTickValue\n            }\n        };\n    };\n\n    return {\n        getXAxisSettings,\n        getLocaleDateFormatter\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/timeAxis.js","define(function(require) {\n    'use strict';\n\n    const d3Format = require('d3-format');\n\n    const valueRangeLimits = {\n                small: 10,\n                medium: 100\n            };\n    const integerValueFormats = {\n                small: d3Format.format(''),\n                medium: d3Format.format(''),\n                large: d3Format.format('.2s')\n            };\n    const decimalValueFormats = {\n                small: d3Format.format('.3f'),\n                medium: d3Format.format('.1f'),\n                large: d3Format.format('.2s')\n            };\n\n    function getValueSize(value){\n        let size = 'large';\n\n        if (value < valueRangeLimits.small) {\n            size = 'small';\n        } else if (value < valueRangeLimits.medium) {\n            size = 'medium';\n        }\n        return size;\n    }\n\n    /**\n     * Formats an integer value depending on its value range\n     * @param  {Number} value Decimal point value to format\n     * @return {Number}       Formatted value to show\n     */\n    function formatIntegerValue(value) {\n        let format = integerValueFormats[getValueSize(value)];\n\n        return format(value);\n    }\n\n    /**\n     * Formats a floating point value depending on its value range\n     * @param  {Number} value Decimal point value to format\n     * @return {Number}       Formatted value to show\n     */\n    function formatDecimalValue(value) {\n        let format = decimalValueFormats[getValueSize(value)];\n\n        return format(value);\n    }\n\n    return {\n        formatDecimalValue,\n        formatIntegerValue,\n    }\n\n});\n\n\n// WEBPACK FOOTER //\n// ./src/charts/helpers/formatHelpers.js","define(function(require){\n    'use strict';\n\n    const d3Ease = require('d3-ease');\n    const d3Format = require('d3-format');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n    const d3TimeFormat = require('d3-time-format');\n\n    const {\n        axisTimeCombinations\n    } = require('./helpers/constants');\n\n    const {\n        formatIntegerValue,\n        formatDecimalValue\n    } = require('./helpers/formatHelpers');\n\n    const {\n        isInteger\n    } = require('./helpers/common');\n\n    /**\n     * Tooltip Component reusable API class that renders a\n     * simple and configurable tooltip element for Britechart's\n     * line chart or stacked area chart.\n     *\n     * @module Tooltip\n     * @tutorial tooltip\n     * @requires d3-array, d3-axis, d3-dispatch, d3-format, d3-scale, d3-selection, d3-transition\n     *\n     * @example\n     * var lineChart = line(),\n     *     tooltip = tooltip();\n     *\n     * tooltip\n     *     .title('Tooltip title');\n     *\n     * lineChart\n     *     .width(500)\n     *     .on('customMouseOver', function() {\n     *          tooltip.show();\n     *     })\n     *     .on('customMouseMove', function(dataPoint, topicColorMap, dataPointXPosition) {\n     *          tooltip.update(dataPoint, topicColorMap, dataPointXPosition);\n     *     })\n     *     .on('customMouseOut', function() {\n     *          tooltip.hide();\n     *     });\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(lineChart);\n     *\n     * d3Selection.select('.metadata-group .hover-marker')\n     *     .datum([])\n     *     .call(tooltip);\n     *\n     */\n    return function module() {\n\n        let margin = {\n                top: 2,\n                right: 2,\n                bottom: 2,\n                left: 2\n            },\n            width = 250,\n            height = 45,\n\n            title = 'Tooltip title',\n\n            // tooltip\n            tooltip,\n            tooltipOffset = {\n                y: -55,\n                x: 0\n            },\n            tooltipMaxTopicLength = 170,\n            tooltipTextContainer,\n            tooltipDivider,\n            tooltipBody,\n            tooltipTitle,\n            tooltipWidth = 250,\n            tooltipHeight = 48,\n            tooltipBorderRadius = 3,\n            ttTextX = 0,\n            ttTextY = 37,\n            textSize,\n            entryLineLimit = 3,\n\n            // Animations\n            mouseChaseDuration = 100,\n            ease = d3Ease.easeQuadInOut,\n\n            circleYOffset = 8,\n\n            colorMap,\n            bodyFillColor = '#FFFFFF',\n            borderStrokeColor = '#D2D6DF',\n            titleFillColor = '#6D717A',\n            textFillColor = '#282C35',\n            tooltipTextColor = '#000000',\n\n            dateLabel = 'date',\n            valueLabel = 'value',\n            nameLabel = 'name',\n            topicLabel = 'topics',\n\n            defaultAxisSettings = axisTimeCombinations.DAY_MONTH,\n            forceAxisSettings = null,\n            forceOrder = [],\n\n            // formats\n            monthDayYearFormat = d3TimeFormat.timeFormat('%b %d, %Y'),\n            monthDayHourFormat = d3TimeFormat.timeFormat('%b %d, %I %p'),\n            locale,\n\n            chartWidth, chartHeight,\n            data,\n            svg;\n\n\n        /**\n         * This function creates the graph using the selection as container\n         * @param {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {Object} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data){\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = _data;\n\n                buildSVG(this);\n            });\n        }\n\n        /**\n         * Builds containers for the tooltip\n         * Also applies the Margin convention\n         * @private\n         */\n        function buildContainerGroups() {\n            var container = svg.append('g')\n                .classed('tooltip-container-group', true)\n                .attr('transform', `translate( ${margin.left}, ${margin.top})`);\n\n            container.append('g').classed('tooltip-group', true);\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container)\n                    .append('g')\n                    .classed('britechart britechart-tooltip', true);\n\n                buildContainerGroups();\n                drawTooltip();\n            }\n            svg\n                .transition()\n                .attr('width', width)\n                .attr('height', height);\n\n            // Hidden by default\n            exports.hide();\n        }\n\n        /**\n         * Resets the tooltipBody content\n         * @return void\n         */\n        function cleanContent(){\n            tooltipBody.selectAll('text').remove();\n            tooltipBody.selectAll('circle').remove();\n        }\n\n        /**\n         * Draws the different elements of the Tooltip box\n         * @return void\n         */\n        function drawTooltip(){\n            tooltipTextContainer = svg.selectAll('.tooltip-group')\n              .append('g')\n                .classed('tooltip-text', true);\n\n            tooltip = tooltipTextContainer\n              .append('rect')\n                .classed('tooltip-text-container', true)\n                .attr('x', -tooltipWidth / 4 + 8)\n                .attr('y', 0)\n                .attr('width', tooltipWidth)\n                .attr('height', tooltipHeight)\n                .attr('rx', tooltipBorderRadius)\n                .attr('ry', tooltipBorderRadius)\n                .style('fill', bodyFillColor)\n                .style('stroke', borderStrokeColor)\n                .style('stroke-width', 1);\n\n            tooltipTitle = tooltipTextContainer\n              .append('text')\n                .classed('tooltip-title', true)\n                .attr('x', -tooltipWidth / 4 + 17)\n                .attr('dy', '.35em')\n                .attr('y', 16)\n                .style('fill', titleFillColor);\n\n            tooltipDivider = tooltipTextContainer\n              .append('line')\n                .classed('tooltip-divider', true)\n                .attr('x1', -tooltipWidth / 4 + 15)\n                .attr('x2', 265)\n                .attr('y1', 31)\n                .attr('y2', 31)\n                .style('stroke', borderStrokeColor);\n\n            tooltipBody = tooltipTextContainer\n              .append('g')\n                .classed('tooltip-body', true)\n                .style('transform', 'translateY(8px)')\n                .style('fill', textFillColor);\n        }\n\n        /**\n         * Formats the value depending on its characteristics\n         * @param  {Number} value Value to format\n         * @return {Number}       Formatted value\n         */\n        function getFormattedValue(value) {\n            if (!value) {\n                return 0;\n            }\n\n            if (isInteger(value)) {\n                value = formatIntegerValue(value);\n            } else {\n                value = formatDecimalValue(value);\n            }\n\n            return value;\n        }\n\n        /**\n         * Calculates the desired position for the tooltip\n         * @param  {Number} mouseX             Current horizontal mouse position\n         * @param  {Number} mouseY             Current vertical mouse position\n         * @return {Number[]}                  X and Y position\n         */\n        function getTooltipPosition([mouseX, mouseY]) {\n            let tooltipX, tooltipY;\n\n            // show tooltip to the right\n            if ((mouseX - tooltipWidth) < 0) {\n                // Tooltip on the right\n                tooltipX = tooltipWidth - 185;\n            } else {\n                // Tooltip on the left\n                tooltipX = -205\n            }\n\n            if (mouseY) {\n                tooltipY = tooltipOffset.y;\n                // tooltipY = mouseY + tooltipOffset.y;\n            } else {\n                tooltipY = tooltipOffset.y;\n            }\n\n            return [tooltipX, tooltipY];\n        }\n\n        /**\n         * Extracts the value from the data object\n         * @param  {Object} data Data value containing the info\n         * @return {String}      Value to show\n         */\n        function getValueText(data) {\n            let value = data[valueLabel];\n            let valueText;\n\n            if (data.missingValue) {\n                valueText = '-';\n            } else {\n                valueText = getFormattedValue(value).toString();\n            }\n\n            return valueText;\n        }\n\n        /**\n         * Resets the height of the tooltip and the pointer for the text\n         * position\n         */\n        function resetSizeAndPositionPointers() {\n            tooltipHeight = 48;\n            ttTextY = 37;\n            ttTextX = 0;\n        }\n\n        /**\n         * Draws the data entries inside the tooltip for a given topic\n         * @param  {Object} topic Topic to extract data from\n         * @return void\n         */\n        function updateTopicContent(topic){\n            let name = topic[nameLabel],\n                tooltipRight,\n                tooltipLeftText,\n                tooltipRightText,\n                elementText;\n\n            tooltipLeftText = topic.topicName || name;\n            tooltipRightText = getValueText(topic);\n\n            elementText = tooltipBody\n                .append('text')\n                .classed('tooltip-left-text', true)\n                .attr('dy', '1em')\n                .attr('x', ttTextX - 20)\n                .attr('y', ttTextY)\n                .style('fill', tooltipTextColor)\n                .text(tooltipLeftText)\n                .call(textWrap, tooltipMaxTopicLength, -25);\n\n            tooltipRight = tooltipBody\n                .append('text')\n                .classed('tooltip-right-text', true)\n                .attr('dy', '1em')\n                .attr('x', ttTextX + 8)\n                .attr('y', ttTextY)\n                .style('fill', tooltipTextColor)\n                .text(tooltipRightText);\n\n            textSize = elementText.node().getBBox();\n            tooltipHeight += textSize.height + 5;\n\n            // Not sure if necessary\n            tooltipRight.attr('x', tooltipWidth - tooltipRight.node().getBBox().width - 10 - tooltipWidth / 4)\n\n            tooltipBody\n                .append('circle')\n                .classed('tooltip-circle', true)\n                .attr('cx', 23 - tooltipWidth / 4)\n                .attr('cy', (ttTextY + circleYOffset))\n                .attr('r', 5)\n                .style('fill', colorMap[name])\n                .style('stroke-width', 1);\n\n            ttTextY += textSize.height + 7;\n        }\n\n        /**\n         * Updates size and position of tooltip depending on the side of the chart we are in\n         * TODO: This needs a refactor, following the mini-tooltip code.\n         *\n         * @param  {Object} dataPoint DataPoint of the tooltip\n         * @param  {Number} xPosition DataPoint's x position in the chart\n         * @param  {Number} xPosition DataPoint's y position in the chart\n         * @return void\n         */\n        function updatePositionAndSize(dataPoint, xPosition, yPosition){\n            let [tooltipX, tooltipY] = getTooltipPosition([xPosition, yPosition])\n\n            tooltip\n                .attr('width', tooltipWidth)\n                .attr('height', tooltipHeight + 10);\n\n            tooltipTextContainer.transition()\n                .duration(mouseChaseDuration)\n                .ease(ease)\n                .attr('transform', `translate(${tooltipX}, ${tooltipY})`);\n\n            tooltipDivider\n                .attr('x2', tooltipWidth - 60);\n        }\n\n        /**\n         * Updates value of tooltipTitle with the data meaning and the date\n         * @param  {Object} dataPoint Point of data to use as source\n         * @return void\n         */\n        function updateTitle(dataPoint) {\n            var date = new Date(dataPoint[dateLabel]),\n                tooltipTitleText = title + ' - ' + formatDate(date);\n\n            tooltipTitle.text(tooltipTitleText);\n        }\n\n        /**\n         * Figures out which date format to use when showing the date of the current data entry\n         * @return {Function} The proper date formatting function\n         */\n        function formatDate(date) {\n            let settings = forceAxisSettings || defaultAxisSettings;\n            let format = null;\n            let localeOptions = {month:'short', day:'numeric'};\n\n            if (settings === axisTimeCombinations.DAY_MONTH || settings === axisTimeCombinations.MONTH_YEAR) {\n                format = monthDayYearFormat;\n                localeOptions.year = 'numeric';\n            } else if (settings === axisTimeCombinations.HOUR_DAY || settings === axisTimeCombinations.MINUTE_HOUR) {\n                format = monthDayHourFormat;\n                localeOptions.hour = 'numeric';\n            }\n\n            if (locale && ((typeof Intl !== 'undefined') && (typeof Intl === 'object' && Intl.DateTimeFormat))) {\n                let f = Intl.DateTimeFormat(locale, localeOptions);\n\n                return f.format(date);\n            }\n\n            return format(date);\n        }\n\n        /**\n         * Helper method to sort the passed topics array by the names passed int he order arary\n         * @param  {Object[]} topics    Topics data, retrieved from datapoint passed by line chart\n         * @param  {Object[]} order     Array of names in the order to sort topics by\n         * @return {Object[]}           sorted topics object\n         */\n        function _sortByForceOrder(topics, order=forceOrder) {\n            return forceOrder.map((orderName) => topics.filter(({name}) => name === orderName)[0]);\n        }\n\n        /**\n         * Sorts topic by alphabetical order for arrays of objects with a name proeprty\n         * @param  {Array} topics   List of topic objects\n         * @return {Array}          List of topic name strings\n         */\n        function _sortByAlpha(topics) {\n            return topics\n                .map(d => d)\n                .sort((a, b) => {\n                    if (a.name > b.name) return 1;\n                    if (a.name === b.name) return 0;\n                    return -1;\n                });\n\n            let otherIndex = topics.map(({name}) => name).indexOf('Other');\n\n            if (otherIndex >= 0) {\n                let other = topics.splice(otherIndex, 1);\n\n                topics = topics.concat(other);\n            }\n        }\n\n        /**\n         * Wraps a text given the text, width, x position and textFormatter function\n         * @param  {D3Selection} text  Selection with the text to wrap inside\n         * @param  {Number} width Desired max width for that line\n         * @param  {Number} xpos  Initial x position of the text\n         *\n         * REF: http://bl.ocks.org/mbostock/7555321\n         * More discussions on https://github.com/mbostock/d3/issues/1642\n         */\n        function textWrap(text, width, xpos) {\n            xpos = xpos || 0;\n\n            text.each(function() {\n                var words,\n                    word,\n                    line,\n                    lineNumber,\n                    lineHeight,\n                    y,\n                    dy,\n                    tspan;\n\n                text = d3Selection.select(this);\n\n                words = text.text().split(/\\s+/).reverse();\n                line = [];\n                lineNumber = 0;\n                lineHeight = 1.2;\n                y = text.attr('y');\n                dy = parseFloat(text.attr('dy'));\n                tspan = text\n                    .text(null)\n                    .append('tspan')\n                    .attr('x', xpos)\n                    .attr('y', y)\n                    .attr('dy', dy + 'em');\n\n                while ((word = words.pop())) {\n                    line.push(word);\n                    tspan.text(line.join(' '));\n\n                    if (tspan.node().getComputedTextLength() > width) {\n                        line.pop();\n                        tspan.text(line.join(' '));\n\n                        if (lineNumber < entryLineLimit - 1) {\n                            line = [word];\n                            tspan = text.append('tspan')\n                                .attr('x', xpos)\n                                .attr('y', y)\n                                .attr('dy', ++lineNumber * lineHeight + dy + 'em')\n                                .text(word);\n                        }\n                    }\n                }\n            });\n        }\n\n        /**\n         * Draws the data entries inside the tooltip\n         * @param  {Object} dataPoint   Data entry from to take the info\n         * @return void\n         */\n        function updateContent(dataPoint){\n            var topics = dataPoint[topicLabel];\n\n            // sort order by forceOrder array if passed\n            if (forceOrder.length) {\n                topics = _sortByForceOrder(topics);\n            } else if (topics.length && topics[0].name) {\n                topics = _sortByAlpha(topics);\n            }\n\n            cleanContent();\n            updateTitle(dataPoint);\n            resetSizeAndPositionPointers();\n            topics.forEach(updateTopicContent);\n        }\n\n        /**\n         * Updates tooltip title, content, size and position\n         * sorts by alphatical name order if not forced order given\n         *\n         * @param  {lineChartPointByDate} dataPoint  Current datapoint to show info about\n         * @param  {Number} xPosition           Position of the mouse on the X axis\n         * @return void\n         */\n        function updateTooltip(dataPoint, xPosition, yPosition) {\n            updateContent(dataPoint);\n            updatePositionAndSize(dataPoint, xPosition, yPosition);\n        }\n\n\n        // API\n         /**\n         * Gets or Sets the nameLabel of the data\n         * @param  {Number} _x Desired nameLabel\n         * @return { nameLabel | module} Current nameLabel or Chart module to chain calls\n         * @public\n         */\n        exports.nameLabel = function(_x) {\n            if (!arguments.length) {\n                return nameLabel;\n            }\n            nameLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the dateLabel of the data\n         * @param  {Number} _x Desired dateLabel\n         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n         * @public\n         */\n        exports.dateLabel = function(_x) {\n            if (!arguments.length) {\n                return dateLabel;\n            }\n            dateLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabel of the data\n         * @param  {Number} _x Desired valueLabel\n         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabel = function(_x) {\n            if (!arguments.length) {\n                return valueLabel;\n            }\n            valueLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the topicLabel of the data\n         * @param  {Number} _x Desired topicLabel\n         * @return { topicLabel | module} Current topicLabel or Chart module to chain calls\n         * @public\n         */\n        exports.topicLabel = function(_x) {\n            if (!arguments.length) {\n                return topicLabel;\n            }\n            topicLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Hides the tooltip\n         * @return {Module} Tooltip module to chain calls\n         * @public\n         */\n        exports.hide = function() {\n            svg.style('display', 'none');\n\n            return this;\n        };\n\n        /**\n         * Shows the tooltip\n         * @return {Module} Tooltip module to chain calls\n         * @public\n         */\n        exports.show = function() {\n            svg.style('display', 'block');\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the title of the tooltip\n         * @param  {string} _x Desired title\n         * @return { string | module} Current title or module to chain calls\n         * @public\n         */\n        exports.title = function(_x) {\n            if (!arguments.length) {\n                return title;\n            }\n            title = _x;\n\n            return this;\n        };\n\n        /**\n         * Pass an override for the ordering of your tooltip\n         * @param  {Object[]} _x    Array of the names of your tooltip items\n         * @return { overrideOrder | module} Current overrideOrder or Chart module to chain calls\n         * @public\n         */\n        exports.forceOrder = function(_x) {\n            if (!arguments.length) {\n                return forceOrder;\n            }\n            forceOrder = _x;\n\n            return this;\n        }\n\n        /**\n         * Updates the position and content of the tooltip\n         * @param  {Object} dataPoint    Datapoint to represent\n         * @param  {Object} colorMapping Color scheme of the topics\n         * @param  {Number} position     X-scale position in pixels\n         * @return {Module} Tooltip module to chain calls\n         * @public\n         */\n        exports.update = function(dataPoint, colorMapping, xPosition, yPosition = null) {\n            colorMap = colorMapping;\n            updateTooltip(dataPoint, xPosition, yPosition);\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the tooltip to use a certain date format\n         * @param  {String} _x Desired format\n         * @return { (String|Module) }    Current format or module to chain calls\n         */\n        exports.forceDateRange = function(_x) {\n            if (!arguments.length) {\n              return forceAxisSettings || defaultAxisSettings;\n            }\n            forceAxisSettings = _x;\n\n            return this;\n        };\n\n        /**\n         * Pass locale for the tooltip to render the date in\n         * @param  {String} _x  must be a locale tag like 'en-US' or 'fr-FR'\n         * @return { (String|Module) }    Current locale or module to chain calls\n         */\n        exports.locale = function(_x) {\n            if (!arguments.length) {\n              return locale;\n            }\n            locale = _x;\n\n            return this;\n        };\n\n        /**\n         * constants to be used to force the x axis to respect a certain granularity\n         * current options: HOUR_DAY, DAY_MONTH, MONTH_YEAR\n         * @example tooltip.forceDateRange(tooltip.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.axisTimeCombinations = axisTimeCombinations;\n\n\n        return exports;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/tooltip.js","define(function(require){\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Ease = require('d3-ease');\n    const d3Format = require('d3-format');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n\n\n    /**\n     * Mini Tooltip Component reusable API class that renders a\n     * simple and configurable tooltip element for Britechart's\n     * bar and step chart.\n     *\n     * @module Mini-tooltip\n     * @tutorial bar\n     * @requires d3\n     *\n     * @example\n     * var barChart = line(),\n     *     miniTooltip = miniTooltip();\n     *\n     * barChart\n     *     .width(500)\n     *     .height(300)\n     *     .on('customMouseHover', miniTooltip.show)\n     *     .on('customMouseMove', miniTooltip.update)\n     *     .on('customMouseOut', miniTooltip.hide);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(barChart);\n     *\n     * d3Selection.select('.metadata-group .mini-tooltip-container')\n     *     .datum([])\n     *     .call(miniTooltip);\n     *\n     */\n    return function module() {\n\n        let margin = {\n                top: 12,\n                right: 12,\n                bottom: 12,\n                left: 12\n            },\n            width = 100,\n            height = 100,\n\n            // Optional Title\n            title = '',\n\n            // Data Format\n            valueLabel = 'value',\n            nameLabel = 'name',\n\n            // Animations\n            mouseChaseDuration = 100,\n            ease = d3Ease.easeQuadInOut,\n\n            // tooltip\n            tooltipBackground,\n            backgroundBorderRadius = 1,\n            tooltipTextContainer,\n            tooltipOffset = {\n                y: 0,\n                x: 20\n            },\n\n            // Fonts\n            textSize = 14,\n            textLineHeight = 1.5,\n            valueTextSize = 27,\n            valueTextLineHeight = 1.18,\n\n            // Colors\n            bodyFillColor = '#FFFFFF',\n            borderStrokeColor = '#D2D6DF',\n            titleFillColor = '#666a73',\n            nameTextFillColor = '#666a73',\n            valueTextFillColor = '#45494E',\n            valueTextWeight = 200,\n\n            // formats\n            tooltipValueFormat = d3Format.format('.2f'),\n\n            chartWidth,\n            chartHeight,\n            svg;\n\n\n        /**\n         * This function creates the graph using the selection as container\n         * @param {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {Array} _data The data to attach and generate the chart (usually an empty array)\n         */\n        function exports(_selection) {\n            _selection.each(function(_data){\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n\n                buildSVG(this);\n                drawTooltip();\n            });\n        }\n\n        /**\n         * Builds containers for the tooltip\n         * Also applies the Margin convention\n         * @private\n         */\n        function buildContainerGroups() {\n            let container = svg\n              .append('g')\n                .classed('tooltip-container-group', true)\n                .attr('transform', `translate( ${margin.left}, ${margin.top})`);\n\n            container.append('g').classed('tooltip-group', true);\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container)\n                    .append('g')\n                    .classed('britechart britechart-mini-tooltip', true);\n\n                buildContainerGroups();\n            }\n            svg\n                .transition()\n                .attr('width', width)\n                .attr('height', height);\n\n            // Hidden by default\n            exports.hide();\n        }\n\n        /**\n         * Draws the different elements of the Tooltip box\n         * @return void\n         */\n        function drawTooltip(){\n            tooltipTextContainer = svg.selectAll('.tooltip-group')\n                .append('g')\n                .classed('tooltip-text', true);\n\n            tooltipBackground = tooltipTextContainer\n              .append('rect')\n                .classed('tooltip-background', true)\n                .attr('width', width)\n                .attr('height', height)\n                .attr('rx', backgroundBorderRadius)\n                .attr('ry', backgroundBorderRadius)\n                .attr('y', - margin.top)\n                .attr('x', - margin.left)\n                .style('fill', bodyFillColor)\n                .style('stroke', borderStrokeColor)\n                .style('stroke-width', 1)\n                .style('pointer-events', 'none')\n                .style('opacity', 0.9);\n        }\n\n        /**\n         * Figures out the max length of the tooltip lines\n         * @param  {D3Selection[]} texts    List of svg elements of each line\n         * @return {Number}                 Max size of the lines\n         */\n        function getMaxLengthLine(...texts) {\n            let textSizes = texts.filter(x => !!x)\n                .map(x => x.node().getBBox().width);\n\n            return d3Array.max(textSizes);\n        }\n\n        /**\n         * Calculates the desired position for the tooltip\n         * @param  {Number} mouseX             Current horizontal mouse position\n         * @param  {Number} mouseY             Current vertical mouse position\n         * @param  {Number} parentChartWidth   Parent's chart width\n         * @param  {Number} parentChartHeight  Parent's chart height\n         * @return {Number[]}                  X and Y position\n         * @private\n         */\n        function getTooltipPosition([mouseX, mouseY], [parentChartWidth, parentChartHeight]) {\n            let tooltipX, tooltipY;\n\n            if (hasEnoughHorizontalRoom(parentChartWidth, mouseX)) {\n                tooltipX = mouseX + tooltipOffset.x;\n            } else {\n                tooltipX = mouseX - chartWidth - tooltipOffset.x - margin.right;\n            }\n\n            if (hasEnoughVerticalRoom(parentChartHeight, mouseY)) {\n                tooltipY = mouseY + tooltipOffset.y;\n            } else {\n                tooltipY = mouseY - chartHeight - tooltipOffset.y - margin.bottom;\n            }\n\n            return [tooltipX, tooltipY];\n        }\n\n        /**\n         * Checks if the mouse is over the bounds of the parent chart\n         * @param  {Number}  chartWidth Parent's chart\n         * @param  {Number}  positionX  Mouse position\n         * @return {Boolean}            If the mouse position allows space for the tooltip\n         */\n        function hasEnoughHorizontalRoom(parentChartWidth, positionX) {\n            return (parentChartWidth - margin.left - margin.right - chartWidth) - positionX > 0;\n        }\n\n        /**\n         * Checks if the mouse is over the bounds of the parent chart\n         * @param  {Number}  chartWidth Parent's chart\n         * @param  {Number}  positionX  Mouse position\n         * @return {Boolean}            If the mouse position allows space for the tooltip\n         */\n        function hasEnoughVerticalRoom(parentChartHeight, positionY) {\n            return (parentChartHeight - margin.top - margin.bottom - chartHeight) - positionY > 0;\n        }\n\n        /**\n         * Hides the tooltip\n         * @return {void}\n         */\n        function hideTooltip() {\n            svg.style('display', 'none');\n        }\n\n        /**\n         * Shows the tooltip updating it's content\n         * @param  {Object} dataPoint Data point from the chart\n         * @return {void}\n         */\n        function showTooltip(dataPoint) {\n            updateContent(dataPoint);\n            svg.style('display', 'block');\n        }\n\n        /**\n         * Draws the data entries inside the tooltip for a given topic\n         * @param  {Object} topic Topic to extract data from\n         * @return void\n         */\n        function updateContent(dataPoint = {}){\n            let value = dataPoint[valueLabel] || '',\n                name = dataPoint[nameLabel] || '',\n                lineHeight = textSize * textLineHeight,\n                valueLineHeight = valueTextSize * valueTextLineHeight,\n                defaultDy = '1em',\n                temporalHeight = 0,\n                tooltipValue,\n                tooltipName,\n                tooltipTitle;\n\n            tooltipTextContainer.selectAll('text')\n                .remove();\n\n            if (title) {\n                tooltipTitle = tooltipTextContainer\n                  .append('text')\n                    .classed('mini-tooltip-title', true)\n                    .attr('dy', defaultDy)\n                    .attr('y', 0)\n                    .style('fill', titleFillColor)\n                    .style('font-size', textSize)\n                    .text(title);\n\n                temporalHeight = lineHeight + temporalHeight;\n            }\n\n            if (name) {\n                tooltipName = tooltipTextContainer\n                  .append('text')\n                    .classed('mini-tooltip-name', true)\n                    .attr('dy', defaultDy)\n                    .attr('y', temporalHeight || 0)\n                    .style('fill', nameTextFillColor)\n                    .style('font-size', textSize)\n                    .text(name);\n\n                temporalHeight = lineHeight + temporalHeight;\n            }\n\n            if (value) {\n                tooltipValue = tooltipTextContainer\n                  .append('text')\n                    .classed('mini-tooltip-value', true)\n                    .attr('dy', defaultDy)\n                    .attr('y', temporalHeight || 0)\n                    .style('fill', valueTextFillColor)\n                    .style('font-size', valueTextSize)\n                    .style('font-weight', valueTextWeight)\n                    .text(tooltipValueFormat(value));\n\n                temporalHeight = valueLineHeight + temporalHeight;\n            }\n\n            chartWidth = getMaxLengthLine(tooltipName, tooltipTitle, tooltipValue);\n            chartHeight = temporalHeight;\n        }\n\n        /**\n         * Updates size and position of tooltip depending on the side of the chart we are in\n         * @param  {Object} dataPoint DataPoint of the tooltip\n         * @return void\n         */\n        function updatePositionAndSize(mousePosition, parentChartSize) {\n            let [tooltipX, tooltipY] = getTooltipPosition(mousePosition, parentChartSize);\n\n            svg.transition()\n                .duration(mouseChaseDuration)\n                .ease(ease)\n                .attr('height', chartHeight + margin.top + margin.bottom)\n                .attr('width', chartWidth + margin.left + margin.right)\n                .attr('transform', `translate(${tooltipX},${tooltipY})`);\n\n            tooltipBackground\n                .attr('height', chartHeight + margin.top + margin.bottom)\n                .attr('width', chartWidth + margin.left + margin.right);\n        }\n\n        /**\n         * Updates tooltip content, size and position\n         *\n         * @param  {Object} dataPoint Current datapoint to show info about\n         * @return void\n         */\n        function updateTooltip(dataPoint, position, chartSize) {\n            updateContent(dataPoint);\n            updatePositionAndSize(position, chartSize);\n        }\n\n        /**\n         * Hides the tooltip\n         * @return {Module} Tooltip module to chain calls\n         * @public\n         */\n        exports.hide = function() {\n            hideTooltip();\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets data's nameLabel\n         * @param  {text} _x Desired nameLabel\n         * @return { text | module} nameLabel or Step Chart module to chain calls\n         * @public\n         */\n        exports.nameLabel = function(_x) {\n            if (!arguments.length) {\n                return nameLabel;\n            }\n            nameLabel = _x;\n            return this;\n        };\n\n        /**\n         * Shows the tooltip\n         * @return {Module} Tooltip module to chain calls\n         * @public\n         */\n        exports.show = function() {\n            showTooltip();\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the title of the tooltip\n         * @param  {string} _x Desired title\n         * @return { string | module} Current title or module to chain calls\n         * @public\n         */\n        exports.title = function(_x) {\n            if (!arguments.length) {\n                return title;\n            }\n            title = _x;\n            return this;\n        };\n\n        /**\n         * Updates the position and content of the tooltip\n         * @param  {Object} dataPoint       Datapoint of the hovered element\n         * @param  {Array} mousePosition    Mouse position relative to the parent chart [x, y]\n         * @param  {Array} chartSize        Parent chart size [x, y]\n         * @return {module}                 Current component\n         */\n        exports.update = function(dataPoint, mousePosition, chartSize) {\n            updateTooltip(dataPoint, mousePosition, chartSize);\n\n            return this;\n        };\n\n        return exports;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/mini-tooltip.js","define(function(require){\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Ease = require('d3-ease');\n    const d3Scale = require('d3-scale');\n    const d3Shape = require('d3-shape');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n\n    const {exportChart} = require('./helpers/exportChart');\n    const colorHelper = require('./helpers/colors');\n\n    /**\n     * @typedef SparklineChartData\n     * @type {Object[]}\n     * @property {Number} value        Value of the group (required)\n     * @property {String} name         Name of the group (required)\n     *\n     * @example\n     * [\n     *     {\n     *         value: 1,\n     *         date: '2011-01-06T00:00:00Z'\n     *     },\n     *     {\n     *         value: 2,\n     *         date: '2011-01-07T00:00:00Z'\n     *     }\n     */\n\n    /**\n     * Sparkline Chart reusable API module that allows us\n     * rendering a sparkline configurable chart.\n     *\n     * @module Sparkline\n     * @tutorial sparkline\n     * @requires d3\n     *\n     * @example\n     * var sparkLineChart = sparkline();\n     *\n     * sparkLineChart\n     *     .width(200)\n     *     .height(100);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(sparkLineChart);\n     *\n     */\n    return function module(){\n\n        let margin = {\n                left: 5,\n                right: 5,\n                top: 5,\n                bottom: 5\n            },\n            width = 100,\n            height = 30,\n\n            xScale,\n            yScale,\n\n            areaGradient = ['#F5FDFF', '#F6FEFC'],\n            lineGradient = colorHelper.colorGradients.greenBlueGradient,\n\n            svg,\n            chartWidth, chartHeight,\n            data,\n\n            hasArea = true,\n            isAnimated = false,\n            clipDuration = 3000,\n            ease = d3Ease.easeQuadInOut,\n\n            line,\n\n            markerSize = 1.5,\n\n            valueLabel = 'value',\n            dateLabel = 'date',\n\n            // getters\n            getDate = ({date}) => date,\n            getValue = ({value}) => value;\n\n        /**\n         * This function creates the graph using the selection and data provided\n         *\n         * @param {D3Selection} _selection A d3 selection that represents\n         * the container(s) where the chart(s) will be rendered\n         * @param {SparklineChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data){\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(_data);\n\n                buildScales();\n                buildSVG(this);\n                createGradients();\n                createMaskingClip();\n                drawLine();\n                drawArea();\n                drawEndMarker();\n            });\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * NOTE: The order of drawing of this group elements is really important,\n         * as everything else will be drawn on top of them\n         * @private\n         */\n        function buildContainerGroups(){\n            let container = svg\n              .append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${margin.left},${margin.top})`);\n\n            container\n                .append('g').classed('chart-group', true);\n            container\n                .append('g').classed('metadata-group', true);\n        }\n\n        /**\n         * Creates the x, y and color scales of the chart\n         * @private\n         */\n        function buildScales(){\n            xScale = d3Scale.scaleLinear()\n                .domain(d3Array.extent(data, getDate))\n                .range([0, chartWidth]);\n\n            yScale = d3Scale.scaleLinear()\n                .domain(d3Array.extent(data, getValue))\n                .range([chartHeight, 0]);\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container){\n            if (!svg) {\n                svg = d3Selection.select(container)\n                    .append('svg')\n                    .classed('britechart sparkline', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Cleaning data adding the proper format\n         * @param  {array} data Data\n         * @private\n         */\n        function cleanData(data) {\n            return data.map((d) => {\n                d.date = new Date(d[dateLabel]);\n                d.value = +d[valueLabel];\n\n                return d;\n            });\n        }\n\n        /**\n         * Creates the gradient on the area below the line\n         * @return {void}\n         */\n        function createGradients() {\n            let metadataGroup = svg.select('.metadata-group');\n\n            metadataGroup.append('linearGradient')\n                .attr('id', 'sparkline-area-gradient')\n                .attr('gradientUnits', 'userSpaceOnUse')\n                .attr('x1', 0)\n                .attr('x2', xScale(data[data.length - 1].date))\n                .attr('y1', 0)\n                .attr('y2', 0)\n              .selectAll('stop')\n                .data([\n                    {offset: '0%', color: areaGradient[0]},\n                    {offset: '100%', color: areaGradient[1]}\n                ])\n              .enter().append('stop')\n                .attr('offset', ({offset}) => offset)\n                .attr('stop-color', ({color}) => color);\n\n            metadataGroup.append('linearGradient')\n                .attr('id', 'sparkline-line-gradient')\n                .attr('gradientUnits', 'userSpaceOnUse')\n                .attr('x1', 0)\n                .attr('x2', xScale(data[data.length - 1].date))\n                .attr('y1', 0)\n                .attr('y2', 0)\n              .selectAll('stop')\n                .data([\n                    {offset: '0%', color: lineGradient[0]},\n                    {offset: '100%', color: lineGradient[1]}\n                ])\n              .enter().append('stop')\n                .attr('offset', ({offset}) => offset)\n                .attr('stop-color', ({color}) => color);\n        }\n\n        /**\n         * Creates a masking clip that would help us fake an animation if the\n         * proper flag is true\n         *\n         * @return {void}\n         */\n        function createMaskingClip() {\n            if (isAnimated) {\n                svg.select('.metadata-group')\n                    .append('clipPath')\n                    .attr('id', 'maskingClip')\n                  .append('rect')\n                    .attr('width', 0)\n                    .attr('height', height);\n\n                d3Selection.select('#maskingClip rect')\n                    .transition()\n                    .ease(ease)\n                    .duration(clipDuration)\n                    .attr('width', width);\n            }\n        }\n\n        /**\n         * Draws the area that will be placed below the line\n         * @private\n         */\n        function drawArea(){\n            let area = d3Shape.area()\n                .x(({date}) => xScale(date))\n                .y0(() => yScale(0))\n                .y1(({value}) => yScale(value))\n                .curve(d3Shape.curveBasis);\n\n            svg.select('.chart-group')\n              .append('path')\n                .datum(data)\n                .attr('class', 'sparkline-area')\n                .attr('d', area)\n                .attr('clip-path', 'url(#maskingClip)');\n        }\n\n        /**\n         * Draws the line element within the chart group\n         * @private\n         */\n        function drawLine(){\n            line = d3Shape.line()\n                .curve(d3Shape.curveBasis)\n                .x(({date}) => xScale(date))\n                .y(({value}) => yScale(value));\n\n            svg.select('.chart-group')\n              .append('path')\n                .datum(data)\n                .attr('class', 'line')\n                .attr('d', line)\n                .attr('clip-path', 'url(#maskingClip)');\n        }\n\n        /**\n         * Draws a marker at the end of the sparkline\n         */\n        function drawEndMarker(){\n            svg.selectAll('.chart-group')\n              .append('circle')\n                .attr('class', 'sparkline-circle')\n                .attr('cx', xScale(data[data.length - 1].date))\n                .attr('cy', yScale(data[data.length - 1].value))\n                .attr('r', markerSize);\n        }\n\n        // Accessors\n        /**\n         * Gets or Sets the dateLabel of the chart\n         * @param  {Number} _x Desired dateLabel for the graph\n         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n         * @public\n         */\n        exports.dateLabel = function(_x) {\n            if (!arguments.length) {\n                return dateLabel;\n            }\n            dateLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the duration of the animation\n         * @param  {Number} _x Desired animation duration for the graph\n         * @return { dateLabel | module} Current animation duration or Chart module to chain calls\n         * @public\n         */\n        exports.duration = function(_x) {\n            if (!arguments.length) {\n                return clipDuration;\n            }\n            clipDuration = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the areaGradient of the chart\n         * @param  {String[]} _x Desired areaGradient for the graph\n         * @return { areaGradient | module} Current areaGradient or Chart module to chain calls\n         * @public\n         */\n        exports.areaGradient = function(_x) {\n            if (!arguments.length) {\n                return areaGradient;\n            }\n            areaGradient = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the lineGradient of the chart\n         * @param  {String[]} _x Desired lineGradient for the graph\n         * @return { lineGradient | module} Current lineGradient or Chart module to chain calls\n         * @public\n         */\n        exports.lineGradient = function(_x) {\n            if (!arguments.length) {\n                return lineGradient;\n            }\n            lineGradient = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { height | module} Current height or Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n         * By default this is 'false'\n         *\n         * @param  {Boolean} _x Desired animation flag\n         * @return { isAnimated | module} Current isAnimated flag or Chart module\n         * @public\n         */\n        exports.isAnimated = function(_x) {\n            if (!arguments.length) {\n                return isAnimated;\n            }\n            isAnimated = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {Object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { width | module} Current width or Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabel of the chart\n         * @param  {Number} _x Desired valueLabel for the graph\n         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabel = function(_x) {\n            if (!arguments.length) {\n                return valueLabel;\n            }\n            valueLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename, title) {\n            exportChart.call(exports, svg, filename, title);\n        };\n\n        return exports;\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/sparkline.js","define(function(require){\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Axis = require('d3-axis');\n    const d3Collection = require('d3-collection');\n    const d3Dispatch = require('d3-dispatch');\n    const d3Ease = require('d3-ease');\n    const d3Scale = require('d3-scale');\n    const d3Shape = require('d3-shape');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n    const d3TimeFormat = require('d3-time-format');\n\n    const assign = require('lodash.assign');\n    const {exportChart} = require('./helpers/exportChart');\n    const colorHelper = require('./helpers/colors');\n    const {\n        getXAxisSettings,\n        getLocaleDateFormatter\n    } = require('./helpers/timeAxis');\n    const {isInteger} = require('./helpers/common');\n    const {axisTimeCombinations} = require('./helpers/constants');\n\n    const {\n        formatIntegerValue,\n        formatDecimalValue\n    } = require('./helpers/formatHelpers');\n\n    const uniq = (arrArg) => arrArg.filter((elem, pos, arr) => arr.indexOf(elem) === pos);\n\n\n    /**\n     * @typdef D3Layout\n     * @type function\n     */\n\n    /**\n     * @typedef areaChartData\n     * @type {Object}\n     * @property {Object[]} data       All data entries\n     * @property {String} date         Date of the entry\n     * @property {String} name         Name of the entry\n     * @property {Number} value        Value of the entry\n     *\n     * @example\n     * {\n     *     'data': [\n     *         {\n     *             \"date\": \"2011-01-05T00:00:00Z\",\n     *             \"name\": \"Direct\",\n     *             \"value\": 0\n     *         }\n     *     ]\n     * }\n     */\n\n    /**\n     * Stacked Area Chart reusable API module that allows us\n     * rendering a multi area and configurable chart.\n     *\n     * @module Stacked-area\n     * @tutorial stacked-area\n     * @requires d3-array, d3-axis, d3-collection, d3-ease, d3-scale, d3-shape, d3-selection, d3-time, d3-time-format\n     *\n     * @example\n     * let stackedArea = stackedArea();\n     *\n     * stackedArea\n     *     .width(containerWidth);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset.data)\n     *     .call(stackedArea);\n     *\n     */\n\n    return function module() {\n\n        let margin = {\n                top: 70,\n                right: 30,\n                bottom: 60,\n                left: 70\n            },\n            width = 960,\n            height = 500,\n\n            xScale, xAxis, xMonthAxis,\n            yScale, yAxis,\n\n            aspectRatio = null,\n\n            monthAxisPadding = 30,\n            verticalTicks = 5,\n            yTickTextYOffset = -8,\n            yTickTextXOffset = -20,\n            tickPadding = 5,\n\n            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\n            areaOpacity = 0.64,\n            categoryColorMap,\n            order,\n\n            forceAxisSettings = null,\n            forcedXTicks = null,\n            forcedXFormat = null,\n            locale,\n\n            baseLine,\n\n            layers,\n            layersInitial,\n            area,\n\n            // Area Animation\n            maxAreaNumber = 8,\n            areaAnimationDelayStep = 20,\n            areaAnimationDelays = d3Array.range(areaAnimationDelayStep, maxAreaNumber* areaAnimationDelayStep, areaAnimationDelayStep),\n\n            overlay,\n\n            verticalMarkerContainer,\n            verticalMarker,\n            epsilon,\n\n            dataPoints            = {},\n            pointsSize            = 1.5,\n            pointsColor           = '#c0c6cc',\n            pointsBorderColor     = '#ffffff',\n\n            isAnimated = false,\n            ease = d3Ease.easeQuadInOut,\n            areaAnimationDuration = 1000,\n\n            svg,\n            chartWidth, chartHeight,\n            data,\n            dataByDate,\n            dataByDateFormatted,\n            dataByDateZeroed,\n\n            verticalGridLines,\n            horizontalGridLines,\n            grid = null,\n\n            tooltipThreshold = 480,\n\n            xAxisPadding = {\n                top: 0,\n                left: 15,\n                bottom: 0,\n                right: 0\n            },\n\n            dateLabel = 'date',\n            valueLabel = 'value',\n            keyLabel = 'name',\n\n            // getters\n            getName = ({name}) => name,\n            getDate = ({date}) => date,\n\n            // events\n            dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\n       /**\n         * This function creates the graph using the selection and data provided\n         * @param {D3Selection} _selection A d3 selection that represents\n         * the container(s) where the chart(s) will be rendered\n         * @param {areaChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data) {\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(_data);\n                dataByDate = getDataByDate(data);\n\n                buildLayers();\n                buildScales();\n                buildSVG(this);\n                buildAxis();\n                drawAxis();\n                drawStackedAreas();\n\n                if(shouldShowTooltip()) {\n                    drawHoverOverlay();\n                    drawVerticalMarker();\n                    addMouseEvents();\n                }\n            });\n        }\n\n        /**\n         * Adds events to the container group if the environment is not mobile\n         * Adding: mouseover, mouseout and mousemove\n         */\n        function addMouseEvents() {\n            svg\n                .on('mouseover', handleMouseOver)\n                .on('mouseout', handleMouseOut)\n                .on('mousemove', handleMouseMove);\n        }\n\n        /**\n         * Formats the value depending on its characteristics\n         * @param  {Number} value Value to format\n         * @return {Number}       Formatted value\n         */\n        function getFormattedValue(value) {\n            let format;\n\n            if (isInteger(value)) {\n                format = formatIntegerValue;\n            } else {\n                format = formatDecimalValue;\n            }\n\n            return format(value);\n        }\n\n        /**\n         * Creates the d3 x and y axis, setting orientations\n         * @private\n         */\n        function buildAxis() {\n            let dataSpan = yScale.domain()[1] - yScale.domain()[0];\n            let yTickNumber = dataSpan < verticalTicks - 1 ? dataSpan : verticalTicks;\n            let minor, major;\n\n            if (forceAxisSettings === 'custom' && typeof forcedXFormat === 'string') {\n                minor = {\n                    tick: forcedXTicks,\n                    format:  d3TimeFormat.timeFormat(forcedXFormat)\n                };\n                major = null;\n            } else {\n                ({minor, major} = getXAxisSettings(dataByDate, width, forceAxisSettings, locale));\n\n                xMonthAxis = d3Axis.axisBottom(xScale)\n                    .ticks(major.tick)\n                    .tickSize(0, 0)\n                    .tickFormat(major.format);\n            }\n\n            xAxis = d3Axis.axisBottom(xScale)\n                .ticks(minor.tick)\n                .tickSize(10, 0)\n                .tickPadding(tickPadding)\n                .tickFormat(minor.format);\n\n\n            yAxis = d3Axis.axisRight(yScale)\n                .ticks(yTickNumber)\n                .tickSize([0])\n                .tickPadding(tickPadding)\n                .tickFormat(getFormattedValue);\n\n            drawGridLines(minor.tick, yTickNumber);\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * NOTE: The order of drawing of this group elements is really important,\n         * as everything else will be drawn on top of them\n         * @private\n         */\n        function buildContainerGroups() {\n            let container = svg\n              .append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${margin.left},${margin.top})`);\n\n            container\n              .append('g').classed('x-axis-group', true)\n              .append('g').classed('x axis', true);\n            container.selectAll('.x-axis-group')\n              .append('g').classed('month-axis', true);\n            container\n              .append('g').classed('y-axis-group axis', true);\n            container\n              .append('g').classed('grid-lines-group', true);\n            container\n              .append('g').classed('chart-group', true);\n            container\n              .append('g').classed('metadata-group', true);\n        }\n\n        /**\n         * Builds the stacked layers layout\n         * @return {D3Layout} Layout for drawing the chart\n         * @private\n         */\n        function buildLayers() {\n            dataByDateFormatted = dataByDate\n                .map(d => assign({}, d, d.values))\n                .map(d => {\n                    Object.keys(d).forEach(k => {\n                        const entry = d[k];\n\n                        if (entry && entry.name) {\n                            d[entry.name] = entry.value;\n                        }\n                    });\n\n                    return assign({}, d, {\n                        date: new Date(d['key'])\n                    });\n                });\n\n            dataByDateZeroed = dataByDate\n                .map(d => assign({}, d, d.values))\n                .map(d => {\n                    Object.keys(d).forEach(k => {\n                        const entry = d[k];\n\n                        if (entry && entry.name) {\n                            d[entry.name] = 0;\n                        }\n                    });\n\n                    return assign({}, d, {\n                        date: new Date(d['key'])\n                    });\n                });\n\n            let initialTotalsObject = uniq(data.map(({name}) => name))\n                                        .reduce((memo, key) => (\n                                            assign({}, memo, {[key]: 0})\n                                        ), {});\n\n            let totals = data.reduce((memo, item) => (\n                assign({}, memo, {[item.name]: memo[item.name]  += item.value})\n            ), initialTotalsObject);\n\n            order = formatOrder(totals);\n\n            let stack3 = d3Shape.stack()\n                .keys(order)\n                .order(d3Shape.stackOrderNone)\n                .offset(d3Shape.stackOffsetNone);\n\n            layersInitial = stack3(dataByDateZeroed);\n            layers = stack3(dataByDateFormatted);\n        }\n\n        /**\n         * Takes an object with all topics as keys and their aggregate totals as values,\n         * sorts them into a list by descending total value and\n         * moves \"Other\" to the end\n         * @param  {Object} totals  Keys of all the topics and their corresponding totals\n         * @return {Array}          List of topic names in aggregate order\n         */\n        function formatOrder(totals) {\n            let order = Object.keys(totals)\n                .sort((a, b) => {\n                    if (totals[a] > totals[b]) return -1;\n                    if (totals[a] === totals[b]) return 0;\n                    return 1;\n                });\n\n            let otherIndex = order.indexOf('Other');\n\n            if (otherIndex >= 0) {\n                let other = order.splice(otherIndex, 1);\n\n                order = order.concat(other);\n            }\n\n            return order;\n        }\n\n        /**\n         * Creates the x, y and color scales of the chart\n         * @private\n         */\n        function buildScales() {\n            xScale = d3Scale.scaleTime()\n                .domain(d3Array.extent(dataByDate, ({date}) => date))\n                .rangeRound([0, chartWidth]);\n\n            yScale = d3Scale.scaleLinear()\n                .domain([0, getMaxValueByDate()])\n                .rangeRound([chartHeight, 0])\n                .nice();\n\n            categoryColorMap =  order.reduce((memo, topic, index) => (\n                assign({}, memo, {[topic]: colorSchema[index]})\n            ), {});\n        }\n\n        /**\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container)\n                    .append('svg')\n                    .classed('britechart stacked-area', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Parses dates and values into JS Date objects and numbers\n         * @param  {obj} data Raw data from JSON file\n         * @return {obj}      Parsed data with values and dates\n         */\n        function cleanData(data) {\n            return data.map((d) => {\n                d.date = new Date(d[dateLabel]),\n                d.value = +d[valueLabel]\n\n                return d;\n            });\n        }\n\n        /**\n         * Draws the x and y axis on the svg object within their\n         * respective groups\n         * @private\n         */\n        function drawAxis() {\n            svg.select('.x-axis-group .axis.x')\n                .attr('transform', `translate( 0, ${chartHeight} )`)\n                .call(xAxis);\n\n            if (forceAxisSettings !== 'custom') {\n                svg.select('.x-axis-group .month-axis')\n                    .attr('transform', `translate(0, ${(chartHeight + monthAxisPadding)})`)\n                    .call(xMonthAxis);\n            }\n\n            svg.select('.y-axis-group.axis')\n                .attr('transform', `translate( ${-xAxisPadding.left}, 0)`)\n                .call(yAxis)\n                .call(adjustYTickLabels);\n\n            // Moving the YAxis tick labels to the right side\n            // d3Selection.selectAll('.y-axis-group .tick text')\n            //     .attr('transform', `translate( ${-chartWidth - yTickTextXOffset}, ${yTickTextYOffset})` );\n        }\n\n        /**\n         * Adjusts the position of the y axis' ticks\n         * @param  {D3Selection} selection Y axis group\n         * @return void\n         */\n        function adjustYTickLabels(selection) {\n            selection.selectAll('.tick text')\n                .attr('transform', `translate(${yTickTextXOffset}, ${yTickTextYOffset})`);\n        }\n\n        /**\n         * Creates SVG dot elements for each data entry and draws them\n         * TODO: Plug\n         */\n        function drawDataReferencePoints() {\n            // Creates Dots on Data points\n            var points = svg.select('.chart-group').selectAll('.dots')\n                .data(layers)\n              .enter().append('g')\n                .attr('class', 'dots')\n                .attr('d', ({values}) => area(values))\n                .attr('clip-path', 'url(#clip)');\n\n            // Processes the points\n            // TODO: Optimize this code\n            points.selectAll('.dot')\n                .data(({values}, index) => values.map((point) => ({index, point})))\n                .enter()\n                .append('circle')\n                .attr('class','dot')\n                .attr('r', () => pointsSize)\n                .attr('fill', () => pointsColor)\n                .attr('stroke-width', '0')\n                .attr('stroke', pointsBorderColor)\n                .attr('transform', function(d) {\n                    let {point} = d;\n                    let key = xScale(point.date);\n\n                    dataPoints[key] = dataPoints[key] || [];\n                    dataPoints[key].push(d);\n\n                    let {date, y, y0} = point;\n                    return `translate( ${xScale(date)}, ${yScale(y + y0)} )`;\n                });\n        }\n\n        /**\n         * Draws grid lines on the background of the chart\n         * @return void\n         */\n        function drawGridLines(xTicks, yTicks) {\n            if (grid === 'horizontal' || grid === 'full') {\n                horizontalGridLines = svg.select('.grid-lines-group')\n                    .selectAll('line.horizontal-grid-line')\n                    .data(yScale.ticks(yTicks))\n                    .enter()\n                        .append('line')\n                        .attr('class', 'horizontal-grid-line')\n                        .attr('x1', (-xAxisPadding.left - 30))\n                        .attr('x2', chartWidth)\n                        .attr('y1', (d) => yScale(d))\n                        .attr('y2', (d) => yScale(d));\n            }\n\n            if (grid === 'vertical' || grid === 'full') {\n                verticalGridLines = svg.select('.grid-lines-group')\n                    .selectAll('line.vertical-grid-line')\n                    .data(xScale.ticks(xTicks))\n                    .enter()\n                        .append('line')\n                        .attr('class', 'vertical-grid-line')\n                        .attr('y1', 0)\n                        .attr('y2', chartHeight)\n                        .attr('x1', (d) => xScale(d))\n                        .attr('x2', (d) => xScale(d));\n            }\n\n            //draw a horizontal line to extend x-axis till the edges\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-x-line')\n                .data([0])\n                .enter()\n              .append('line')\n                .attr('class', 'extended-x-line')\n                .attr('x1', (-xAxisPadding.left - 30))\n                .attr('x2', chartWidth)\n                .attr('y1', height - margin.bottom - margin.top)\n                .attr('y2', height - margin.bottom - margin.top);\n        }\n\n        /**\n         * Draws an overlay element over the graph\n         * @private\n         */\n        function drawHoverOverlay() {\n            overlay = svg.select('.metadata-group')\n                .append('rect')\n                .attr('class', 'overlay')\n                .attr('y1', 0)\n                .attr('y2', chartHeight)\n                .attr('height', chartHeight)\n                .attr('width', chartWidth)\n                .attr('fill', 'rgba(0,0,0,0)')\n                .style('display', 'none');\n        }\n\n        /**\n         * Draws the different areas into the chart-group element\n         * @private\n         */\n        function drawStackedAreas() {\n            let series;\n\n            area = d3Shape.area()\n                .curve(d3Shape.curveMonotoneX)\n                .x( ({data}) => xScale(data.date) )\n                .y0( (d) => yScale(d[0]) )\n                .y1( (d) => yScale(d[1]) );\n\n            if (isAnimated) {\n                series = svg.select('.chart-group').selectAll('.layer')\n                    .data(layersInitial)\n                    .enter()\n                  .append('g')\n                    .classed('layer-container', true);\n\n                series\n                  .append('path')\n                    .attr('class', 'layer')\n                    .attr('d', area)\n                    .style('fill', ({key}) => categoryColorMap[key]);\n\n                // Update\n                svg.select('.chart-group').selectAll('.layer')\n                    .data(layers)\n                    .transition()\n                    .delay( (_, i) => areaAnimationDelays[i])\n                    .duration(areaAnimationDuration)\n                    .ease(ease)\n                    .attr('d', area)\n                    .style('opacity', areaOpacity)\n                    .style('fill', ({key}) => categoryColorMap[key]);\n            } else {\n                series = svg.select('.chart-group').selectAll('.layer')\n                    .data(layers)\n                    .enter()\n                  .append('g')\n                    .classed('layer-container', true);\n\n                series\n                  .append('path')\n                    .attr('class', 'layer')\n                    .attr('d', area)\n                    .style('fill', ({key}) => categoryColorMap[key]);\n\n                // Update\n                series\n                    .attr('d', area)\n                    .style('opacity', areaOpacity)\n                    .style('fill', ({key}) => categoryColorMap[key]);\n            }\n\n            // Exit\n            series.exit()\n                .transition()\n                .style('opacity', 0)\n                .remove();\n        }\n\n        /**\n         * Creates the vertical marker\n         * @return void\n         */\n        function drawVerticalMarker() {\n            verticalMarkerContainer = svg.select('.metadata-group')\n                .append('g')\n                .attr('class', 'vertical-marker-container')\n                .attr('transform', 'translate(9999, 0)');\n\n            verticalMarker = verticalMarkerContainer.selectAll('path')\n                .data([{\n                    x1: 0,\n                    y1: 0,\n                    x2: 0,\n                    y2: 0\n                }])\n                .enter()\n              .append('line')\n                .classed('vertical-marker', true)\n                .attr('x1', 0)\n                .attr('y1', chartHeight)\n                .attr('x2', 0)\n                .attr('y2', 0);\n        }\n\n        /**\n         * Removes all the datapoints highlighter circles added to the marker container\n         * @return void\n         */\n        function eraseDataPointHighlights() {\n            verticalMarkerContainer.selectAll('.circle-container').remove();\n        }\n\n        /**\n         * Orders the data by date for consumption on the chart tooltip\n         * @param  {areaChartData} data    Chart data\n         * @return {Object[]}               Chart data ordered by date\n         * @private\n         */\n        function getDataByDate(data) {\n            return d3Collection.nest()\n                                .key(getDate)\n                                .entries(\n                                    data.sort((a, b) => a.date - b.date)\n                                )\n                                .map(d => {\n                                    return assign({}, d, {\n                                        date: new Date(d.key)\n                                    });\n                                });\n\n            // let b =  d3Collection.nest()\n            //                     .key(getDate).sortKeys(d3Array.ascending)\n            //                     .entries(data);\n        }\n\n        /**\n         * Computes the maximum sum of values for any date\n         *\n         * @return {Number} Max value\n         */\n        function getMaxValueByDate() {\n            let keys = uniq(data.map(o => o.name));\n            let maxValueByDate = d3Array.max(dataByDateFormatted, function(d){\n                let vals = keys.map((key) => d[key]);\n\n                return d3Array.sum(vals);\n            });\n\n            return maxValueByDate;\n        }\n\n        /**\n         * Extract X position on the chart from a given mouse event\n         * @param  {obj} event D3 mouse event\n         * @return {Number}       Position on the x axis of the mouse\n         * @private\n         */\n        function getMouseXPosition(event) {\n            return d3Selection.mouse(event)[0];\n        }\n\n        /**\n         * Finds out the data entry that is closer to the given position on pixels\n         * @param  {Number} mouseX X position of the mouse\n         * @return {obj}        Data entry that is closer to that x axis position\n         */\n        function getNearestDataPoint(mouseX) {\n            let points = dataByDate.filter(({date}) => Math.abs(xScale(date) - mouseX) <= epsilon);\n\n            if (points.length) {\n                return points[0];\n            }\n        }\n\n        /**\n         * Epsilon is the value given to the number representing half of the distance in\n         * pixels between two date data points\n         * @return {Number} half distance between any two points\n         */\n        function setEpsilon() {\n            let dates = dataByDate.map(({date}) => date);\n\n            epsilon = (xScale(dates[1]) - xScale(dates[0])) / 2;\n        }\n\n        /**\n         * MouseMove handler, calculates the nearest dataPoint to the cursor\n         * and updates metadata related to it\n         * @private\n         */\n        function handleMouseMove() {\n            epsilon || setEpsilon();\n\n            let dataPoint = getNearestDataPoint(getMouseXPosition(this) - margin.left),\n                dataPointXPosition;\n\n            if(dataPoint) {\n                dataPointXPosition = xScale(new Date( dataPoint.key ));\n                // Move verticalMarker to that datapoint\n                moveVerticalMarker(dataPointXPosition);\n                // Add data points highlighting\n                highlightDataPoints(dataPoint);\n                // Emit event with xPosition for tooltip or similar feature\n                dispatcher.call('customMouseMove', this, dataPoint, categoryColorMap, dataPointXPosition);\n            }\n        }\n\n        /**\n         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n         * It also resets the container of the vertical marker\n         * @private\n         */\n        function handleMouseOut(data) {\n            overlay.style('display', 'none');\n            verticalMarker.classed('bc-is-active', false);\n            verticalMarkerContainer.attr('transform', 'translate(9999, 0)');\n\n            dispatcher.call('customMouseOut', this, data);\n        }\n\n        /**\n         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n         * @private\n         */\n        function handleMouseOver(data) {\n            overlay.style('display', 'block');\n            verticalMarker.classed('bc-is-active', true);\n\n            dispatcher.call('customMouseOver', this, data);\n        }\n\n        /**\n         * Creates coloured circles marking where the exact data y value is for a given data point\n         * @param  {obj} dataPoint Data point to extract info from\n         * @private\n         */\n        function highlightDataPoints({values}) {\n            let accumulator = 0;\n\n            eraseDataPointHighlights();\n\n            // ensure order stays constant\n            values = values\n                        .filter(v => !!v)\n                        .sort((a,b) => order.indexOf(a.name) > order.indexOf(b.name))\n\n            values.forEach(({name}, index) => {\n                let marker = verticalMarkerContainer\n                                .append('g')\n                                .classed('circle-container', true),\n                    circleSize = 12;\n\n                accumulator = accumulator + values[index][valueLabel];\n\n                marker.append('circle')\n                    .classed('data-point-highlighter', true)\n                    .attr('cx', circleSize)\n                    .attr('cy', 0)\n                    .attr('r', 5)\n                    .style('stroke-width', 2)\n                    .style('stroke', categoryColorMap[name]);\n\n                marker.attr('transform', `translate( ${(- circleSize)}, ${(yScale(accumulator))} )` );\n            });\n        }\n\n        /**\n         * Helper method to update the x position of the vertical marker\n         * @param  {obj} dataPoint Data entry to extract info\n         * @return void\n         */\n        function moveVerticalMarker(verticalMarkerXPosition) {\n            verticalMarkerContainer.attr('transform', `translate(${verticalMarkerXPosition},0)`);\n        }\n\n        /**\n         * Determines if we should add the tooltip related logic depending on the\n         * size of the chart and the tooltipThreshold variable value\n         * @return {boolean} Should we build the tooltip?\n         * @private\n         */\n        function shouldShowTooltip() {\n            return width > tooltipThreshold;\n        }\n\n        // Accessors\n\n        /**\n         * Gets or Sets the opacity of the stacked areas in the chart (all of them will have the same opacity)\n         * @param  {Object} _x                  Opacity to get/set\n         * @return { opacity | module}          Current opacity or Area Chart module to chain calls\n         * @public\n         */\n        exports.areaOpacity = function(_x) {\n            if (!arguments.length) {\n                return areaOpacity;\n            }\n            areaOpacity = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the aspect ratio of the chart\n         * @param  {Number} _x Desired aspect ratio for the graph\n         * @return { (Number | Module) } Current aspect ratio or Area Chart module to chain calls\n         * @public\n         */\n        exports.aspectRatio = function(_x) {\n            if (!arguments.length) {\n                return aspectRatio;\n            }\n            aspectRatio = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the colorSchema of the chart\n         * @param  {String[]} _x Desired colorSchema for the graph\n         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n         * @public\n         */\n        exports.colorSchema = function(_x) {\n            if (!arguments.length) {\n                return colorSchema;\n            }\n            colorSchema = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the dateLabel of the chart\n         * @param  {Number} _x Desired dateLabel for the graph\n         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n         * @public\n         */\n        exports.dateLabel = function(_x) {\n            if (!arguments.length) {\n                return dateLabel;\n            }\n            dateLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x axis grouping\n         * @param  {String} _x Desired format\n         * @return { (String|Module) }    Current format or module to chain calls\n         * @example\n         *     area.forceAxisFormat(area.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.forceAxisFormat = function(_x) {\n            if (!arguments.length) {\n              return forceAxisSettings;\n            }\n            forceAxisSettings = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x format\n         * It requires a `forceAxisFormat` of 'custom' in order to work.\n         * NOTE: localization not supported\n         * @param  {String} _x              Desired format for x axis\n         * @return { (String|Module) }      Current format or module to chain calls\n         */\n        exports.forcedXFormat = function(_x) {\n            if (!arguments.length) {\n              return forcedXFormat;\n            }\n            forcedXFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x ticks. It requires a `forceAxisFormat` of 'custom' in order to work.\n         * NOTE: This value needs to be a multiple of 2, 5 or 10. They won't always work as expected, as D3 decides at the end\n         * how many and where the ticks will appear.\n         *\n         * @param  {Number} _x              Desired number of x axis ticks (multiple of 2, 5 or 10)\n         * @return { (Number|Module) }      Current number or ticks or module to chain calls\n         */\n        exports.forcedXTicks = function(_x) {\n            if (!arguments.length) {\n              return forcedXTicks;\n            }\n            forcedXTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the grid mode.\n         *\n         * @param  {String} _x Desired mode for the grid ('vertical'|'horizontal'|'full')\n         * @return { String | module} Current mode of the grid or Area Chart module to chain calls\n         * @public\n         */\n        exports.grid = function(_x) {\n            if (!arguments.length) {\n                return grid;\n            }\n            grid = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { height | module} Current height or Area Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            if (aspectRatio) {\n                width = Math.ceil(_x / aspectRatio);\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n         * By default this is 'false'\n         *\n         * @param  {Boolean} _x Desired animation flag\n         * @return { isAnimated | module} Current isAnimated flag or Chart module\n         * @public\n         */\n        exports.isAnimated = function(_x) {\n            if (!arguments.length) {\n                return isAnimated;\n            }\n            isAnimated = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the keyLabel of the chart\n         * @param  {Number} _x Desired keyLabel for the graph\n         * @return { keyLabel | module} Current keyLabel or Chart module to chain calls\n         * @public\n         */\n        exports.keyLabel = function(_x) {\n            if (!arguments.length) {\n                return keyLabel;\n            }\n            keyLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {Object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Area Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the minimum width of the graph in order to show the tooltip\n         * NOTE: This could also depend on the aspect ratio\n         *\n         * @param  {Object} _x Margin object to get/set\n         * @return { tooltipThreshold | module} Current tooltipThreshold or Area Chart module to chain calls\n         * @public\n         */\n        exports.tooltipThreshold = function(_x) {\n            if (!arguments.length) {\n                return tooltipThreshold;\n            }\n            tooltipThreshold = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabel of the chart\n         * @param  {Number} _x Desired valueLabel for the graph\n         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabel = function(_x) {\n            if (!arguments.length) {\n                return valueLabel;\n            }\n            valueLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the number of verticalTicks of the yAxis on the chart\n         * @param  {Number} _x Desired verticalTicks\n         * @return { verticalTicks | module} Current verticalTicks or Chart module to chain calls\n         * @public\n         */\n        exports.verticalTicks = function(_x) {\n            if (!arguments.length) {\n                return verticalTicks;\n            }\n            verticalTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { width | module} Current width or Area Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            if (aspectRatio) {\n                height = Math.ceil(_x * aspectRatio);\n            }\n            width = _x;\n\n            return this;\n        };\n\n        /**\n         * Pass language tag for the tooltip to localize the date.\n         * Feature uses Intl.DateTimeFormat, for compatability and support, refer to\n         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n         * @param  {String} _x  must be a language tag (BCP 47) like 'en-US' or 'fr-FR'\n         * @return { (String|Module) }    Current locale or module to chain calls\n         */\n        exports.locale = function(_x) {\n            if (!arguments.length) {\n                return locale;\n            }\n            locale = _x;\n\n            return this;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename, title) {\n            exportChart.call(exports, svg, filename, title);\n        };\n\n        /**\n         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n         * We are going to expose this events:\n         * customMouseOver, customMouseMove and customMouseOut\n         *\n         * @return {module} Bar Chart\n         * @public\n         */\n        exports.on = function() {\n            let value = dispatcher.on.apply(dispatcher, arguments);\n\n            return value === dispatcher ? exports : value;\n        };\n\n        /**\n         * Exposes the constants to be used to force the x axis to respect a certain granularity\n         * current options: MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR\n         * @example\n         *     area.forceAxisFormat(area.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.axisTimeCombinations = axisTimeCombinations;\n\n        return exports;\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/stacked-area.js","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max;\n\n/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\nvar nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash.assign/index.js\n// module id = 35\n// module chunks = 0","define(function (require) {\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Axis = require('d3-axis');\n    const d3Color = require('d3-color');\n    const d3Collection = require('d3-collection');\n    const d3Dispatch = require('d3-dispatch');\n    const d3Ease = require('d3-ease');\n    const d3Interpolate = require('d3-interpolate');\n    const d3Scale = require('d3-scale');\n    const d3Selection = require('d3-selection');\n    const assign = require('lodash.assign');\n\n    const { exportChart } = require('./helpers/exportChart');\n    const colorHelper = require('./helpers/colors');\n    const NUMBER_FORMAT = ',f';\n    const uniq = (arrArg) => arrArg.filter((elem, pos, arr) => arr.indexOf(elem) == pos);\n\n\n    /**\n     * @typdef D3Layout\n     * @type function\n     */\n\n    /**\n     * @typedef GroupedBarChartData\n     * @type {Object}\n     * @property {Object[]} data       All data entries\n     * @property {String} name         Name of the entry\n     * @property {String} group        group of the entry\n     * @property {Number} value        Value of the entry\n     *\n     * @example\n     * {\n     *     'data': [\n     *         {\n     *             \"name\": \"2011-01\",\n     *             \"group\": \"Direct\",\n     *             \"value\": 0\n     *         }\n     *     ]\n     * }\n     */\n\n    /**\n     * Grouped Bar Chart reusable API module that allows us\n     * rendering a multi grouped bar and configurable chart.\n     *\n     * @module Grouped-bar\n     * @tutorial grouped-bar\n     * @requires d3-array, d3-axis, d3-color, d3-collection, d3-dispatch, d3-ease,\n     *  d3-interpolate, d3-scale, d3-selection, lodash assign\n     *\n     * @example\n     * let groupedBar = GroupedBar();\n     *\n     * groupedBar\n     *     .width(containerWidth);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset.data)\n     *     .call(groupedBar);\n     *\n     */\n    return function module() {\n\n        let margin = {\n                top: 40,\n                right: 30,\n                bottom: 60,\n                left: 70\n            },\n            width = 960,\n            height = 500,\n\n            xScale,\n            xScale2,\n            xAxis,\n            yScale,\n            yScale2,\n            yAxis,\n\n            aspectRatio = null,\n\n            verticalTicks = 5,\n            yTickTextYOffset = -8,\n            yTickTextXOffset = -20,\n\n            numOfVerticalTicks = 5,\n            numOfHorizontalTicks = 5,\n            percentageAxisToMaxRatio = 1,\n            baseLine,\n\n            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\n            colorScale,\n            categoryColorMap,\n\n            layers,\n\n            ease = d3Ease.easeQuadInOut,\n            horizontal = false,\n\n            svg,\n            chartWidth, chartHeight,\n            data,\n            groups,\n\n            transformedData,\n\n            tooltipThreshold = 480,\n\n            xAxisPadding = {\n                top: 0,\n                left: 0,\n                bottom: 0,\n                right: 0\n            },\n            maxBarNumber = 8,\n\n            animationDelayStep = 20,\n            animationDelays = d3Array.range(animationDelayStep, maxBarNumber * animationDelayStep, animationDelayStep),\n            animationDuration = 1000,\n\n            grid = null,\n\n            nameLabel = 'name',\n            valueLabel = 'value',\n            groupLabel = 'group',\n            nameLabelFormat,\n            valueLabelFormat = NUMBER_FORMAT,\n\n            // getters\n            getName = ({name}) => name,\n            getValue = ({value}) => value,\n            getGroup = ({group}) => group,\n            isAnimated = false,\n\n            // events\n            dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\n        /**\n         * This function creates the graph using the selection and data provided\n         * @param {D3Selection} _selection A d3 selection that represents\n         * the container(s) where the chart(s) will be rendered\n         * @param {GroupedBarChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function (_data) {\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(_data);\n\n                prepareData(data);\n                buildScales();\n                buildLayers();\n                buildSVG(this);\n                drawGridLines();\n                buildAxis();\n                drawAxis();\n                drawGroupedBar();\n                addMouseEvents();\n            });\n        }\n\n        /**\n         * Prepare data for create chart.\n         * @private\n         */\n        function prepareData(data) {\n            groups = uniq(data.map((d) => getGroup(d)));\n            transformedData = d3Collection.nest()\n                .key(getName)\n                .rollup(function (values) {\n                    let ret = {};\n\n                    values.forEach((entry) => {\n                        if (entry && entry[groupLabel]) {\n                            ret[entry[groupLabel]] = getValue(entry);\n                        }\n                    });\n                    //for tooltip\n                    ret.values = values;\n                    return ret;\n                })\n                .entries(data)\n                .map(function (data) {\n                    return assign({}, {\n                        total: d3Array.sum(d3Array.permute(data.value, groups)),\n                        key: data.key\n                    }, data.value);\n                });\n        }\n\n        /**\n         * Adds events to the container group if the environment is not mobile\n         * Adding: mouseover, mouseout and mousemove\n         */\n        function addMouseEvents() {\n            if (shouldShowTooltip()) {\n                svg\n                    .on('mouseover', handleMouseOver)\n                    .on('mouseout', handleMouseOut)\n                    .on('mousemove', handleMouseMove);\n            }\n\n            svg.selectAll('.bar')\n                .on('mouseover', handleBarsMouseOver)\n                .on('mouseout', handleBarsMouseOut);\n        }\n\n        /**\n         * Creates the d3 x and y axis, setting orientations\n         * @private\n         */\n        function buildAxis() {\n            if (!horizontal) {\n                xAxis = d3Axis.axisBottom(xScale)\n                yAxis = d3Axis.axisLeft(yScale)\n                    .ticks(numOfVerticalTicks, valueLabelFormat)\n            } else {\n                xAxis = d3Axis.axisBottom(xScale)\n                    .ticks(numOfHorizontalTicks, valueLabelFormat);\n                yAxis = d3Axis.axisLeft(yScale)\n            }\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * NOTE: The order of drawing of this group elements is really important,\n         * as everything else will be drawn on top of them\n         * @private\n         */\n        function buildContainerGroups() {\n            let container = svg\n                .append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${margin.left},${margin.top})`);\n\n            container\n                .append('g').classed('x-axis-group', true)\n                .append('g').classed('x axis', true);\n            container.selectAll('.x-axis-group')\n                .append('g').classed('month-axis', true);\n            container\n                .append('g').classed('y-axis-group axis', true);\n            container\n                .append('g').classed('grid-lines-group', true);\n            container\n                .append('g').classed('chart-group', true);\n            container\n                .append('g').classed('metadata-group', true);\n        }\n\n        /**\n         * Builds the grouped layers layout\n         * @return {D3Layout} Layout for drawing the chart\n         * @private\n         */\n        function buildLayers() {\n            layers = transformedData.map((item) => {\n                let ret = {};\n\n                groups.forEach((key) => {\n                    ret[key] = item[key];\n                });\n\n                return assign({}, item, ret);\n            });\n        }\n\n        /**\n         * Creates the x, y and color scales of the chart\n         * @private\n         */\n        function buildScales() {\n\n            let yMax = d3Array.max(data.map(getValue));\n\n            if (!horizontal) {\n                xScale = d3Scale.scaleBand()\n                    .domain(data.map(getName))\n                    .rangeRound([0, chartWidth])\n                    .padding(0.1);\n                xScale2 = d3Scale.scaleBand()\n                    .domain(data.map(getGroup))\n                    .rangeRound([0, xScale.bandwidth()])\n                    .padding(0.1);\n\n                yScale = d3Scale.scaleLinear()\n                    .domain([0, yMax])\n                    .rangeRound([chartHeight, 0])\n                    .nice();\n            } else {\n                xScale = d3Scale.scaleLinear()\n                    .domain([0, yMax])\n                    .rangeRound([0, chartWidth - 1]);\n                // 1 pix for edge tick\n\n                yScale = d3Scale.scaleBand()\n                    .domain(data.map(getName))\n                    .rangeRound([chartHeight, 0])\n                    .padding(0.1);\n\n                yScale2 = d3Scale.scaleBand()\n                    .domain(data.map(getGroup))\n                    .rangeRound([yScale.bandwidth(), 0])\n                    .padding(0.1);\n            }\n\n            colorScale = d3Scale.scaleOrdinal()\n                .range(colorSchema)\n                .domain(data.map(getGroup));\n\n            categoryColorMap = colorScale\n                .domain(data.map(getName)).domain()\n                .reduce((memo, item) => {\n                    data.forEach(function (v) {\n                        if (getName(v) == item) {\n                            memo[v.name] = colorScale(v.group)\n                            memo[v.group] = colorScale(v.group)\n                            memo[v.group + item] = colorScale(v.group)\n                        }\n                    })\n                    return memo;\n                }, {});\n        }\n\n        /**\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container)\n                    .append('svg')\n                    .classed('britechart grouped-bar', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Parses dates and values into JS Date objects and numbers\n         * @param  {obj} data Raw data from JSON file\n         * @return {obj}      Parsed data with values and dates\n         */\n        function cleanData(data) {\n            return data.map((d) => {\n                    d.value = +d[valueLabel];\n                    d.group = d[groupLabel];\n                    // for tooltip\n                    d.topicName = getGroup(d);\n                    d.name = d[nameLabel];\n\n                    return d;\n                });\n        }\n\n        /**\n         * Draws the x and y axis on the svg object within their\n         * respective groups\n         * @private\n         */\n        function drawAxis() {\n            if (!horizontal) {\n                svg.select('.x-axis-group .axis.x')\n                    .attr('transform', `translate( 0, ${chartHeight} )`)\n                    .call(xAxis);\n\n                svg.select('.y-axis-group.axis')\n                    .attr('transform', `translate( ${-xAxisPadding.left}, 0)`)\n                    .call(yAxis)\n                    .call(adjustYTickLabels);\n            } else {\n                svg.select('.x-axis-group .axis.x')\n                    .attr('transform', `translate( 0, ${chartHeight} )`)\n                    .call(xAxis);\n\n                svg.select('.y-axis-group.axis')\n                    .attr('transform', `translate( ${-xAxisPadding.left}, 0)`)\n                    .call(yAxis);\n            }\n        }\n\n        /**\n         * Draws a vertical line to extend x-axis till the edges\n         * @return {void}\n         */\n        function drawHorizontalExtendedLine() {\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-x-line')\n                .data([0])\n                .enter()\n                  .append('line')\n                    .attr('class', 'extended-x-line')\n                    .attr('x1', (xAxisPadding.left))\n                    .attr('x2', chartWidth)\n                    .attr('y1', chartHeight)\n                    .attr('y2', chartHeight);\n        }\n\n        /**\n         * Draws a vertical line to extend y-axis till the edges\n         * @return {void}\n         */\n        function drawVerticalExtendedLine() {\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-y-line')\n                .data([0])\n                .enter()\n                  .append('line')\n                    .attr('class', 'extended-y-line')\n                    .attr('y1', (xAxisPadding.bottom))\n                    .attr('y2', chartHeight)\n                    .attr('x1', 0)\n                    .attr('x2', 0);\n        }\n\n        /**\n         * Adjusts the position of the y axis' ticks\n         * @param  {D3Selection} selection Y axis group\n         * @return void\n         */\n        function adjustYTickLabels(selection) {\n            selection.selectAll('.tick text')\n                .attr('transform', `translate(${yTickTextXOffset}, ${yTickTextYOffset})`);\n        }\n\n        /**\n         * Draws grid lines on the background of the chart\n         * @return void\n         */\n        function drawGridLines(xTicks, yTicks) {\n            if (grid === 'horizontal' || grid === 'full') {\n                svg.select('.grid-lines-group')\n                    .selectAll('line.horizontal-grid-line')\n                    .data(yScale.ticks(yTicks).slice(1))\n                    .enter()\n                      .append('line')\n                        .attr('class', 'horizontal-grid-line')\n                        .attr('x1', (-xAxisPadding.left + 1))\n                        .attr('x2', chartWidth)\n                        .attr('y1', (d) => yScale(d))\n                        .attr('y2', (d) => yScale(d));\n            }\n\n            if (grid === 'vertical' || grid === 'full') {\n                svg.select('.grid-lines-group')\n                    .selectAll('line.vertical-grid-line')\n                    .data(xScale.ticks(xTicks).slice(1))\n                    .enter()\n                      .append('line')\n                        .attr('class', 'vertical-grid-line')\n                        .attr('y1', 0)\n                        .attr('y2', chartHeight)\n                        .attr('x1', (d) => xScale(d))\n                        .attr('x2', (d) => xScale(d));\n            }\n\n            if (horizontal) {\n                drawVerticalExtendedLine();\n            } else {\n                drawHorizontalExtendedLine();\n            }\n        }\n\n        /**\n         * Animation tween of horizontal bars\n         * @param  {obj} d data of bar\n         * @return {void}\n         */\n        function horizontalBarsTween(d) {\n            let node = d3Selection.select(this),\n                i = d3Interpolate.interpolateRound(0, xScale(getValue(d))),\n                j = d3Interpolate.interpolateNumber(0, 1);\n\n            return function (t) {\n                node.attr('width', i(t)).style('opacity', j(t));\n            }\n        }\n\n        /**\n         * Animation tween of vertical bars\n         * @param  {obj} d data of bar\n         * @return {void}\n         */\n        function verticalBarsTween(d) {\n            let node = d3Selection.select(this),\n                i = d3Interpolate.interpolateRound(0, chartHeight - yScale(getValue(d))),\n                y = d3Interpolate.interpolateRound(chartHeight, yScale(getValue(d))),\n                j = d3Interpolate.interpolateNumber(0, 1);\n\n            return function (t) {\n                node.attr('y', y(t))\n                    .attr('height', i(t)).style('opacity', j(t));\n            }\n        }\n\n        /**\n         * Draws the bars along the x axis\n         * @param  {D3Selection} bars Selection of bars\n         * @return {void}\n         */\n        function drawHorizontalBars(series) {\n            // Enter + Update\n            let bars = series\n                .data(layers)\n                .enter()\n                  .append('g')\n                    .attr('transform', function (d) { return 'translate(0,' + yScale(d.key) + ')'; })\n                    .classed('layer', true)\n                    .selectAll('.bar')\n                    .data((d) => d.values)\n                    .enter()\n                      .append('rect')\n                        .classed('bar', true)\n                        .attr('x', 1)\n                        .attr('y', (d) => yScale2(getGroup(d)))\n                        .attr('height', yScale2.bandwidth())\n                        .attr('fill', ((data) => categoryColorMap[data.group]));\n\n            if (isAnimated) {\n                bars.style('opacity', 0.24)\n                    .transition()\n                    .delay((_, i) => animationDelays[i])\n                    .duration(animationDuration)\n                    .ease(ease)\n                    .tween('attr.width', horizontalBarsTween);\n            } else {\n                bars.attr('width', (d) => xScale(getValue(d)))\n            }\n        }\n\n        /**\n         * Draws the bars along the y axis\n         * @param  {D3Selection} bars Selection of bars\n         * @return {void}\n         */\n        function drawVerticalBars(series) {\n            // Enter + Update\n            let bars = series\n                .data(layers)\n                .enter()\n                .append('g')\n                  .attr('transform', function (d) { return 'translate(' + xScale(d.key) + ',0)'; })\n                  .classed('layer', true)\n                  .selectAll('.bar')\n                  .data((d) => d.values)\n                  .enter()\n                    .append('rect')\n                      .classed('bar', true)\n                      .attr('x', (d) => xScale2(getGroup(d)))\n                      .attr('y', (d) => yScale(d.value))\n                      .attr('width', xScale2.bandwidth)\n                      .attr('fill', ((data) => categoryColorMap[data.group]));\n\n            if (isAnimated) {\n                bars.style('opacity', 0.24).transition()\n                    .delay((_, i) => animationDelays[i])\n                    .duration(animationDuration)\n                    .ease(ease)\n                    .tween('attr.height', verticalBarsTween);\n            } else {\n                bars.attr('height', (d) => chartHeight - yScale(getValue(d)));\n            }\n        }\n\n        /**\n         * Draws the different areas into the chart-group element\n         * @private\n         */\n        function drawGroupedBar() {\n            let series = svg.select('.chart-group').selectAll('.layer')\n\n            if (!horizontal) {\n                drawVerticalBars(series)\n            } else {\n                drawHorizontalBars(series)\n            }\n            // Exit\n            series.exit()\n                .transition()\n                .style('opacity', 0)\n                .remove();\n        }\n\n        /**\n         * Extract X position on the chart from a given mouse event\n         * @param  {obj} event D3 mouse event\n         * @return {Number}       Position on the x axis of the mouse\n         * @private\n         */\n        function getMousePosition(event) {\n            return d3Selection.mouse(event);\n        }\n\n        /**\n         * Finds out the data entry that is closer to the given position on pixels\n         * @param  {Number} mouseX X position of the mouse\n         * @return {obj}        Data entry that is closer to that x axis position\n         */\n        function getNearestDataPoint(mouseX) {\n            let adjustedMouseX = mouseX - margin.left,\n                epsilon = xScale2.bandwidth(),\n                nearest = [];\n\n            layers.forEach(function (data) {\n                let found = data.values.find((d2) => Math.abs(adjustedMouseX >= xScale(d2[nameLabel]) + xScale2(d2[groupLabel])) && Math.abs(adjustedMouseX - xScale2(d2[groupLabel]) - xScale(d2[nameLabel]) <= epsilon));\n\n                if (found) {\n                    found.values = data.values;\n                    found.key = found.name;\n                    nearest.push(found)\n                }\n\n            });\n\n            return nearest.length ? nearest[0] : undefined;\n        }\n\n        /**\n        * Finds out the data entry that is closer to the given position on pixels\n        * @param  {Number} mouseX X position of the mouse\n        * @return {obj}        Data entry that is closer to that x axis position\n        */\n        function getNearestDataPoint2(mouseY) {\n            let adjustedMouseY = mouseY - margin.bottom,\n                epsilon = yScale.bandwidth(),\n                nearest = [];\n\n            layers.map(function (data) {\n                let found = data.values.find((d2) => Math.abs(adjustedMouseY >= yScale(d2[nameLabel])) && Math.abs(adjustedMouseY - yScale(d2[nameLabel]) <= epsilon * 2));\n\n                if (found) {\n                    found.values = data.values;\n                    found.key = found.name;\n                    nearest.push(found)\n                }\n            });\n\n            return nearest.length ? nearest[0] : undefined;\n        }\n\n        /**\n         * Handles a mouseover event on top of a bar\n         * @param  {obj} d data of bar\n         * @return {void}\n         */\n        function handleBarsMouseOver(d) {\n            d3Selection.select(this)\n                .attr('fill', () => d3Color.color(categoryColorMap[d.group]).darker());\n        }\n\n        /**\n         * Handles a mouseout event out of a bar\n         * @param  {obj} d data of bar\n         * @return {void}\n         */\n        function handleBarsMouseOut(d) {\n            d3Selection.select(this)\n                .attr('fill', () => categoryColorMap[d.group])\n        }\n\n        /**\n         * MouseMove handler, calculates the nearest dataPoint to the cursor\n         * and updates metadata related to it\n         * @private\n         */\n        function handleMouseMove() {\n            let [mouseX, mouseY] = getMousePosition(this),\n                dataPoint = !horizontal ? getNearestDataPoint(mouseX) : getNearestDataPoint2(mouseY),\n                x,\n                y;\n\n            if (dataPoint) {\n                // Move verticalMarker to that datapoint\n                if (horizontal) {\n                    x = mouseX - margin.left;\n                    y = yScale(dataPoint.key) + yScale.bandwidth() / 2;\n                } else {\n                    x = xScale(dataPoint.key) + xScale2(dataPoint[groupLabel]);\n                    y = mouseY - margin.bottom;\n                }\n                moveTooltipOriginXY(x, y);\n\n                // Emit event with xPosition for tooltip or similar feature\n                dispatcher.call('customMouseMove', this, dataPoint, categoryColorMap, x, y);\n            }\n        }\n\n        /**\n         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n         * It also resets the container of the vertical marker\n         * @private\n         */\n        function handleMouseOut(d) {\n            svg.select('.metadata-group').attr('transform', 'translate(9999, 0)');\n            dispatcher.call('customMouseOut', this, d);\n        }\n\n        /**\n         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n         * @private\n         */\n        function handleMouseOver(d) {\n            dispatcher.call('customMouseOver', this, d);\n        }\n\n        /**\n         * Helper method to update the x position of the vertical marker\n         * @param  {obj} dataPoint Data entry to extract info\n         * @return void\n         */\n        function moveTooltipOriginXY(originXPosition, originYPosition) {\n            svg.select('.metadata-group')\n                .attr('transform', `translate(${originXPosition},${originYPosition})`);\n        }\n\n        /**\n         * Determines if we should add the tooltip related logic depending on the\n         * size of the chart and the tooltipThreshold variable value\n         * @return {boolean} Should we build the tooltip?\n         * @private\n         */\n        function shouldShowTooltip() {\n            return width > tooltipThreshold;\n        }\n\n        // API\n\n        /**\n         * Gets or Sets the aspect ratio of the chart\n         * @param  {Number} _x Desired aspect ratio for the graph\n         * @return { (Number | Module) } Current aspect ratio or Area Chart module to chain calls\n         * @public\n         */\n        exports.aspectRatio = function (_x) {\n            if (!arguments.length) {\n                return aspectRatio;\n            }\n            aspectRatio = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the colorSchema of the chart\n         * @param  {String[]} _x Desired colorSchema for the graph\n         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n         * @public\n         */\n        exports.colorSchema = function (_x) {\n            if (!arguments.length) {\n                return colorSchema;\n            }\n            colorSchema = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the nameLabel of the chart\n         * @param  {Number} _x Desired dateLabel for the graph\n         * @return { nameLabel | module} Current nameLabel or Chart module to chain calls\n         * @public\n         */\n        exports.nameLabel = function (_x) {\n            if (!arguments.length) {\n                return nameLabel;\n            }\n            nameLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabelFormat of the chart\n         * @param  {String[]} _x Desired valueLabelFormat for the graph\n         * @return { valueLabelFormat | module} Current valueLabelFormat or Chart module to chain calls\n         * @public\n         */\n        exports.nameLabelFormat = function (_x) {\n            if (!arguments.length) {\n                return nameLabelFormat;\n            }\n            nameLabelFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Configurable extension of the x axis\n         * if your max point was 50% you might want to show x axis to 60%, pass 1.2\n         * @param  {number} _x ratio to max data point to add to the x axis\n         * @return { ratio | module} Current ratio or Bar Chart module to chain calls\n         * @public\n         */\n        exports.percentageAxisToMaxRatio = function (_x) {\n            if (!arguments.length) {\n                return percentageAxisToMaxRatio;\n            }\n            percentageAxisToMaxRatio = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the groupLabel of the chart\n         * @param  {String} _x Desired groupLabel for the graph\n         * @return { groupLabel | module} Current groupLabel or Chart module to chain calls\n         * @public\n         */\n        exports.groupLabel = function (_x) {\n            if (!arguments.length) {\n                return groupLabel;\n            }\n            groupLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the grid mode.\n         *\n         * @param  {String} _x Desired mode for the grid ('vertical'|'horizontal'|'full')\n         * @return { String | module} Current mode of the grid or Area Chart module to chain calls\n         * @public\n         */\n        exports.grid = function (_x) {\n            if (!arguments.length) {\n                return grid;\n            }\n            grid = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { height | module} Current height or Area Chart module to chain calls\n         * @public\n         */\n        exports.height = function (_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            if (aspectRatio) {\n                width = Math.ceil(_x / aspectRatio);\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the horizontal direction of the chart\n         * @param  {number} _x Desired horizontal direction for the graph\n         * @return { horizontal | module} Current horizontal direction or Bar Chart module to chain calls\n         * @public\n         */\n        exports.horizontal = function (_x) {\n            if (!arguments.length) {\n                return horizontal;\n            }\n            horizontal = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n         * By default this is 'false'\n         *\n         * @param  {Boolean} _x Desired animation flag\n         * @return { isAnimated | module} Current isAnimated flag or Chart module\n         * @public\n         */\n        exports.isAnimated = function (_x) {\n            if (!arguments.length) {\n                return isAnimated;\n            }\n            isAnimated = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {Object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Area Chart module to chain calls\n         * @public\n         */\n        exports.margin = function (_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the minimum width of the graph in order to show the tooltip\n         * NOTE: This could also depend on the aspect ratio\n         *\n         * @param  {Object} _x Margin object to get/set\n         * @return { tooltipThreshold | module} Current tooltipThreshold or Area Chart module to chain calls\n         * @public\n         */\n        exports.tooltipThreshold = function (_x) {\n            if (!arguments.length) {\n                return tooltipThreshold;\n            }\n            tooltipThreshold = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabel of the chart\n         * @param  {Number} _x Desired valueLabel for the graph\n         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabel = function (_x) {\n            if (!arguments.length) {\n                return valueLabel;\n            }\n            valueLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabelFormat of the chart\n         * @param  {String[]} _x Desired valueLabelFormat for the graph\n         * @return { valueLabelFormat | module} Current valueLabelFormat or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabelFormat = function (_x) {\n            if (!arguments.length) {\n                return valueLabelFormat;\n            }\n            valueLabelFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the number of verticalTicks of the yAxis on the chart\n         * @param  {Number} _x Desired verticalTicks\n         * @return { verticalTicks | module} Current verticalTicks or Chart module to chain calls\n         * @public\n         */\n        exports.verticalTicks = function (_x) {\n            if (!arguments.length) {\n                return verticalTicks;\n            }\n            verticalTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { width | module} Current width or Area Chart module to chain calls\n         * @public\n         */\n        exports.width = function (_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            if (aspectRatio) {\n                height = Math.ceil(_x * aspectRatio);\n            }\n            width = _x;\n\n            return this;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function (filename, title) {\n            exportChart.call(exports, svg, filename, title);\n        };\n\n        /**\n         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n         * We are going to expose this events:\n         * customMouseOver, customMouseMove and customMouseOut\n         *\n         * @return {module} Bar Chart\n         * @public\n         */\n        exports.on = function () {\n            let value = dispatcher.on.apply(dispatcher, arguments);\n\n            return value === dispatcher ? exports : value;\n        };\n\n        return exports;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/grouped-bar.js","define(function(require){\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Axis = require('d3-axis');\n    const d3Color = require('d3-color');\n    const d3Collection = require('d3-collection');\n    const d3Dispatch = require('d3-dispatch');\n    const d3Ease = require('d3-ease');\n    const d3Interpolate = require('d3-interpolate');\n    const d3Scale = require('d3-scale');\n    const d3Shape = require('d3-shape');\n    const d3Selection = require('d3-selection');\n    const assign = require('lodash.assign');\n\n    const {exportChart} = require('./helpers/exportChart');\n    const colorHelper = require('./helpers/colors');\n    const NUMBER_FORMAT = ',f';\n    const uniq = (arrArg) => arrArg.filter((elem, pos, arr) => arr.indexOf(elem) == pos);\n\n\n    /**\n     * @typdef D3Layout\n     * @type function\n     */\n\n    /**\n     * @typedef stackedBarData\n     * @type {Object}\n     * @property {Object[]} data       All data entries\n     * @property {String} name         Name of the entry\n     * @property {String} stack        Stack of the entry\n     * @property {Number} value        Value of the entry\n     *\n     * @example\n     * {\n     *     'data': [\n     *         {\n     *             \"name\": \"2011-01\",\n     *             \"stack\": \"Direct\",\n     *             \"value\": 0\n     *         }\n     *     ]\n     * }\n     */\n\n    /**\n     * Stacked Area Chart reusable API module that allows us\n     * rendering a multi area and configurable chart.\n     *\n     * @module Stacked-bar\n     * @tutorial stacked-bar\n     * @requires d3-array, d3-axis, d3-color, d3-collection, d3-dispatch, d3-ease,\n     *  d3-interpolate, d3-scale, d3-shape, d3-selection, lodash assign\n     *\n     * @example\n     * let stackedBar = stackedBar();\n     *\n     * stackedBar\n     *     .width(containerWidth);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset.data)\n     *     .call(stackedBar);\n     *\n     */\n    return function module() {\n\n        let margin = {\n            top: 40,\n            right: 30,\n            bottom: 60,\n            left: 70\n            },\n            width = 960,\n            height = 500,\n\n            xScale,\n            xAxis,\n            yScale,\n            yAxis,\n\n            aspectRatio = null,\n\n            verticalTicks = 5,\n            yTickTextYOffset = -8,\n            yTickTextXOffset = -20,\n\n            numOfVerticalTicks = 5,\n            numOfHorizontalTicks = 5,\n            percentageAxisToMaxRatio = 1,\n\n            colorSchema = colorHelper.colorSchemas.britechartsColorSchema,\n\n            colorScale,\n            categoryColorMap,\n\n            layers,\n\n            ease = d3Ease.easeQuadInOut,\n            horizontal = false,\n\n            svg,\n            chartWidth, chartHeight,\n            data,\n            transformedData,\n            stacks,\n\n            tooltipThreshold = 480,\n\n            baseLine,\n            xAxisPadding = {\n                top: 0,\n                left: 0,\n                bottom: 0,\n                right: 0\n            },\n            maxBarNumber = 8,\n\n            animationDelayStep = 20,\n            animationDelays = d3Array.range(animationDelayStep, maxBarNumber* animationDelayStep, animationDelayStep),\n            animationDuration = 1000,\n\n            grid = null,\n\n            nameLabel = 'name',\n            valueLabel = 'value',\n            stackLabel = 'stack',\n            nameLabelFormat,\n            valueLabelFormat = NUMBER_FORMAT,\n\n            // getters\n            getName = (data) =>  data[nameLabel],\n            getValue = (data) => data[valueLabel],\n            getStack = (data) => data[stackLabel],\n            isAnimated = false,\n\n            // events\n            dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\n        /**\n         * This function creates the graph using the selection and data provided\n         * @param {D3Selection} _selection A d3 selection that represents\n         * the container(s) where the chart(s) will be rendered\n         * @param {stackedBarData} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data){\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(_data);\n\n                prepareData(data);\n                buildScales();\n                buildLayers();\n                buildSVG(this);\n                drawGridLines();\n                buildAxis();\n                drawAxis();\n                drawStackedBar();\n                addMouseEvents();\n            });\n        }\n\n        /**\n         * Prepare data for create chart.\n         * @private\n         */\n        function prepareData(data) {\n            stacks = uniq(data.map(({stack}) => stack));\n            transformedData = d3Collection.nest()\n                .key(getName)\n                .rollup(function(values) {\n                    let ret = {};\n\n                    values.forEach((entry) => {\n                        if (entry && entry[stackLabel]) {\n                            ret[entry[stackLabel]] = getValue(entry);\n                        }\n                    });\n                    ret.values = values; //for tooltip\n\n                    return ret;\n                })\n                .entries(data)\n                .map(function(data){\n                    return assign({}, {\n                        total:d3Array.sum( d3Array.permute(data.value, stacks) ),\n                        key:data.key\n                    }, data.value);\n                });\n        }\n\n        /**\n         * Adds events to the container group if the environment is not mobile\n         * Adding: mouseover, mouseout and mousemove\n         */\n        function addMouseEvents() {\n            if (shouldShowTooltip()){\n                svg\n                    .on('mouseover', handleMouseOver)\n                    .on('mouseout', handleMouseOut)\n                    .on('mousemove', handleMouseMove);\n            }\n\n            svg.selectAll('.bar')\n                .on('mouseover', handleBarsMouseOver)\n                .on('mouseout', handleBarsMouseOut);\n        }\n\n        /**\n         * Creates the d3 x and y axis, setting orientations\n         * @private\n         */\n        function buildAxis() {\n            if (!horizontal) {\n                xAxis = d3Axis.axisBottom(xScale)\n                yAxis = d3Axis.axisLeft(yScale)\n                    .ticks(numOfVerticalTicks, valueLabelFormat)\n            } else {\n                xAxis = d3Axis.axisBottom(xScale)\n                .ticks(numOfHorizontalTicks, valueLabelFormat);\n                yAxis = d3Axis.axisLeft(yScale)\n            }\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * NOTE: The order of drawing of this group elements is really important,\n         * as everything else will be drawn on top of them\n         * @private\n         */\n        function buildContainerGroups(){\n            let container = svg\n                .append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${margin.left},${margin.top})`);\n\n            container\n                .append('g').classed('x-axis-group', true)\n                .append('g').classed('x axis', true);\n            container.selectAll('.x-axis-group')\n                .append('g').classed('month-axis', true);\n            container\n                .append('g').classed('y-axis-group axis', true);\n            container\n                .append('g').classed('grid-lines-group', true);\n            container\n                .append('g').classed('chart-group', true);\n            container\n                .append('g').classed('metadata-group', true);\n        }\n\n        /**\n         * Builds the stacked layers layout\n         * @return {D3Layout} Layout for drawing the chart\n         * @private\n         */\n        function buildLayers(){\n            let stack3 = d3Shape.stack().keys(stacks),\n                dataInitial = transformedData.map((item) => {\n                        let ret = {};\n\n                        stacks.forEach((key) => {\n                            ret[key] = item[key];\n                        });\n\n                        return assign({}, item, ret);\n                });\n\n            layers  = stack3(dataInitial);\n        }\n\n        /**\n         * Creates the x, y and color scales of the chart\n         * @private\n         */\n        function buildScales() {\n            let yMax = d3Array.max(transformedData.map(function(d){\n                return d.total;\n            }));\n\n            if (!horizontal) {\n                xScale = d3Scale.scaleBand()\n                    .domain(data.map(getName))\n                    .rangeRound([0, chartWidth ])\n                    .padding(0.1);\n\n                yScale = d3Scale.scaleLinear()\n                    .domain([0,yMax])\n                    .rangeRound([chartHeight, 0])\n                    .nice();\n            } else {\n                xScale = d3Scale.scaleLinear()\n                    .domain([0, yMax])\n                    .rangeRound([0, chartWidth - 1]);\n                // 1 pix for edge tick\n\n                yScale = d3Scale.scaleBand()\n                    .domain(data.map(getName))\n                    .rangeRound([chartHeight, 0])\n                    .padding(0.1);\n            }\n\n            colorScale = d3Scale.scaleOrdinal()\n                .range(colorSchema)\n                .domain(data.map(getStack));\n\n            categoryColorMap = colorScale\n                .domain(data.map(getName)).domain()\n                .reduce((memo, item, i) => {\n                    data.forEach(function(v){\n                        if (getName(v)==item){\n                           memo[v.name] = colorScale(v.stack)\n                           memo[v.stack] = colorScale(v.stack)\n                           memo[v.stack + item] = colorScale(v.stack)\n                       }\n                   })\n                    return memo;\n                }, {});\n        }\n\n        /**\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container)\n                  .append('svg')\n                    .classed('britechart stacked-bar', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Parses dates and values into JS Date objects and numbers\n         * @param  {obj} data Raw data from JSON file\n         * @return {obj}      Parsed data with values and dates\n         */\n        function cleanData(data) {\n            return data.map((d) => {\n                    d.value = +d[valueLabel];\n                    d.stack = d[stackLabel];\n                    d.topicName = getStack(d); // for tooltip\n                    d.name = d[nameLabel];\n\n                    return d;\n                });\n        }\n\n        /**\n         * Draws the x and y axis on the svg object within their\n         * respective groups\n         * @private\n         */\n        function drawAxis(){\n            if (!horizontal) {\n                svg.select('.x-axis-group .axis.x')\n                    .attr('transform', `translate( 0, ${chartHeight} )`)\n                    .call(xAxis);\n\n                svg.select('.y-axis-group.axis')\n                    .attr('transform', `translate( ${-xAxisPadding.left}, 0)`)\n                    .call(yAxis)\n                    .call(adjustYTickLabels);\n            } else {\n                svg.select('.x-axis-group .axis.x')\n                    .attr('transform', `translate( 0, ${chartHeight} )`)\n                    .call(xAxis);\n\n                svg.select('.y-axis-group.axis')\n                    .attr('transform', `translate( ${-xAxisPadding.left}, 0)`)\n                    .call(yAxis);\n            }\n        }\n\n        /**\n         * Adjusts the position of the y axis' ticks\n         * @param  {D3Selection} selection Y axis group\n         * @return void\n         */\n        function adjustYTickLabels(selection) {\n            selection.selectAll('.tick text')\n                .attr('transform', `translate(${yTickTextXOffset}, ${yTickTextYOffset})`);\n        }\n\n        /**\n         * Draws grid lines on the background of the chart\n         * @return void\n         */\n        function drawGridLines(xTicks, yTicks) {\n            if (grid === 'horizontal' || grid === 'full') {\n                svg.select('.grid-lines-group')\n                    .selectAll('line.horizontal-grid-line')\n                    .data(yScale.ticks(yTicks).slice(1))\n                    .enter()\n                      .append('line')\n                        .attr('class', 'horizontal-grid-line')\n                        .attr('x1', (-xAxisPadding.left + 1 ))\n                        .attr('x2', chartWidth)\n                        .attr('y1', (d) => yScale(d))\n                        .attr('y2', (d) => yScale(d));\n            }\n\n            if (grid === 'vertical' || grid === 'full') {\n                svg.select('.grid-lines-group')\n                    .selectAll('line.vertical-grid-line')\n                    .data(xScale.ticks(xTicks).slice(1))\n                    .enter()\n                      .append('line')\n                        .attr('class', 'vertical-grid-line')\n                        .attr('y1', 0)\n                        .attr('y2', chartHeight)\n                        .attr('x1', (d) => xScale(d))\n                        .attr('x2', (d) => xScale(d));\n            }\n\n            if (horizontal) {\n                drawVerticalExtendedLine();\n            } else {\n                drawHorizontalExtendedLine();\n            }\n        }\n\n        /**\n         * Draws the bars along the x axis\n         * @param  {D3Selection} bars Selection of bars\n         * @return {void}\n         */\n        function drawHorizontalBars(series) {\n            // Enter + Update\n            let context,\n                bars = series\n                    .data(layers)\n                    .enter()\n                      .append('g')\n                        .classed('layer', true)\n                        .attr('fill', (({key}) => categoryColorMap[key]))\n                        .selectAll('.bar')\n                        .data( (d)=> d)\n                        .enter()\n                          .append('rect')\n                            .classed('bar', true)\n                            .attr('x', (d) => xScale(d[0]) )\n                            .attr('y', (d) => yScale(d.data.key) )\n                            .attr('height', yScale.bandwidth())\n                            .attr('fill', (({data}) => categoryColorMap[data.stack+data.key]));\n\n            if (isAnimated){\n                bars.style('opacity', 0.24)\n                    .transition()\n                    .delay((_, i) => animationDelays[i])\n                    .duration(animationDuration)\n                    .ease(ease)\n                    .tween('attr.width', function(d ){\n                        let node = d3Selection.select(this),\n                        i = d3Interpolate.interpolateRound(0,xScale(d[1] - d[0] )),\n                        j = d3Interpolate.interpolateNumber(0,1)\n                        ;\n\n                        return function(t){\n                            node.attr('width',  i(t) );\n                            node.style('opacity', j(t) );\n                        }\n                    });\n            } else {\n                bars.attr('width', (d) => xScale(d[1] - d[0] ) )\n            }\n        }\n\n        /**\n         * Draws a vertical line to extend x-axis till the edges\n         * @return {void}\n         */\n        function drawHorizontalExtendedLine() {\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-x-line')\n                .data([0])\n                .enter()\n                  .append('line')\n                    .attr('class', 'extended-x-line')\n                    .attr('x1', (xAxisPadding.left))\n                    .attr('x2', chartWidth)\n                    .attr('y1', chartHeight)\n                    .attr('y2', chartHeight);\n        }\n\n        /**\n         * Draws the bars along the y axis\n         * @param  {D3Selection} bars Selection of bars\n         * @return {void}\n         */\n        function drawVerticalBars(series) {\n            // Enter + Update\n            let bars = series\n                .data(layers)\n                .enter()\n                  .append('g')\n                    .classed('layer', true)\n                    .attr('fill', (({key}) => categoryColorMap[key]))\n                    .selectAll('.bar')\n                    .data((d) => d)\n                    .enter()\n                      .append('rect')\n                        .classed('bar', true)\n                        .attr('x', (d) => xScale(d.data.key))\n                        .attr('y', (d) => yScale(d[1]))\n                        .attr('width', xScale.bandwidth )\n                        .attr('fill', (({data}) => categoryColorMap[data.stack+data.key])),context;\n\n            if (isAnimated){\n                bars.style('opacity', 0.24).transition()\n                    .delay( (_, i) => animationDelays[i])\n                    .duration(animationDuration)\n                    .ease(ease)\n                    .tween('attr.height', function(d ){\n                        let node = d3Selection.select(this),\n                        i = d3Interpolate.interpolateRound(0, yScale(d[0]) - yScale(d[1])),\n                        j = d3Interpolate.interpolateNumber(0,1)\n                        ;\n\n                        return function(t){\n                            node.attr('height',  i(t) );\n                            node.style('opacity', j(t) );\n                        }\n                    });\n            } else {\n                bars.attr('height', (d) => yScale(d[0]) - yScale(d[1]) );\n            }\n        }\n\n        /**\n         * Draws a vertical line to extend y-axis till the edges\n         * @return {void}\n         */\n        function drawVerticalExtendedLine() {\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-y-line')\n                .data([0])\n                .enter()\n                  .append('line')\n                    .attr('class', 'extended-y-line')\n                    .attr('y1', (xAxisPadding.bottom))\n                    .attr('y2', chartHeight)\n                    .attr('x1', 0)\n                    .attr('x2', 0);\n        }\n\n        /**\n         * Draws the different areas into the chart-group element\n         * @private\n         */\n        function drawStackedBar(){\n            let series = svg.select('.chart-group').selectAll('.layer')\n\n            if (!horizontal) {\n                drawVerticalBars(series)\n            } else {\n                drawHorizontalBars(series)\n            }\n            // Exit\n            series.exit()\n                .transition()\n                .style('opacity', 0)\n                .remove();\n        }\n\n        /**\n         * Extract X position on the chart from a given mouse event\n         * @param  {obj} event D3 mouse event\n         * @return {Number}       Position on the x axis of the mouse\n         * @private\n         */\n        function getMousePosition(event) {\n            return d3Selection.mouse(event);\n        }\n\n        /**\n         * Finds out the data entry that is closer to the given position on pixels\n         * @param  {Number} mouseX  X position of the mouse\n         * @return {obj}            Data entry that is closer to that x axis position\n         */\n        function getNearestDataPoint(mouseX) {\n            let adjustedMouseX = mouseX - margin.left,\n                dataByValueParsed = transformedData.map((item) => {\n                    item.key = item.key\n                    return item;\n                }),\n                epsilon,\n                nearest;\n\n            epsilon = (xScale(dataByValueParsed[1].key) - xScale(dataByValueParsed[0].key));\n            nearest = dataByValueParsed.find(({key}) => Math.abs(xScale(key) - adjustedMouseX) <= epsilon);\n\n            return nearest;\n        }\n\n         /**\n         * Finds out the data entry that is closer to the given position on pixels\n         * @param  {Number} mouseY  Y position of the mouse\n         * @return {obj}            Data entry that is closer to that y axis position\n         */\n        function getNearestDataPoint2(mouseY) {\n            let adjustedMouseY = mouseY - margin.bottom,\n                epsilon = yScale.bandwidth(),\n                nearest;\n\n            nearest = layers.map(function(stackedArray){\n                return stackedArray.map(function(d1){\n                   let found = d1.data.values.find((d2) => Math.abs(adjustedMouseY >= yScale(d2[nameLabel])) && Math.abs(adjustedMouseY - yScale(d2[nameLabel]) <= epsilon*2) );\n                   return found ? d1.data :undefined;\n               })\n            });\n            nearest = d3Array.merge( nearest).filter(function(e){return e});\n\n            return nearest.length ? nearest[0] :undefined;\n        }\n\n        /**\n         * Handles a mouseover event on top of a bar\n         * @param  {obj} d data of bar\n         * @return {void}\n         */\n        function handleBarsMouseOver(d) {\n            d3Selection.select(this)\n                .attr('fill', () => d3Color.color(d3Selection.select(this.parentNode).attr('fill')).darker())\n        }\n\n        /**\n         * Handles a mouseout event out of a bar\n         * @param  {obj} d data of bar\n         * @return {void}\n         */\n        function handleBarsMouseOut(d) {\n            d3Selection\n                .select(this).attr('fill', () => d3Selection.select(this.parentNode).attr('fill'))\n        }\n\n        /**\n         * MouseMove handler, calculates the nearest dataPoint to the cursor\n         * and updates metadata related to it\n         * @private\n         */\n        function handleMouseMove(){\n            let [mouseX, mouseY] = getMousePosition(this),\n                dataPoint = !horizontal ? getNearestDataPoint(mouseX) : getNearestDataPoint2(mouseY),\n                x,\n                y;\n\n            if (dataPoint) {\n                // Move verticalMarker to that datapoint\n                if (horizontal) {\n                    x = mouseX - margin.left;\n                    y = yScale(dataPoint.key) + yScale.bandwidth()/2;\n                } else {\n                    x = xScale(dataPoint.key) + margin.left;\n                    y = mouseY - margin.bottom;\n                }\n                moveTooltipOriginXY(x,y);\n\n                // Emit event with xPosition for tooltip or similar feature\n                dispatcher.call('customMouseMove', this, dataPoint, categoryColorMap, x,y);\n            }\n        }\n\n        /**\n         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n         * It also resets the container of the vertical marker\n         * @private\n         */\n        function handleMouseOut(d){\n            svg.select('.metadata-group').attr('transform', 'translate(9999, 0)');\n            dispatcher.call('customMouseOut', this, d);\n        }\n\n        /**\n         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n         * @private\n         */\n        function handleMouseOver(d){\n            dispatcher.call('customMouseOver', this, d);\n        }\n\n        /**\n         * Helper method to update the x position of the vertical marker\n         * @param  {obj} dataPoint Data entry to extract info\n         * @return void\n         */\n        function moveTooltipOriginXY(originXPosition, originYPosition){\n            svg.select('.metadata-group')\n                .attr('transform', `translate(${originXPosition},${originYPosition})`);\n        }\n\n        /**\n         * Determines if we should add the tooltip related logic depending on the\n         * size of the chart and the tooltipThreshold variable value\n         * @return {boolean} Should we build the tooltip?\n         * @private\n         */\n        function shouldShowTooltip() {\n            return width > tooltipThreshold;\n        }\n\n        // API\n        /**\n         * Gets or Sets the aspect ratio of the chart\n         * @param  {Number} _x Desired aspect ratio for the graph\n         * @return { (Number | Module) } Current aspect ratio or Area Chart module to chain calls\n         * @public\n         */\n        exports.aspectRatio = function(_x) {\n            if (!arguments.length) {\n                return aspectRatio;\n            }\n            aspectRatio = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the colorSchema of the chart\n         * @param  {String[]} _x Desired colorSchema for the graph\n         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n         * @public\n         */\n        exports.colorSchema = function(_x) {\n            if (!arguments.length) {\n                return colorSchema;\n            }\n            colorSchema = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the nameLabel of the chart\n         * @param  {Number} _x Desired dateLabel for the graph\n         * @return { nameLabel | module} Current nameLabel or Chart module to chain calls\n         * @public\n         */\n        exports.nameLabel = function(_x) {\n            if (!arguments.length) {\n                return nameLabel;\n            }\n            nameLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabelFormat of the chart\n         * @param  {String[]} _x Desired valueLabelFormat for the graph\n         * @return { valueLabelFormat | module} Current valueLabelFormat or Chart module to chain calls\n         * @public\n         */\n        exports.nameLabelFormat = function(_x) {\n            if (!arguments.length) {\n                return nameLabelFormat;\n            }\n            nameLabelFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Configurable extension of the x axis\n         * if your max point was 50% you might want to show x axis to 60%, pass 1.2\n         * @param  {number} _x ratio to max data point to add to the x axis\n         * @return { ratio | module} Current ratio or Bar Chart module to chain calls\n         * @public\n         */\n        exports.percentageAxisToMaxRatio = function(_x) {\n            if (!arguments.length) {\n                return percentageAxisToMaxRatio;\n            }\n            percentageAxisToMaxRatio = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the stackLabel of the chart\n         * @param  {String} _x Desired stackLabel for the graph\n         * @return { stackLabel | module} Current stackLabel or Chart module to chain calls\n         * @public\n         */\n        exports.stackLabel = function(_x) {\n            if (!arguments.length) {\n                return stackLabel;\n            }\n            stackLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the grid mode.\n         *\n         * @param  {String} _x Desired mode for the grid ('vertical'|'horizontal'|'full')\n         * @return { String | module} Current mode of the grid or Area Chart module to chain calls\n         * @public\n         */\n        exports.grid = function(_x) {\n            if (!arguments.length) {\n                return grid;\n            }\n            grid = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { height | module} Current height or Area Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            if (aspectRatio) {\n                width = Math.ceil(_x / aspectRatio);\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the horizontal direction of the chart\n         * @param  {number} _x Desired horizontal direction for the graph\n         * @return { horizontal | module} Current horizontal direction or Bar Chart module to chain calls\n         * @public\n         */\n        exports.horizontal = function(_x) {\n            if (!arguments.length) {\n                return horizontal;\n            }\n            horizontal = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n         * By default this is 'false'\n         *\n         * @param  {Boolean} _x Desired animation flag\n         * @return { isAnimated | module} Current isAnimated flag or Chart module\n         * @public\n         */\n        exports.isAnimated = function(_x) {\n            if (!arguments.length) {\n                return isAnimated;\n            }\n            isAnimated = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {Object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Area Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the minimum width of the graph in order to show the tooltip\n         * NOTE: This could also depend on the aspect ratio\n         *\n         * @param  {Object} _x Margin object to get/set\n         * @return { tooltipThreshold | module} Current tooltipThreshold or Area Chart module to chain calls\n         * @public\n         */\n        exports.tooltipThreshold = function(_x) {\n            if (!arguments.length) {\n                return tooltipThreshold;\n            }\n            tooltipThreshold = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabel of the chart\n         * @param  {Number} _x Desired valueLabel for the graph\n         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabel = function(_x) {\n            if (!arguments.length) {\n                return valueLabel;\n            }\n            valueLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabelFormat of the chart\n         * @param  {String[]} _x Desired valueLabelFormat for the graph\n         * @return { valueLabelFormat | module} Current valueLabelFormat or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabelFormat = function(_x) {\n            if (!arguments.length) {\n                return valueLabelFormat;\n            }\n            valueLabelFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the number of verticalTicks of the yAxis on the chart\n         * @param  {Number} _x Desired verticalTicks\n         * @return { verticalTicks | module} Current verticalTicks or Chart module to chain calls\n         * @public\n         */\n        exports.verticalTicks = function(_x) {\n            if (!arguments.length) {\n                return verticalTicks;\n            }\n            verticalTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { width | module} Current width or Area Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            if (aspectRatio) {\n                height = Math.ceil(_x * aspectRatio);\n            }\n            width = _x;\n\n            return this;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename, title) {\n            exportChart.call(exports, svg, filename, title);\n        };\n\n        /**\n         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n         * We are going to expose this events:\n         * customMouseOver, customMouseMove and customMouseOut\n         *\n         * @return {module} Bar Chart\n         * @public\n         */\n        exports.on = function() {\n            let value = dispatcher.on.apply(dispatcher, arguments);\n\n            return value === dispatcher ? exports : value;\n        };\n\n        return exports;\n    };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/stacked-bar.js","define(function(require) {\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Axis = require('d3-axis');\n    const d3Dispatch = require('d3-dispatch');\n    const d3Ease = require('d3-ease');\n    const d3Format = require('d3-format');\n    const d3Scale = require('d3-scale');\n    const d3Selection = require('d3-selection');\n    const d3Transition = require('d3-transition');\n\n    const {exportChart} = require('./helpers/exportChart');\n\n\n    /**\n     * @typedef StepChartData\n     * @type Object[]\n     *\n     * @property {String} key      Key we measure (required)\n     * @property {Number} value    value of the key (required)\n     *\n     * @example\n     * [\n     *     {\n     *         value: 1,\n     *         key: 'glittering'\n     *     },\n     *     {\n     *         value: 1,\n     *         key: 'luminous'\n     *     }\n     * ]\n     */\n\n    /**\n     * Step Chart reusable API class that renders a\n     * simple and configurable step chart.\n     *\n     * @module Step\n     * @tutorial step\n     * @requires d3-array, d3-axis, d3-dispatch, d3-format, d3-scale, d3-selection, d3-transition\n     *\n     * @example\n     * var stepChart= step();\n     *\n     * stepChart\n     *     .height(500)\n     *     .width(800);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(stepChart);\n     *\n     */\n\n    return function module() {\n\n        let margin = {\n                top: 20,\n                right: 20,\n                bottom: 30,\n                left: 40\n            },\n            width = 960,\n            height = 500,\n            ease = d3Ease.easeQuadInOut,\n            data,\n            chartWidth, chartHeight,\n            xScale, yScale,\n            numOfVerticalTicks = 6,\n            xAxis, xAxisLabel,\n            yAxis, yAxisLabel,\n            xAxisLabelOffset = 45,\n            yAxisLabelOffset = -20,\n            xAxisPadding = {\n                top: 0,\n                left: 0,\n                bottom: 0,\n                right: 0\n            },\n            yTickPadding = 8,\n            svg,\n\n            valueLabel = 'value',\n            nameLabel = 'key',\n\n            maskGridLines,\n            baseLine,\n\n            // Dispatcher object to broadcast the mouse events\n            // Ref: https://github.com/mbostock/d3/wiki/Internals#d3_dispatch\n            dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove'),\n\n            // Formats\n            yAxisTickFormat = d3Format.format('.3'),\n\n            // extractors\n            getKey = ({key}) => key,\n            getValue = ({value}) => value;\n\n\n        /**\n         * This function creates the graph using the selection as container\n         * @param  {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {StepChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection){\n            _selection.each(function(_data){\n                // Make space on the left of the graph for the y axis label\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(_data);\n\n                buildScales();\n                buildAxis();\n                buildSVG(this);\n                drawGridLines();\n                drawSteps();\n                drawAxis();\n            });\n        }\n\n        /**\n         * Creates the d3 x and y axis, setting orientations\n         * @private\n         */\n        function buildAxis(){\n            xAxis = d3Axis.axisBottom(xScale);\n\n            yAxis = d3Axis.axisLeft(yScale)\n                .ticks(numOfVerticalTicks)\n                .tickPadding(yTickPadding)\n                .tickFormat(yAxisTickFormat);\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * Also applies the Margin convention\n         * @private\n         */\n        function buildContainerGroups(){\n            let container = svg\n              .append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n            container\n              .append('g')\n                .classed('grid-lines-group', true);\n            container\n              .append('g')\n                .classed('chart-group', true);\n            container\n              .append('g')\n                .classed('x-axis-group axis', true)\n              .append('g')\n                .classed('x-axis-label', true);\n            container\n              .append('g')\n                .classed('y-axis-group axis', true)\n              .append('g')\n                .classed('y-axis-label', true);\n            container\n                .append('g').classed('metadata-group', true);\n        }\n\n        /**\n         * Creates the x and y scales of the graph\n         * @private\n         */\n        function buildScales(){\n            xScale = d3Scale.scaleBand()\n                .domain(data.map(getKey))\n                .rangeRound([0, chartWidth])\n                .paddingInner(0);\n\n            yScale = d3Scale.scaleLinear()\n                .domain([0, d3Array.max(data, getValue)])\n                .rangeRound([chartHeight, 0]);\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container){\n            if (!svg) {\n                svg = d3Selection.select(container)\n                  .append('svg')\n                    .classed('britechart step-chart', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Cleaning data adding the proper format\n         * @param  {StepChartData} data Data\n         * @private\n         */\n        function cleanData(data) {\n            return data.map((d) => {\n                d.value = +d[valueLabel];\n                d.key = String(d[nameLabel]);\n\n                return d;\n            });\n        }\n\n        /**\n         * Draws the x and y axis on the svg object within their\n         * respective groups\n         * @private\n         */\n        function drawAxis(){\n            svg.select('.x-axis-group.axis')\n                .attr('transform', `translate(0, ${chartHeight})`)\n                .call(xAxis);\n\n            if (xAxisLabel) {\n                svg.select('.x-axis-label')\n                  .append('text')\n                    .attr('text-anchor', 'middle')\n                    .attr('x', chartWidth / 2)\n                    .attr('y', xAxisLabelOffset)\n                    .text(xAxisLabel);\n            }\n\n            svg.select('.y-axis-group.axis')\n                .call(yAxis);\n\n            if (yAxisLabel) {\n                svg.select('.y-axis-label')\n                  .append('text')\n                    .attr('x', -chartHeight / 2)\n                    .attr('y', yAxisLabelOffset)\n                    .attr('text-anchor', 'middle')\n                    .attr('transform', 'rotate(270 0 0)')\n                    .text(yAxisLabel);\n            }\n        }\n\n        /**\n         * Draws the step elements within the chart group\n         * @private\n         */\n        function drawSteps(){\n            let steps = svg.select('.chart-group').selectAll('.step').data(data);\n\n            // Enter\n            steps.enter()\n              .append('rect')\n                .classed('step', true)\n                .attr('x', chartWidth) // Initially drawing the steps at the end of Y axis\n                .attr('y', ({value}) => yScale(value))\n                .attr('width', xScale.bandwidth())\n                .attr('height', (d) => (chartHeight - yScale(d.value)))\n                .on('mouseover', function() {\n                    dispatcher.call('customMouseOver', this);\n                })\n                .on('mousemove', function(d) {\n                    dispatcher.call('customMouseMove', this, d, d3Selection.mouse(this), [chartWidth, chartHeight]);\n                })\n                .on('mouseout', function() {\n                    dispatcher.call('customMouseOut', this);\n                })\n              .merge(steps)\n                .transition()\n                .ease(ease)\n                .attr('x', ({key}) => xScale(key))\n                .attr('y', function(d) {\n                    return yScale(d.value);\n                })\n                .attr('width', xScale.bandwidth())\n                .attr('height', function(d) {\n                    return chartHeight - yScale(d.value);\n                });\n\n            // Exit\n            steps.exit()\n                .transition()\n                .style('opacity', 0)\n                .remove();\n        }\n\n        /**\n         * Draws grid lines on the background of the chart\n         * @return void\n         */\n        function drawGridLines(){\n            maskGridLines = svg.select('.grid-lines-group')\n                .selectAll('line.horizontal-grid-line')\n                .data(yScale.ticks(numOfVerticalTicks))\n                .enter()\n                  .append('line')\n                    .attr('class', 'horizontal-grid-line')\n                    .attr('x1', (xAxisPadding.left))\n                    .attr('x2', chartWidth)\n                    .attr('y1', (d) => yScale(d))\n                    .attr('y2', (d) => yScale(d));\n\n            //draw a horizontal line to extend x-axis till the edges\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-x-line')\n                .data([0])\n                .enter()\n                  .append('line')\n                    .attr('class', 'extended-x-line')\n                    .attr('x1', (xAxisPadding.left))\n                    .attr('x2', chartWidth)\n                    .attr('y1', height - margin.bottom - margin.top)\n                    .attr('y2', height - margin.bottom - margin.top);\n        }\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename) {\n            exportChart.call(exports, svg, filename);\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Step Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { width | module} Current width or step Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { height | module} Current height or Step Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the number of vertical ticks on the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { height | module} Current height or Step Chart module to chain calls\n         * @public\n         */\n        exports.numOfVerticalTicks = function(_x) {\n            if (!arguments.length) {\n                return numOfVerticalTicks;\n            }\n            numOfVerticalTicks = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the text of the xAxisLabel on the chart\n         * @param  {text} _x Desired text for the label\n         * @return { text | module} label or Step Chart module to chain calls\n         * @public\n         */\n        exports.xAxisLabel = function(_x) {\n            if (!arguments.length) {\n                return xAxisLabel;\n            }\n            xAxisLabel = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the offset of the xAxisLabel on the chart\n         * @param  {integer} _x Desired offset for the label\n         * @return { integer | module} label or Step Chart module to chain calls\n         * @public\n         */\n        exports.xAxisLabelOffset = function(_x) {\n            if (!arguments.length) {\n                return xAxisLabelOffset;\n            }\n            xAxisLabelOffset = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the text of the yAxisLabel on the chart\n         * @param  {text} _x Desired text for the label\n         * @return { text | module} label or Step Chart module to chain calls\n         * @public\n         */\n        exports.yAxisLabel = function(_x) {\n            if (!arguments.length) {\n                return yAxisLabel;\n            }\n            yAxisLabel = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the offset of the yAxisLabel on the chart\n         * @param  {integer} _x Desired offset for the label\n         * @return { integer | module} label or Step Chart module to chain calls\n         * @public\n         */\n        exports.yAxisLabelOffset = function(_x) {\n            if (!arguments.length) {\n                return yAxisLabelOffset;\n            }\n            yAxisLabelOffset = _x;\n            return this;\n        };\n\n        /**\n         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n         * We are going to expose this events:\n         * customMouseOver, customMouseMove and customMouseOut\n         *\n         * @return {module} Bar Chart\n         * @public\n         */\n        exports.on = function() {\n            let value = dispatcher.on.apply(dispatcher, arguments);\n\n            return value === dispatcher ? exports : value;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function(filename, title) {\n            exportChart.call(exports, svg, filename, title);\n        };\n\n        return exports;\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/step.js","define(function(require) {\n    'use strict';\n\n    const d3Array = require('d3-array');\n    const d3Axis = require('d3-axis');\n    const d3Brush = require('d3-brush');\n    const d3Ease = require('d3-ease');\n    const d3Scale = require('d3-scale');\n    const d3Shape = require('d3-shape');\n    const d3Selection = require('d3-selection');\n    const d3Time = require('d3-time');\n    const d3Transition = require('d3-transition');\n    const d3TimeFormat = require('d3-time-format');\n\n    const colorHelper = require('./helpers/colors');\n    const timeAxisHelper = require('./helpers/timeAxis');\n\n    const {axisTimeCombinations} = require('./helpers/constants');\n\n\n    /**\n     * @typedef BrushChartData\n     * @type {Object[]}\n     * @property {Number} value        Value to chart (required)\n     * @property {Date} date           Date of the value (required)\n     *\n     * @example\n     * [\n     *     {\n     *         value: 1,\n     *         date: '2011-01-06T00:00:00Z'\n     *     },\n     *     {\n     *         value: 2,\n     *         date: '2011-01-07T00:00:00Z'\n     *     }\n     * ]\n     */\n\n    /**\n     * Brush Chart reusable API class that renders a\n     * simple and configurable brush chart.\n     *\n     * @module Brush\n     * @tutorial brush\n     * @requires d3-array, d3-axis, d3-brush, d3-ease, d3-scale, d3-shape, d3-selection, d3-time, d3-time-format\n     *\n     * @example\n     * let brushChart = brush();\n     *\n     * brushChart\n     *     .height(500)\n     *     .width(800);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(brushChart);\n     *\n     */\n\n    return function module() {\n\n        let margin = {\n                top: 20,\n                right: 20,\n                bottom: 30,\n                left: 20\n            },\n            width = 960,\n            height = 500,\n            data,\n            svg,\n\n            ease = d3Ease.easeQuadOut,\n\n            dateLabel = 'date',\n            valueLabel = 'value',\n\n            dateRange = [null, null],\n\n            chartWidth, chartHeight,\n            xScale, yScale,\n            xAxis,\n\n            forceAxisSettings = null,\n            forcedXTicks = null,\n            forcedXFormat = null,\n\n            brush,\n            chartBrush,\n            handle,\n\n            tickPadding = 5,\n\n            onBrush = null,\n\n            gradient = colorHelper.colorGradients.greenBlueGradient,\n\n            // extractors\n            getValue = ({value}) => value,\n            getDate = ({date}) => date;\n\n\n        /**\n         * This function creates the graph using the selection as container\n         * @param  {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {BrushChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection){\n            _selection.each(function(_data){\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(cloneData(_data));\n\n                buildScales();\n                buildAxis();\n                buildSVG(this);\n                buildGradient();\n                buildBrush();\n                drawArea();\n                drawAxis();\n                drawBrush();\n                drawHandles();\n            });\n        }\n\n        /**\n         * Creates the d3 x axis, setting orientation\n         * @private\n         */\n        function buildAxis(){\n            let minor, major;\n\n            if (forceAxisSettings === 'custom' && typeof forcedXFormat === 'string') {\n                minor = {\n                    tick: forcedXTicks,\n                    format: d3TimeFormat.timeFormat(forcedXFormat)\n                };\n            } else {\n                ({minor, major} = timeAxisHelper.getXAxisSettings(data, width, forceAxisSettings));\n            }\n\n            xAxis = d3Axis.axisBottom(xScale)\n                .ticks(minor.tick)\n                .tickSize(10, 0)\n                .tickPadding([tickPadding])\n                .tickFormat(minor.format);\n        }\n\n        /**\n         * Creates the brush element and attaches a listener\n         * @return {void}\n         */\n        function buildBrush() {\n            brush = d3Brush.brushX()\n                .extent([[0, 0], [chartWidth, chartHeight]])\n                .on('brush', handleBrush)\n                .on('end', handleBrushEnded);\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * Also applies the Margin convention\n         * @private\n         */\n        function buildContainerGroups(){\n            let container = svg\n              .append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n            container\n              .append('g')\n                .classed('chart-group', true);\n            container\n              .append('g')\n                .classed('metadata-group', true);\n            container\n              .append('g')\n                .classed('x-axis-group', true);\n            container\n              .append('g')\n                .classed('brush-group', true);\n        }\n\n        /**\n         * Creates the gradient on the area\n         * @return {void}\n         */\n        function buildGradient() {\n            let metadataGroup = svg.select('.metadata-group');\n\n            metadataGroup.append('linearGradient')\n                .attr('id', 'brush-area-gradient')\n                .attr('gradientUnits', 'userSpaceOnUse')\n                .attr('x1', 0)\n                .attr('x2', xScale(data[data.length - 1].date))\n                .attr('y1', 0)\n                .attr('y2', 0)\n              .selectAll('stop')\n                .data([\n                    {offset: '0%', color: gradient[0]},\n                    {offset: '100%', color: gradient[1]}\n                ])\n              .enter().append('stop')\n                .attr('offset', ({offset}) => offset)\n                .attr('stop-color', ({color}) => color);\n        }\n\n        /**\n         * Creates the x and y scales of the graph\n         * @private\n         */\n        function buildScales(){\n            xScale = d3Scale.scaleTime()\n                .domain(d3Array.extent(data, getDate ))\n                .range([0, chartWidth]);\n\n            yScale = d3Scale.scaleLinear()\n                .domain([0, d3Array.max(data, getValue)])\n                .range([chartHeight, 0]);\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container){\n            if (!svg) {\n                svg = d3Selection.select(container)\n                  .append('svg')\n                    .classed('britechart brush-chart', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .attr('width', width)\n                .attr('height', height);\n        }\n\n        /**\n         * Cleaning data adding the proper format\n         *\n         * @param  {BrushChartData} data Data\n         */\n        function cleanData(data) {\n            return data.map(function (d) {\n                d.date = new Date(d[dateLabel]);\n                d.value = +d[valueLabel];\n\n                return d;\n            });\n        }\n\n        /**\n         * Clones the passed array of data\n         * @param  {Object[]} dataToClone Data to clone\n         * @return {Object[]}             Cloned data\n         */\n        function cloneData(dataToClone) {\n            return JSON.parse(JSON.stringify(dataToClone));\n        }\n\n        /**\n         * Draws the x axis on the svg object within its group\n         *\n         * @private\n         */\n        function drawAxis(){\n            svg.select('.x-axis-group')\n              .append('g')\n                .attr('class', 'x axis')\n                .attr('transform', `translate(0, ${chartHeight})`)\n                .call(xAxis);\n        }\n\n        /**\n         * Draws the area that is going to represent the data\n         *\n         * @return {void}\n         */\n        function drawArea() {\n            // Create and configure the area generator\n            let area = d3Shape.area()\n                .x(({date}) => xScale(date))\n                .y0(chartHeight)\n                .y1(({value}) => yScale(value))\n                .curve(d3Shape.curveBasis);\n\n            // Create the area path\n            svg.select('.chart-group')\n              .append('path')\n                .datum(data)\n                .attr('class', 'brush-area')\n                .attr('d', area);\n        }\n\n        /**\n         * Draws the Brush components on its group\n         * @return {void}\n         */\n        function drawBrush() {\n            chartBrush = svg.select('.brush-group')\n                                .call(brush);\n\n            // Update the height of the brushing rectangle\n            chartBrush.selectAll('rect')\n                .classed('brush-rect', true)\n                .attr('height', chartHeight);\n        }\n\n        /**\n         * Draws a handle for the Brush section\n         * @return {void}\n         */\n        function drawHandles() {\n            let handleFillColor = colorHelper.colorSchemasHuman.britechartsGreySchema[1];\n\n            // Styling\n            handle = chartBrush\n                        .selectAll('.handle.brush-rect')\n                        .style('fill', handleFillColor);\n        }\n\n        /**\n         * When a brush event happens, we can extract info from the extension\n         * of the brush.\n         *\n         * @return {void}\n         */\n        function handleBrush() {\n            let s = d3Selection.event.selection,\n                dateExtent = s.map(xScale.invert);\n\n            if (typeof onBrush === 'function') {\n                onBrush.call(null, dateExtent);\n            }\n\n            // updateHandlers(dateExtent);\n        }\n\n        /**\n         * Processes the end brush event, snapping the boundaries to days\n         * as showed on the example on https://bl.ocks.org/mbostock/6232537\n         * @return {void}\n         * @private\n         */\n        function handleBrushEnded() {\n            if (!d3Selection.event.sourceEvent) return; // Only transition after input.\n            if (!d3Selection.event.selection) return; // Ignore empty selections.\n\n            let d0 = d3Selection.event.selection.map(xScale.invert),\n                d1 = d0.map(d3Time.timeDay.round);\n\n            // If empty when rounded, use floor & ceil instead.\n            if (d1[0] >= d1[1]) {\n                d1[0] = d3Time.timeDay.floor(d0[0]);\n                d1[1] = d3Time.timeDay.offset(d1[0]);\n            }\n\n            d3Selection.select(this)\n                .transition()\n                .call(d3Selection.event.target.move, d1.map(xScale));\n        }\n\n        /**\n         * Sets a new brush extent within the passed percentage positions\n         * @param {Number} a Percentage of data that the brush start with\n         * @param {Number} b Percentage of data that the brush ends with\n         * @example\n         *     setBrushByPercentages(0.25, 0.5)\n         */\n        function setBrushByPercentages(a, b) {\n            let x0 = a * chartWidth,\n                x1 = b * chartWidth;\n\n            brush\n                .move(chartBrush, [x0, x1]);\n        }\n\n        /**\n         * Sets a new brush extent within the passed dates\n         * @param {String | Date} dateA Initial Date\n         * @param {String | Date} dateB End Date\n         */\n        function setBrushByDates(dateA, dateB) {\n            let x0 = xScale(new Date(dateA)),\n                x1 = xScale(new Date(dateB));\n\n            brush\n                .move(chartBrush, [x0, x1]);\n        }\n\n        /**\n         * Updates visibility and position of the brush handlers\n         * @param  {Number[]} dateExtent Date range\n         * @return {void}\n         */\n        function updateHandlers(dateExtent) {\n            if (dateExtent == null) {\n                handle.attr('display', 'none');\n            } else {\n                handle\n                    .attr('display', null)\n                    .attr('transform', function(d, i) {\n                        return `translate(${dateExtent[i]},${chartHeight / 2})`;\n                    });\n            }\n        }\n\n        // API\n\n        /**\n         * Gets or Sets the dateRange for the selected part of the brush\n         * @param  {String[]} _x Desired dateRange for the graph\n         * @return { dateRange | module} Current dateRange or Chart module to chain calls\n         * @public\n         */\n        exports.dateRange = function(_x) {\n            if (!arguments.length) {\n                return dateRange;\n            }\n            dateRange = _x;\n\n            if (Array.isArray(dateRange)) {\n                setBrushByDates(...dateRange);\n            }\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x axis grouping\n         * @param  {String} _x Desired format\n         * @return { (String|Module) }    Current format or module to chain calls\n         * @example\n         *     brush.forceAxisFormat(brush.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.forceAxisFormat = function(_x) {\n            if (!arguments.length) {\n              return forceAxisSettings;\n            }\n            forceAxisSettings = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x format\n         * It requires a `forceAxisFormat` of 'custom' in order to work.\n         * @param  {String} _x              Desired format for x axis\n         * @return { (String|Module) }      Current format or module to chain calls\n         */\n        exports.forcedXFormat = function(_x) {\n            if (!arguments.length) {\n              return forcedXFormat;\n            }\n            forcedXFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x ticks. It requires a `forceAxisFormat` of 'custom' in order to work.\n         * NOTE: This value needs to be a multiple of 2, 5 or 10. They won't always work as expected, as D3 decides at the end\n         * how many and where the ticks will appear.\n         *\n         * @param  {Number} _x              Desired number of x axis ticks (multiple of 2, 5 or 10)\n         * @return { (Number|Module) }      Current number or ticks or module to chain calls\n         */\n        exports.forcedXTicks = function(_x) {\n            if (!arguments.length) {\n              return forcedXTicks;\n            }\n            forcedXTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the constants to be used to force the x axis to respect a certain granularity\n         * current options: MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR\n         * @example\n         *     brush.forceAxisFormat(brush.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.axisTimeCombinations = axisTimeCombinations;\n\n        /**\n         * Gets or Sets the gradient of the chart\n         * @param  {String[]} _x Desired gradient for the graph\n         * @return { gradient | module} Current gradient or Chart module to chain calls\n         * @public\n         */\n        exports.gradient = function(_x) {\n            if (!arguments.length) {\n                return gradient;\n            }\n            gradient = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { height | module} Current height or Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the callback that will be called when the user brushes over the area\n         * @param  {Function} _x Callback to call\n         * @return {Function | module}    Current callback function or the Chart Module\n         */\n        exports.onBrush = function(_x) {\n            if (!arguments.length) return onBrush;\n            onBrush = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { width | module} Current width or Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _x;\n\n            return this;\n        };\n\n        return exports;\n    };\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/charts/brush.js","// https://d3js.org/d3-brush/ Version 1.0.4. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-drag'), require('d3-interpolate'), require('d3-selection'), require('d3-transition')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Dispatch,d3Drag,d3Interpolate,d3Selection,d3Transition) { 'use strict';\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = d3Dispatch.dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          d3Selection.select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = d3Interpolate.interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            d3Transition.interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = d3Selection.select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      d3Selection.customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (d3Selection.event.touches) { if (d3Selection.event.changedTouches.length < d3Selection.event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = d3Selection.event.target.__data__.type,\n        mode = (d3Selection.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && d3Selection.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = d3Selection.mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = d3Selection.select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (d3Selection.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = d3Selection.select(d3Selection.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      d3Drag.dragDisable(d3Selection.event.view);\n    }\n\n    nopropagation();\n    d3Transition.interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = d3Selection.mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (d3Selection.event.touches) {\n        if (d3Selection.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        d3Drag.dragEnable(d3Selection.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (d3Selection.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-brush/build/d3-brush.js\n// module id = 40\n// module chunks = 0","// https://d3js.org/d3-drag/ Version 1.0.4. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-selection')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-selection'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3));\n}(this, (function (exports,d3Dispatch,d3Selection) { 'use strict';\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n};\n\nvar nodrag = function(view) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch$$1) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch$$1;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: d3Selection.event.x, y: d3Selection.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = d3Dispatch.dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), d3Selection.mouse, this, arguments);\n    if (!gesture) return;\n    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(d3Selection.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(d3Selection.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = d3Selection.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, d3Selection.touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = d3Selection.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = d3Selection.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!d3Selection.customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      d3Selection.customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nexports.drag = drag;\nexports.dragDisable = nodrag;\nexports.dragEnable = yesdrag;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-drag/build/d3-drag.js\n// module id = 41\n// module chunks = 0"],"sourceRoot":""}
>>>>>>> e7c49683e1a51ef1ed5e23a7cfa1c8b5be33fcf0
