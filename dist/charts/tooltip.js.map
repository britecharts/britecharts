{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6******","webpack:///webpack/bootstrap fa2d188f36d654c2671f?0a8b******","webpack:///./src/charts/tooltip.js","webpack:///external \"d3\"?c0c4******"],"names":[],"mappings":"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","file":"tooltip.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"d3\")) : factory(root[\"d3\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fa2d188f36d654c2671f\n **/","define(function(require){\n    'use strict';\n\n    const d3 = require('d3');\n\n    /**\n     * @typedef D3Selection\n     * @type Array[]\n     */\n\n    /**\n     * Tooltip Component reusable API class that renders a\n     * simple and configurable tooltip element for Britechart's\n     * line chart or stacked area chart.\n     *\n     * @module Tooltip\n     * @version 0.0.1\n     * @tutorial tooltip\n     * @requires d3\n     *\n     * @example\n     * var lineChart = line(),\n     *     tooltip = tooltip();\n     *\n     * tooltip\n     *     .title('Tooltip title');\n     *\n     * lineChart\n     *     .width(500)\n     *     .on('customMouseOver', function() {\n     *          tooltip.show();\n     *     })\n     *     .on('customMouseMove', function(dataPoint, topicColorMap, dataPointXPosition) {\n     *          tooltip.update(dataPoint, topicColorMap, dataPointXPosition);\n     *     })\n     *     .on('customMouseOut', function() {\n     *          tooltip.hide();\n     *     });\n     *\n     * d3.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(lineChart);\n     *\n     * d3.select('.metadata-group .hover-marker')\n     *     .datum([])\n     *     .call(tooltip);\n     *\n     */\n    return function module() {\n\n        let margin = {\n                top: 2,\n                right: 2,\n                bottom: 2,\n                left: 2\n            },\n            width = 250,\n            height = 45,\n\n            title = 'Tooltip title',\n\n            // tooltip\n            tooltip,\n            tooltipOffset = {\n                y: -55,\n                x: 0\n            },\n            tooltipMaxTopicLength = 170,\n            tooltipTextContainer,\n            tooltipDivider,\n            tooltipBody,\n            tooltipTitle,\n            tooltipWidth = 250,\n            tooltipHeight = 48,\n            ttTextX = 0,\n            ttTextY = 37,\n            textSize,\n            entryLineLimit = 3,\n\n            circleYOffset = 8,\n\n            colorMap,\n            bodyFillColor = '#FFFFFF',\n            borderStrokeColor = '#D2D6DF',\n            titleFillColor = '#6D717A',\n            textFillColor = '#282C35',\n\n            // formats\n            tooltipDateFormat = d3.time.format('%B %d, %Y'),\n            tooltipValueFormat = d3.format(',2f'),\n\n            chartWidth, chartHeight,\n            data,\n            svg;\n\n\n        /**\n         * This function creates the graph using the selection as container\n         * @param {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {Object} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function(_data){\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = _data;\n\n                buildSVG(this);\n            });\n        }\n\n        /**\n         * Builds containers for the tooltip\n         * Also applies the Margin convention\n         * @private\n         */\n        function buildContainerGroups() {\n            var container = svg.append('g')\n                .classed('tooltip-container-group', true)\n                .attr({\n                    transform: `translate( ${margin.left}, ${margin.top})`\n                });\n\n            container.append('g').classed('tooltip-group', true);\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3.select(container)\n                    .append('g')\n                    .classed('britechart britechart-tooltip', true);\n\n                buildContainerGroups();\n                drawTooltip();\n            }\n            svg.transition().attr({\n                width: width + margin.left + margin.right,\n                height: height + margin.top + margin.bottom\n            });\n            // Hidden by default\n            exports.hide();\n        }\n\n        /**\n         * Resets the tooltipBody content\n         * @return void\n         */\n        function cleanContent(){\n            tooltipBody.selectAll('text').remove();\n            tooltipBody.selectAll('circle').remove();\n        }\n\n        /**\n         * Draws the different elements of the Tooltip box\n         * @return void\n         */\n        function drawTooltip(){\n            tooltipTextContainer = svg.selectAll('.tooltip-group')\n                .append('g')\n                .classed('tooltip-text', true);\n\n            tooltip = tooltipTextContainer\n                .append('rect')\n                .classed('tooltip-text-container', true)\n                .attr({\n                    'x': -tooltipWidth / 4 + 8,\n                    'y': 0,\n                    'width': tooltipWidth,\n                    'height': tooltipHeight,\n                    'rx': 3,\n                    'ry': 3\n                })\n                .style({\n                    'fill': bodyFillColor,\n                    'stroke': borderStrokeColor,\n                    'stroke-width': 1\n                });\n\n            tooltipTitle = tooltipTextContainer\n                .append('text')\n                .classed('tooltip-title', true)\n                .attr({\n                    'x': -tooltipWidth / 4 + 17,\n                    'dy': '.35em',\n                    'y': 16\n                })\n                .style({\n                    'fill': titleFillColor\n                });\n\n            tooltipDivider = tooltipTextContainer\n                .append('line')\n                .classed('tooltip-divider', true)\n                .attr({\n                    'x1': -tooltipWidth / 4 + 15,\n                    'y1': 31,\n                    'x2': 265,\n                    'y2': 31\n                })\n                .style({\n                    'stroke': borderStrokeColor\n                });\n\n            tooltipBody = tooltipTextContainer\n                .append('g')\n                .classed('tooltip-body', true)\n                .style({\n                    'transform': 'translateY(8px)',\n                    'fill': textFillColor\n                });\n        }\n\n        /**\n         * Resets the height of the tooltip and the pointer for the text\n         * position\n         */\n        function resetSizeAndPositionPointers() {\n            tooltipHeight = 48;\n            ttTextY = 37;\n            ttTextX = 0;\n        }\n\n        /**\n         * Draws the data entries inside the tooltip for a given topic\n         * @param  {Object} topic Topic to extract data from\n         * @return void\n         */\n        function updateContent(topic){\n            var value = topic.value ? topic.value : topic.views,\n                name = topic.name,\n                tooltipRight,\n                tooltipLeftText,\n                tooltipRightText,\n                elementText;\n\n            tooltipLeftText = topic.topicName || name;\n\n            if (topic.missingValue) {\n                tooltipRightText = '-';\n            } else {\n                tooltipRightText = value ? tooltipValueFormat(value) : 0;\n            }\n\n            elementText = tooltipBody\n                .append('text')\n                .classed('tooltip-left-text', true)\n                .attr({\n                    'dy': '1em',\n                    'x': ttTextX - 20,\n                    'y': ttTextY\n                })\n                .style('fill', 'black')\n                .text(tooltipLeftText)\n                .call(textWrap, tooltipMaxTopicLength, -25);\n\n            tooltipRight = tooltipBody\n                .append('text')\n                .classed('tooltip-right-text', true)\n                .attr({\n                    'dy': '1em',\n                    'x': ttTextX + 8,\n                    'y': ttTextY\n                })\n                .style('fill', 'black')\n                .text(tooltipRightText);\n\n            textSize = elementText.node().getBBox();\n            tooltipHeight += textSize.height + 5;\n\n            // Not sure if necessary\n            tooltipRight.attr({\n                'x': tooltipWidth - tooltipRight.node().getBBox().width - 10 - tooltipWidth / 4\n            });\n\n            tooltipBody\n                .append('circle')\n                .classed('tooltip-circle', true)\n                .attr({\n                    'cx': 23 - tooltipWidth / 4,\n                    'cy': (ttTextY + circleYOffset),\n                    'r': 5\n                })\n                .style({\n                    'fill': colorMap[name],\n                    'stroke-width': 1\n                });\n\n            ttTextY += textSize.height + 7;\n        }\n\n        /**\n         * Updates size and position of tooltip depending on the side of the chart we are in\n         * @param  {Object} dataPoint DataPoint of the tooltip\n         * @param  {Number} xPosition DataPoint's x position in the chart\n         * @return void\n         */\n        function updatePositionAndSize(dataPoint, xPosition){\n            tooltip\n                .attr({\n                    'width': tooltipWidth,\n                    'height': tooltipHeight + 10\n                });\n\n            // show tooltip to the right\n            if ((xPosition - tooltipWidth) < 0) {\n                // Tooltip on the right\n                tooltipTextContainer\n                    .attr('transform', 'translate(' + (tooltipWidth - 185) + ',' + tooltipOffset.y + ')');\n            } else {\n                // Tooltip on the left\n                tooltipTextContainer\n                    .attr('transform', 'translate(' + (-205) + ',' + tooltipOffset.y + ')');\n            }\n\n            tooltipDivider\n                .attr({\n                    'x2': tooltipWidth - 60\n                });\n        }\n\n        /**\n         * Updates value of tooltipTitle with the data meaning and the date\n         * @param  {Object} dataPoint Point of data to use as source\n         * @return void\n         */\n        function updateTitle(dataPoint) {\n            var date = dataPoint.date ? new Date(dataPoint.date) : new Date(dataPoint.key),\n                tooltipTitleText = title + ' - ' + tooltipDateFormat(date);\n\n            tooltipTitle.text(tooltipTitleText);\n        }\n\n        /**\n         * Updates tooltip title, content, size and position\n         * TODO: Think about data normalization here or conventions\n         *\n         * @param  {Object} dataPoint Current datapoint to show info about\n         * @return void\n         */\n        function updateTooltip(dataPoint, position) {\n            var topics = dataPoint.topics ? dataPoint.topics : dataPoint.values;\n\n            cleanContent();\n            resetSizeAndPositionPointers();\n            updateTitle(dataPoint);\n            topics.forEach(updateContent);\n            updatePositionAndSize(dataPoint, position);\n        }\n\n        /**\n         * Wraps a text given the text, width, x position and textFormatter function\n         * @param  {D3Selection} text  Selection with the text to wrap inside\n         * @param  {Number} width Desired max width for that line\n         * @param  {Number} xpos  Initial x position of the text\n         *\n         * REF: http://bl.ocks.org/mbostock/7555321\n         * More discussions on https://github.com/mbostock/d3/issues/1642\n         */\n        function textWrap(text, width, xpos) {\n            xpos = xpos || 0;\n\n            text.each(function() {\n                var words,\n                    word,\n                    line,\n                    lineNumber,\n                    lineHeight,\n                    y,\n                    dy,\n                    tspan;\n\n                text = d3.select(this);\n\n                words = text.text().split(/\\s+/).reverse();\n                line = [];\n                lineNumber = 0;\n                lineHeight = 1.2;\n                y = text.attr('y');\n                dy = parseFloat(text.attr('dy'));\n                tspan = text\n                    .text(null)\n                    .append('tspan')\n                    .attr({\n                        'x': xpos,\n                        'y': y,\n                        'dy': dy + 'em'\n                    });\n\n                while ((word = words.pop())) {\n                    line.push(word);\n                    tspan.text(line.join(' '));\n\n                    if (tspan.node().getComputedTextLength() > width) {\n                        line.pop();\n                        tspan.text(line.join(' '));\n\n                        if (lineNumber < entryLineLimit - 1) {\n                            line = [word];\n                            tspan = text.append('tspan')\n                                .attr('x', xpos)\n                                .attr('y', y)\n                                .attr('dy', ++lineNumber * lineHeight + dy + 'em')\n                                .text(word);\n                        }\n                    }\n                }\n            });\n        }\n\n        /**\n         * Hides the tooltip\n         * @return {Module} Tooltip module to chain calls\n         * @public\n         */\n        exports.hide = function() {\n            svg.style('display', 'none');\n\n            return this;\n        };\n\n        /**\n         * Shows the tooltip\n         * @return {Module} Tooltip module to chain calls\n         * @public\n         */\n        exports.show = function() {\n            svg.style('display', 'block');\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the title of the tooltip\n         * @param  {string} _x Desired title\n         * @return { string | module} Current title or module to chain calls\n         * @public\n         */\n        exports.title = function(_x) {\n            if (!arguments.length) {\n                return title;\n            }\n            title = _x;\n            return this;\n        };\n\n        /**\n         * Updates the position and content of the tooltip\n         * @param  {Object} dataPoint    Datapoint to represent\n         * @param  {Object} colorMapping Color scheme of the topics\n         * @param  {Number} position     X-scale position in pixels\n         * @return {Module} Tooltip module to chain calls\n         * @public\n         */\n        exports.update = function(dataPoint, colorMapping, position) {\n            colorMap = colorMapping;\n            updateTooltip(dataPoint, position);\n\n            return this;\n        };\n\n        return exports;\n\n    };\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/tooltip.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"d3\"\n ** module id = 1\n ** module chunks = 0 1 2 3 4 5 6 7\n **/"],"sourceRoot":""}