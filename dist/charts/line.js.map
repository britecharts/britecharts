{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6**","webpack:///webpack/bootstrap a433c8ffe9601339258a?63cf**","webpack:///./src/charts/line.js","webpack:///external \"d3\"?c0c4**","webpack:///external \"underscore\""],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA,mCAAO,UAAS,OAAT,EAAiB;AACpB,kBADoB;;AAGpB,SAAM,IAAI,oBAAQ,CAAR,CAAJ;SACF,KAAK,oBAAQ,CAAR,CAAL;;;;;;;;;;;AAJgB,YAeb,SAAS,MAAT,GAAiB;;AAEpB,aAAI,SAAS;AACL,kBAAK,EAAL;AACA,oBAAO,EAAP;AACA,qBAAQ,EAAR;AACA,mBAAM,EAAN;UAJJ;aAMA,QAAQ,GAAR;aACA,SAAS,GAAT;aACA,cAAc,IAAd;aACA,mBAAmB,GAAnB;aACA,eAVJ;aAWI,sBAXJ;aAWgB,uBAXhB;aAYI,kBAZJ;aAYY,kBAZZ;aAYoB,sBAZpB;aAaI,iBAbJ;aAaW,sBAbX;aAauB,iBAbvB;aAcI,eAAe;AACX,kBAAK,CAAL;AACA,mBAAM,EAAN;AACA,qBAAQ,CAAR;AACA,oBAAO,CAAP;UAJJ;aAMA,aAAa,CACT,SADS,EAET,SAFS,EAGT,SAHS,EAIT,SAJS,EAKT,SALS,EAMT,SANS,CAAb;aAQA,aAAa;AACT,wBAAW,CAAX;AACA,wBAAW,CAAX;AACA,wBAAW,CAAX;AACA,wBAAW,CAAX;AACA,wBAAW,CAAX;AACA,wBAAW,CAAX;UANJ;aAQA,yBApCJ;aAqCI,OAAO,MAAP;aAEA,gBAvCJ;aAwCI,sBAxCJ;aAyCI,4BAzCJ;aA2CI,oBA3CJ;aA4CI,yBA5CJ;aA6CI,kBAAkB,CAAlB;aAEA,mBA/CJ;aAgDI,eAAe,kBAAf;aACA,mCAjDJ;aAkDI,8BAlDJ;;;;AAqDI,mBAAU,SAAV,OAAU,IAAK;AAAE,oBAAO,EAAE,IAAF,CAAT;UAAL;aACV,WAAW,SAAX,QAAW,IAAK;AAAE,oBAAO,EAAE,KAAF,CAAT;UAAL;aACX,WAAW,SAAX,QAAW,IAAK;AAAE,oBAAO,EAAE,KAAF,CAAT;UAAL;aACX,eAAe,SAAf,YAAe,IAAK;AAAE,oBAAO,WAAW,EAAE,KAAF,CAAlB,CAAF;UAAL;;;;AAGf,6BAAoB,GAAG,MAAH,CAAU,GAAV,CAApB;aACA,kBAAkB,GAAG,IAAH,CAAQ,MAAR,CAAe,IAAf,CAAlB;aACA,mBAAmB,GAAG,IAAH,CAAQ,MAAR,CAAe,IAAf,CAAnB;;;;AAGA,oBAAW,GAAG,QAAH,CAAY,iBAAZ,EAA+B,gBAA/B,EAAiD,iBAAjD,CAAX;;;;;;;AAlEgB,kBAyEX,OAAT,CAAiB,UAAjB,EAA4B;;AAExB,wBAAW,IAAX,CAAgB,UAAS,KAAT,EAAe;AAC3B,8BAAa,QAAQ,OAAO,IAAP,GAAc,OAAO,KAAP,CADR;AAE3B,+BAAc,SAAS,OAAO,GAAP,GAAa,OAAO,MAAP,CAFT;AAG3B,wBAAO,MAAM,IAAN,CAHoB;AAI3B,8BAAa,MAAM,UAAN,CAJc;AAK3B,oCAAmB,MAAM,gBAAN,CALQ;;AAO3B,+BAP2B;AAQ3B,6BAR2B;AAS3B,0BAAS,IAAT,EAT2B;AAU3B,iCAV2B;AAW3B,4BAX2B;AAY3B,6BAZ2B;;AAc3B,qBAAG,mBAAH,EAAuB;AACnB,0CADmB;AAEnB,wCAFmB;AAGnB,sCAHmB;kBAAvB;cAdY,CAAhB,CAFwB;UAA5B;;;;;;AAzEoB,kBAqGX,cAAT,GAAyB;AACrB,iBACK,EADL,CACQ,WADR,EACqB,eADrB,EAEK,EAFL,CAEQ,UAFR,EAEoB,cAFpB,EAGK,EAHL,CAGQ,WAHR,EAGqB,eAHrB,EADqB;UAAzB;;;;;;;AArGoB,kBAiHX,iBAAT,CAA2B,SAA3B,EAAqC;AACjC,uBAAU,SAAV,CAAoB,YAApB,EACK,IADL,CACU,WADV,EACuB,kBADvB,EADiC;UAArC;;;;;;AAjHoB,kBA0HX,SAAT,GAAoB;AAChB,qBAAQ,GAAG,GAAH,CAAO,IAAP,GACH,KADG,CACG,MADH,EAEH,MAFG,CAEI,QAFJ,EAGH,KAHG,CAGG,2BAA2B,KAA3B,EAAkC,WAAW,MAAX,CAHrC,EAIH,QAJG,CAIM,EAJN,EAIU,CAJV,EAIa,WAJb,CAIyB,CAJzB,EAKH,UALG,CAKQ,eALR,CAAR,CADgB;;AAQhB,0BAAa,GAAG,GAAH,CAAO,IAAP,GACR,KADQ,CACF,MADE,EAER,KAFQ,CAEF,GAAG,IAAH,CAAQ,MAAR,CAFE,CAGR,QAHQ,CAGC,CAHD,EAGI,CAHJ,EAIR,MAJQ,CAID,QAJC,EAKR,UALQ,CAKG,gBALH,CAAb,CARgB;;AAehB,qBAAQ,GAAG,GAAH,CAAO,IAAP,GACH,KADG,CACG,MADH,EAEH,MAFG,CAEI,MAFJ,EAGH,KAHG,CAGG,eAHH,EAIH,QAJG,CAIM,CAAC,CAAD,CAJN,EAKH,WALG,CAKS,CAAC,CAAD,CALT,EAMH,UANG,CAMQ,iBANR,CAAR,CAfgB;UAApB;;;;;;;;AA1HoB,kBAwJX,oBAAT,GAA+B;AAC5B,iBAAI,YAAY,IAAI,MAAJ,CAAW,GAAX,EACV,OADU,CACF,iBADE,EACiB,IADjB,EAEV,IAFU,CAEL,WAFK,iBAEqB,OAAO,IAAP,SAAe,OAAO,GAAP,MAFpC,CAAZ,CADwB;;AAK3B,uBACK,MADL,CACY,GADZ,EACiB,OADjB,CACyB,cADzB,EACyC,IADzC,EAEK,MAFL,CAEY,GAFZ,EAEiB,OAFjB,CAEyB,QAFzB,EAEmC,IAFnC,EAL2B;AAQ3B,uBAAU,SAAV,CAAoB,eAApB,EACK,MADL,CACY,GADZ,EACiB,OADjB,CACyB,YADzB,EACuC,IADvC,EAR2B;AAU3B,uBACK,MADL,CACY,GADZ,EACiB,OADjB,CACyB,qBADzB,EACgD,IADhD,EAV2B;AAY3B,uBACK,MADL,CACY,GADZ,EACiB,OADjB,CACyB,kBADzB,EAC6C,IAD7C,EAZ2B;AAc3B,uBACK,MADL,CACY,GADZ,EACiB,OADjB,CACyB,aADzB,EACwC,IADxC,EAd2B;AAgB3B,uBACK,MADL,CACY,GADZ,EACiB,OADjB,CACyB,gBADzB,EAC2C,IAD3C,EAhB2B;UAA/B;;;;;;AAxJoB,kBAgLX,WAAT,GAAsB;AAClB,iBAAI,OAAO,GAAG,GAAH,CAAO,IAAP,EAAa,cAAM;AACtB,wBAAO,GAAG,GAAH,CAAO,GAAG,IAAH,EAAS,OAAhB,CAAP,CADsB;cAAN,CAApB;iBAGA,OAAO,GAAG,GAAH,CAAO,IAAP,EAAa,UAAS,EAAT,EAAa;AAAE,wBAAO,GAAG,GAAH,CAAO,GAAG,IAAH,EAAS,OAAhB,CAAP,CAAF;cAAb,CAApB;iBACA,OAAO,GAAG,GAAH,CAAO,IAAP,EAAa,UAAS,EAAT,EAAa;AAAE,wBAAO,GAAG,GAAH,CAAO,GAAG,IAAH,EAAS,QAAhB,CAAP,CAAF;cAAb,CAApB;iBACA,OAAO,GAAG,GAAH,CAAO,IAAP,EAAa,UAAS,EAAT,EAAa;AAAE,wBAAO,GAAG,GAAH,CAAO,GAAG,IAAH,EAAS,QAAhB,CAAP,CAAF;cAAb,CAApB,CANc;;AAQlB,sBAAS,GAAG,IAAH,CAAQ,KAAR,GACJ,UADI,CACO,CAAC,CAAD,EAAI,UAAJ,CADP,EAEJ,MAFI,CAEG,CAAC,IAAD,EAAO,IAAP,CAFH,CAAT,CARkB;;AAYlB,sBAAS,GAAG,KAAH,CAAS,MAAT,GACJ,UADI,CACO,CAAC,WAAD,EAAc,CAAd,CADP,EAEJ,MAFI,CAEG,CAAC,KAAK,GAAL,CAAS,IAAT,CAAD,EAAiB,KAAK,GAAL,CAAS,IAAT,CAAjB,CAFH,EAGJ,IAHI,CAGC,CAHD,CAAT,CAZkB;;AAiBlB,0BAAa,GAAG,KAAH,CAAS,OAAT,GACR,KADQ,CACF,UADE,EAER,MAFQ,CAED,KAAK,GAAL,CAAS,QAAT,CAFC,CAAb,CAjBkB;;AAqBlB,6BAAgB,EAAE,MAAF,CACZ,WAAW,MAAX,EADY,EAEZ,WAAW,KAAX,EAFY,CAAhB,CArBkB;UAAtB;;;;;;AAhLoB,kBA+MX,QAAT,CAAkB,SAAlB,EAA4B;AACxB,iBAAI,CAAC,GAAD,EAAM;AACN,uBAAM,GAAG,MAAH,CAAU,SAAV,EACD,MADC,CACM,KADN,EAED,OAFC,CAEO,uBAFP,EAEgC,IAFhC,CAAN,CADM;;AAKN,wCALM;cAAV;;AAQA,iBACK,UADL,GAEK,IAFL,CAEU,IAFV,EAGK,IAHL,CAGU;AACF,wBAAO,KAAP;AACA,yBAAQ,MAAR;cALR,EATwB;UAA5B;;;;;;AA/MoB,kBAqOX,wBAAT,GAAmC;AAC/B,qCAAwB,SAAxB,CAAkC,mBAAlC,EAAuD,MAAvD,GAD+B;UAAnC;;;;;;;;AArOoB,kBA+OX,QAAT,GAAmB;AACf,iBAAI,MAAJ,CAAW,uBAAX,EACK,UADL,GAEK,IAFL,CAEU,IAFV,EAGK,IAHL,CAGU,WAHV,EAGuB,iBAAiB,WAAjB,GAA+B,GAA/B,CAHvB,CAIK,IAJL,CAIU,KAJV,EADe;;AAOf,iBAAI,MAAJ,CAAW,2BAAX,EACK,UADL,GAEK,IAFL,CAEU,IAFV,EAGK,IAHL,CAGU,WAHV,EAGuB,kBAAkB,cAAc,EAAd,CAAlB,GAAsC,GAAtC,CAHvB,CAIK,IAJL,CAIU,UAJV,EAPe;;AAaf,iBAAI,MAAJ,CAAW,sBAAX,EACK,UADL,GAEK,IAFL,CAEU,IAFV,EAGK,IAHL,CAGU,WAHV,EAGuB,eAAgB,CAAC,aAAa,IAAb,GAAqB,MAAtC,CAHvB,CAIK,IAJL,CAIU,KAJV,EAKK,IALL,CAKU,iBALV,EAbe;UAAnB;;;;;;AA/OoB,kBAwQX,SAAT,GAAoB;AAChB,iBAAI,iBAAJ;iBACI,qBADJ;iBAEI,4BAFJ,CADgB;;AAKhB,yBAAY,GAAG,GAAH,CAAO,IAAP,GACP,CADO,CACL,UAAS,CAAT,EAAY;AACX,wBAAO,OAAO,EAAE,IAAF,CAAd,CADW;cAAZ,CADK,CAIP,CAJO,CAIL,UAAS,CAAT,EAAY;AAAE,wBAAO,OAAO,EAAE,KAAF,CAAd,CAAF;cAAZ,CAJP,CALgB;;AAWhB,qBAAQ,IAAI,MAAJ,CAAW,cAAX,EAA2B,SAA3B,CAAqC,OAArC,EACH,IADG,CACE,IADF,CAAR,CAXgB;;AAchB,mBACK,KADL,GAEK,MAFL,CAEY,GAFZ,EAGK,IAHL,CAGU,OAHV,EAGmB,OAHnB,EAIK,MAJL,CAIY,MAJZ,EAKK,IALL,CAKU,OALV,EAKmB,MALnB,EAMK,IANL,CAMU,GANV,EAMe,UAAS,CAAT,EAAY;AACnB,wBAAO,UAAU,EAAE,IAAF,CAAjB,CADmB;cAAZ,CANf,CASK,KATL,CASW;AACH,2BAAU,YAAV;cAVR,EAdgB;;AA2BhB,mBACK,IADL,GAEK,MAFL;;;AA3BgB,6BAgChB,GAAmB,IAAI,MAAJ,CAAW,MAAX,EACd,IADc,CACT,OADS,EACA,mBADA,EAEd,IAFc,CAET,OAFS,EAEA,QAAQ,EAAR,CAFA,CAGd,IAHc,CAGT,QAHS,EAGC,SAAS,EAAT,CAHD,CAId,IAJc,CAIT,GAJS,EAIJ,EAJI,EAKd,IALc,CAKT,GALS,EAKJ,CAAC,EAAD,CALf,CAhCgB;;AAuChB,8BAAiB,UAAjB,GACK,QADL,CACc,IADd,EAEK,IAFL,CAEU,WAFV,EAGK,IAHL,CAGU,GAHV,EAGe,KAHf,EAIK,IAJL,CAIU,KAJV,EAIiB,YAAW;AACpB,kCAAiB,MAAjB,GADoB;cAAX,CAJjB,CAvCgB;UAApB;;;;;;AAxQoB,kBA4TX,aAAT,GAAwB;AACpB,6BAAgB,IAAI,MAAJ,CAAW,mBAAX,EACX,SADW,CACD,2BADC,EAEX,IAFW,CAEN,OAAO,KAAP,CAAa,CAAb,CAFM,EAGX,KAHW,GAIP,MAJO,CAIA,MAJA,EAKP,IALO,CAKF;AACF,0BAAS,sBAAT;AACA,uBAAO,CAAC,aAAa,IAAb,GAAoB,EAArB;AACP,uBAAM,UAAN;AACA,uBAAM,YAAS,CAAT,EAAY;AAAE,4BAAO,OAAO,CAAP,CAAP,CAAF;kBAAZ;AACN,uBAAM,YAAS,CAAT,EAAY;AAAE,4BAAO,OAAO,CAAP,CAAP,CAAF;kBAAZ;cAVF,CAAhB;;;AADoB,qBAepB,GAAW,IAAI,MAAJ,CAAW,mBAAX,EACN,SADM,CACI,sBADJ,EAEN,IAFM,CAED,CAAC,CAAD,CAFC,EAGN,KAHM,GAIF,MAJE,CAIK,MAJL,EAKF,IALE,CAKG;AACF,0BAAS,iBAAT;AACA,uBAAO,CAAC,aAAa,IAAb,GAAoB,EAArB;AACP,uBAAM,UAAN;AACA,uBAAM,SAAS,OAAO,MAAP,GAAgB,OAAO,GAAP;AAC/B,uBAAM,SAAS,OAAO,MAAP,GAAgB,OAAO,GAAP;cAVhC,CAAX,CAfoB;UAAxB;;;;;;;AA5ToB,kBA8VX,gBAAT,GAA2B;AACvB,uBAAU,IAAI,MAAJ,CAAW,iBAAX,EACL,MADK,CACE,MADF,EAEL,IAFK,CAEA,OAFA,EAEQ,SAFR,EAGL,IAHK,CAGA,IAHA,EAGM,CAHN,EAIL,IAJK,CAIA,IAJA,EAIM,MAJN,EAKL,IALK,CAKA,QALA,EAKU,SAAS,OAAO,GAAP,GAAa,OAAO,MAAP,CALhC,CAML,IANK,CAMA,OANA,EAMS,QAAQ,OAAO,IAAP,GAAc,OAAO,KAAP,CAN/B,CAOL,IAPK,CAOA,MAPA,EAOQ,YAPR,EAQL,KARK,CAQC,SARD,EAQY,MARZ,CAAV,CADuB;UAA3B;;;;;;AA9VoB,kBA8WX,kBAAT,GAA6B;AACzB,uCAA0B,IAAI,MAAJ,CAAW,iBAAX,EACrB,MADqB,CACd,GADc,EAErB,IAFqB,CAEhB,OAFgB,EAEP,cAFO,EAGrB,IAHqB,CAGhB,WAHgB,EAGH,eAAe,MAAf,GAAwB,GAAxB,GAA8B,GAA9B,GAAoC,GAApC,CAHvB,CADyB;;AAMzB,kCAAqB,wBAAwB,SAAxB,CAAkC,MAAlC,EAChB,IADgB,CACX,CAAC;AACH,uBAAM,CAAN;AACA,uBAAM,CAAN;AACA,uBAAM,CAAN;AACA,uBAAM,CAAN;cAJE,CADW,EAOhB,KAPgB,GAQhB,MARgB,CAQT,MARS,EAShB,OATgB,CASR,iBATQ,EASW,IATX,EAUhB,IAVgB,CAUX;AACF,uBAAM,CAAN;AACA,uBAAM,SAAS,OAAO,GAAP,GAAa,OAAO,MAAP;AAC5B,uBAAM,CAAN;AACA,uBAAM,CAAN;cAda,CAArB,CANyB;UAA7B;;;;;;;;;AA9WoB,kBA6YX,kBAAT,CAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAuC;AACnC,oBAAO,IAAK,IAAJ,CAAS,EAAT,EAAa,OAAb,KAAyB,IAAI,IAAJ,CAAS,GAAG,IAAH,CAAT,CAAkB,OAAlB,EAAzB,GAAyD,IAAI,IAAJ,CAAS,GAAG,IAAH,CAAT,CAAkB,OAAlB,KAA8B,IAAI,IAAJ,CAAS,EAAT,EAAa,OAAb,EAA9B,GAAwD,EAAlH,GAAuH,EAAvH,CAD4B;UAAvC;;;;;;;;AA7YoB,kBAuZX,0BAAT,CAAoC,KAApC,EAA2C,eAA3C,EAA4D;AACxD,iBAAI,kBAAkB,EAAlB;iBACA,UAAU,EAAV;iBACA,gBAAgB,KAAK,IAAL,CAAU,SAAS,kBAAkB,OAAlB,CAAT,CAA1B,CAHoD;;AAKxD,oBAAO,KAAK,GAAL,CAAS,eAAT,EAA0B,aAA1B,CAAP,CALwD;UAA5D;;;;;;;AAvZoB,kBAoaX,iBAAT,CAA2B,KAA3B,EAAkC;AAC9B,oBAAO,GAAG,KAAH,CAAS,KAAT,EAAgB,CAAhB,CAAP,CAD8B;UAAlC;;;;;;;AApaoB,kBA6aX,wBAAT,CAAkC,IAAlC,EAAwC;AACpC,oBAAO,KAAK,WAAL,GAAmB,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,IAAmC,YAAnC,CAD6B;UAAxC;;;;;;;AA7aoB,kBAsbX,mBAAT,CAA6B,MAA7B,EAAqC;AACjC,iBAAI,YAAY,OAAO,MAAP,CAAc,MAAd,CAAZ;iBACA,aAAa,GAAG,QAAH,CAAY,OAAZ,EAAqB,IAArB;iBACb,0BAFJ;iBAEoB,iCAFpB;iBAE2C,iCAF3C;iBAEkE,yCAFlE;iBAGI,4BAHJ,CADiC;;AAMjC,qCAAwB,yBAAyB,SAAzB,CAAxB,CANiC;AAOjC,8BAAiB,WAAW,UAAX,EAAuB,qBAAvB,EAA8C,CAA9C,CAAjB,CAPiC;AAQjC,qCAAwB,WAAW,cAAX,CAAxB,CARiC;AASjC,6CAAgC,WAAW,iBAAiB,CAAjB,CAA3C,CATiC;;AAWjC,iBAAI,iCAAiC,qBAAjC,EAAwD;AACxD,oCAAmB,mBAAmB,qBAAnB,EAA0C,qBAA1C,EAAiE,6BAAjE,CAAnB,CADwD;cAA5D,MAEO;AACH,oCAAmB,qBAAnB,CADG;cAFP;;AAMA,oBAAO,gBAAP,CAjBiC;UAArC;;;;;;;AAtboB,kBA+cX,eAAT,GAA0B;AACtB,iBAAI,kBAAkB,CAAC,OAAO,IAAP;;AACnB,yBAAY,oBAAoB,kBAAkB,IAAlB,IAA0B,eAA1B,CAAhC;iBACA,8BAFJ,CADsB;;AAKtB,iBAAG,SAAH,EAAc;;AAEV,oCAAmB,SAAnB;;AAFU,oCAIV,CAAoB,SAApB;;AAJU,mCAMV,GAAqB,OAAO,IAAI,IAAJ,CAAS,UAAU,IAAV,CAAhB,CAArB,CANU;AAOV,0BAAS,eAAT,CAAyB,SAAzB,EAAoC,aAApC,EAAmD,kBAAnD,EAPU;cAAd;UALJ;;;;;;;AA/coB,kBAoeX,cAAT,CAAwB,IAAxB,EAA6B;AACzB,qBAAQ,KAAR,CAAc,SAAd,EAAyB,MAAzB,EADyB;AAEzB,gCAAmB,OAAnB,CAA2B,cAA3B,EAA2C,KAA3C,EAFyB;AAGzB,qCAAwB,IAAxB,CAA6B,WAA7B,EAA0C,eAAe,MAAf,GAAwB,GAAxB,GAA8B,GAA9B,GAAoC,GAApC,CAA1C,CAHyB;;AAKzB,sBAAS,cAAT,CAAwB,IAAxB,EALyB;UAA7B;;;;;;AApeoB,kBAgfX,eAAT,CAAyB,IAAzB,EAA8B;AAC1B,qBAAQ,KAAR,CAAc,SAAd,EAAyB,OAAzB,EAD0B;AAE1B,gCAAmB,OAAnB,CAA2B,cAA3B,EAA2C,IAA3C,EAF0B;;AAI1B,sBAAS,eAAT,CAAyB,IAAzB,EAJ0B;UAA9B;;;;;;;AAhfoB,kBA4fX,mBAAT,CAA6B,SAA7B,EAAuC;AACnC;;;;AADmC,sBAKnC,CAAU,MAAV,GAAmB,EAAE,KAAF,CAAQ,UAAU,MAAV,CAAR,CACd,OADc,GAEd,MAFc,CAEP,UAAS,EAAT,EAAa;AACjB,wBAAO,WAAW,cAAc,GAAG,IAAH,CAAzB,CAAP,CADiB;cAAb,CAFO,CAKd,KALc,EAAnB,CALmC;;AAYnC,uBAAU,MAAV,CAAiB,OAAjB,CAAyB,UAAS,KAAT,EAAgB,KAAhB,EAAsB;AAC3C,qBAAI,SAAS,wBACI,MADJ,CACW,GADX,EAEI,OAFJ,CAEY,kBAFZ,EAEgC,IAFhC,CAAT;qBAGA,aAAa,EAAb,CAJuC;;AAM3C,wBAAO,MAAP,CAAc,QAAd,EACK,OADL,CACa,wBADb,EACuC,IADvC,EAEK,IAFL,CAEU;AACF,2BAAM,UAAN;AACA,2BAAM,CAAN;AACA,0BAAK,CAAL;kBALR,EAOK,KAPL,CAOW;AACH,+BAAU,cAAc,MAAM,IAAN,CAAxB;kBARR,EAN2C;;AAiB3C,wBAAO,IAAP,CAAY,WAAZ,EAAyB,eAAgB,CAAE,UAAF,GAAgB,GAAhC,GAAuC,OAAO,UAAU,MAAV,CAAiB,KAAjB,EAAwB,KAAxB,CAA9C,GAAgF,GAAhF,CAAzB,CAjB2C;cAAtB,CAAzB,CAZmC;UAAvC;;;;;;;AA5foB,kBAkiBX,kBAAT,CAA4B,SAA5B,EAAsC;AAClC,iBAAI,OAAO,IAAI,IAAJ,CAAS,UAAU,IAAV,CAAhB;iBACA,0BAA0B,OAAO,IAAP,CAA1B,CAF8B;;AAIlC,qCAAwB,IAAxB,CAA6B,WAA7B,iBAAuD,+BAAvD,EAJkC;UAAtC;;;;;;;AAliBoB,kBA8iBX,iBAAT,GAA6B;AACzB,oBAAO,QAAQ,gBAAR,CADkB;UAA7B;;;;;;;;;;AA9iBoB,gBA0jBpB,CAAQ,WAAR,GAAsB,UAAS,EAAT,EAAa;AAC/B,iBAAI,CAAC,UAAU,MAAV,EAAkB;AACnB,wBAAO,WAAP,CADmB;cAAvB;AAGA,2BAAc,EAAd,CAJ+B;AAK/B,oBAAO,IAAP,CAL+B;UAAb;;;;;;;;AA1jBF,gBAwkBpB,CAAQ,MAAR,GAAiB,UAAS,EAAT,EAAa;AAC1B,iBAAI,CAAC,UAAU,MAAV,EAAkB;AACnB,wBAAO,MAAP,CADmB;cAAvB;AAGA,iBAAI,WAAJ,EAAiB;AACb,yBAAQ,KAAK,IAAL,CAAU,KAAK,WAAL,CAAlB,CADa;cAAjB;AAGA,sBAAS,EAAT,CAP0B;AAQ1B,oBAAO,IAAP,CAR0B;UAAb;;;;;;;;AAxkBG,gBAylBpB,CAAQ,MAAR,GAAiB,UAAS,EAAT,EAAa;AAC1B,iBAAI,CAAC,UAAU,MAAV,EAAkB;AACnB,wBAAO,MAAP,CADmB;cAAvB;AAGA,sBAAS,EAAT,CAJ0B;AAK1B,oBAAO,IAAP,CAL0B;UAAb;;;;;;;;;AAzlBG,gBAwmBpB,CAAQ,gBAAR,GAA2B,UAAS,EAAT,EAAa;AACpC,iBAAI,CAAC,UAAU,MAAV,EAAkB;AACnB,wBAAO,gBAAP,CADmB;cAAvB;AAGA,gCAAmB,EAAnB,CAJoC;AAKpC,oBAAO,IAAP,CALoC;UAAb;;;;;;;;AAxmBP,gBAsnBpB,CAAQ,KAAR,GAAgB,UAAS,EAAT,EAAa;AACzB,iBAAI,CAAC,UAAU,MAAV,EAAkB;AACnB,wBAAO,KAAP,CADmB;cAAvB;AAGA,iBAAI,WAAJ,EAAiB;AACb,0BAAS,KAAK,IAAL,CAAU,KAAK,WAAL,CAAnB,CADa;cAAjB;AAGA,qBAAQ,EAAR,CAPyB;AAQzB,oBAAO,IAAP,CARyB;UAAb;;;AAtnBI,WAkoBpB,CAAG,MAAH,CAAU,OAAV,EAAmB,QAAnB,EAA6B,IAA7B,EAloBoB;;AAooBpB,gBAAO,OAAP,CApoBoB;MAAjB,CAfa;EAAjB,sJAAP,C;;;;;;ACAA,gD;;;;;;ACAA,gD","file":"line.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"), require(\"underscore\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\", \"underscore\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"d3\"), require(\"underscore\")) : factory(root[\"d3\"], root[\"underscore\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a433c8ffe9601339258a\n **/","define(function(require){\n    'use strict';\n\n    const _ = require('underscore'),\n        d3 = require('d3');\n\n    /**\n     * @fileOverview Line Chart reusable API module that allows us\n     * rendering a multi line and configurable chart.\n     *\n     * @tutorial line\n     * @exports charts/line\n     * @requires d3\n     * @version 0.0.1\n     */\n    return function module(){\n\n        let margin = {\n                top: 60,\n                right: 20,\n                bottom: 60,\n                left: 80\n            },\n            width = 960,\n            height = 500,\n            aspectRatio = null,\n            tooltipThreshold = 480,\n            svg,\n            chartWidth, chartHeight,\n            xScale, yScale, colorScale,\n            xAxis, xMonthAxis, yAxis,\n            xAxisPadding = {\n                top: 0,\n                left: 15,\n                bottom: 0,\n                right: 0\n            },\n            colorRange = [\n                '#4DC2F5',\n                '#4DDB86',\n                '#E5C400',\n                '#FF4D7C',\n                '#9963D5',\n                '#051C48'\n            ],\n            colorOrder = {\n                '#4DC2F5': 0,\n                '#4DDB86': 1,\n                '#E5C400': 2,\n                '#FF4D7C': 3,\n                '#9963D5': 4,\n                '#051C48': 5\n            },\n            topicColorMap,\n            ease = 'ease',\n\n            data,\n            dataByDate,\n            readableDataType,\n\n            baseLine,\n            maskGridLines,\n            numVerticalTics = 5,\n\n            overlay,\n            overlayColor = 'rgba(0, 0, 0, 0)',\n            verticalMarkerContainer,\n            verticalMarkerLine,\n\n            // extractors\n            getDate = d => { return d.date; },\n            getValue = d => { return d.value; },\n            getTopic = d => { return d.topic; },\n            getLineColor = d => { return colorScale(d.topic); },\n\n            // formats\n            yTickNumberFormat = d3.format('s'),\n            xTickDateFormat = d3.time.format('%e'),\n            xTickMonthFormat = d3.time.format('%B'),\n\n            // events\n            dispatch = d3.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\n        /**\n         * This function creates the graph using the selection and data provided\n         * @param  {D3Selection} _selection A d3 selection that represents\n         * the container(s) where the chart(s) will be rendered\n         */\n        function exports(_selection){\n            /** @param {object} _data The data to attach and generate the chart */\n            _selection.each(function(_data){\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = _data.data;\n                dataByDate = _data.dataByDate;\n                readableDataType = _data.readableDataType;\n\n                buildScales();\n                buildAxis();\n                buildSVG(this);\n                drawGridLines();\n                drawAxis();\n                drawLines();\n\n                if(shouldShowTooltip()){\n                    drawVerticalMarker();\n                    drawHoverOverlay();\n                    addMouseEvents();\n                }\n            });\n        }\n\n        /**\n         * Adds events to the container group if the environment is not mobile\n         * Adding: mouseover, mouseout and mousemove\n         */\n        function addMouseEvents(){\n            svg\n                .on('mouseover', handleMouseOver)\n                .on('mouseout', handleMouseOut)\n                .on('mousemove', handleMouseMove);\n        }\n\n        /**\n         * Adjusts the position of the y axis' ticks\n         * @param  {D3Selection} selection Y axis group\n         * @return void\n         */\n        function adjustYTickLabels(selection){\n            selection.selectAll('.tick text')\n                .attr('transform', 'translate(0, -7)');\n        }\n\n        /**\n         * Creates the d3 x and y axis, setting orientations\n         * @private\n         */\n        function buildAxis(){\n            xAxis = d3.svg.axis()\n                .scale(xScale)\n                .orient('bottom')\n                .ticks(getMaxNumOfHorizontalTicks(width, dataByDate.length))\n                .tickSize(10, 0).tickPadding(5)\n                .tickFormat(xTickDateFormat);\n\n            xMonthAxis = d3.svg.axis()\n                .scale(xScale)\n                .ticks(d3.time.months)\n                .tickSize(0, 0)\n                .orient('bottom')\n                .tickFormat(xTickMonthFormat);\n\n            yAxis = d3.svg.axis()\n                .scale(yScale)\n                .orient('left')\n                .ticks(numVerticalTics)\n                .tickSize([0])\n                .tickPadding([4])\n                .tickFormat(yTickNumberFormat);\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * NOTE: The order of drawing of this group elements is really important,\n         * as everything else will be drawn on top of them\n         * @private\n         */\n        function buildContainerGroups(){\n           let container = svg.append('g')\n                .classed('container-group', true)\n                .attr('transform', `translate(${margin.left},${margin.top})`);\n\n            container\n                .append('g').classed('x-axis-group', true)\n                .append('g').classed('axis x', true);\n            container.selectAll('.x-axis-group')\n                .append('g').classed('month-axis', true);\n            container\n                .append('g').classed('y-axis-group axis y', true);\n            container\n                .append('g').classed('grid-lines-group', true);\n            container\n                .append('g').classed('chart-group', true);\n            container\n                .append('g').classed('metadata-group', true);\n        }\n\n        /**\n         * Creates the x and y scales of the graph\n         * @private\n         */\n        function buildScales(){\n            let minX = d3.min(data, kv => {\n                    return d3.min(kv.Data, getDate);\n                }),\n                maxX = d3.max(data, function(kv) { return d3.max(kv.Data, getDate); }),\n                minY = d3.min(data, function(kv) { return d3.min(kv.Data, getValue); }),\n                maxY = d3.max(data, function(kv) { return d3.max(kv.Data, getValue); });\n\n            xScale = d3.time.scale()\n                .rangeRound([0, chartWidth])\n                .domain([minX, maxX]);\n\n            yScale = d3.scale.linear()\n                .rangeRound([chartHeight, 0])\n                .domain([Math.abs(minY), Math.abs(maxY)])\n                .nice(3);\n\n            colorScale = d3.scale.ordinal()\n                .range(colorRange)\n                .domain(data.map(getTopic));\n\n            topicColorMap = _.object(\n                colorScale.domain(),\n                colorScale.range()\n            );\n        }\n\n        /**\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container){\n            if (!svg) {\n                svg = d3.select(container)\n                    .append('svg')\n                    .classed('britechart line-chart', true);\n\n                buildContainerGroups();\n            }\n\n            svg\n                .transition()\n                .ease(ease)\n                .attr({\n                    width: width,\n                    height: height\n                });\n        }\n\n        /**\n         * Removes all the datapoints highlighter circles added to the marker container\n         * @return void\n         */\n        function cleanDataPointHighlights(){\n            verticalMarkerContainer.selectAll('.circle-container').remove();\n        }\n\n        /**\n         * @description\n         * Draws the x and y axis on the svg object within their\n         * respective groups\n         * @private\n         */\n        function drawAxis(){\n            svg.select('.x-axis-group .axis.x')\n                .transition()\n                .ease(ease)\n                .attr('transform', 'translate(0,' + chartHeight + ')')\n                .call(xAxis);\n\n            svg.select('.x-axis-group .month-axis')\n                .transition()\n                .ease(ease)\n                .attr('transform', 'translate(0,' + (chartHeight + 28) + ')')\n                .call(xMonthAxis);\n\n            svg.select('.y-axis-group.axis.y')\n                .transition()\n                .ease(ease)\n                .attr('transform', 'translate(' + (-xAxisPadding.left) + ', 0)')\n                .call(yAxis)\n                .call(adjustYTickLabels);\n        }\n\n        /**\n         * Draws the line elements within the chart group\n         * @private\n         */\n        function drawLines(){\n            let lines,\n                topicLine,\n                maskingRectangle;\n\n            topicLine = d3.svg.line()\n                .x(function(d) {\n                    return xScale(d.date);\n                })\n                .y(function(d) { return yScale(d.value); });\n\n            lines = svg.select('.chart-group').selectAll('.line')\n                .data(data);\n\n            lines\n                .enter()\n                .append('g')\n                .attr('class', 'topic')\n                .append('path')\n                .attr('class', 'line')\n                .attr('d', function(d) {\n                    return topicLine(d.Data);\n                })\n                .style({\n                    'stroke': getLineColor\n                });\n\n            lines\n                .exit()\n                .remove();\n\n            // We use a white rectangle to simulate the line drawing animation\n            maskingRectangle = svg.append('rect')\n                .attr('class', 'masking-rectangle')\n                .attr('width', width - 30)\n                .attr('height', height + 20)\n                .attr('x', 60)\n                .attr('y', -18);\n\n            maskingRectangle.transition()\n                .duration(2000)\n                .ease('cubic-out')\n                .attr('x', width)\n                .each('end', function() {\n                    maskingRectangle.remove();\n                });\n        }\n\n        /**\n         * Draws grid lines on the background of the chart\n         * @return void\n         */\n        function drawGridLines(){\n            maskGridLines = svg.select('.grid-lines-group')\n                .selectAll('line.horizontal-grid-line')\n                .data(yScale.ticks(5))\n                .enter()\n                    .append('line')\n                    .attr({\n                        'class': 'horizontal-grid-line',\n                        'x1': (-xAxisPadding.left - 30),\n                        'x2': chartWidth,\n                        'y1': function(d) { return yScale(d); },\n                        'y2': function(d) { return yScale(d); }\n                    });\n\n            //draw a horizontal line to extend x-axis till the edges\n            baseLine = svg.select('.grid-lines-group')\n                .selectAll('line.extended-x-line')\n                .data([0])\n                .enter()\n                    .append('line')\n                    .attr({\n                        'class': 'extended-x-line',\n                        'x1': (-xAxisPadding.left - 30),\n                        'x2': chartWidth,\n                        'y1': height - margin.bottom - margin.top,\n                        'y2': height - margin.bottom - margin.top\n                    });\n        }\n\n        /**\n         * Draws an overlay element over the graph\n         * @inner\n         * @return void\n         */\n        function drawHoverOverlay(){\n            overlay = svg.select('.metadata-group')\n                .append('rect')\n                .attr('class','overlay')\n                .attr('y1', 0)\n                .attr('y2', height)\n                .attr('height', height - margin.top - margin.bottom)\n                .attr('width', width - margin.left - margin.right)\n                .attr('fill', overlayColor)\n                .style('display', 'none');\n        }\n\n        /**\n         * Creates the vertical marker\n         * @return void\n         */\n        function drawVerticalMarker(){\n            verticalMarkerContainer = svg.select('.metadata-group')\n                .append('g')\n                .attr('class', 'hover-marker')\n                .attr('transform', 'translate(' + '9999' + ',' + '0' + ')');\n\n            verticalMarkerLine = verticalMarkerContainer.selectAll('path')\n                .data([{\n                    'x1': 0,\n                    'y1': 0,\n                    'x2': 0,\n                    'y2': 0\n                }])\n                .enter()\n                .append('line')\n                .classed('vertical-marker', true)\n                .attr({\n                    'x1': 0,\n                    'y1': height - margin.top - margin.bottom,\n                    'x2': 0,\n                    'y2': 0\n                });\n        }\n\n        /**\n         * Finds out which datapoint is closer to the given x position\n         * @param  {number} x0 Date value for data point\n         * @param  {obj} d0 Previous datapoint\n         * @param  {obj} d1 Next datapoint\n         * @return {obj}    d0 or d1, the datapoint with closest date to x0\n         */\n        function findOutNearestDate(x0, d0, d1){\n            return (new Date(x0).getTime() - new Date(d0.date).getTime()) > (new Date(d1.date).getTime() - new Date(x0).getTime()) ? d0 : d1;\n        }\n\n        /**\n         * Calculates the maximum number of ticks for the x axis\n         * @param  {number} width Chart width\n         * @param  {number} dataPointNumber  Number of entries on the data\n         * @return {number}       Number of ticks to render\n         */\n        function getMaxNumOfHorizontalTicks(width, dataPointNumber) {\n            let singleTickWidth = 20,\n                spacing = 40,\n                ticksForWidth = Math.ceil(width / (singleTickWidth + spacing));\n\n            return Math.min(dataPointNumber, ticksForWidth);\n        }\n\n        /**\n         * Extract X position on the graph from a given mouse event\n         * @param  {obj} event D3 mouse event\n         * @return {number}       Position on the x axis of the mouse\n         */\n        function getMouseXPosition(event) {\n            return d3.mouse(event)[0];\n        }\n\n        /**\n         * Formats the date in ISOString\n         * @param  {string} date Date as given in data entries\n         * @return {string}      Date in ISO format in a neutral timezone\n         */\n        function getFormattedDateFromData(date) {\n            return date.toISOString().split('T')[0] + 'T00:00:00Z';\n        }\n\n        /**\n         * Finds out the data entry that is closer to the given position on pixels\n         * @param  {number} mouseX X position of the mouse\n         * @return {obj}        Data entry that is closer to that x axis position\n         */\n        function getNearestDataPoint(mouseX) {\n            let invertedX = xScale.invert(mouseX),\n                bisectDate = d3.bisector(getDate).left,\n                dataEntryIndex, dateOnCursorXPosition, dataEntryForXPosition, previousDataEntryForXPosition,\n                nearestDataPoint;\n\n            dateOnCursorXPosition = getFormattedDateFromData(invertedX);\n            dataEntryIndex = bisectDate(dataByDate, dateOnCursorXPosition, 1);\n            dataEntryForXPosition = dataByDate[dataEntryIndex];\n            previousDataEntryForXPosition = dataByDate[dataEntryIndex - 1];\n\n            if (previousDataEntryForXPosition && dataEntryForXPosition) {\n                nearestDataPoint = findOutNearestDate(dateOnCursorXPosition, dataEntryForXPosition, previousDataEntryForXPosition);\n            } else {\n                nearestDataPoint = dataEntryForXPosition;\n            }\n\n            return nearestDataPoint;\n        }\n\n        /**\n         * MouseMove handler, calculates the nearest dataPoint to the cursor\n         * and updates metadata related to it\n         * @return void\n         */\n        function handleMouseMove(){\n            let xPositionOffset = -margin.left, //Arbitrary number, will love to know how to assess it\n                dataPoint = getNearestDataPoint(getMouseXPosition(this) + xPositionOffset),\n                dataPointXPosition;\n\n            if(dataPoint) {\n                // More verticalMarker to that datapoint\n                moveVerticalMarker(dataPoint);\n                // Add data points highlighting\n                highlightDataPoints(dataPoint);\n                // Emit event with xPosition for tooltip or similar feature\n                dataPointXPosition = xScale(new Date(dataPoint.date));\n                dispatch.customMouseMove(dataPoint, topicColorMap, dataPointXPosition);\n            }\n        }\n\n        /**\n         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n         * It also resets the container of the vertical marker\n         * @return void\n         */\n        function handleMouseOut(data){\n            overlay.style('display', 'none');\n            verticalMarkerLine.classed('bc-is-active', false);\n            verticalMarkerContainer.attr('transform', 'translate(' + '9999' + ',' + '0' + ')');\n\n            dispatch.customMouseOut(data);\n        }\n\n        /**\n         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n         * @return void\n         */\n        function handleMouseOver(data){\n            overlay.style('display', 'block');\n            verticalMarkerLine.classed('bc-is-active', true);\n\n            dispatch.customMouseOver(data);\n        }\n\n        /**\n         * Creates coloured circles marking where the exact data y value is for a given data point\n         * @param  {obj} dataPoint Data point to extract info from\n         * @return void\n         */\n        function highlightDataPoints(dataPoint){\n            cleanDataPointHighlights();\n\n            // sorting the topics based on the order of the colors,\n            // so that the order always stays constant\n            dataPoint.topics = _.chain(dataPoint.topics)\n                .compact()\n                .sortBy(function(el) {\n                    return colorOrder[topicColorMap[el.name]];\n                })\n                .value();\n\n            dataPoint.topics.forEach(function(topic, index){\n                let marker = verticalMarkerContainer\n                                .append('g')\n                                .classed('circle-container', true),\n                    circleSize = 12;\n\n                marker.append('circle')\n                    .classed('data-point-highlighter', true)\n                    .attr({\n                        'cx': circleSize,\n                        'cy': 0,\n                        'r': 5\n                    })\n                    .style({\n                        'stroke': topicColorMap[topic.name]\n                    });\n\n                marker.attr('transform', 'translate(' + (- circleSize) + ',' + (yScale(dataPoint.topics[index].value)) + ')');\n            });\n        }\n\n        /**\n         * Helper method to update the x position of the vertical marker\n         * @param  {obj} dataPoint Data entry to extract info\n         * @return void\n         */\n        function moveVerticalMarker(dataPoint){\n            let date = new Date(dataPoint.date),\n                verticalMarkerXPosition = xScale(date);\n\n            verticalMarkerContainer.attr('transform', `translate(${verticalMarkerXPosition},0)`);\n        }\n\n        /**\n         * Determines if we should add the tooltip related logic depending on the\n         * size of the chart and the tooltipThreshold variable value\n         * @return {boolean} Should we build the tooltip?\n         */\n        function shouldShowTooltip() {\n            return width > tooltipThreshold;\n        }\n\n        // API Methods\n\n        /**\n         * Gets or Sets the aspect ratio of the chart\n         * @param  {number} _x Desired aspect ratio for the graph\n         * @return { number | module} Current aspect ratio or Line Chart module to chain calls\n         * @public\n         */\n        exports.aspectRatio = function(_x) {\n            if (!arguments.length) {\n                return aspectRatio;\n            }\n            aspectRatio = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { height | module} Current height or Line Chart module to chain calls\n         * @public\n         */\n        exports.height = function(_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            if (aspectRatio) {\n                width = Math.ceil(_x / aspectRatio);\n            }\n            height = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {object} _x Margin object to get/set\n         * @return { margin | module} Current margin or Line Chart module to chain calls\n         * @public\n         */\n        exports.margin = function(_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the minimum width of the graph in order to show the tooltip\n         * NOTE: This could also depend on the aspect ratio\n         * @param  {number} _x Desired tooltip threshold for the graph\n         * @return { number | module} Current tooltip threshold or Line Chart module to chain calls\n         * @public\n         */\n        exports.tooltipThreshold = function(_x) {\n            if (!arguments.length) {\n                return tooltipThreshold;\n            }\n            tooltipThreshold = _x;\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {number} _x Desired width for the graph\n         * @return { width | module} Current width or Line Chart module to chain calls\n         * @public\n         */\n        exports.width = function(_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            if (aspectRatio) {\n                height = Math.ceil(_x * aspectRatio);\n            }\n            width = _x;\n            return this;\n        };\n\n        // Rebind 'customHover' event to the \"exports\" function, so it's available \"externally\" under the typical \"on\" method:\n        d3.rebind(exports, dispatch, 'on');\n\n        return exports;\n    };\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/charts/line.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"d3\"\n ** module id = 1\n ** module chunks = 0 1 2 3 4\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 2\n ** module chunks = 3\n **/"],"sourceRoot":""}