webpackJsonp([5,10],[
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar d3Selection = __webpack_require__(1),\n    d3TimeFormat = __webpack_require__(14),\n    PubSub = __webpack_require__(2),\n    brush = __webpack_require__(30),\n    line = __webpack_require__(52),\n    tooltip = __webpack_require__(48),\n    dataBuilder = __webpack_require__(53),\n    colorSelectorHelper = __webpack_require__(45),\n    lineMargin = { top: 60, bottom: 50, left: 50, right: 30 };\n\n__webpack_require__(29);\n\nfunction createBrushChart(optionalColorSchema) {\n    var brushChart = brush(),\n        brushMargin = { top: 0, bottom: 40, left: 50, right: 30 },\n        testDataSet = new dataBuilder.LineDataBuilder(),\n        brushContainer = d3Selection.select('.js-line-brush-chart-container'),\n        containerWidth = brushContainer.node() ? brushContainer.node().getBoundingClientRect().width : false,\n        dataset;\n\n    if (containerWidth) {\n        dataset = testDataSet.with5Topics().build();\n\n        brushChart.width(containerWidth).height(100).margin(brushMargin).on('customBrushEnd', function (brushExtent) {\n            var format = d3TimeFormat.timeFormat('%m/%d/%Y');\n\n            d3Selection.select('.js-start-date').text(format(brushExtent[0]));\n            d3Selection.select('.js-end-date').text(format(brushExtent[1]));\n            d3Selection.select('.js-date-range').classed('is-hidden', false);\n\n            // Filter\n            d3Selection.selectAll('.js-line-chart-container .line-chart').remove();\n            createLineChart(optionalColorSchema ? optionalColorSchema : null, filterData(brushExtent[0], brushExtent[1]));\n        });\n\n        brushContainer.datum(brushDataAdapter(dataset)).call(brushChart);\n    }\n}\n\nfunction createLineChart(optionalColorSchema, optionalData) {\n    var lineChart1 = line(),\n        chartTooltip = tooltip(),\n        testDataSet = new dataBuilder.LineDataBuilder(),\n        container = d3Selection.select('.js-line-chart-container'),\n        containerWidth = container.node() ? container.node().getBoundingClientRect().width : false,\n        tooltipContainer,\n        dataset;\n\n    if (containerWidth) {\n        d3Selection.select('#button').on('click', function () {\n            lineChart1.exportChart('linechart.png', 'Britecharts Line Chart');\n        });\n\n        dataset = testDataSet.with5Topics().build();\n\n        // LineChart Setup and start\n        lineChart1.isAnimated(true).aspectRatio(0.7).grid('horizontal').tooltipThreshold(600).width(containerWidth).margin(lineMargin).dateLabel('fullDate').on('customMouseOver', chartTooltip.show).on('customMouseMove', chartTooltip.update).on('customMouseOut', chartTooltip.hide);\n\n        if (optionalColorSchema) {\n            lineChart1.colorSchema(optionalColorSchema);\n        }\n\n        if (optionalData) {\n            container.datum(optionalData).call(lineChart1);\n        } else {\n            container.datum(dataset).call(lineChart1);\n        }\n\n        // Tooltip Setup and start\n        chartTooltip\n        // In order to change the date range on the tooltip title, uncomment this line\n        // .dateFormat(chartTooltip.axisTimeCombinations.HOUR .title('Quantity Sold')\n        .topicsOrder(dataset.dataByTopic.map(function (topic) {\n            return topic.topic;\n        }));\n\n        // Note that if the viewport width is less than the tooltipThreshold value,\n        // this container won't exist, and the tooltip won't show up\n        tooltipContainer = d3Selection.select('.js-line-chart-container .metadata-group .hover-marker');\n        tooltipContainer.datum([]).call(chartTooltip);\n    }\n}\n\nfunction createLineChartWithSingleLine() {\n    var lineChart2 = line(),\n        chartTooltip = tooltip(),\n        testDataSet = new dataBuilder.LineDataBuilder(),\n        container = d3Selection.select('.js-single-line-chart-container'),\n        containerWidth = container.node() ? container.node().getBoundingClientRect().width : false,\n        tooltipContainer,\n        dataset;\n\n    if (containerWidth) {\n        dataset = testDataSet.withOneSource().build();\n\n        d3Selection.select('#button2').on('click', function () {\n            lineChart2.exportChart('linechart.png', 'Britecharts LÍne Chart');\n        });\n\n        lineChart2.tooltipThreshold(600).height(300).margin(lineMargin).lineCurve('basis').grid('vertical').width(containerWidth).dateLabel('fullDate').on('customMouseOver', function () {\n            chartTooltip.show();\n        }).on('customMouseMove', function (dataPoint, topicColorMap, dataPointXPosition) {\n            chartTooltip.update(dataPoint, topicColorMap, dataPointXPosition);\n        }).on('customMouseOut', function () {\n            chartTooltip.hide();\n        });\n\n        container.datum(dataset).call(lineChart2);\n\n        // Tooltip Setup and start\n        chartTooltip.valueLabel('value').title('Quantity Sold');\n\n        // Note that if the viewport width is less than the tooltipThreshold value,\n        // this container won't exist, and the tooltip won't show up\n        tooltipContainer = d3Selection.select('.js-single-line-chart-container .metadata-group .hover-marker');\n        tooltipContainer.datum([]).call(chartTooltip);\n    }\n}\n\nfunction createLineChartWithFixedHeight() {\n    var lineChart3 = line(),\n        chartTooltip = tooltip(),\n        testDataSet = new dataBuilder.LineDataBuilder(),\n        container = d3Selection.select('.js-fixed-line-chart-container'),\n        containerWidth = container.node() ? container.node().getBoundingClientRect().width : false,\n        tooltipContainer,\n        dataset;\n\n    if (containerWidth) {\n        dataset = testDataSet.with5Topics().build();\n\n        lineChart3.height(300).width(containerWidth).margin(lineMargin).grid('full').dateLabel('fullDate').on('customMouseOver', function () {\n            chartTooltip.show();\n        }).on('customMouseMove', function (dataPoint, topicColorMap, dataPointXPosition) {\n            chartTooltip.update(dataPoint, topicColorMap, dataPointXPosition);\n        }).on('customMouseOut', function () {\n            chartTooltip.hide();\n        });\n\n        container.datum(dataset).call(lineChart3);\n\n        // Tooltip Setup and start\n        chartTooltip.title('Quantity Sold');\n\n        // Note that if the viewport width is less than the tooltipThreshold value,\n        // this container won't exist, and the tooltip won't show up\n        tooltipContainer = d3Selection.select('.js-fixed-line-chart-container .metadata-group .hover-marker');\n        tooltipContainer.datum([]).call(chartTooltip);\n    }\n}\n\n/*\n * The Brush chart wants an input like this one\n * @example\n * [\n *     {\n *         value: 1,\n *         date: '2011-01-06T00:00:00Z'\n *     },\n *     {\n *         value: 2,\n *         date: '2011-01-07T00:00:00Z'\n *     }\n * ]\n */\nfunction brushDataAdapter(dataLine) {\n    return dataLine.dataByDate.map(function (d) {\n        d.value = d.topics.reduce(function (acc, topic) {\n            return acc + topic.value;\n        }, 0);\n\n        return d;\n    });\n}\n\nfunction filterData(d0, d1) {\n    var testDataSet = new dataBuilder.LineDataBuilder(),\n        data = JSON.parse(JSON.stringify(testDataSet.with5Topics().build()));\n\n    data.dataByDate = data.dataByDate.filter(isInRange.bind(null, d0, d1));\n\n    data.dataByTopic = data.dataByTopic.map(function (topic) {\n        topic.dates = topic.dates.filter(isInRange.bind(null, d0, d1));\n\n        return topic;\n    });\n\n    return data;\n}\n\nfunction isInRange(d0, d1, d) {\n    return new Date(d.date) >= d0 && new Date(d.date) <= d1;\n}\n\n// Show charts if container available\nif (d3Selection.select('.js-line-chart-container').node()) {\n    createLineChart();\n    createBrushChart();\n    createLineChartWithSingleLine();\n    createLineChartWithFixedHeight();\n\n    var redrawCharts = function redrawCharts() {\n        d3Selection.selectAll('.line-chart').remove();\n        d3Selection.selectAll('.brush-chart').remove();\n\n        createLineChart();\n        createBrushChart();\n        createLineChartWithSingleLine();\n        createLineChartWithFixedHeight();\n    };\n\n    // Redraw charts on window resize\n    PubSub.subscribe('resize', redrawCharts);\n\n    // Color schema selector\n    colorSelectorHelper.createColorSelector('.js-color-selector-container', '.line-chart', function (newSchema) {\n        createLineChart(newSchema);\n        d3Selection.selectAll('.brush-chart').remove();\n        createBrushChart(newSchema);\n    });\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-selection/ Version 1.1.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nexports.creator = creator;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*\nCopyright (c) 2010,2011,2012,2013,2014 Morgan Roderick http://roderick.dk\nLicense: MIT - http://mrgnrdrck.mit-license.org\n\nhttps://github.com/mroderick/PubSubJS\n*/\n(function (root, factory){\n\t'use strict';\n\n\tvar PubSub = {};\n\troot.PubSub = PubSub;\n\tfactory(PubSub);\n\n\t// AMD support\n\tif (true){\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return PubSub; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\t// CommonJS and Node.js module support\n\t} else if (typeof exports === 'object'){\n\t\tif (module !== undefined && module.exports) {\n\t\t\texports = module.exports = PubSub; // Node.js specific `module.exports`\n\t\t}\n\t\texports.PubSub = PubSub; // CommonJS module 1.1.1 spec\n\t\tmodule.exports = exports = PubSub; // CommonJS\n\t}\n\n}(( typeof window === 'object' && window ) || this, function (PubSub){\n\t'use strict';\n\n\tvar messages = {},\n\t\tlastUid = -1;\n\n\tfunction hasKeys(obj){\n\t\tvar key;\n\n\t\tfor (key in obj){\n\t\t\tif ( obj.hasOwnProperty(key) ){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t *\tReturns a function that throws the passed exception, for use as argument for setTimeout\n\t *\t@param { Object } ex An Error object\n\t */\n\tfunction throwException( ex ){\n\t\treturn function reThrowException(){\n\t\t\tthrow ex;\n\t\t};\n\t}\n\n\tfunction callSubscriberWithDelayedExceptions( subscriber, message, data ){\n\t\ttry {\n\t\t\tsubscriber( message, data );\n\t\t} catch( ex ){\n\t\t\tsetTimeout( throwException( ex ), 0);\n\t\t}\n\t}\n\n\tfunction callSubscriberWithImmediateExceptions( subscriber, message, data ){\n\t\tsubscriber( message, data );\n\t}\n\n\tfunction deliverMessage( originalMessage, matchedMessage, data, immediateExceptions ){\n\t\tvar subscribers = messages[matchedMessage],\n\t\t\tcallSubscriber = immediateExceptions ? callSubscriberWithImmediateExceptions : callSubscriberWithDelayedExceptions,\n\t\t\ts;\n\n\t\tif ( !messages.hasOwnProperty( matchedMessage ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (s in subscribers){\n\t\t\tif ( subscribers.hasOwnProperty(s)){\n\t\t\t\tcallSubscriber( subscribers[s], originalMessage, data );\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction createDeliveryFunction( message, data, immediateExceptions ){\n\t\treturn function deliverNamespaced(){\n\t\t\tvar topic = String( message ),\n\t\t\t\tposition = topic.lastIndexOf( '.' );\n\n\t\t\t// deliver the message as it is now\n\t\t\tdeliverMessage(message, message, data, immediateExceptions);\n\n\t\t\t// trim the hierarchy and deliver message to each level\n\t\t\twhile( position !== -1 ){\n\t\t\t\ttopic = topic.substr( 0, position );\n\t\t\t\tposition = topic.lastIndexOf('.');\n\t\t\t\tdeliverMessage( message, topic, data, immediateExceptions );\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction messageHasSubscribers( message ){\n\t\tvar topic = String( message ),\n\t\t\tfound = Boolean(messages.hasOwnProperty( topic ) && hasKeys(messages[topic])),\n\t\t\tposition = topic.lastIndexOf( '.' );\n\n\t\twhile ( !found && position !== -1 ){\n\t\t\ttopic = topic.substr( 0, position );\n\t\t\tposition = topic.lastIndexOf( '.' );\n\t\t\tfound = Boolean(messages.hasOwnProperty( topic ) && hasKeys(messages[topic]));\n\t\t}\n\n\t\treturn found;\n\t}\n\n\tfunction publish( message, data, sync, immediateExceptions ){\n\t\tvar deliver = createDeliveryFunction( message, data, immediateExceptions ),\n\t\t\thasSubscribers = messageHasSubscribers( message );\n\n\t\tif ( !hasSubscribers ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( sync === true ){\n\t\t\tdeliver();\n\t\t} else {\n\t\t\tsetTimeout( deliver, 0 );\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t *\tPubSub.publish( message[, data] ) -> Boolean\n\t *\t- message (String): The message to publish\n\t *\t- data: The data to pass to subscribers\n\t *\tPublishes the the message, passing the data to it's subscribers\n\t**/\n\tPubSub.publish = function( message, data ){\n\t\treturn publish( message, data, false, PubSub.immediateExceptions );\n\t};\n\n\t/**\n\t *\tPubSub.publishSync( message[, data] ) -> Boolean\n\t *\t- message (String): The message to publish\n\t *\t- data: The data to pass to subscribers\n\t *\tPublishes the the message synchronously, passing the data to it's subscribers\n\t**/\n\tPubSub.publishSync = function( message, data ){\n\t\treturn publish( message, data, true, PubSub.immediateExceptions );\n\t};\n\n\t/**\n\t *\tPubSub.subscribe( message, func ) -> String\n\t *\t- message (String): The message to subscribe to\n\t *\t- func (Function): The function to call when a new message is published\n\t *\tSubscribes the passed function to the passed message. Every returned token is unique and should be stored if\n\t *\tyou need to unsubscribe\n\t**/\n\tPubSub.subscribe = function( message, func ){\n\t\tif ( typeof func !== 'function'){\n\t\t\treturn false;\n\t\t}\n\n\t\t// message is not registered yet\n\t\tif ( !messages.hasOwnProperty( message ) ){\n\t\t\tmessages[message] = {};\n\t\t}\n\n\t\t// forcing token as String, to allow for future expansions without breaking usage\n\t\t// and allow for easy use as key names for the 'messages' object\n\t\tvar token = 'uid_' + String(++lastUid);\n\t\tmessages[message][token] = func;\n\n\t\t// return token for unsubscribing\n\t\treturn token;\n\t};\n\n\t/* Public: Clears all subscriptions\n\t */\n\tPubSub.clearAllSubscriptions = function clearAllSubscriptions(){\n\t\tmessages = {};\n\t};\n\n\t/*Public: Clear subscriptions by the topic\n\t*/\n\tPubSub.clearSubscriptions = function clearSubscriptions(topic){\n\t\tvar m;\n\t\tfor (m in messages){\n\t\t\tif (messages.hasOwnProperty(m) && m.indexOf(topic) === 0){\n\t\t\t\tdelete messages[m];\n\t\t\t}\n\t\t}\n\t};\n\n\t/* Public: removes subscriptions.\n\t * When passed a token, removes a specific subscription.\n\t * When passed a function, removes all subscriptions for that function\n\t * When passed a topic, removes all subscriptions for that topic (hierarchy)\n\t *\n\t * value - A token, function or topic to unsubscribe.\n\t *\n\t * Examples\n\t *\n\t *\t\t// Example 1 - unsubscribing with a token\n\t *\t\tvar token = PubSub.subscribe('mytopic', myFunc);\n\t *\t\tPubSub.unsubscribe(token);\n\t *\n\t *\t\t// Example 2 - unsubscribing with a function\n\t *\t\tPubSub.unsubscribe(myFunc);\n\t *\n\t *\t\t// Example 3 - unsubscribing a topic\n\t *\t\tPubSub.unsubscribe('mytopic');\n\t */\n\tPubSub.unsubscribe = function(value){\n\t\tvar descendantTopicExists = function(topic) {\n\t\t\t\tvar m;\n\t\t\t\tfor ( m in messages ){\n\t\t\t\t\tif ( messages.hasOwnProperty(m) && m.indexOf(topic) === 0 ){\n\t\t\t\t\t\t// a descendant of the topic exists:\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tisTopic    = typeof value === 'string' && ( messages.hasOwnProperty(value) || descendantTopicExists(value) ),\n\t\t\tisToken    = !isTopic && typeof value === 'string',\n\t\t\tisFunction = typeof value === 'function',\n\t\t\tresult = false,\n\t\t\tm, message, t;\n\n\t\tif (isTopic){\n\t\t\tPubSub.clearSubscriptions(value);\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( m in messages ){\n\t\t\tif ( messages.hasOwnProperty( m ) ){\n\t\t\t\tmessage = messages[m];\n\n\t\t\t\tif ( isToken && message[value] ){\n\t\t\t\t\tdelete message[value];\n\t\t\t\t\tresult = value;\n\t\t\t\t\t// tokens are unique, so we can just stop here\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (isFunction) {\n\t\t\t\t\tfor ( t in message ){\n\t\t\t\t\t\tif (message.hasOwnProperty(t) && message[t] === value){\n\t\t\t\t\t\t\tdelete message[t];\n\t\t\t\t\t\t\tresult = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 3 */,
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-array/ Version 1.2.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar quantile = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-ease/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-axis/ Version 1.0.8. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar slice = Array.prototype.slice;\n\nvar identity = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-color/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-dispatch/ Version 1.0.3. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexports.dispatch = dispatch;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vZDMtZGlzcGF0Y2gvYnVpbGQvZDMtZGlzcGF0Y2guanM/YTQ4OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBodHRwczovL2QzanMub3JnL2QzLWRpc3BhdGNoLyBWZXJzaW9uIDEuMC4zLiBDb3B5cmlnaHQgMjAxNyBNaWtlIEJvc3RvY2suXG4oZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkge1xuXHR0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgPyBmYWN0b3J5KGV4cG9ydHMpIDpcblx0dHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kID8gZGVmaW5lKFsnZXhwb3J0cyddLCBmYWN0b3J5KSA6XG5cdChmYWN0b3J5KChnbG9iYWwuZDMgPSBnbG9iYWwuZDMgfHwge30pKSk7XG59KHRoaXMsIChmdW5jdGlvbiAoZXhwb3J0cykgeyAndXNlIHN0cmljdCc7XG5cbnZhciBub29wID0ge3ZhbHVlOiBmdW5jdGlvbigpIHt9fTtcblxuZnVuY3Rpb24gZGlzcGF0Y2goKSB7XG4gIGZvciAodmFyIGkgPSAwLCBuID0gYXJndW1lbnRzLmxlbmd0aCwgXyA9IHt9LCB0OyBpIDwgbjsgKytpKSB7XG4gICAgaWYgKCEodCA9IGFyZ3VtZW50c1tpXSArIFwiXCIpIHx8ICh0IGluIF8pKSB0aHJvdyBuZXcgRXJyb3IoXCJpbGxlZ2FsIHR5cGU6IFwiICsgdCk7XG4gICAgX1t0XSA9IFtdO1xuICB9XG4gIHJldHVybiBuZXcgRGlzcGF0Y2goXyk7XG59XG5cbmZ1bmN0aW9uIERpc3BhdGNoKF8pIHtcbiAgdGhpcy5fID0gXztcbn1cblxuZnVuY3Rpb24gcGFyc2VUeXBlbmFtZXModHlwZW5hbWVzLCB0eXBlcykge1xuICByZXR1cm4gdHlwZW5hbWVzLnRyaW0oKS5zcGxpdCgvXnxcXHMrLykubWFwKGZ1bmN0aW9uKHQpIHtcbiAgICB2YXIgbmFtZSA9IFwiXCIsIGkgPSB0LmluZGV4T2YoXCIuXCIpO1xuICAgIGlmIChpID49IDApIG5hbWUgPSB0LnNsaWNlKGkgKyAxKSwgdCA9IHQuc2xpY2UoMCwgaSk7XG4gICAgaWYgKHQgJiYgIXR5cGVzLmhhc093blByb3BlcnR5KHQpKSB0aHJvdyBuZXcgRXJyb3IoXCJ1bmtub3duIHR5cGU6IFwiICsgdCk7XG4gICAgcmV0dXJuIHt0eXBlOiB0LCBuYW1lOiBuYW1lfTtcbiAgfSk7XG59XG5cbkRpc3BhdGNoLnByb3RvdHlwZSA9IGRpc3BhdGNoLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IERpc3BhdGNoLFxuICBvbjogZnVuY3Rpb24odHlwZW5hbWUsIGNhbGxiYWNrKSB7XG4gICAgdmFyIF8gPSB0aGlzLl8sXG4gICAgICAgIFQgPSBwYXJzZVR5cGVuYW1lcyh0eXBlbmFtZSArIFwiXCIsIF8pLFxuICAgICAgICB0LFxuICAgICAgICBpID0gLTEsXG4gICAgICAgIG4gPSBULmxlbmd0aDtcblxuICAgIC8vIElmIG5vIGNhbGxiYWNrIHdhcyBzcGVjaWZpZWQsIHJldHVybiB0aGUgY2FsbGJhY2sgb2YgdGhlIGdpdmVuIHR5cGUgYW5kIG5hbWUuXG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKCh0ID0gKHR5cGVuYW1lID0gVFtpXSkudHlwZSkgJiYgKHQgPSBnZXQoX1t0XSwgdHlwZW5hbWUubmFtZSkpKSByZXR1cm4gdDtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBJZiBhIHR5cGUgd2FzIHNwZWNpZmllZCwgc2V0IHRoZSBjYWxsYmFjayBmb3IgdGhlIGdpdmVuIHR5cGUgYW5kIG5hbWUuXG4gICAgLy8gT3RoZXJ3aXNlLCBpZiBhIG51bGwgY2FsbGJhY2sgd2FzIHNwZWNpZmllZCwgcmVtb3ZlIGNhbGxiYWNrcyBvZiB0aGUgZ2l2ZW4gbmFtZS5cbiAgICBpZiAoY2FsbGJhY2sgIT0gbnVsbCAmJiB0eXBlb2YgY2FsbGJhY2sgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBjYWxsYmFjazogXCIgKyBjYWxsYmFjayk7XG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIGlmICh0ID0gKHR5cGVuYW1lID0gVFtpXSkudHlwZSkgX1t0XSA9IHNldChfW3RdLCB0eXBlbmFtZS5uYW1lLCBjYWxsYmFjayk7XG4gICAgICBlbHNlIGlmIChjYWxsYmFjayA9PSBudWxsKSBmb3IgKHQgaW4gXykgX1t0XSA9IHNldChfW3RdLCB0eXBlbmFtZS5uYW1lLCBudWxsKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfSxcbiAgY29weTogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGNvcHkgPSB7fSwgXyA9IHRoaXMuXztcbiAgICBmb3IgKHZhciB0IGluIF8pIGNvcHlbdF0gPSBfW3RdLnNsaWNlKCk7XG4gICAgcmV0dXJuIG5ldyBEaXNwYXRjaChjb3B5KTtcbiAgfSxcbiAgY2FsbDogZnVuY3Rpb24odHlwZSwgdGhhdCkge1xuICAgIGlmICgobiA9IGFyZ3VtZW50cy5sZW5ndGggLSAyKSA+IDApIGZvciAodmFyIGFyZ3MgPSBuZXcgQXJyYXkobiksIGkgPSAwLCBuLCB0OyBpIDwgbjsgKytpKSBhcmdzW2ldID0gYXJndW1lbnRzW2kgKyAyXTtcbiAgICBpZiAoIXRoaXMuXy5oYXNPd25Qcm9wZXJ0eSh0eXBlKSkgdGhyb3cgbmV3IEVycm9yKFwidW5rbm93biB0eXBlOiBcIiArIHR5cGUpO1xuICAgIGZvciAodCA9IHRoaXMuX1t0eXBlXSwgaSA9IDAsIG4gPSB0Lmxlbmd0aDsgaSA8IG47ICsraSkgdFtpXS52YWx1ZS5hcHBseSh0aGF0LCBhcmdzKTtcbiAgfSxcbiAgYXBwbHk6IGZ1bmN0aW9uKHR5cGUsIHRoYXQsIGFyZ3MpIHtcbiAgICBpZiAoIXRoaXMuXy5oYXNPd25Qcm9wZXJ0eSh0eXBlKSkgdGhyb3cgbmV3IEVycm9yKFwidW5rbm93biB0eXBlOiBcIiArIHR5cGUpO1xuICAgIGZvciAodmFyIHQgPSB0aGlzLl9bdHlwZV0sIGkgPSAwLCBuID0gdC5sZW5ndGg7IGkgPCBuOyArK2kpIHRbaV0udmFsdWUuYXBwbHkodGhhdCwgYXJncyk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGdldCh0eXBlLCBuYW1lKSB7XG4gIGZvciAodmFyIGkgPSAwLCBuID0gdHlwZS5sZW5ndGgsIGM7IGkgPCBuOyArK2kpIHtcbiAgICBpZiAoKGMgPSB0eXBlW2ldKS5uYW1lID09PSBuYW1lKSB7XG4gICAgICByZXR1cm4gYy52YWx1ZTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gc2V0KHR5cGUsIG5hbWUsIGNhbGxiYWNrKSB7XG4gIGZvciAodmFyIGkgPSAwLCBuID0gdHlwZS5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICBpZiAodHlwZVtpXS5uYW1lID09PSBuYW1lKSB7XG4gICAgICB0eXBlW2ldID0gbm9vcCwgdHlwZSA9IHR5cGUuc2xpY2UoMCwgaSkuY29uY2F0KHR5cGUuc2xpY2UoaSArIDEpKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICBpZiAoY2FsbGJhY2sgIT0gbnVsbCkgdHlwZS5wdXNoKHtuYW1lOiBuYW1lLCB2YWx1ZTogY2FsbGJhY2t9KTtcbiAgcmV0dXJuIHR5cGU7XG59XG5cbmV4cG9ydHMuZGlzcGF0Y2ggPSBkaXNwYXRjaDtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxufSkpKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9kMy1kaXNwYXRjaC9idWlsZC9kMy1kaXNwYXRjaC5qc1xuLy8gbW9kdWxlIGlkID0gOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNSA2IDcgOCA5Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-format/ Version 1.2.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n};\n\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-scale/ Version 1.0.6. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports, __webpack_require__(4), __webpack_require__(11), __webpack_require__(12), __webpack_require__(9), __webpack_require__(13), __webpack_require__(14), __webpack_require__(7)) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\nvar array = Array.prototype;\n\nvar map$1 = array.map;\nvar slice = array.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range$$1) {\n  var index = d3Collection.map(),\n      domain = [],\n      unknown = implicit;\n\n  range$$1 = range$$1 == null ? [] : slice.call(range$$1);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range$$1[(i - 1) % range$$1.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = d3Collection.map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), scale) : range$$1.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range$$1)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = d3Array.bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = d3Interpolate.interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice.call(_), interpolate$$1 = d3Interpolate.interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n      return d3Format.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return d3Format.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = d3Array.tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = d3Array.tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = d3Array.tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear() {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[d3Array.bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number$1(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year, month, week, day, hour, minute, second, millisecond, format$$1) {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format$$1(\".%L\"),\n      formatSecond = format$$1(\":%S\"),\n      formatMinute = format$$1(\"%I:%M\"),\n      formatHour = format$$1(\"%I %p\"),\n      formatDay = format$$1(\"%a %d\"),\n      formatWeek = format$$1(\"%b %d\"),\n      formatMonth = format$$1(\"%B\"),\n      formatYear = format$$1(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = d3Array.tickStep(start, stop, interval);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format$$1(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format$$1));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\nvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar rainbow = d3Color.cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range$$1) {\n  var n = range$$1.length;\n  return function(t) {\n    return range$$1[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nexports.scaleBand = band;\nexports.scalePoint = point;\nexports.scaleIdentity = identity;\nexports.scaleLinear = linear;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$1;\nexports.scaleQuantize = quantize;\nexports.scaleThreshold = threshold;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$1;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-collection/ Version 1.0.4. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map$$1, depth) {\n    if (++depth > keys.length) return map$$1;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map$$1, key, value) {\n  map$$1.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nexports.nest = nest;\nexports.set = set;\nexports.map = map;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-interpolate/ Version 1.1.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports, __webpack_require__(7)) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Color) { 'use strict';\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n\nvar rgb$1 = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = d3Color.rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar number = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar string = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar value = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)\n      : b instanceof d3Color.color ? rgb$1\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n};\n\nvar round = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar zoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nexports.interpolate = value;\nexports.interpolateArray = array;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = number;\nexports.interpolateObject = object;\nexports.interpolateRound = round;\nexports.interpolateString = string;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = zoom;\nexports.interpolateRgb = rgb$1;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-time/ Version 1.0.7. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar t0 = new Date;\nvar t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUvYnVpbGQvZDMtdGltZS5qcz83MGExIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtdGltZS8gVmVyc2lvbiAxLjAuNy4gQ29weXJpZ2h0IDIwMTcgTWlrZSBCb3N0b2NrLlxuKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcblx0dHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnID8gZmFjdG9yeShleHBvcnRzKSA6XG5cdHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCA/IGRlZmluZShbJ2V4cG9ydHMnXSwgZmFjdG9yeSkgOlxuXHQoZmFjdG9yeSgoZ2xvYmFsLmQzID0gZ2xvYmFsLmQzIHx8IHt9KSkpO1xufSh0aGlzLCAoZnVuY3Rpb24gKGV4cG9ydHMpIHsgJ3VzZSBzdHJpY3QnO1xuXG52YXIgdDAgPSBuZXcgRGF0ZTtcbnZhciB0MSA9IG5ldyBEYXRlO1xuXG5mdW5jdGlvbiBuZXdJbnRlcnZhbChmbG9vcmksIG9mZnNldGksIGNvdW50LCBmaWVsZCkge1xuXG4gIGZ1bmN0aW9uIGludGVydmFsKGRhdGUpIHtcbiAgICByZXR1cm4gZmxvb3JpKGRhdGUgPSBuZXcgRGF0ZSgrZGF0ZSkpLCBkYXRlO1xuICB9XG5cbiAgaW50ZXJ2YWwuZmxvb3IgPSBpbnRlcnZhbDtcblxuICBpbnRlcnZhbC5jZWlsID0gZnVuY3Rpb24oZGF0ZSkge1xuICAgIHJldHVybiBmbG9vcmkoZGF0ZSA9IG5ldyBEYXRlKGRhdGUgLSAxKSksIG9mZnNldGkoZGF0ZSwgMSksIGZsb29yaShkYXRlKSwgZGF0ZTtcbiAgfTtcblxuICBpbnRlcnZhbC5yb3VuZCA9IGZ1bmN0aW9uKGRhdGUpIHtcbiAgICB2YXIgZDAgPSBpbnRlcnZhbChkYXRlKSxcbiAgICAgICAgZDEgPSBpbnRlcnZhbC5jZWlsKGRhdGUpO1xuICAgIHJldHVybiBkYXRlIC0gZDAgPCBkMSAtIGRhdGUgPyBkMCA6IGQxO1xuICB9O1xuXG4gIGludGVydmFsLm9mZnNldCA9IGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgICByZXR1cm4gb2Zmc2V0aShkYXRlID0gbmV3IERhdGUoK2RhdGUpLCBzdGVwID09IG51bGwgPyAxIDogTWF0aC5mbG9vcihzdGVwKSksIGRhdGU7XG4gIH07XG5cbiAgaW50ZXJ2YWwucmFuZ2UgPSBmdW5jdGlvbihzdGFydCwgc3RvcCwgc3RlcCkge1xuICAgIHZhciByYW5nZSA9IFtdO1xuICAgIHN0YXJ0ID0gaW50ZXJ2YWwuY2VpbChzdGFydCk7XG4gICAgc3RlcCA9IHN0ZXAgPT0gbnVsbCA/IDEgOiBNYXRoLmZsb29yKHN0ZXApO1xuICAgIGlmICghKHN0YXJ0IDwgc3RvcCkgfHwgIShzdGVwID4gMCkpIHJldHVybiByYW5nZTsgLy8gYWxzbyBoYW5kbGVzIEludmFsaWQgRGF0ZVxuICAgIGRvIHJhbmdlLnB1c2gobmV3IERhdGUoK3N0YXJ0KSk7IHdoaWxlIChvZmZzZXRpKHN0YXJ0LCBzdGVwKSwgZmxvb3JpKHN0YXJ0KSwgc3RhcnQgPCBzdG9wKVxuICAgIHJldHVybiByYW5nZTtcbiAgfTtcblxuICBpbnRlcnZhbC5maWx0ZXIgPSBmdW5jdGlvbih0ZXN0KSB7XG4gICAgcmV0dXJuIG5ld0ludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICAgIGlmIChkYXRlID49IGRhdGUpIHdoaWxlIChmbG9vcmkoZGF0ZSksICF0ZXN0KGRhdGUpKSBkYXRlLnNldFRpbWUoZGF0ZSAtIDEpO1xuICAgIH0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgICAgIGlmIChkYXRlID49IGRhdGUpIHtcbiAgICAgICAgaWYgKHN0ZXAgPCAwKSB3aGlsZSAoKytzdGVwIDw9IDApIHtcbiAgICAgICAgICB3aGlsZSAob2Zmc2V0aShkYXRlLCAtMSksICF0ZXN0KGRhdGUpKSB7fSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWVtcHR5XG4gICAgICAgIH0gZWxzZSB3aGlsZSAoLS1zdGVwID49IDApIHtcbiAgICAgICAgICB3aGlsZSAob2Zmc2V0aShkYXRlLCArMSksICF0ZXN0KGRhdGUpKSB7fSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWVtcHR5XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICBpZiAoY291bnQpIHtcbiAgICBpbnRlcnZhbC5jb3VudCA9IGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgICAgIHQwLnNldFRpbWUoK3N0YXJ0KSwgdDEuc2V0VGltZSgrZW5kKTtcbiAgICAgIGZsb29yaSh0MCksIGZsb29yaSh0MSk7XG4gICAgICByZXR1cm4gTWF0aC5mbG9vcihjb3VudCh0MCwgdDEpKTtcbiAgICB9O1xuXG4gICAgaW50ZXJ2YWwuZXZlcnkgPSBmdW5jdGlvbihzdGVwKSB7XG4gICAgICBzdGVwID0gTWF0aC5mbG9vcihzdGVwKTtcbiAgICAgIHJldHVybiAhaXNGaW5pdGUoc3RlcCkgfHwgIShzdGVwID4gMCkgPyBudWxsXG4gICAgICAgICAgOiAhKHN0ZXAgPiAxKSA/IGludGVydmFsXG4gICAgICAgICAgOiBpbnRlcnZhbC5maWx0ZXIoZmllbGRcbiAgICAgICAgICAgICAgPyBmdW5jdGlvbihkKSB7IHJldHVybiBmaWVsZChkKSAlIHN0ZXAgPT09IDA7IH1cbiAgICAgICAgICAgICAgOiBmdW5jdGlvbihkKSB7IHJldHVybiBpbnRlcnZhbC5jb3VudCgwLCBkKSAlIHN0ZXAgPT09IDA7IH0pO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gaW50ZXJ2YWw7XG59XG5cbnZhciBtaWxsaXNlY29uZCA9IG5ld0ludGVydmFsKGZ1bmN0aW9uKCkge1xuICAvLyBub29wXG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0VGltZSgrZGF0ZSArIHN0ZXApO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gZW5kIC0gc3RhcnQ7XG59KTtcblxuLy8gQW4gb3B0aW1pemVkIGltcGxlbWVudGF0aW9uIGZvciB0aGlzIHNpbXBsZSBjYXNlLlxubWlsbGlzZWNvbmQuZXZlcnkgPSBmdW5jdGlvbihrKSB7XG4gIGsgPSBNYXRoLmZsb29yKGspO1xuICBpZiAoIWlzRmluaXRlKGspIHx8ICEoayA+IDApKSByZXR1cm4gbnVsbDtcbiAgaWYgKCEoayA+IDEpKSByZXR1cm4gbWlsbGlzZWNvbmQ7XG4gIHJldHVybiBuZXdJbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgZGF0ZS5zZXRUaW1lKE1hdGguZmxvb3IoZGF0ZSAvIGspICogayk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgICBkYXRlLnNldFRpbWUoK2RhdGUgKyBzdGVwICogayk7XG4gIH0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGs7XG4gIH0pO1xufTtcblxudmFyIG1pbGxpc2Vjb25kcyA9IG1pbGxpc2Vjb25kLnJhbmdlO1xuXG52YXIgZHVyYXRpb25TZWNvbmQgPSAxZTM7XG52YXIgZHVyYXRpb25NaW51dGUgPSA2ZTQ7XG52YXIgZHVyYXRpb25Ib3VyID0gMzZlNTtcbnZhciBkdXJhdGlvbkRheSA9IDg2NGU1O1xudmFyIGR1cmF0aW9uV2VlayA9IDYwNDhlNTtcblxudmFyIHNlY29uZCA9IG5ld0ludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRUaW1lKE1hdGguZmxvb3IoZGF0ZSAvIGR1cmF0aW9uU2Vjb25kKSAqIGR1cmF0aW9uU2Vjb25kKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRUaW1lKCtkYXRlICsgc3RlcCAqIGR1cmF0aW9uU2Vjb25kKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIChlbmQgLSBzdGFydCkgLyBkdXJhdGlvblNlY29uZDtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0VVRDU2Vjb25kcygpO1xufSk7XG5cbnZhciBzZWNvbmRzID0gc2Vjb25kLnJhbmdlO1xuXG52YXIgbWludXRlID0gbmV3SW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICBkYXRlLnNldFRpbWUoTWF0aC5mbG9vcihkYXRlIC8gZHVyYXRpb25NaW51dGUpICogZHVyYXRpb25NaW51dGUpO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldFRpbWUoK2RhdGUgKyBzdGVwICogZHVyYXRpb25NaW51dGUpO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGR1cmF0aW9uTWludXRlO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRNaW51dGVzKCk7XG59KTtcblxudmFyIG1pbnV0ZXMgPSBtaW51dGUucmFuZ2U7XG5cbnZhciBob3VyID0gbmV3SW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICB2YXIgb2Zmc2V0ID0gZGF0ZS5nZXRUaW1lem9uZU9mZnNldCgpICogZHVyYXRpb25NaW51dGUgJSBkdXJhdGlvbkhvdXI7XG4gIGlmIChvZmZzZXQgPCAwKSBvZmZzZXQgKz0gZHVyYXRpb25Ib3VyO1xuICBkYXRlLnNldFRpbWUoTWF0aC5mbG9vcigoK2RhdGUgLSBvZmZzZXQpIC8gZHVyYXRpb25Ib3VyKSAqIGR1cmF0aW9uSG91ciArIG9mZnNldCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0VGltZSgrZGF0ZSArIHN0ZXAgKiBkdXJhdGlvbkhvdXIpO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGR1cmF0aW9uSG91cjtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0SG91cnMoKTtcbn0pO1xuXG52YXIgaG91cnMgPSBob3VyLnJhbmdlO1xuXG52YXIgZGF5ID0gbmV3SW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICBkYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgKyBzdGVwKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIChlbmQgLSBzdGFydCAtIChlbmQuZ2V0VGltZXpvbmVPZmZzZXQoKSAtIHN0YXJ0LmdldFRpbWV6b25lT2Zmc2V0KCkpICogZHVyYXRpb25NaW51dGUpIC8gZHVyYXRpb25EYXk7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldERhdGUoKSAtIDE7XG59KTtcblxudmFyIGRheXMgPSBkYXkucmFuZ2U7XG5cbmZ1bmN0aW9uIHdlZWtkYXkoaSkge1xuICByZXR1cm4gbmV3SW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSAtIChkYXRlLmdldERheSgpICsgNyAtIGkpICUgNyk7XG4gICAgZGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICAgIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSArIHN0ZXAgKiA3KTtcbiAgfSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICAgIHJldHVybiAoZW5kIC0gc3RhcnQgLSAoZW5kLmdldFRpbWV6b25lT2Zmc2V0KCkgLSBzdGFydC5nZXRUaW1lem9uZU9mZnNldCgpKSAqIGR1cmF0aW9uTWludXRlKSAvIGR1cmF0aW9uV2VlaztcbiAgfSk7XG59XG5cbnZhciBzdW5kYXkgPSB3ZWVrZGF5KDApO1xudmFyIG1vbmRheSA9IHdlZWtkYXkoMSk7XG52YXIgdHVlc2RheSA9IHdlZWtkYXkoMik7XG52YXIgd2VkbmVzZGF5ID0gd2Vla2RheSgzKTtcbnZhciB0aHVyc2RheSA9IHdlZWtkYXkoNCk7XG52YXIgZnJpZGF5ID0gd2Vla2RheSg1KTtcbnZhciBzYXR1cmRheSA9IHdlZWtkYXkoNik7XG5cbnZhciBzdW5kYXlzID0gc3VuZGF5LnJhbmdlO1xudmFyIG1vbmRheXMgPSBtb25kYXkucmFuZ2U7XG52YXIgdHVlc2RheXMgPSB0dWVzZGF5LnJhbmdlO1xudmFyIHdlZG5lc2RheXMgPSB3ZWRuZXNkYXkucmFuZ2U7XG52YXIgdGh1cnNkYXlzID0gdGh1cnNkYXkucmFuZ2U7XG52YXIgZnJpZGF5cyA9IGZyaWRheS5yYW5nZTtcbnZhciBzYXR1cmRheXMgPSBzYXR1cmRheS5yYW5nZTtcblxudmFyIG1vbnRoID0gbmV3SW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICBkYXRlLnNldERhdGUoMSk7XG4gIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0TW9udGgoZGF0ZS5nZXRNb250aCgpICsgc3RlcCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiBlbmQuZ2V0TW9udGgoKSAtIHN0YXJ0LmdldE1vbnRoKCkgKyAoZW5kLmdldEZ1bGxZZWFyKCkgLSBzdGFydC5nZXRGdWxsWWVhcigpKSAqIDEyO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRNb250aCgpO1xufSk7XG5cbnZhciBtb250aHMgPSBtb250aC5yYW5nZTtcblxudmFyIHllYXIgPSBuZXdJbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0TW9udGgoMCwgMSk7XG4gIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0RnVsbFllYXIoZGF0ZS5nZXRGdWxsWWVhcigpICsgc3RlcCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiBlbmQuZ2V0RnVsbFllYXIoKSAtIHN0YXJ0LmdldEZ1bGxZZWFyKCk7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldEZ1bGxZZWFyKCk7XG59KTtcblxuLy8gQW4gb3B0aW1pemVkIGltcGxlbWVudGF0aW9uIGZvciB0aGlzIHNpbXBsZSBjYXNlLlxueWVhci5ldmVyeSA9IGZ1bmN0aW9uKGspIHtcbiAgcmV0dXJuICFpc0Zpbml0ZShrID0gTWF0aC5mbG9vcihrKSkgfHwgIShrID4gMCkgPyBudWxsIDogbmV3SW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIGRhdGUuc2V0RnVsbFllYXIoTWF0aC5mbG9vcihkYXRlLmdldEZ1bGxZZWFyKCkgLyBrKSAqIGspO1xuICAgIGRhdGUuc2V0TW9udGgoMCwgMSk7XG4gICAgZGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICAgIGRhdGUuc2V0RnVsbFllYXIoZGF0ZS5nZXRGdWxsWWVhcigpICsgc3RlcCAqIGspO1xuICB9KTtcbn07XG5cbnZhciB5ZWFycyA9IHllYXIucmFuZ2U7XG5cbnZhciB1dGNNaW51dGUgPSBuZXdJbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0VVRDU2Vjb25kcygwLCAwKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRUaW1lKCtkYXRlICsgc3RlcCAqIGR1cmF0aW9uTWludXRlKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIChlbmQgLSBzdGFydCkgLyBkdXJhdGlvbk1pbnV0ZTtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0VVRDTWludXRlcygpO1xufSk7XG5cbnZhciB1dGNNaW51dGVzID0gdXRjTWludXRlLnJhbmdlO1xuXG52YXIgdXRjSG91ciA9IG5ld0ludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRVVENNaW51dGVzKDAsIDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldFRpbWUoK2RhdGUgKyBzdGVwICogZHVyYXRpb25Ib3VyKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIChlbmQgLSBzdGFydCkgLyBkdXJhdGlvbkhvdXI7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldFVUQ0hvdXJzKCk7XG59KTtcblxudmFyIHV0Y0hvdXJzID0gdXRjSG91ci5yYW5nZTtcblxudmFyIHV0Y0RheSA9IG5ld0ludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRVVENEYXRlKGRhdGUuZ2V0VVRDRGF0ZSgpICsgc3RlcCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiAoZW5kIC0gc3RhcnQpIC8gZHVyYXRpb25EYXk7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldFVUQ0RhdGUoKSAtIDE7XG59KTtcblxudmFyIHV0Y0RheXMgPSB1dGNEYXkucmFuZ2U7XG5cbmZ1bmN0aW9uIHV0Y1dlZWtkYXkoaSkge1xuICByZXR1cm4gbmV3SW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIGRhdGUuc2V0VVRDRGF0ZShkYXRlLmdldFVUQ0RhdGUoKSAtIChkYXRlLmdldFVUQ0RheSgpICsgNyAtIGkpICUgNyk7XG4gICAgZGF0ZS5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICAgIGRhdGUuc2V0VVRDRGF0ZShkYXRlLmdldFVUQ0RhdGUoKSArIHN0ZXAgKiA3KTtcbiAgfSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICAgIHJldHVybiAoZW5kIC0gc3RhcnQpIC8gZHVyYXRpb25XZWVrO1xuICB9KTtcbn1cblxudmFyIHV0Y1N1bmRheSA9IHV0Y1dlZWtkYXkoMCk7XG52YXIgdXRjTW9uZGF5ID0gdXRjV2Vla2RheSgxKTtcbnZhciB1dGNUdWVzZGF5ID0gdXRjV2Vla2RheSgyKTtcbnZhciB1dGNXZWRuZXNkYXkgPSB1dGNXZWVrZGF5KDMpO1xudmFyIHV0Y1RodXJzZGF5ID0gdXRjV2Vla2RheSg0KTtcbnZhciB1dGNGcmlkYXkgPSB1dGNXZWVrZGF5KDUpO1xudmFyIHV0Y1NhdHVyZGF5ID0gdXRjV2Vla2RheSg2KTtcblxudmFyIHV0Y1N1bmRheXMgPSB1dGNTdW5kYXkucmFuZ2U7XG52YXIgdXRjTW9uZGF5cyA9IHV0Y01vbmRheS5yYW5nZTtcbnZhciB1dGNUdWVzZGF5cyA9IHV0Y1R1ZXNkYXkucmFuZ2U7XG52YXIgdXRjV2VkbmVzZGF5cyA9IHV0Y1dlZG5lc2RheS5yYW5nZTtcbnZhciB1dGNUaHVyc2RheXMgPSB1dGNUaHVyc2RheS5yYW5nZTtcbnZhciB1dGNGcmlkYXlzID0gdXRjRnJpZGF5LnJhbmdlO1xudmFyIHV0Y1NhdHVyZGF5cyA9IHV0Y1NhdHVyZGF5LnJhbmdlO1xuXG52YXIgdXRjTW9udGggPSBuZXdJbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0VVRDRGF0ZSgxKTtcbiAgZGF0ZS5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRVVENNb250aChkYXRlLmdldFVUQ01vbnRoKCkgKyBzdGVwKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIGVuZC5nZXRVVENNb250aCgpIC0gc3RhcnQuZ2V0VVRDTW9udGgoKSArIChlbmQuZ2V0VVRDRnVsbFllYXIoKSAtIHN0YXJ0LmdldFVUQ0Z1bGxZZWFyKCkpICogMTI7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldFVUQ01vbnRoKCk7XG59KTtcblxudmFyIHV0Y01vbnRocyA9IHV0Y01vbnRoLnJhbmdlO1xuXG52YXIgdXRjWWVhciA9IG5ld0ludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRVVENNb250aCgwLCAxKTtcbiAgZGF0ZS5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRVVENGdWxsWWVhcihkYXRlLmdldFVUQ0Z1bGxZZWFyKCkgKyBzdGVwKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIGVuZC5nZXRVVENGdWxsWWVhcigpIC0gc3RhcnQuZ2V0VVRDRnVsbFllYXIoKTtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0VVRDRnVsbFllYXIoKTtcbn0pO1xuXG4vLyBBbiBvcHRpbWl6ZWQgaW1wbGVtZW50YXRpb24gZm9yIHRoaXMgc2ltcGxlIGNhc2UuXG51dGNZZWFyLmV2ZXJ5ID0gZnVuY3Rpb24oaykge1xuICByZXR1cm4gIWlzRmluaXRlKGsgPSBNYXRoLmZsb29yKGspKSB8fCAhKGsgPiAwKSA/IG51bGwgOiBuZXdJbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgZGF0ZS5zZXRVVENGdWxsWWVhcihNYXRoLmZsb29yKGRhdGUuZ2V0VVRDRnVsbFllYXIoKSAvIGspICogayk7XG4gICAgZGF0ZS5zZXRVVENNb250aCgwLCAxKTtcbiAgICBkYXRlLnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApO1xuICB9LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gICAgZGF0ZS5zZXRVVENGdWxsWWVhcihkYXRlLmdldFVUQ0Z1bGxZZWFyKCkgKyBzdGVwICogayk7XG4gIH0pO1xufTtcblxudmFyIHV0Y1llYXJzID0gdXRjWWVhci5yYW5nZTtcblxuZXhwb3J0cy50aW1lSW50ZXJ2YWwgPSBuZXdJbnRlcnZhbDtcbmV4cG9ydHMudGltZU1pbGxpc2Vjb25kID0gbWlsbGlzZWNvbmQ7XG5leHBvcnRzLnRpbWVNaWxsaXNlY29uZHMgPSBtaWxsaXNlY29uZHM7XG5leHBvcnRzLnV0Y01pbGxpc2Vjb25kID0gbWlsbGlzZWNvbmQ7XG5leHBvcnRzLnV0Y01pbGxpc2Vjb25kcyA9IG1pbGxpc2Vjb25kcztcbmV4cG9ydHMudGltZVNlY29uZCA9IHNlY29uZDtcbmV4cG9ydHMudGltZVNlY29uZHMgPSBzZWNvbmRzO1xuZXhwb3J0cy51dGNTZWNvbmQgPSBzZWNvbmQ7XG5leHBvcnRzLnV0Y1NlY29uZHMgPSBzZWNvbmRzO1xuZXhwb3J0cy50aW1lTWludXRlID0gbWludXRlO1xuZXhwb3J0cy50aW1lTWludXRlcyA9IG1pbnV0ZXM7XG5leHBvcnRzLnRpbWVIb3VyID0gaG91cjtcbmV4cG9ydHMudGltZUhvdXJzID0gaG91cnM7XG5leHBvcnRzLnRpbWVEYXkgPSBkYXk7XG5leHBvcnRzLnRpbWVEYXlzID0gZGF5cztcbmV4cG9ydHMudGltZVdlZWsgPSBzdW5kYXk7XG5leHBvcnRzLnRpbWVXZWVrcyA9IHN1bmRheXM7XG5leHBvcnRzLnRpbWVTdW5kYXkgPSBzdW5kYXk7XG5leHBvcnRzLnRpbWVTdW5kYXlzID0gc3VuZGF5cztcbmV4cG9ydHMudGltZU1vbmRheSA9IG1vbmRheTtcbmV4cG9ydHMudGltZU1vbmRheXMgPSBtb25kYXlzO1xuZXhwb3J0cy50aW1lVHVlc2RheSA9IHR1ZXNkYXk7XG5leHBvcnRzLnRpbWVUdWVzZGF5cyA9IHR1ZXNkYXlzO1xuZXhwb3J0cy50aW1lV2VkbmVzZGF5ID0gd2VkbmVzZGF5O1xuZXhwb3J0cy50aW1lV2VkbmVzZGF5cyA9IHdlZG5lc2RheXM7XG5leHBvcnRzLnRpbWVUaHVyc2RheSA9IHRodXJzZGF5O1xuZXhwb3J0cy50aW1lVGh1cnNkYXlzID0gdGh1cnNkYXlzO1xuZXhwb3J0cy50aW1lRnJpZGF5ID0gZnJpZGF5O1xuZXhwb3J0cy50aW1lRnJpZGF5cyA9IGZyaWRheXM7XG5leHBvcnRzLnRpbWVTYXR1cmRheSA9IHNhdHVyZGF5O1xuZXhwb3J0cy50aW1lU2F0dXJkYXlzID0gc2F0dXJkYXlzO1xuZXhwb3J0cy50aW1lTW9udGggPSBtb250aDtcbmV4cG9ydHMudGltZU1vbnRocyA9IG1vbnRocztcbmV4cG9ydHMudGltZVllYXIgPSB5ZWFyO1xuZXhwb3J0cy50aW1lWWVhcnMgPSB5ZWFycztcbmV4cG9ydHMudXRjTWludXRlID0gdXRjTWludXRlO1xuZXhwb3J0cy51dGNNaW51dGVzID0gdXRjTWludXRlcztcbmV4cG9ydHMudXRjSG91ciA9IHV0Y0hvdXI7XG5leHBvcnRzLnV0Y0hvdXJzID0gdXRjSG91cnM7XG5leHBvcnRzLnV0Y0RheSA9IHV0Y0RheTtcbmV4cG9ydHMudXRjRGF5cyA9IHV0Y0RheXM7XG5leHBvcnRzLnV0Y1dlZWsgPSB1dGNTdW5kYXk7XG5leHBvcnRzLnV0Y1dlZWtzID0gdXRjU3VuZGF5cztcbmV4cG9ydHMudXRjU3VuZGF5ID0gdXRjU3VuZGF5O1xuZXhwb3J0cy51dGNTdW5kYXlzID0gdXRjU3VuZGF5cztcbmV4cG9ydHMudXRjTW9uZGF5ID0gdXRjTW9uZGF5O1xuZXhwb3J0cy51dGNNb25kYXlzID0gdXRjTW9uZGF5cztcbmV4cG9ydHMudXRjVHVlc2RheSA9IHV0Y1R1ZXNkYXk7XG5leHBvcnRzLnV0Y1R1ZXNkYXlzID0gdXRjVHVlc2RheXM7XG5leHBvcnRzLnV0Y1dlZG5lc2RheSA9IHV0Y1dlZG5lc2RheTtcbmV4cG9ydHMudXRjV2VkbmVzZGF5cyA9IHV0Y1dlZG5lc2RheXM7XG5leHBvcnRzLnV0Y1RodXJzZGF5ID0gdXRjVGh1cnNkYXk7XG5leHBvcnRzLnV0Y1RodXJzZGF5cyA9IHV0Y1RodXJzZGF5cztcbmV4cG9ydHMudXRjRnJpZGF5ID0gdXRjRnJpZGF5O1xuZXhwb3J0cy51dGNGcmlkYXlzID0gdXRjRnJpZGF5cztcbmV4cG9ydHMudXRjU2F0dXJkYXkgPSB1dGNTYXR1cmRheTtcbmV4cG9ydHMudXRjU2F0dXJkYXlzID0gdXRjU2F0dXJkYXlzO1xuZXhwb3J0cy51dGNNb250aCA9IHV0Y01vbnRoO1xuZXhwb3J0cy51dGNNb250aHMgPSB1dGNNb250aHM7XG5leHBvcnRzLnV0Y1llYXIgPSB1dGNZZWFyO1xuZXhwb3J0cy51dGNZZWFycyA9IHV0Y1llYXJzO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG59KSkpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2QzLXRpbWUvYnVpbGQvZDMtdGltZS5qc1xuLy8gbW9kdWxlIGlkID0gMTNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgMiAzIDUgNiA3IDggOSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-time-format/ Version 2.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports, __webpack_require__(13)) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Time) { 'use strict';\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$1;\n\n\n\n\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.timeFormat = locale$1.format;\n  exports.timeParse = locale$1.parse;\n  exports.utcFormat = locale$1.utcFormat;\n  exports.utcParse = locale$1.utcParse;\n  return locale$1;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nexports.timeFormatDefaultLocale = defaultLocale;\nexports.timeFormatLocale = formatLocale;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-transition/ Version 1.1.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports, __webpack_require__(1), __webpack_require__(8), __webpack_require__(16), __webpack_require__(12), __webpack_require__(7), __webpack_require__(5)) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-timer', 'd3-interpolate', 'd3-color', 'd3-ease'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Selection,d3Dispatch,d3Timer,d3Interpolate,d3Color,d3Ease) { 'use strict';\n\nvar emptyOn = d3Dispatch.dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = d3Timer.timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return d3Timer.timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    d3Timer.timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n\nvar interpolate = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? d3Interpolate.interpolateNumber\n      : b instanceof d3Color.color ? d3Interpolate.interpolateRgb\n      : (c = d3Color.color(b)) ? (b = c, d3Interpolate.interpolateRgb)\n      : d3Interpolate.interpolateString)(a, b);\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = d3Selection.namespace(name), i = fullname === \"transform\" ? d3Interpolate.interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = d3Selection.namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = d3Selection.matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection = d3Selection.selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection(this._groups, this._parents);\n};\n\nfunction styleRemove(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = d3Selection.style(this, name),\n        value1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = d3Selection.style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = d3Selection.style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? d3Interpolate.interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return d3Selection.selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = d3Selection.selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: d3Ease.easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = d3Timer.now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = d3Timer.now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nd3Selection.selection.prototype.interrupt = selection_interrupt;\nd3Selection.selection.prototype.transition = selection_transition;\n\nvar root = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRyYW5zaXRpb24vYnVpbGQvZDMtdHJhbnNpdGlvbi5qcz8wN2IwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtdHJhbnNpdGlvbi8gVmVyc2lvbiAxLjEuMC4gQ29weXJpZ2h0IDIwMTcgTWlrZSBCb3N0b2NrLlxuKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcblx0dHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnID8gZmFjdG9yeShleHBvcnRzLCByZXF1aXJlKCdkMy1zZWxlY3Rpb24nKSwgcmVxdWlyZSgnZDMtZGlzcGF0Y2gnKSwgcmVxdWlyZSgnZDMtdGltZXInKSwgcmVxdWlyZSgnZDMtaW50ZXJwb2xhdGUnKSwgcmVxdWlyZSgnZDMtY29sb3InKSwgcmVxdWlyZSgnZDMtZWFzZScpKSA6XG5cdHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCA/IGRlZmluZShbJ2V4cG9ydHMnLCAnZDMtc2VsZWN0aW9uJywgJ2QzLWRpc3BhdGNoJywgJ2QzLXRpbWVyJywgJ2QzLWludGVycG9sYXRlJywgJ2QzLWNvbG9yJywgJ2QzLWVhc2UnXSwgZmFjdG9yeSkgOlxuXHQoZmFjdG9yeSgoZ2xvYmFsLmQzID0gZ2xvYmFsLmQzIHx8IHt9KSxnbG9iYWwuZDMsZ2xvYmFsLmQzLGdsb2JhbC5kMyxnbG9iYWwuZDMsZ2xvYmFsLmQzLGdsb2JhbC5kMykpO1xufSh0aGlzLCAoZnVuY3Rpb24gKGV4cG9ydHMsZDNTZWxlY3Rpb24sZDNEaXNwYXRjaCxkM1RpbWVyLGQzSW50ZXJwb2xhdGUsZDNDb2xvcixkM0Vhc2UpIHsgJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW1wdHlPbiA9IGQzRGlzcGF0Y2guZGlzcGF0Y2goXCJzdGFydFwiLCBcImVuZFwiLCBcImludGVycnVwdFwiKTtcbnZhciBlbXB0eVR3ZWVuID0gW107XG5cbnZhciBDUkVBVEVEID0gMDtcbnZhciBTQ0hFRFVMRUQgPSAxO1xudmFyIFNUQVJUSU5HID0gMjtcbnZhciBTVEFSVEVEID0gMztcbnZhciBSVU5OSU5HID0gNDtcbnZhciBFTkRJTkcgPSA1O1xudmFyIEVOREVEID0gNjtcblxudmFyIHNjaGVkdWxlID0gZnVuY3Rpb24obm9kZSwgbmFtZSwgaWQsIGluZGV4LCBncm91cCwgdGltaW5nKSB7XG4gIHZhciBzY2hlZHVsZXMgPSBub2RlLl9fdHJhbnNpdGlvbjtcbiAgaWYgKCFzY2hlZHVsZXMpIG5vZGUuX190cmFuc2l0aW9uID0ge307XG4gIGVsc2UgaWYgKGlkIGluIHNjaGVkdWxlcykgcmV0dXJuO1xuICBjcmVhdGUobm9kZSwgaWQsIHtcbiAgICBuYW1lOiBuYW1lLFxuICAgIGluZGV4OiBpbmRleCwgLy8gRm9yIGNvbnRleHQgZHVyaW5nIGNhbGxiYWNrLlxuICAgIGdyb3VwOiBncm91cCwgLy8gRm9yIGNvbnRleHQgZHVyaW5nIGNhbGxiYWNrLlxuICAgIG9uOiBlbXB0eU9uLFxuICAgIHR3ZWVuOiBlbXB0eVR3ZWVuLFxuICAgIHRpbWU6IHRpbWluZy50aW1lLFxuICAgIGRlbGF5OiB0aW1pbmcuZGVsYXksXG4gICAgZHVyYXRpb246IHRpbWluZy5kdXJhdGlvbixcbiAgICBlYXNlOiB0aW1pbmcuZWFzZSxcbiAgICB0aW1lcjogbnVsbCxcbiAgICBzdGF0ZTogQ1JFQVRFRFxuICB9KTtcbn07XG5cbmZ1bmN0aW9uIGluaXQobm9kZSwgaWQpIHtcbiAgdmFyIHNjaGVkdWxlID0gbm9kZS5fX3RyYW5zaXRpb247XG4gIGlmICghc2NoZWR1bGUgfHwgIShzY2hlZHVsZSA9IHNjaGVkdWxlW2lkXSkgfHwgc2NoZWR1bGUuc3RhdGUgPiBDUkVBVEVEKSB0aHJvdyBuZXcgRXJyb3IoXCJ0b28gbGF0ZVwiKTtcbiAgcmV0dXJuIHNjaGVkdWxlO1xufVxuXG5mdW5jdGlvbiBzZXQobm9kZSwgaWQpIHtcbiAgdmFyIHNjaGVkdWxlID0gbm9kZS5fX3RyYW5zaXRpb247XG4gIGlmICghc2NoZWR1bGUgfHwgIShzY2hlZHVsZSA9IHNjaGVkdWxlW2lkXSkgfHwgc2NoZWR1bGUuc3RhdGUgPiBTVEFSVElORykgdGhyb3cgbmV3IEVycm9yKFwidG9vIGxhdGVcIik7XG4gIHJldHVybiBzY2hlZHVsZTtcbn1cblxuZnVuY3Rpb24gZ2V0KG5vZGUsIGlkKSB7XG4gIHZhciBzY2hlZHVsZSA9IG5vZGUuX190cmFuc2l0aW9uO1xuICBpZiAoIXNjaGVkdWxlIHx8ICEoc2NoZWR1bGUgPSBzY2hlZHVsZVtpZF0pKSB0aHJvdyBuZXcgRXJyb3IoXCJ0b28gbGF0ZVwiKTtcbiAgcmV0dXJuIHNjaGVkdWxlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGUobm9kZSwgaWQsIHNlbGYpIHtcbiAgdmFyIHNjaGVkdWxlcyA9IG5vZGUuX190cmFuc2l0aW9uLFxuICAgICAgdHdlZW47XG5cbiAgLy8gSW5pdGlhbGl6ZSB0aGUgc2VsZiB0aW1lciB3aGVuIHRoZSB0cmFuc2l0aW9uIGlzIGNyZWF0ZWQuXG4gIC8vIE5vdGUgdGhlIGFjdHVhbCBkZWxheSBpcyBub3Qga25vd24gdW50aWwgdGhlIGZpcnN0IGNhbGxiYWNrIVxuICBzY2hlZHVsZXNbaWRdID0gc2VsZjtcbiAgc2VsZi50aW1lciA9IGQzVGltZXIudGltZXIoc2NoZWR1bGUsIDAsIHNlbGYudGltZSk7XG5cbiAgZnVuY3Rpb24gc2NoZWR1bGUoZWxhcHNlZCkge1xuICAgIHNlbGYuc3RhdGUgPSBTQ0hFRFVMRUQ7XG4gICAgc2VsZi50aW1lci5yZXN0YXJ0KHN0YXJ0LCBzZWxmLmRlbGF5LCBzZWxmLnRpbWUpO1xuXG4gICAgLy8gSWYgdGhlIGVsYXBzZWQgZGVsYXkgaXMgbGVzcyB0aGFuIG91ciBmaXJzdCBzbGVlcCwgc3RhcnQgaW1tZWRpYXRlbHkuXG4gICAgaWYgKHNlbGYuZGVsYXkgPD0gZWxhcHNlZCkgc3RhcnQoZWxhcHNlZCAtIHNlbGYuZGVsYXkpO1xuICB9XG5cbiAgZnVuY3Rpb24gc3RhcnQoZWxhcHNlZCkge1xuICAgIHZhciBpLCBqLCBuLCBvO1xuXG4gICAgLy8gSWYgdGhlIHN0YXRlIGlzIG5vdCBTQ0hFRFVMRUQsIHRoZW4gd2UgcHJldmlvdXNseSBlcnJvcmVkIG9uIHN0YXJ0LlxuICAgIGlmIChzZWxmLnN0YXRlICE9PSBTQ0hFRFVMRUQpIHJldHVybiBzdG9wKCk7XG5cbiAgICBmb3IgKGkgaW4gc2NoZWR1bGVzKSB7XG4gICAgICBvID0gc2NoZWR1bGVzW2ldO1xuICAgICAgaWYgKG8ubmFtZSAhPT0gc2VsZi5uYW1lKSBjb250aW51ZTtcblxuICAgICAgLy8gV2hpbGUgdGhpcyBlbGVtZW50IGFscmVhZHkgaGFzIGEgc3RhcnRpbmcgdHJhbnNpdGlvbiBkdXJpbmcgdGhpcyBmcmFtZSxcbiAgICAgIC8vIGRlZmVyIHN0YXJ0aW5nIGFuIGludGVycnVwdGluZyB0cmFuc2l0aW9uIHVudGlsIHRoYXQgdHJhbnNpdGlvbiBoYXMgYVxuICAgICAgLy8gY2hhbmNlIHRvIHRpY2sgKGFuZCBwb3NzaWJseSBlbmQpOyBzZWUgZDMvZDMtdHJhbnNpdGlvbiM1NCFcbiAgICAgIGlmIChvLnN0YXRlID09PSBTVEFSVEVEKSByZXR1cm4gZDNUaW1lci50aW1lb3V0KHN0YXJ0KTtcblxuICAgICAgLy8gSW50ZXJydXB0IHRoZSBhY3RpdmUgdHJhbnNpdGlvbiwgaWYgYW55LlxuICAgICAgLy8gRGlzcGF0Y2ggdGhlIGludGVycnVwdCBldmVudC5cbiAgICAgIGlmIChvLnN0YXRlID09PSBSVU5OSU5HKSB7XG4gICAgICAgIG8uc3RhdGUgPSBFTkRFRDtcbiAgICAgICAgby50aW1lci5zdG9wKCk7XG4gICAgICAgIG8ub24uY2FsbChcImludGVycnVwdFwiLCBub2RlLCBub2RlLl9fZGF0YV9fLCBvLmluZGV4LCBvLmdyb3VwKTtcbiAgICAgICAgZGVsZXRlIHNjaGVkdWxlc1tpXTtcbiAgICAgIH1cblxuICAgICAgLy8gQ2FuY2VsIGFueSBwcmUtZW1wdGVkIHRyYW5zaXRpb25zLiBObyBpbnRlcnJ1cHQgZXZlbnQgaXMgZGlzcGF0Y2hlZFxuICAgICAgLy8gYmVjYXVzZSB0aGUgY2FuY2VsbGVkIHRyYW5zaXRpb25zIG5ldmVyIHN0YXJ0ZWQuIE5vdGUgdGhhdCB0aGlzIGFsc29cbiAgICAgIC8vIHJlbW92ZXMgdGhpcyB0cmFuc2l0aW9uIGZyb20gdGhlIHBlbmRpbmcgbGlzdCFcbiAgICAgIGVsc2UgaWYgKCtpIDwgaWQpIHtcbiAgICAgICAgby5zdGF0ZSA9IEVOREVEO1xuICAgICAgICBvLnRpbWVyLnN0b3AoKTtcbiAgICAgICAgZGVsZXRlIHNjaGVkdWxlc1tpXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBEZWZlciB0aGUgZmlyc3QgdGljayB0byBlbmQgb2YgdGhlIGN1cnJlbnQgZnJhbWU7IHNlZSBkMy9kMyMxNTc2LlxuICAgIC8vIE5vdGUgdGhlIHRyYW5zaXRpb24gbWF5IGJlIGNhbmNlbGVkIGFmdGVyIHN0YXJ0IGFuZCBiZWZvcmUgdGhlIGZpcnN0IHRpY2shXG4gICAgLy8gTm90ZSB0aGlzIG11c3QgYmUgc2NoZWR1bGVkIGJlZm9yZSB0aGUgc3RhcnQgZXZlbnQ7IHNlZSBkMy9kMy10cmFuc2l0aW9uIzE2IVxuICAgIC8vIEFzc3VtaW5nIHRoaXMgaXMgc3VjY2Vzc2Z1bCwgc3Vic2VxdWVudCBjYWxsYmFja3MgZ28gc3RyYWlnaHQgdG8gdGljay5cbiAgICBkM1RpbWVyLnRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoc2VsZi5zdGF0ZSA9PT0gU1RBUlRFRCkge1xuICAgICAgICBzZWxmLnN0YXRlID0gUlVOTklORztcbiAgICAgICAgc2VsZi50aW1lci5yZXN0YXJ0KHRpY2ssIHNlbGYuZGVsYXksIHNlbGYudGltZSk7XG4gICAgICAgIHRpY2soZWxhcHNlZCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBEaXNwYXRjaCB0aGUgc3RhcnQgZXZlbnQuXG4gICAgLy8gTm90ZSB0aGlzIG11c3QgYmUgZG9uZSBiZWZvcmUgdGhlIHR3ZWVuIGFyZSBpbml0aWFsaXplZC5cbiAgICBzZWxmLnN0YXRlID0gU1RBUlRJTkc7XG4gICAgc2VsZi5vbi5jYWxsKFwic3RhcnRcIiwgbm9kZSwgbm9kZS5fX2RhdGFfXywgc2VsZi5pbmRleCwgc2VsZi5ncm91cCk7XG4gICAgaWYgKHNlbGYuc3RhdGUgIT09IFNUQVJUSU5HKSByZXR1cm47IC8vIGludGVycnVwdGVkXG4gICAgc2VsZi5zdGF0ZSA9IFNUQVJURUQ7XG5cbiAgICAvLyBJbml0aWFsaXplIHRoZSB0d2VlbiwgZGVsZXRpbmcgbnVsbCB0d2Vlbi5cbiAgICB0d2VlbiA9IG5ldyBBcnJheShuID0gc2VsZi50d2Vlbi5sZW5ndGgpO1xuICAgIGZvciAoaSA9IDAsIGogPSAtMTsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG8gPSBzZWxmLnR3ZWVuW2ldLnZhbHVlLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgc2VsZi5pbmRleCwgc2VsZi5ncm91cCkpIHtcbiAgICAgICAgdHdlZW5bKytqXSA9IG87XG4gICAgICB9XG4gICAgfVxuICAgIHR3ZWVuLmxlbmd0aCA9IGogKyAxO1xuICB9XG5cbiAgZnVuY3Rpb24gdGljayhlbGFwc2VkKSB7XG4gICAgdmFyIHQgPSBlbGFwc2VkIDwgc2VsZi5kdXJhdGlvbiA/IHNlbGYuZWFzZS5jYWxsKG51bGwsIGVsYXBzZWQgLyBzZWxmLmR1cmF0aW9uKSA6IChzZWxmLnRpbWVyLnJlc3RhcnQoc3RvcCksIHNlbGYuc3RhdGUgPSBFTkRJTkcsIDEpLFxuICAgICAgICBpID0gLTEsXG4gICAgICAgIG4gPSB0d2Vlbi5sZW5ndGg7XG5cbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgdHdlZW5baV0uY2FsbChudWxsLCB0KTtcbiAgICB9XG5cbiAgICAvLyBEaXNwYXRjaCB0aGUgZW5kIGV2ZW50LlxuICAgIGlmIChzZWxmLnN0YXRlID09PSBFTkRJTkcpIHtcbiAgICAgIHNlbGYub24uY2FsbChcImVuZFwiLCBub2RlLCBub2RlLl9fZGF0YV9fLCBzZWxmLmluZGV4LCBzZWxmLmdyb3VwKTtcbiAgICAgIHN0b3AoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzdG9wKCkge1xuICAgIHNlbGYuc3RhdGUgPSBFTkRFRDtcbiAgICBzZWxmLnRpbWVyLnN0b3AoKTtcbiAgICBkZWxldGUgc2NoZWR1bGVzW2lkXTtcbiAgICBmb3IgKHZhciBpIGluIHNjaGVkdWxlcykgcmV0dXJuOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgZGVsZXRlIG5vZGUuX190cmFuc2l0aW9uO1xuICB9XG59XG5cbnZhciBpbnRlcnJ1cHQgPSBmdW5jdGlvbihub2RlLCBuYW1lKSB7XG4gIHZhciBzY2hlZHVsZXMgPSBub2RlLl9fdHJhbnNpdGlvbixcbiAgICAgIHNjaGVkdWxlLFxuICAgICAgYWN0aXZlLFxuICAgICAgZW1wdHkgPSB0cnVlLFxuICAgICAgaTtcblxuICBpZiAoIXNjaGVkdWxlcykgcmV0dXJuO1xuXG4gIG5hbWUgPSBuYW1lID09IG51bGwgPyBudWxsIDogbmFtZSArIFwiXCI7XG5cbiAgZm9yIChpIGluIHNjaGVkdWxlcykge1xuICAgIGlmICgoc2NoZWR1bGUgPSBzY2hlZHVsZXNbaV0pLm5hbWUgIT09IG5hbWUpIHsgZW1wdHkgPSBmYWxzZTsgY29udGludWU7IH1cbiAgICBhY3RpdmUgPSBzY2hlZHVsZS5zdGF0ZSA+IFNUQVJUSU5HICYmIHNjaGVkdWxlLnN0YXRlIDwgRU5ESU5HO1xuICAgIHNjaGVkdWxlLnN0YXRlID0gRU5ERUQ7XG4gICAgc2NoZWR1bGUudGltZXIuc3RvcCgpO1xuICAgIGlmIChhY3RpdmUpIHNjaGVkdWxlLm9uLmNhbGwoXCJpbnRlcnJ1cHRcIiwgbm9kZSwgbm9kZS5fX2RhdGFfXywgc2NoZWR1bGUuaW5kZXgsIHNjaGVkdWxlLmdyb3VwKTtcbiAgICBkZWxldGUgc2NoZWR1bGVzW2ldO1xuICB9XG5cbiAgaWYgKGVtcHR5KSBkZWxldGUgbm9kZS5fX3RyYW5zaXRpb247XG59O1xuXG52YXIgc2VsZWN0aW9uX2ludGVycnVwdCA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcbiAgICBpbnRlcnJ1cHQodGhpcywgbmFtZSk7XG4gIH0pO1xufTtcblxuZnVuY3Rpb24gdHdlZW5SZW1vdmUoaWQsIG5hbWUpIHtcbiAgdmFyIHR3ZWVuMCwgdHdlZW4xO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNjaGVkdWxlID0gc2V0KHRoaXMsIGlkKSxcbiAgICAgICAgdHdlZW4gPSBzY2hlZHVsZS50d2VlbjtcblxuICAgIC8vIElmIHRoaXMgbm9kZSBzaGFyZWQgdHdlZW4gd2l0aCB0aGUgcHJldmlvdXMgbm9kZSxcbiAgICAvLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgdHdlZW4gYW5kIHdl4oCZcmUgZG9uZSFcbiAgICAvLyBPdGhlcndpc2UsIGNvcHktb24td3JpdGUuXG4gICAgaWYgKHR3ZWVuICE9PSB0d2VlbjApIHtcbiAgICAgIHR3ZWVuMSA9IHR3ZWVuMCA9IHR3ZWVuO1xuICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSB0d2VlbjEubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGlmICh0d2VlbjFbaV0ubmFtZSA9PT0gbmFtZSkge1xuICAgICAgICAgIHR3ZWVuMSA9IHR3ZWVuMS5zbGljZSgpO1xuICAgICAgICAgIHR3ZWVuMS5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBzY2hlZHVsZS50d2VlbiA9IHR3ZWVuMTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gdHdlZW5GdW5jdGlvbihpZCwgbmFtZSwgdmFsdWUpIHtcbiAgdmFyIHR3ZWVuMCwgdHdlZW4xO1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcjtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzY2hlZHVsZSA9IHNldCh0aGlzLCBpZCksXG4gICAgICAgIHR3ZWVuID0gc2NoZWR1bGUudHdlZW47XG5cbiAgICAvLyBJZiB0aGlzIG5vZGUgc2hhcmVkIHR3ZWVuIHdpdGggdGhlIHByZXZpb3VzIG5vZGUsXG4gICAgLy8ganVzdCBhc3NpZ24gdGhlIHVwZGF0ZWQgc2hhcmVkIHR3ZWVuIGFuZCB3ZeKAmXJlIGRvbmUhXG4gICAgLy8gT3RoZXJ3aXNlLCBjb3B5LW9uLXdyaXRlLlxuICAgIGlmICh0d2VlbiAhPT0gdHdlZW4wKSB7XG4gICAgICB0d2VlbjEgPSAodHdlZW4wID0gdHdlZW4pLnNsaWNlKCk7XG4gICAgICBmb3IgKHZhciB0ID0ge25hbWU6IG5hbWUsIHZhbHVlOiB2YWx1ZX0sIGkgPSAwLCBuID0gdHdlZW4xLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgICBpZiAodHdlZW4xW2ldLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgICAgICB0d2VlbjFbaV0gPSB0O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoaSA9PT0gbikgdHdlZW4xLnB1c2godCk7XG4gICAgfVxuXG4gICAgc2NoZWR1bGUudHdlZW4gPSB0d2VlbjE7XG4gIH07XG59XG5cbnZhciB0cmFuc2l0aW9uX3R3ZWVuID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgdmFyIGlkID0gdGhpcy5faWQ7XG5cbiAgbmFtZSArPSBcIlwiO1xuXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgIHZhciB0d2VlbiA9IGdldCh0aGlzLm5vZGUoKSwgaWQpLnR3ZWVuO1xuICAgIGZvciAodmFyIGkgPSAwLCBuID0gdHdlZW4ubGVuZ3RoLCB0OyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKHQgPSB0d2VlbltpXSkubmFtZSA9PT0gbmFtZSkge1xuICAgICAgICByZXR1cm4gdC52YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gdGhpcy5lYWNoKCh2YWx1ZSA9PSBudWxsID8gdHdlZW5SZW1vdmUgOiB0d2VlbkZ1bmN0aW9uKShpZCwgbmFtZSwgdmFsdWUpKTtcbn07XG5cbmZ1bmN0aW9uIHR3ZWVuVmFsdWUodHJhbnNpdGlvbiwgbmFtZSwgdmFsdWUpIHtcbiAgdmFyIGlkID0gdHJhbnNpdGlvbi5faWQ7XG5cbiAgdHJhbnNpdGlvbi5lYWNoKGZ1bmN0aW9uKCkge1xuICAgIHZhciBzY2hlZHVsZSA9IHNldCh0aGlzLCBpZCk7XG4gICAgKHNjaGVkdWxlLnZhbHVlIHx8IChzY2hlZHVsZS52YWx1ZSA9IHt9KSlbbmFtZV0gPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9KTtcblxuICByZXR1cm4gZnVuY3Rpb24obm9kZSkge1xuICAgIHJldHVybiBnZXQobm9kZSwgaWQpLnZhbHVlW25hbWVdO1xuICB9O1xufVxuXG52YXIgaW50ZXJwb2xhdGUgPSBmdW5jdGlvbihhLCBiKSB7XG4gIHZhciBjO1xuICByZXR1cm4gKHR5cGVvZiBiID09PSBcIm51bWJlclwiID8gZDNJbnRlcnBvbGF0ZS5pbnRlcnBvbGF0ZU51bWJlclxuICAgICAgOiBiIGluc3RhbmNlb2YgZDNDb2xvci5jb2xvciA/IGQzSW50ZXJwb2xhdGUuaW50ZXJwb2xhdGVSZ2JcbiAgICAgIDogKGMgPSBkM0NvbG9yLmNvbG9yKGIpKSA/IChiID0gYywgZDNJbnRlcnBvbGF0ZS5pbnRlcnBvbGF0ZVJnYilcbiAgICAgIDogZDNJbnRlcnBvbGF0ZS5pbnRlcnBvbGF0ZVN0cmluZykoYSwgYik7XG59O1xuXG5mdW5jdGlvbiBhdHRyUmVtb3ZlKG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKG5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyUmVtb3ZlTlMoZnVsbG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckNvbnN0YW50KG5hbWUsIGludGVycG9sYXRlJCQxLCB2YWx1ZTEpIHtcbiAgdmFyIHZhbHVlMDAsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdmFsdWUwID0gdGhpcy5nZXRBdHRyaWJ1dGUobmFtZSk7XG4gICAgcmV0dXJuIHZhbHVlMCA9PT0gdmFsdWUxID8gbnVsbFxuICAgICAgICA6IHZhbHVlMCA9PT0gdmFsdWUwMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IGludGVycG9sYXRlMCA9IGludGVycG9sYXRlJCQxKHZhbHVlMDAgPSB2YWx1ZTAsIHZhbHVlMSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJDb25zdGFudE5TKGZ1bGxuYW1lLCBpbnRlcnBvbGF0ZSQkMSwgdmFsdWUxKSB7XG4gIHZhciB2YWx1ZTAwLFxuICAgICAgaW50ZXJwb2xhdGUwO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHZhbHVlMCA9IHRoaXMuZ2V0QXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKTtcbiAgICByZXR1cm4gdmFsdWUwID09PSB2YWx1ZTEgPyBudWxsXG4gICAgICAgIDogdmFsdWUwID09PSB2YWx1ZTAwID8gaW50ZXJwb2xhdGUwXG4gICAgICAgIDogaW50ZXJwb2xhdGUwID0gaW50ZXJwb2xhdGUkJDEodmFsdWUwMCA9IHZhbHVlMCwgdmFsdWUxKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckZ1bmN0aW9uKG5hbWUsIGludGVycG9sYXRlJCQxLCB2YWx1ZSkge1xuICB2YXIgdmFsdWUwMCxcbiAgICAgIHZhbHVlMTAsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdmFsdWUwLCB2YWx1ZTEgPSB2YWx1ZSh0aGlzKTtcbiAgICBpZiAodmFsdWUxID09IG51bGwpIHJldHVybiB2b2lkIHRoaXMucmVtb3ZlQXR0cmlidXRlKG5hbWUpO1xuICAgIHZhbHVlMCA9IHRoaXMuZ2V0QXR0cmlidXRlKG5hbWUpO1xuICAgIHJldHVybiB2YWx1ZTAgPT09IHZhbHVlMSA/IG51bGxcbiAgICAgICAgOiB2YWx1ZTAgPT09IHZhbHVlMDAgJiYgdmFsdWUxID09PSB2YWx1ZTEwID8gaW50ZXJwb2xhdGUwXG4gICAgICAgIDogaW50ZXJwb2xhdGUwID0gaW50ZXJwb2xhdGUkJDEodmFsdWUwMCA9IHZhbHVlMCwgdmFsdWUxMCA9IHZhbHVlMSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJGdW5jdGlvbk5TKGZ1bGxuYW1lLCBpbnRlcnBvbGF0ZSQkMSwgdmFsdWUpIHtcbiAgdmFyIHZhbHVlMDAsXG4gICAgICB2YWx1ZTEwLFxuICAgICAgaW50ZXJwb2xhdGUwO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHZhbHVlMCwgdmFsdWUxID0gdmFsdWUodGhpcyk7XG4gICAgaWYgKHZhbHVlMSA9PSBudWxsKSByZXR1cm4gdm9pZCB0aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gICAgdmFsdWUwID0gdGhpcy5nZXRBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICAgIHJldHVybiB2YWx1ZTAgPT09IHZhbHVlMSA/IG51bGxcbiAgICAgICAgOiB2YWx1ZTAgPT09IHZhbHVlMDAgJiYgdmFsdWUxID09PSB2YWx1ZTEwID8gaW50ZXJwb2xhdGUwXG4gICAgICAgIDogaW50ZXJwb2xhdGUwID0gaW50ZXJwb2xhdGUkJDEodmFsdWUwMCA9IHZhbHVlMCwgdmFsdWUxMCA9IHZhbHVlMSk7XG4gIH07XG59XG5cbnZhciB0cmFuc2l0aW9uX2F0dHIgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICB2YXIgZnVsbG5hbWUgPSBkM1NlbGVjdGlvbi5uYW1lc3BhY2UobmFtZSksIGkgPSBmdWxsbmFtZSA9PT0gXCJ0cmFuc2Zvcm1cIiA/IGQzSW50ZXJwb2xhdGUuaW50ZXJwb2xhdGVUcmFuc2Zvcm1TdmcgOiBpbnRlcnBvbGF0ZTtcbiAgcmV0dXJuIHRoaXMuYXR0clR3ZWVuKG5hbWUsIHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICA/IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJGdW5jdGlvbk5TIDogYXR0ckZ1bmN0aW9uKShmdWxsbmFtZSwgaSwgdHdlZW5WYWx1ZSh0aGlzLCBcImF0dHIuXCIgKyBuYW1lLCB2YWx1ZSkpXG4gICAgICA6IHZhbHVlID09IG51bGwgPyAoZnVsbG5hbWUubG9jYWwgPyBhdHRyUmVtb3ZlTlMgOiBhdHRyUmVtb3ZlKShmdWxsbmFtZSlcbiAgICAgIDogKGZ1bGxuYW1lLmxvY2FsID8gYXR0ckNvbnN0YW50TlMgOiBhdHRyQ29uc3RhbnQpKGZ1bGxuYW1lLCBpLCB2YWx1ZSArIFwiXCIpKTtcbn07XG5cbmZ1bmN0aW9uIGF0dHJUd2Vlbk5TKGZ1bGxuYW1lLCB2YWx1ZSkge1xuICBmdW5jdGlvbiB0d2VlbigpIHtcbiAgICB2YXIgbm9kZSA9IHRoaXMsIGkgPSB2YWx1ZS5hcHBseShub2RlLCBhcmd1bWVudHMpO1xuICAgIHJldHVybiBpICYmIGZ1bmN0aW9uKHQpIHtcbiAgICAgIG5vZGUuc2V0QXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsLCBpKHQpKTtcbiAgICB9O1xuICB9XG4gIHR3ZWVuLl92YWx1ZSA9IHZhbHVlO1xuICByZXR1cm4gdHdlZW47XG59XG5cbmZ1bmN0aW9uIGF0dHJUd2VlbihuYW1lLCB2YWx1ZSkge1xuICBmdW5jdGlvbiB0d2VlbigpIHtcbiAgICB2YXIgbm9kZSA9IHRoaXMsIGkgPSB2YWx1ZS5hcHBseShub2RlLCBhcmd1bWVudHMpO1xuICAgIHJldHVybiBpICYmIGZ1bmN0aW9uKHQpIHtcbiAgICAgIG5vZGUuc2V0QXR0cmlidXRlKG5hbWUsIGkodCkpO1xuICAgIH07XG4gIH1cbiAgdHdlZW4uX3ZhbHVlID0gdmFsdWU7XG4gIHJldHVybiB0d2Vlbjtcbn1cblxudmFyIHRyYW5zaXRpb25fYXR0clR3ZWVuID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgdmFyIGtleSA9IFwiYXR0ci5cIiArIG5hbWU7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgcmV0dXJuIChrZXkgPSB0aGlzLnR3ZWVuKGtleSkpICYmIGtleS5fdmFsdWU7XG4gIGlmICh2YWx1ZSA9PSBudWxsKSByZXR1cm4gdGhpcy50d2VlbihrZXksIG51bGwpO1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcjtcbiAgdmFyIGZ1bGxuYW1lID0gZDNTZWxlY3Rpb24ubmFtZXNwYWNlKG5hbWUpO1xuICByZXR1cm4gdGhpcy50d2VlbihrZXksIChmdWxsbmFtZS5sb2NhbCA/IGF0dHJUd2Vlbk5TIDogYXR0clR3ZWVuKShmdWxsbmFtZSwgdmFsdWUpKTtcbn07XG5cbmZ1bmN0aW9uIGRlbGF5RnVuY3Rpb24oaWQsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBpbml0KHRoaXMsIGlkKS5kZWxheSA9ICt2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBkZWxheUNvbnN0YW50KGlkLCB2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPSArdmFsdWUsIGZ1bmN0aW9uKCkge1xuICAgIGluaXQodGhpcywgaWQpLmRlbGF5ID0gdmFsdWU7XG4gIH07XG59XG5cbnZhciB0cmFuc2l0aW9uX2RlbGF5ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgdmFyIGlkID0gdGhpcy5faWQ7XG5cbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5lYWNoKCh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gZGVsYXlGdW5jdGlvblxuICAgICAgICAgIDogZGVsYXlDb25zdGFudCkoaWQsIHZhbHVlKSlcbiAgICAgIDogZ2V0KHRoaXMubm9kZSgpLCBpZCkuZGVsYXk7XG59O1xuXG5mdW5jdGlvbiBkdXJhdGlvbkZ1bmN0aW9uKGlkLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgc2V0KHRoaXMsIGlkKS5kdXJhdGlvbiA9ICt2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBkdXJhdGlvbkNvbnN0YW50KGlkLCB2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPSArdmFsdWUsIGZ1bmN0aW9uKCkge1xuICAgIHNldCh0aGlzLCBpZCkuZHVyYXRpb24gPSB2YWx1ZTtcbiAgfTtcbn1cblxudmFyIHRyYW5zaXRpb25fZHVyYXRpb24gPSBmdW5jdGlvbih2YWx1ZSkge1xuICB2YXIgaWQgPSB0aGlzLl9pZDtcblxuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aFxuICAgICAgPyB0aGlzLmVhY2goKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICAgICAgPyBkdXJhdGlvbkZ1bmN0aW9uXG4gICAgICAgICAgOiBkdXJhdGlvbkNvbnN0YW50KShpZCwgdmFsdWUpKVxuICAgICAgOiBnZXQodGhpcy5ub2RlKCksIGlkKS5kdXJhdGlvbjtcbn07XG5cbmZ1bmN0aW9uIGVhc2VDb25zdGFudChpZCwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgRXJyb3I7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBzZXQodGhpcywgaWQpLmVhc2UgPSB2YWx1ZTtcbiAgfTtcbn1cblxudmFyIHRyYW5zaXRpb25fZWFzZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHZhciBpZCA9IHRoaXMuX2lkO1xuXG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMuZWFjaChlYXNlQ29uc3RhbnQoaWQsIHZhbHVlKSlcbiAgICAgIDogZ2V0KHRoaXMubm9kZSgpLCBpZCkuZWFzZTtcbn07XG5cbnZhciB0cmFuc2l0aW9uX2ZpbHRlciA9IGZ1bmN0aW9uKG1hdGNoKSB7XG4gIGlmICh0eXBlb2YgbWF0Y2ggIT09IFwiZnVuY3Rpb25cIikgbWF0Y2ggPSBkM1NlbGVjdGlvbi5tYXRjaGVyKG1hdGNoKTtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBzdWJncm91cHMgPSBuZXcgQXJyYXkobSksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIHN1Ymdyb3VwID0gc3ViZ3JvdXBzW2pdID0gW10sIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKG5vZGUgPSBncm91cFtpXSkgJiYgbWF0Y2guY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCkpIHtcbiAgICAgICAgc3ViZ3JvdXAucHVzaChub2RlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFRyYW5zaXRpb24oc3ViZ3JvdXBzLCB0aGlzLl9wYXJlbnRzLCB0aGlzLl9uYW1lLCB0aGlzLl9pZCk7XG59O1xuXG52YXIgdHJhbnNpdGlvbl9tZXJnZSA9IGZ1bmN0aW9uKHRyYW5zaXRpb24pIHtcbiAgaWYgKHRyYW5zaXRpb24uX2lkICE9PSB0aGlzLl9pZCkgdGhyb3cgbmV3IEVycm9yO1xuXG4gIGZvciAodmFyIGdyb3VwczAgPSB0aGlzLl9ncm91cHMsIGdyb3VwczEgPSB0cmFuc2l0aW9uLl9ncm91cHMsIG0wID0gZ3JvdXBzMC5sZW5ndGgsIG0xID0gZ3JvdXBzMS5sZW5ndGgsIG0gPSBNYXRoLm1pbihtMCwgbTEpLCBtZXJnZXMgPSBuZXcgQXJyYXkobTApLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwMCA9IGdyb3VwczBbal0sIGdyb3VwMSA9IGdyb3VwczFbal0sIG4gPSBncm91cDAubGVuZ3RoLCBtZXJnZSA9IG1lcmdlc1tqXSA9IG5ldyBBcnJheShuKSwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXAwW2ldIHx8IGdyb3VwMVtpXSkge1xuICAgICAgICBtZXJnZVtpXSA9IG5vZGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZm9yICg7IGogPCBtMDsgKytqKSB7XG4gICAgbWVyZ2VzW2pdID0gZ3JvdXBzMFtqXTtcbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihtZXJnZXMsIHRoaXMuX3BhcmVudHMsIHRoaXMuX25hbWUsIHRoaXMuX2lkKTtcbn07XG5cbmZ1bmN0aW9uIHN0YXJ0KG5hbWUpIHtcbiAgcmV0dXJuIChuYW1lICsgXCJcIikudHJpbSgpLnNwbGl0KC9efFxccysvKS5ldmVyeShmdW5jdGlvbih0KSB7XG4gICAgdmFyIGkgPSB0LmluZGV4T2YoXCIuXCIpO1xuICAgIGlmIChpID49IDApIHQgPSB0LnNsaWNlKDAsIGkpO1xuICAgIHJldHVybiAhdCB8fCB0ID09PSBcInN0YXJ0XCI7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBvbkZ1bmN0aW9uKGlkLCBuYW1lLCBsaXN0ZW5lcikge1xuICB2YXIgb24wLCBvbjEsIHNpdCA9IHN0YXJ0KG5hbWUpID8gaW5pdCA6IHNldDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzY2hlZHVsZSA9IHNpdCh0aGlzLCBpZCksXG4gICAgICAgIG9uID0gc2NoZWR1bGUub247XG5cbiAgICAvLyBJZiB0aGlzIG5vZGUgc2hhcmVkIGEgZGlzcGF0Y2ggd2l0aCB0aGUgcHJldmlvdXMgbm9kZSxcbiAgICAvLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgZGlzcGF0Y2ggYW5kIHdl4oCZcmUgZG9uZSFcbiAgICAvLyBPdGhlcndpc2UsIGNvcHktb24td3JpdGUuXG4gICAgaWYgKG9uICE9PSBvbjApIChvbjEgPSAob24wID0gb24pLmNvcHkoKSkub24obmFtZSwgbGlzdGVuZXIpO1xuXG4gICAgc2NoZWR1bGUub24gPSBvbjE7XG4gIH07XG59XG5cbnZhciB0cmFuc2l0aW9uX29uID0gZnVuY3Rpb24obmFtZSwgbGlzdGVuZXIpIHtcbiAgdmFyIGlkID0gdGhpcy5faWQ7XG5cbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPCAyXG4gICAgICA/IGdldCh0aGlzLm5vZGUoKSwgaWQpLm9uLm9uKG5hbWUpXG4gICAgICA6IHRoaXMuZWFjaChvbkZ1bmN0aW9uKGlkLCBuYW1lLCBsaXN0ZW5lcikpO1xufTtcblxuZnVuY3Rpb24gcmVtb3ZlRnVuY3Rpb24oaWQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XG4gICAgZm9yICh2YXIgaSBpbiB0aGlzLl9fdHJhbnNpdGlvbikgaWYgKCtpICE9PSBpZCkgcmV0dXJuO1xuICAgIGlmIChwYXJlbnQpIHBhcmVudC5yZW1vdmVDaGlsZCh0aGlzKTtcbiAgfTtcbn1cblxudmFyIHRyYW5zaXRpb25fcmVtb3ZlID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLm9uKFwiZW5kLnJlbW92ZVwiLCByZW1vdmVGdW5jdGlvbih0aGlzLl9pZCkpO1xufTtcblxudmFyIHRyYW5zaXRpb25fc2VsZWN0ID0gZnVuY3Rpb24oc2VsZWN0KSB7XG4gIHZhciBuYW1lID0gdGhpcy5fbmFtZSxcbiAgICAgIGlkID0gdGhpcy5faWQ7XG5cbiAgaWYgKHR5cGVvZiBzZWxlY3QgIT09IFwiZnVuY3Rpb25cIikgc2VsZWN0ID0gZDNTZWxlY3Rpb24uc2VsZWN0b3Ioc2VsZWN0KTtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBzdWJncm91cHMgPSBuZXcgQXJyYXkobSksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIHN1Ymdyb3VwID0gc3ViZ3JvdXBzW2pdID0gbmV3IEFycmF5KG4pLCBub2RlLCBzdWJub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKChub2RlID0gZ3JvdXBbaV0pICYmIChzdWJub2RlID0gc2VsZWN0LmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApKSkge1xuICAgICAgICBpZiAoXCJfX2RhdGFfX1wiIGluIG5vZGUpIHN1Ym5vZGUuX19kYXRhX18gPSBub2RlLl9fZGF0YV9fO1xuICAgICAgICBzdWJncm91cFtpXSA9IHN1Ym5vZGU7XG4gICAgICAgIHNjaGVkdWxlKHN1Ymdyb3VwW2ldLCBuYW1lLCBpZCwgaSwgc3ViZ3JvdXAsIGdldChub2RlLCBpZCkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihzdWJncm91cHMsIHRoaXMuX3BhcmVudHMsIG5hbWUsIGlkKTtcbn07XG5cbnZhciB0cmFuc2l0aW9uX3NlbGVjdEFsbCA9IGZ1bmN0aW9uKHNlbGVjdCkge1xuICB2YXIgbmFtZSA9IHRoaXMuX25hbWUsXG4gICAgICBpZCA9IHRoaXMuX2lkO1xuXG4gIGlmICh0eXBlb2Ygc2VsZWN0ICE9PSBcImZ1bmN0aW9uXCIpIHNlbGVjdCA9IGQzU2VsZWN0aW9uLnNlbGVjdG9yQWxsKHNlbGVjdCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc3ViZ3JvdXBzID0gW10sIHBhcmVudHMgPSBbXSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgZm9yICh2YXIgY2hpbGRyZW4gPSBzZWxlY3QuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCksIGNoaWxkLCBpbmhlcml0ID0gZ2V0KG5vZGUsIGlkKSwgayA9IDAsIGwgPSBjaGlsZHJlbi5sZW5ndGg7IGsgPCBsOyArK2spIHtcbiAgICAgICAgICBpZiAoY2hpbGQgPSBjaGlsZHJlbltrXSkge1xuICAgICAgICAgICAgc2NoZWR1bGUoY2hpbGQsIG5hbWUsIGlkLCBrLCBjaGlsZHJlbiwgaW5oZXJpdCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHN1Ymdyb3Vwcy5wdXNoKGNoaWxkcmVuKTtcbiAgICAgICAgcGFyZW50cy5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihzdWJncm91cHMsIHBhcmVudHMsIG5hbWUsIGlkKTtcbn07XG5cbnZhciBTZWxlY3Rpb24gPSBkM1NlbGVjdGlvbi5zZWxlY3Rpb24ucHJvdG90eXBlLmNvbnN0cnVjdG9yO1xuXG52YXIgdHJhbnNpdGlvbl9zZWxlY3Rpb24gPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24odGhpcy5fZ3JvdXBzLCB0aGlzLl9wYXJlbnRzKTtcbn07XG5cbmZ1bmN0aW9uIHN0eWxlUmVtb3ZlKG5hbWUsIGludGVycG9sYXRlJCQxKSB7XG4gIHZhciB2YWx1ZTAwLFxuICAgICAgdmFsdWUxMCxcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZTAgPSBkM1NlbGVjdGlvbi5zdHlsZSh0aGlzLCBuYW1lKSxcbiAgICAgICAgdmFsdWUxID0gKHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSksIGQzU2VsZWN0aW9uLnN0eWxlKHRoaXMsIG5hbWUpKTtcbiAgICByZXR1cm4gdmFsdWUwID09PSB2YWx1ZTEgPyBudWxsXG4gICAgICAgIDogdmFsdWUwID09PSB2YWx1ZTAwICYmIHZhbHVlMSA9PT0gdmFsdWUxMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IGludGVycG9sYXRlMCA9IGludGVycG9sYXRlJCQxKHZhbHVlMDAgPSB2YWx1ZTAsIHZhbHVlMTAgPSB2YWx1ZTEpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZVJlbW92ZUVuZChuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZUNvbnN0YW50KG5hbWUsIGludGVycG9sYXRlJCQxLCB2YWx1ZTEpIHtcbiAgdmFyIHZhbHVlMDAsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdmFsdWUwID0gZDNTZWxlY3Rpb24uc3R5bGUodGhpcywgbmFtZSk7XG4gICAgcmV0dXJuIHZhbHVlMCA9PT0gdmFsdWUxID8gbnVsbFxuICAgICAgICA6IHZhbHVlMCA9PT0gdmFsdWUwMCA/IGludGVycG9sYXRlMFxuICAgICAgICA6IGludGVycG9sYXRlMCA9IGludGVycG9sYXRlJCQxKHZhbHVlMDAgPSB2YWx1ZTAsIHZhbHVlMSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0eWxlRnVuY3Rpb24obmFtZSwgaW50ZXJwb2xhdGUkJDEsIHZhbHVlKSB7XG4gIHZhciB2YWx1ZTAwLFxuICAgICAgdmFsdWUxMCxcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZTAgPSBkM1NlbGVjdGlvbi5zdHlsZSh0aGlzLCBuYW1lKSxcbiAgICAgICAgdmFsdWUxID0gdmFsdWUodGhpcyk7XG4gICAgaWYgKHZhbHVlMSA9PSBudWxsKSB2YWx1ZTEgPSAodGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShuYW1lKSwgZDNTZWxlY3Rpb24uc3R5bGUodGhpcywgbmFtZSkpO1xuICAgIHJldHVybiB2YWx1ZTAgPT09IHZhbHVlMSA/IG51bGxcbiAgICAgICAgOiB2YWx1ZTAgPT09IHZhbHVlMDAgJiYgdmFsdWUxID09PSB2YWx1ZTEwID8gaW50ZXJwb2xhdGUwXG4gICAgICAgIDogaW50ZXJwb2xhdGUwID0gaW50ZXJwb2xhdGUkJDEodmFsdWUwMCA9IHZhbHVlMCwgdmFsdWUxMCA9IHZhbHVlMSk7XG4gIH07XG59XG5cbnZhciB0cmFuc2l0aW9uX3N0eWxlID0gZnVuY3Rpb24obmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gIHZhciBpID0gKG5hbWUgKz0gXCJcIikgPT09IFwidHJhbnNmb3JtXCIgPyBkM0ludGVycG9sYXRlLmludGVycG9sYXRlVHJhbnNmb3JtQ3NzIDogaW50ZXJwb2xhdGU7XG4gIHJldHVybiB2YWx1ZSA9PSBudWxsID8gdGhpc1xuICAgICAgICAgIC5zdHlsZVR3ZWVuKG5hbWUsIHN0eWxlUmVtb3ZlKG5hbWUsIGkpKVxuICAgICAgICAgIC5vbihcImVuZC5zdHlsZS5cIiArIG5hbWUsIHN0eWxlUmVtb3ZlRW5kKG5hbWUpKVxuICAgICAgOiB0aGlzLnN0eWxlVHdlZW4obmFtZSwgdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgICA/IHN0eWxlRnVuY3Rpb24obmFtZSwgaSwgdHdlZW5WYWx1ZSh0aGlzLCBcInN0eWxlLlwiICsgbmFtZSwgdmFsdWUpKVxuICAgICAgICAgIDogc3R5bGVDb25zdGFudChuYW1lLCBpLCB2YWx1ZSArIFwiXCIpLCBwcmlvcml0eSk7XG59O1xuXG5mdW5jdGlvbiBzdHlsZVR3ZWVuKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICBmdW5jdGlvbiB0d2VlbigpIHtcbiAgICB2YXIgbm9kZSA9IHRoaXMsIGkgPSB2YWx1ZS5hcHBseShub2RlLCBhcmd1bWVudHMpO1xuICAgIHJldHVybiBpICYmIGZ1bmN0aW9uKHQpIHtcbiAgICAgIG5vZGUuc3R5bGUuc2V0UHJvcGVydHkobmFtZSwgaSh0KSwgcHJpb3JpdHkpO1xuICAgIH07XG4gIH1cbiAgdHdlZW4uX3ZhbHVlID0gdmFsdWU7XG4gIHJldHVybiB0d2Vlbjtcbn1cblxudmFyIHRyYW5zaXRpb25fc3R5bGVUd2VlbiA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICB2YXIga2V5ID0gXCJzdHlsZS5cIiArIChuYW1lICs9IFwiXCIpO1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHJldHVybiAoa2V5ID0gdGhpcy50d2VlbihrZXkpKSAmJiBrZXkuX3ZhbHVlO1xuICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIHRoaXMudHdlZW4oa2V5LCBudWxsKTtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgRXJyb3I7XG4gIHJldHVybiB0aGlzLnR3ZWVuKGtleSwgc3R5bGVUd2VlbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkgPT0gbnVsbCA/IFwiXCIgOiBwcmlvcml0eSkpO1xufTtcblxuZnVuY3Rpb24gdGV4dENvbnN0YW50KHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHRleHRGdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHZhbHVlMSA9IHZhbHVlKHRoaXMpO1xuICAgIHRoaXMudGV4dENvbnRlbnQgPSB2YWx1ZTEgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZTE7XG4gIH07XG59XG5cbnZhciB0cmFuc2l0aW9uX3RleHQgPSBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gdGhpcy50d2VlbihcInRleHRcIiwgdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgID8gdGV4dEZ1bmN0aW9uKHR3ZWVuVmFsdWUodGhpcywgXCJ0ZXh0XCIsIHZhbHVlKSlcbiAgICAgIDogdGV4dENvbnN0YW50KHZhbHVlID09IG51bGwgPyBcIlwiIDogdmFsdWUgKyBcIlwiKSk7XG59O1xuXG52YXIgdHJhbnNpdGlvbl90cmFuc2l0aW9uID0gZnVuY3Rpb24oKSB7XG4gIHZhciBuYW1lID0gdGhpcy5fbmFtZSxcbiAgICAgIGlkMCA9IHRoaXMuX2lkLFxuICAgICAgaWQxID0gbmV3SWQoKTtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICB2YXIgaW5oZXJpdCA9IGdldChub2RlLCBpZDApO1xuICAgICAgICBzY2hlZHVsZShub2RlLCBuYW1lLCBpZDEsIGksIGdyb3VwLCB7XG4gICAgICAgICAgdGltZTogaW5oZXJpdC50aW1lICsgaW5oZXJpdC5kZWxheSArIGluaGVyaXQuZHVyYXRpb24sXG4gICAgICAgICAgZGVsYXk6IDAsXG4gICAgICAgICAgZHVyYXRpb246IGluaGVyaXQuZHVyYXRpb24sXG4gICAgICAgICAgZWFzZTogaW5oZXJpdC5lYXNlXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihncm91cHMsIHRoaXMuX3BhcmVudHMsIG5hbWUsIGlkMSk7XG59O1xuXG52YXIgaWQgPSAwO1xuXG5mdW5jdGlvbiBUcmFuc2l0aW9uKGdyb3VwcywgcGFyZW50cywgbmFtZSwgaWQpIHtcbiAgdGhpcy5fZ3JvdXBzID0gZ3JvdXBzO1xuICB0aGlzLl9wYXJlbnRzID0gcGFyZW50cztcbiAgdGhpcy5fbmFtZSA9IG5hbWU7XG4gIHRoaXMuX2lkID0gaWQ7XG59XG5cbmZ1bmN0aW9uIHRyYW5zaXRpb24obmFtZSkge1xuICByZXR1cm4gZDNTZWxlY3Rpb24uc2VsZWN0aW9uKCkudHJhbnNpdGlvbihuYW1lKTtcbn1cblxuZnVuY3Rpb24gbmV3SWQoKSB7XG4gIHJldHVybiArK2lkO1xufVxuXG52YXIgc2VsZWN0aW9uX3Byb3RvdHlwZSA9IGQzU2VsZWN0aW9uLnNlbGVjdGlvbi5wcm90b3R5cGU7XG5cblRyYW5zaXRpb24ucHJvdG90eXBlID0gdHJhbnNpdGlvbi5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBUcmFuc2l0aW9uLFxuICBzZWxlY3Q6IHRyYW5zaXRpb25fc2VsZWN0LFxuICBzZWxlY3RBbGw6IHRyYW5zaXRpb25fc2VsZWN0QWxsLFxuICBmaWx0ZXI6IHRyYW5zaXRpb25fZmlsdGVyLFxuICBtZXJnZTogdHJhbnNpdGlvbl9tZXJnZSxcbiAgc2VsZWN0aW9uOiB0cmFuc2l0aW9uX3NlbGVjdGlvbixcbiAgdHJhbnNpdGlvbjogdHJhbnNpdGlvbl90cmFuc2l0aW9uLFxuICBjYWxsOiBzZWxlY3Rpb25fcHJvdG90eXBlLmNhbGwsXG4gIG5vZGVzOiBzZWxlY3Rpb25fcHJvdG90eXBlLm5vZGVzLFxuICBub2RlOiBzZWxlY3Rpb25fcHJvdG90eXBlLm5vZGUsXG4gIHNpemU6IHNlbGVjdGlvbl9wcm90b3R5cGUuc2l6ZSxcbiAgZW1wdHk6IHNlbGVjdGlvbl9wcm90b3R5cGUuZW1wdHksXG4gIGVhY2g6IHNlbGVjdGlvbl9wcm90b3R5cGUuZWFjaCxcbiAgb246IHRyYW5zaXRpb25fb24sXG4gIGF0dHI6IHRyYW5zaXRpb25fYXR0cixcbiAgYXR0clR3ZWVuOiB0cmFuc2l0aW9uX2F0dHJUd2VlbixcbiAgc3R5bGU6IHRyYW5zaXRpb25fc3R5bGUsXG4gIHN0eWxlVHdlZW46IHRyYW5zaXRpb25fc3R5bGVUd2VlbixcbiAgdGV4dDogdHJhbnNpdGlvbl90ZXh0LFxuICByZW1vdmU6IHRyYW5zaXRpb25fcmVtb3ZlLFxuICB0d2VlbjogdHJhbnNpdGlvbl90d2VlbixcbiAgZGVsYXk6IHRyYW5zaXRpb25fZGVsYXksXG4gIGR1cmF0aW9uOiB0cmFuc2l0aW9uX2R1cmF0aW9uLFxuICBlYXNlOiB0cmFuc2l0aW9uX2Vhc2Vcbn07XG5cbnZhciBkZWZhdWx0VGltaW5nID0ge1xuICB0aW1lOiBudWxsLCAvLyBTZXQgb24gdXNlLlxuICBkZWxheTogMCxcbiAgZHVyYXRpb246IDI1MCxcbiAgZWFzZTogZDNFYXNlLmVhc2VDdWJpY0luT3V0XG59O1xuXG5mdW5jdGlvbiBpbmhlcml0KG5vZGUsIGlkKSB7XG4gIHZhciB0aW1pbmc7XG4gIHdoaWxlICghKHRpbWluZyA9IG5vZGUuX190cmFuc2l0aW9uKSB8fCAhKHRpbWluZyA9IHRpbWluZ1tpZF0pKSB7XG4gICAgaWYgKCEobm9kZSA9IG5vZGUucGFyZW50Tm9kZSkpIHtcbiAgICAgIHJldHVybiBkZWZhdWx0VGltaW5nLnRpbWUgPSBkM1RpbWVyLm5vdygpLCBkZWZhdWx0VGltaW5nO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGltaW5nO1xufVxuXG52YXIgc2VsZWN0aW9uX3RyYW5zaXRpb24gPSBmdW5jdGlvbihuYW1lKSB7XG4gIHZhciBpZCxcbiAgICAgIHRpbWluZztcblxuICBpZiAobmFtZSBpbnN0YW5jZW9mIFRyYW5zaXRpb24pIHtcbiAgICBpZCA9IG5hbWUuX2lkLCBuYW1lID0gbmFtZS5fbmFtZTtcbiAgfSBlbHNlIHtcbiAgICBpZCA9IG5ld0lkKCksICh0aW1pbmcgPSBkZWZhdWx0VGltaW5nKS50aW1lID0gZDNUaW1lci5ub3coKSwgbmFtZSA9IG5hbWUgPT0gbnVsbCA/IG51bGwgOiBuYW1lICsgXCJcIjtcbiAgfVxuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgIHNjaGVkdWxlKG5vZGUsIG5hbWUsIGlkLCBpLCBncm91cCwgdGltaW5nIHx8IGluaGVyaXQobm9kZSwgaWQpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFRyYW5zaXRpb24oZ3JvdXBzLCB0aGlzLl9wYXJlbnRzLCBuYW1lLCBpZCk7XG59O1xuXG5kM1NlbGVjdGlvbi5zZWxlY3Rpb24ucHJvdG90eXBlLmludGVycnVwdCA9IHNlbGVjdGlvbl9pbnRlcnJ1cHQ7XG5kM1NlbGVjdGlvbi5zZWxlY3Rpb24ucHJvdG90eXBlLnRyYW5zaXRpb24gPSBzZWxlY3Rpb25fdHJhbnNpdGlvbjtcblxudmFyIHJvb3QgPSBbbnVsbF07XG5cbnZhciBhY3RpdmUgPSBmdW5jdGlvbihub2RlLCBuYW1lKSB7XG4gIHZhciBzY2hlZHVsZXMgPSBub2RlLl9fdHJhbnNpdGlvbixcbiAgICAgIHNjaGVkdWxlLFxuICAgICAgaTtcblxuICBpZiAoc2NoZWR1bGVzKSB7XG4gICAgbmFtZSA9IG5hbWUgPT0gbnVsbCA/IG51bGwgOiBuYW1lICsgXCJcIjtcbiAgICBmb3IgKGkgaW4gc2NoZWR1bGVzKSB7XG4gICAgICBpZiAoKHNjaGVkdWxlID0gc2NoZWR1bGVzW2ldKS5zdGF0ZSA+IFNDSEVEVUxFRCAmJiBzY2hlZHVsZS5uYW1lID09PSBuYW1lKSB7XG4gICAgICAgIHJldHVybiBuZXcgVHJhbnNpdGlvbihbW25vZGVdXSwgcm9vdCwgbmFtZSwgK2kpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudWxsO1xufTtcblxuZXhwb3J0cy50cmFuc2l0aW9uID0gdHJhbnNpdGlvbjtcbmV4cG9ydHMuYWN0aXZlID0gYWN0aXZlO1xuZXhwb3J0cy5pbnRlcnJ1cHQgPSBpbnRlcnJ1cHQ7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbn0pKSk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vZDMtdHJhbnNpdGlvbi9idWlsZC9kMy10cmFuc2l0aW9uLmpzXG4vLyBtb2R1bGUgaWQgPSAxNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNSA2IDcgOCA5Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-timer/ Version 1.0.6. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWVyL2J1aWxkL2QzLXRpbWVyLmpzPzI0NjgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaHR0cHM6Ly9kM2pzLm9yZy9kMy10aW1lci8gVmVyc2lvbiAxLjAuNi4gQ29weXJpZ2h0IDIwMTcgTWlrZSBCb3N0b2NrLlxuKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcblx0dHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnID8gZmFjdG9yeShleHBvcnRzKSA6XG5cdHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCA/IGRlZmluZShbJ2V4cG9ydHMnXSwgZmFjdG9yeSkgOlxuXHQoZmFjdG9yeSgoZ2xvYmFsLmQzID0gZ2xvYmFsLmQzIHx8IHt9KSkpO1xufSh0aGlzLCAoZnVuY3Rpb24gKGV4cG9ydHMpIHsgJ3VzZSBzdHJpY3QnO1xuXG52YXIgZnJhbWUgPSAwO1xudmFyIHRpbWVvdXQgPSAwO1xudmFyIGludGVydmFsID0gMDtcbnZhciBwb2tlRGVsYXkgPSAxMDAwO1xudmFyIHRhc2tIZWFkO1xudmFyIHRhc2tUYWlsO1xudmFyIGNsb2NrTGFzdCA9IDA7XG52YXIgY2xvY2tOb3cgPSAwO1xudmFyIGNsb2NrU2tldyA9IDA7XG52YXIgY2xvY2sgPSB0eXBlb2YgcGVyZm9ybWFuY2UgPT09IFwib2JqZWN0XCIgJiYgcGVyZm9ybWFuY2Uubm93ID8gcGVyZm9ybWFuY2UgOiBEYXRlO1xudmFyIHNldEZyYW1lID0gdHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIiAmJiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lID8gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZS5iaW5kKHdpbmRvdykgOiBmdW5jdGlvbihmKSB7IHNldFRpbWVvdXQoZiwgMTcpOyB9O1xuXG5mdW5jdGlvbiBub3coKSB7XG4gIHJldHVybiBjbG9ja05vdyB8fCAoc2V0RnJhbWUoY2xlYXJOb3cpLCBjbG9ja05vdyA9IGNsb2NrLm5vdygpICsgY2xvY2tTa2V3KTtcbn1cblxuZnVuY3Rpb24gY2xlYXJOb3coKSB7XG4gIGNsb2NrTm93ID0gMDtcbn1cblxuZnVuY3Rpb24gVGltZXIoKSB7XG4gIHRoaXMuX2NhbGwgPVxuICB0aGlzLl90aW1lID1cbiAgdGhpcy5fbmV4dCA9IG51bGw7XG59XG5cblRpbWVyLnByb3RvdHlwZSA9IHRpbWVyLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFRpbWVyLFxuICByZXN0YXJ0OiBmdW5jdGlvbihjYWxsYmFjaywgZGVsYXksIHRpbWUpIHtcbiAgICBpZiAodHlwZW9mIGNhbGxiYWNrICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJjYWxsYmFjayBpcyBub3QgYSBmdW5jdGlvblwiKTtcbiAgICB0aW1lID0gKHRpbWUgPT0gbnVsbCA/IG5vdygpIDogK3RpbWUpICsgKGRlbGF5ID09IG51bGwgPyAwIDogK2RlbGF5KTtcbiAgICBpZiAoIXRoaXMuX25leHQgJiYgdGFza1RhaWwgIT09IHRoaXMpIHtcbiAgICAgIGlmICh0YXNrVGFpbCkgdGFza1RhaWwuX25leHQgPSB0aGlzO1xuICAgICAgZWxzZSB0YXNrSGVhZCA9IHRoaXM7XG4gICAgICB0YXNrVGFpbCA9IHRoaXM7XG4gICAgfVxuICAgIHRoaXMuX2NhbGwgPSBjYWxsYmFjaztcbiAgICB0aGlzLl90aW1lID0gdGltZTtcbiAgICBzbGVlcCgpO1xuICB9LFxuICBzdG9wOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fY2FsbCkge1xuICAgICAgdGhpcy5fY2FsbCA9IG51bGw7XG4gICAgICB0aGlzLl90aW1lID0gSW5maW5pdHk7XG4gICAgICBzbGVlcCgpO1xuICAgIH1cbiAgfVxufTtcblxuZnVuY3Rpb24gdGltZXIoY2FsbGJhY2ssIGRlbGF5LCB0aW1lKSB7XG4gIHZhciB0ID0gbmV3IFRpbWVyO1xuICB0LnJlc3RhcnQoY2FsbGJhY2ssIGRlbGF5LCB0aW1lKTtcbiAgcmV0dXJuIHQ7XG59XG5cbmZ1bmN0aW9uIHRpbWVyRmx1c2goKSB7XG4gIG5vdygpOyAvLyBHZXQgdGhlIGN1cnJlbnQgdGltZSwgaWYgbm90IGFscmVhZHkgc2V0LlxuICArK2ZyYW1lOyAvLyBQcmV0ZW5kIHdl4oCZdmUgc2V0IGFuIGFsYXJtLCBpZiB3ZSBoYXZlbuKAmXQgYWxyZWFkeS5cbiAgdmFyIHQgPSB0YXNrSGVhZCwgZTtcbiAgd2hpbGUgKHQpIHtcbiAgICBpZiAoKGUgPSBjbG9ja05vdyAtIHQuX3RpbWUpID49IDApIHQuX2NhbGwuY2FsbChudWxsLCBlKTtcbiAgICB0ID0gdC5fbmV4dDtcbiAgfVxuICAtLWZyYW1lO1xufVxuXG5mdW5jdGlvbiB3YWtlKCkge1xuICBjbG9ja05vdyA9IChjbG9ja0xhc3QgPSBjbG9jay5ub3coKSkgKyBjbG9ja1NrZXc7XG4gIGZyYW1lID0gdGltZW91dCA9IDA7XG4gIHRyeSB7XG4gICAgdGltZXJGbHVzaCgpO1xuICB9IGZpbmFsbHkge1xuICAgIGZyYW1lID0gMDtcbiAgICBuYXAoKTtcbiAgICBjbG9ja05vdyA9IDA7XG4gIH1cbn1cblxuZnVuY3Rpb24gcG9rZSgpIHtcbiAgdmFyIG5vdyA9IGNsb2NrLm5vdygpLCBkZWxheSA9IG5vdyAtIGNsb2NrTGFzdDtcbiAgaWYgKGRlbGF5ID4gcG9rZURlbGF5KSBjbG9ja1NrZXcgLT0gZGVsYXksIGNsb2NrTGFzdCA9IG5vdztcbn1cblxuZnVuY3Rpb24gbmFwKCkge1xuICB2YXIgdDAsIHQxID0gdGFza0hlYWQsIHQyLCB0aW1lID0gSW5maW5pdHk7XG4gIHdoaWxlICh0MSkge1xuICAgIGlmICh0MS5fY2FsbCkge1xuICAgICAgaWYgKHRpbWUgPiB0MS5fdGltZSkgdGltZSA9IHQxLl90aW1lO1xuICAgICAgdDAgPSB0MSwgdDEgPSB0MS5fbmV4dDtcbiAgICB9IGVsc2Uge1xuICAgICAgdDIgPSB0MS5fbmV4dCwgdDEuX25leHQgPSBudWxsO1xuICAgICAgdDEgPSB0MCA/IHQwLl9uZXh0ID0gdDIgOiB0YXNrSGVhZCA9IHQyO1xuICAgIH1cbiAgfVxuICB0YXNrVGFpbCA9IHQwO1xuICBzbGVlcCh0aW1lKTtcbn1cblxuZnVuY3Rpb24gc2xlZXAodGltZSkge1xuICBpZiAoZnJhbWUpIHJldHVybjsgLy8gU29vbmVzdCBhbGFybSBhbHJlYWR5IHNldCwgb3Igd2lsbCBiZS5cbiAgaWYgKHRpbWVvdXQpIHRpbWVvdXQgPSBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gIHZhciBkZWxheSA9IHRpbWUgLSBjbG9ja05vdztcbiAgaWYgKGRlbGF5ID4gMjQpIHtcbiAgICBpZiAodGltZSA8IEluZmluaXR5KSB0aW1lb3V0ID0gc2V0VGltZW91dCh3YWtlLCBkZWxheSk7XG4gICAgaWYgKGludGVydmFsKSBpbnRlcnZhbCA9IGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpO1xuICB9IGVsc2Uge1xuICAgIGlmICghaW50ZXJ2YWwpIGNsb2NrTGFzdCA9IGNsb2NrTm93LCBpbnRlcnZhbCA9IHNldEludGVydmFsKHBva2UsIHBva2VEZWxheSk7XG4gICAgZnJhbWUgPSAxLCBzZXRGcmFtZSh3YWtlKTtcbiAgfVxufVxuXG52YXIgdGltZW91dCQxID0gZnVuY3Rpb24oY2FsbGJhY2ssIGRlbGF5LCB0aW1lKSB7XG4gIHZhciB0ID0gbmV3IFRpbWVyO1xuICBkZWxheSA9IGRlbGF5ID09IG51bGwgPyAwIDogK2RlbGF5O1xuICB0LnJlc3RhcnQoZnVuY3Rpb24oZWxhcHNlZCkge1xuICAgIHQuc3RvcCgpO1xuICAgIGNhbGxiYWNrKGVsYXBzZWQgKyBkZWxheSk7XG4gIH0sIGRlbGF5LCB0aW1lKTtcbiAgcmV0dXJuIHQ7XG59O1xuXG52YXIgaW50ZXJ2YWwkMSA9IGZ1bmN0aW9uKGNhbGxiYWNrLCBkZWxheSwgdGltZSkge1xuICB2YXIgdCA9IG5ldyBUaW1lciwgdG90YWwgPSBkZWxheTtcbiAgaWYgKGRlbGF5ID09IG51bGwpIHJldHVybiB0LnJlc3RhcnQoY2FsbGJhY2ssIGRlbGF5LCB0aW1lKSwgdDtcbiAgZGVsYXkgPSArZGVsYXksIHRpbWUgPSB0aW1lID09IG51bGwgPyBub3coKSA6ICt0aW1lO1xuICB0LnJlc3RhcnQoZnVuY3Rpb24gdGljayhlbGFwc2VkKSB7XG4gICAgZWxhcHNlZCArPSB0b3RhbDtcbiAgICB0LnJlc3RhcnQodGljaywgdG90YWwgKz0gZGVsYXksIHRpbWUpO1xuICAgIGNhbGxiYWNrKGVsYXBzZWQpO1xuICB9LCBkZWxheSwgdGltZSk7XG4gIHJldHVybiB0O1xufTtcblxuZXhwb3J0cy5ub3cgPSBub3c7XG5leHBvcnRzLnRpbWVyID0gdGltZXI7XG5leHBvcnRzLnRpbWVyRmx1c2ggPSB0aW1lckZsdXNoO1xuZXhwb3J0cy50aW1lb3V0ID0gdGltZW91dCQxO1xuZXhwb3J0cy5pbnRlcnZhbCA9IGludGVydmFsJDE7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbn0pKSk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vZDMtdGltZXIvYnVpbGQvZDMtdGltZXIuanNcbi8vIG1vZHVsZSBpZCA9IDE2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA1IDYgNyA4IDkiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 17 */,
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n    'use strict';\n\n    var _require = __webpack_require__(19),\n        colorSchemas = _require.colorSchemas;\n\n    var constants = __webpack_require__(20);\n    var serializeWithStyles = __webpack_require__(21);\n\n    var encoder = window.btoa;\n\n    if (!encoder) {\n        encoder = __webpack_require__(22).encode;\n    }\n\n    // Base64 doesn't work really well with Unicode strings, so we need to use this function\n    // Ref: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n    var b64EncodeUnicode = function b64EncodeUnicode(str) {\n        return encoder(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (match, p1) {\n            return String.fromCharCode('0x' + p1);\n        }));\n    };\n\n    var config = {\n        styleClass: 'britechartStyle',\n        defaultFilename: 'britechart.png',\n        chartBackground: 'white',\n        imageSourceBase: 'data:image/svg+xml;base64,',\n        titleFontSize: '15px',\n        titleFontFamily: '\\'Benton Sans\\', sans-serif',\n        titleTopOffset: 30,\n        get styleBackgroundString() {\n            return '<style>svg{background:' + this.chartBackground + ';}</style>';\n        }\n    };\n\n    /**\n     * Main function to be used as a method by chart instances to export charts to png\n     * @param  {array} svgs         (or an svg element) pass in both chart & legend as array or just chart as svg or in array\n     * @param  {string} filename    [download to be called <filename>.png]\n     * @param  {string} title       Title for the image\n     */\n    function exportChart(d3svg, filename, title) {\n        var img = createImage(convertSvgToHtml.call(this, d3svg, title));\n\n        img.onload = handleImageLoad.bind(img, createCanvas(this.width(), this.height()), filename);\n    }\n\n    /**\n     * adds background styles to raw html\n     * @param {string} html raw html\n     */\n    function addBackground(html) {\n        return html.replace('>', '>' + config.styleBackgroundString);\n    }\n\n    /**\n     * takes d3 svg el, adds proper svg tags, adds inline styles\n     * from stylesheets, adds white background and returns string\n     * @param  {object} d3svg TYPE d3 svg element\n     * @return {string} string of passed d3\n     */\n    function convertSvgToHtml(d3svg, title) {\n        if (!d3svg) {\n            return;\n        }\n\n        d3svg.attr('version', 1.1).attr('xmlns', 'http://www.w3.org/2000/svg');\n        var serializer = serializeWithStyles.initializeSerializer();\n        var html = serializer(d3svg.node());\n\n        html = formatHtmlByBrowser(html);\n        html = prependTitle.call(this, html, title, parseInt(d3svg.attr('width'), 10));\n        html = addBackground(html);\n\n        return html;\n    }\n\n    /**\n     * Create Canvas\n     * @param  {number} width\n     * @param  {number} height\n     * @return {object} TYPE canvas element\n     */\n    function createCanvas(width, height) {\n        var canvas = document.createElement('canvas');\n\n        canvas.height = height;\n        canvas.width = width;\n\n        return canvas;\n    }\n\n    /**\n     * Create Image\n     * @param  {string} svgHtml string representation of svg el\n     * @return {object}  TYPE element <img>, src points at svg\n     */\n    function createImage(svgHtml) {\n        var img = new Image();\n\n        img.src = '' + config.imageSourceBase + b64EncodeUnicode(svgHtml);\n\n        return img;\n    };\n\n    /**\n     * Draws image on canvas\n     * @param  {object} image TYPE:el <img>, to be drawn\n     * @param  {object} canvas TYPE: el <canvas>, to draw on\n     */\n    function drawImageOnCanvas(image, canvas) {\n        canvas.getContext('2d').drawImage(image, 0, 0);\n\n        return canvas;\n    }\n\n    /**\n     * Triggers browser to download image, convert canvas to url,\n     * we need to append the link el to the dom before clicking it for Firefox to register\n     * point <a> at it and trigger click\n     * @param  {object} canvas TYPE: el <canvas>\n     * @param  {string} filename\n     * @param  {string} extensionType\n     */\n    function downloadCanvas(canvas) {\n        var filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.defaultFilename;\n        var extensionType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'image/png';\n\n        var url = canvas.toDataURL(extensionType);\n        var link = document.createElement('a');\n\n        link.href = url;\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n    /**\n     * Some browsers need special formatting, we handle that here\n     * @param  {string} html string of svg html\n     * @return {string} string of svg html\n     */\n    function formatHtmlByBrowser(html) {\n        if (navigator.userAgent.search('FireFox') > -1) {\n            return html.replace(/url.*&quot;\\)/, 'url(&quot;#' + constants.lineGradientId + '&quot;);');\n        }\n\n        return html;\n    }\n\n    /**\n     * Handles on load event fired by img.onload, this=img\n     * @param  {object} canvas TYPE: el <canvas>\n     * @param  {string} filename\n     * @param  {object} e\n     */\n    function handleImageLoad(canvas, filename, e) {\n        e.preventDefault();\n\n        downloadCanvas(drawImageOnCanvas(this, canvas), filename);\n    }\n\n    /**\n     * if passed, append title to the raw html to appear on graph\n     * @param  {string} html     raw html string\n     * @param  {string} title    title of the graph\n     * @param  {number} svgWidth width of graph container\n     * @return {string}         raw html with title prepended\n     */\n    function prependTitle(html, title, svgWidth) {\n        if (!title || !svgWidth) {\n            return html;\n        }\n        var grey = colorSchemas.grey;\n\n\n        html = html.replace(/<g/, '<text x=\"' + this.margin().left + '\" y=\"' + config.titleTopOffset + '\" font-family=\"' + config.titleFontFamily + '\" font-size=\"' + config.titleFontSize + '\" fill=\"' + grey[6] + '\"> ' + title + ' </text><g ');\n\n        return html;\n    }\n\n    return {\n        exportChart: exportChart,\n        convertSvgToHtml: convertSvgToHtml,\n        createImage: createImage,\n        drawImageOnCanvas: drawImageOnCanvas\n    };\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\n    // Color Gradients\n    var britechartGradients = {\n        greenBlue: ['#39C7EA', '#4CDCBA'],\n        orangePink: ['#FBC670', '#F766B8'],\n        bluePurple: ['#3DC3C9', '#824a9e']\n    };\n\n    // Color Schemas\n    // Standard Color Schema for Britecharts\n    var britecharts = ['#6aedc7', //green\n    '#39c2c9', //blue\n    '#ffce00', //yellow\n    '#ffa71a', //orange\n    '#f866b9', //pink\n    '#998ce3' //purple\n    ];\n\n    // Grey Schema for Britecharts\n    var grey = ['#F8F8FA', '#EFF2F5', '#D2D6DF', '#C3C6CF', '#ADB0B6', '#666A73', '#45494E', '#363A43', '#282C35'];\n\n    // Orange Palette\n    var orange = ['#fcc870', '#ffa71a', '#fb8825', '#f6682f', '#db5a2c', '#bf4c28', '#a43b1c', '#892a10', '#f9e9c5'];\n    // Blue Palette\n    var blueGreen = ['#ccf7f6', '#70e4e0', '#00d8d2', '#00acaf', '#007f8c', '#005e66', '#003c3f', '#002d2f', '#0d2223'];\n    // LightBlue Palette\n    var teal = ['#ccfffe', '#94f7f4', '#00fff8', '#1de1e1', '#39c2c9', '#2e9a9d', '#227270', '#1a5957', '#133f3e'];\n    // Green Palette\n    var green = ['#edfff7', '#d7ffef', '#c0ffe7', '#95f5d7', '#6aedc7', '#59c3a3', '#479980', '#34816a', '#206953'];\n    // Yellow Palette\n    var yellow = ['#f9f2b3', '#fbe986', '#fce05a', '#fed72d', '#ffce00', '#fcc11c', '#f9b438', '#eda629', '#e09819'];\n    // Pink Palette\n    var pink = ['#fdd1ea', '#fb9cd2', '#f866b9', '#fc40b6', '#ff1ab3', '#e3239d', '#c62c86', '#a62073', '#85135f'];\n    // Purple Palette\n    var purple = ['#ddd6fc', '#bbb1f0', '#998ce3', '#8e6bc1', '#824a9e', '#77337f', '#6b1c60', '#591650', '#470f3f'];\n    // Red Palette\n    var red = ['#ffd8d4', '#ffb5b0', '#ff938c', '#ff766c', '#ff584c', '#f04b42', '#e03d38', '#be2e29', '#9c1e19'];\n\n    var aloeGreen = ['#7bdcc0'];\n\n    return {\n        colorSchemas: {\n            britecharts: britecharts,\n            grey: grey,\n            orange: orange,\n            blueGreen: blueGreen,\n            teal: teal,\n            green: green,\n            yellow: yellow,\n            pink: pink,\n            purple: purple,\n            red: red\n        },\n        colorSchemasHuman: {\n            'britecharts': 'Britecharts Default',\n            'grey': 'Britecharts Grey',\n            'orange': 'Orange',\n            'blueGreen': 'Blue',\n            'teal': 'Light Blue',\n            'green': 'Green',\n            'yellow': 'Yellow',\n            'pink': 'Pink',\n            'purple': 'Purple',\n            'red': 'Red'\n        },\n        singleColors: {\n            aloeGreen: aloeGreen\n        },\n        colorGradients: britechartGradients,\n        colorGradientsHuman: {\n            greenBlue: 'Green To Blue',\n            orangePink: 'Orange to Pink',\n            bluePurple: 'Blue to Purple'\n        }\n    };\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY2hhcnRzL2hlbHBlcnMvY29sb3JzLmpzPzIzMDMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5kZWZpbmUoZnVuY3Rpb24gKCkge1xuXG4gICAgLy8gQ29sb3IgR3JhZGllbnRzXG4gICAgdmFyIGJyaXRlY2hhcnRHcmFkaWVudHMgPSB7XG4gICAgICAgIGdyZWVuQmx1ZTogWycjMzlDN0VBJywgJyM0Q0RDQkEnXSxcbiAgICAgICAgb3JhbmdlUGluazogWycjRkJDNjcwJywgJyNGNzY2QjgnXSxcbiAgICAgICAgYmx1ZVB1cnBsZTogWycjM0RDM0M5JywgJyM4MjRhOWUnXVxuICAgIH07XG5cbiAgICAvLyBDb2xvciBTY2hlbWFzXG4gICAgLy8gU3RhbmRhcmQgQ29sb3IgU2NoZW1hIGZvciBCcml0ZWNoYXJ0c1xuICAgIHZhciBicml0ZWNoYXJ0cyA9IFsnIzZhZWRjNycsIC8vZ3JlZW5cbiAgICAnIzM5YzJjOScsIC8vYmx1ZVxuICAgICcjZmZjZTAwJywgLy95ZWxsb3dcbiAgICAnI2ZmYTcxYScsIC8vb3JhbmdlXG4gICAgJyNmODY2YjknLCAvL3BpbmtcbiAgICAnIzk5OGNlMycgLy9wdXJwbGVcbiAgICBdO1xuXG4gICAgLy8gR3JleSBTY2hlbWEgZm9yIEJyaXRlY2hhcnRzXG4gICAgdmFyIGdyZXkgPSBbJyNGOEY4RkEnLCAnI0VGRjJGNScsICcjRDJENkRGJywgJyNDM0M2Q0YnLCAnI0FEQjBCNicsICcjNjY2QTczJywgJyM0NTQ5NEUnLCAnIzM2M0E0MycsICcjMjgyQzM1J107XG5cbiAgICAvLyBPcmFuZ2UgUGFsZXR0ZVxuICAgIHZhciBvcmFuZ2UgPSBbJyNmY2M4NzAnLCAnI2ZmYTcxYScsICcjZmI4ODI1JywgJyNmNjY4MmYnLCAnI2RiNWEyYycsICcjYmY0YzI4JywgJyNhNDNiMWMnLCAnIzg5MmExMCcsICcjZjllOWM1J107XG4gICAgLy8gQmx1ZSBQYWxldHRlXG4gICAgdmFyIGJsdWVHcmVlbiA9IFsnI2NjZjdmNicsICcjNzBlNGUwJywgJyMwMGQ4ZDInLCAnIzAwYWNhZicsICcjMDA3ZjhjJywgJyMwMDVlNjYnLCAnIzAwM2MzZicsICcjMDAyZDJmJywgJyMwZDIyMjMnXTtcbiAgICAvLyBMaWdodEJsdWUgUGFsZXR0ZVxuICAgIHZhciB0ZWFsID0gWycjY2NmZmZlJywgJyM5NGY3ZjQnLCAnIzAwZmZmOCcsICcjMWRlMWUxJywgJyMzOWMyYzknLCAnIzJlOWE5ZCcsICcjMjI3MjcwJywgJyMxYTU5NTcnLCAnIzEzM2YzZSddO1xuICAgIC8vIEdyZWVuIFBhbGV0dGVcbiAgICB2YXIgZ3JlZW4gPSBbJyNlZGZmZjcnLCAnI2Q3ZmZlZicsICcjYzBmZmU3JywgJyM5NWY1ZDcnLCAnIzZhZWRjNycsICcjNTljM2EzJywgJyM0Nzk5ODAnLCAnIzM0ODE2YScsICcjMjA2OTUzJ107XG4gICAgLy8gWWVsbG93IFBhbGV0dGVcbiAgICB2YXIgeWVsbG93ID0gWycjZjlmMmIzJywgJyNmYmU5ODYnLCAnI2ZjZTA1YScsICcjZmVkNzJkJywgJyNmZmNlMDAnLCAnI2ZjYzExYycsICcjZjliNDM4JywgJyNlZGE2MjknLCAnI2UwOTgxOSddO1xuICAgIC8vIFBpbmsgUGFsZXR0ZVxuICAgIHZhciBwaW5rID0gWycjZmRkMWVhJywgJyNmYjljZDInLCAnI2Y4NjZiOScsICcjZmM0MGI2JywgJyNmZjFhYjMnLCAnI2UzMjM5ZCcsICcjYzYyYzg2JywgJyNhNjIwNzMnLCAnIzg1MTM1ZiddO1xuICAgIC8vIFB1cnBsZSBQYWxldHRlXG4gICAgdmFyIHB1cnBsZSA9IFsnI2RkZDZmYycsICcjYmJiMWYwJywgJyM5OThjZTMnLCAnIzhlNmJjMScsICcjODI0YTllJywgJyM3NzMzN2YnLCAnIzZiMWM2MCcsICcjNTkxNjUwJywgJyM0NzBmM2YnXTtcbiAgICAvLyBSZWQgUGFsZXR0ZVxuICAgIHZhciByZWQgPSBbJyNmZmQ4ZDQnLCAnI2ZmYjViMCcsICcjZmY5MzhjJywgJyNmZjc2NmMnLCAnI2ZmNTg0YycsICcjZjA0YjQyJywgJyNlMDNkMzgnLCAnI2JlMmUyOScsICcjOWMxZTE5J107XG5cbiAgICB2YXIgYWxvZUdyZWVuID0gWycjN2JkY2MwJ107XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBjb2xvclNjaGVtYXM6IHtcbiAgICAgICAgICAgIGJyaXRlY2hhcnRzOiBicml0ZWNoYXJ0cyxcbiAgICAgICAgICAgIGdyZXk6IGdyZXksXG4gICAgICAgICAgICBvcmFuZ2U6IG9yYW5nZSxcbiAgICAgICAgICAgIGJsdWVHcmVlbjogYmx1ZUdyZWVuLFxuICAgICAgICAgICAgdGVhbDogdGVhbCxcbiAgICAgICAgICAgIGdyZWVuOiBncmVlbixcbiAgICAgICAgICAgIHllbGxvdzogeWVsbG93LFxuICAgICAgICAgICAgcGluazogcGluayxcbiAgICAgICAgICAgIHB1cnBsZTogcHVycGxlLFxuICAgICAgICAgICAgcmVkOiByZWRcbiAgICAgICAgfSxcbiAgICAgICAgY29sb3JTY2hlbWFzSHVtYW46IHtcbiAgICAgICAgICAgICdicml0ZWNoYXJ0cyc6ICdCcml0ZWNoYXJ0cyBEZWZhdWx0JyxcbiAgICAgICAgICAgICdncmV5JzogJ0JyaXRlY2hhcnRzIEdyZXknLFxuICAgICAgICAgICAgJ29yYW5nZSc6ICdPcmFuZ2UnLFxuICAgICAgICAgICAgJ2JsdWVHcmVlbic6ICdCbHVlJyxcbiAgICAgICAgICAgICd0ZWFsJzogJ0xpZ2h0IEJsdWUnLFxuICAgICAgICAgICAgJ2dyZWVuJzogJ0dyZWVuJyxcbiAgICAgICAgICAgICd5ZWxsb3cnOiAnWWVsbG93JyxcbiAgICAgICAgICAgICdwaW5rJzogJ1BpbmsnLFxuICAgICAgICAgICAgJ3B1cnBsZSc6ICdQdXJwbGUnLFxuICAgICAgICAgICAgJ3JlZCc6ICdSZWQnXG4gICAgICAgIH0sXG4gICAgICAgIHNpbmdsZUNvbG9yczoge1xuICAgICAgICAgICAgYWxvZUdyZWVuOiBhbG9lR3JlZW5cbiAgICAgICAgfSxcbiAgICAgICAgY29sb3JHcmFkaWVudHM6IGJyaXRlY2hhcnRHcmFkaWVudHMsXG4gICAgICAgIGNvbG9yR3JhZGllbnRzSHVtYW46IHtcbiAgICAgICAgICAgIGdyZWVuQmx1ZTogJ0dyZWVuIFRvIEJsdWUnLFxuICAgICAgICAgICAgb3JhbmdlUGluazogJ09yYW5nZSB0byBQaW5rJyxcbiAgICAgICAgICAgIGJsdWVQdXJwbGU6ICdCbHVlIHRvIFB1cnBsZSdcbiAgICAgICAgfVxuICAgIH07XG59KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9jaGFydHMvaGVscGVycy9jb2xvcnMuanNcbi8vIG1vZHVsZSBpZCA9IDE5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA1IDYgNyA4IDkiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\n    var axisTimeCombinations = {\n        MINUTE_HOUR: 'minute-hour',\n        HOUR_DAY: 'hour-daymonth',\n        DAY_MONTH: 'day-month',\n        MONTH_YEAR: 'month-year'\n    };\n\n    var timeBenchmarks = {\n        ONE_AND_A_HALF_YEARS: 47304000000,\n        ONE_YEAR: 31536000365,\n        ONE_DAY: 86400001\n    };\n\n    return {\n        axisTimeCombinations: axisTimeCombinations,\n        timeBenchmarks: timeBenchmarks,\n        lineGradientId: 'lineGradientId'\n    };\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY2hhcnRzL2hlbHBlcnMvY29uc3RhbnRzLmpzP2M1NjMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5kZWZpbmUoZnVuY3Rpb24gKCkge1xuXG4gICAgdmFyIGF4aXNUaW1lQ29tYmluYXRpb25zID0ge1xuICAgICAgICBNSU5VVEVfSE9VUjogJ21pbnV0ZS1ob3VyJyxcbiAgICAgICAgSE9VUl9EQVk6ICdob3VyLWRheW1vbnRoJyxcbiAgICAgICAgREFZX01PTlRIOiAnZGF5LW1vbnRoJyxcbiAgICAgICAgTU9OVEhfWUVBUjogJ21vbnRoLXllYXInXG4gICAgfTtcblxuICAgIHZhciB0aW1lQmVuY2htYXJrcyA9IHtcbiAgICAgICAgT05FX0FORF9BX0hBTEZfWUVBUlM6IDQ3MzA0MDAwMDAwLFxuICAgICAgICBPTkVfWUVBUjogMzE1MzYwMDAzNjUsXG4gICAgICAgIE9ORV9EQVk6IDg2NDAwMDAxXG4gICAgfTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIGF4aXNUaW1lQ29tYmluYXRpb25zOiBheGlzVGltZUNvbWJpbmF0aW9ucyxcbiAgICAgICAgdGltZUJlbmNobWFya3M6IHRpbWVCZW5jaG1hcmtzLFxuICAgICAgICBsaW5lR3JhZGllbnRJZDogJ2xpbmVHcmFkaWVudElkJ1xuICAgIH07XG59KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9jaGFydHMvaGVscGVycy9jb25zdGFudHMuanNcbi8vIG1vZHVsZSBpZCA9IDIwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDIgMyA1IDYgNyA4IDkiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 21 */
/***/ (function(module, exports) {

	eval("'use strict';\n\nmodule.exports = function () {\n\n    'use strict';\n\n    return {\n\n        /**\n         * returns serializer function, only run it when you know you want to serialize your chart\n         * @return {func} serializer to add styles in line to dom string\n         */\n        initializeSerializer: function initializeSerializer() {\n\n            // Mapping between tag names and css default values lookup tables. This allows to exclude default values in the result.\n            var defaultStylesByTagName = {};\n\n            // Styles inherited from style sheets will not be rendered for elements with these tag names\n            var noStyleTags = { 'BASE': true, 'HEAD': true, 'HTML': true, 'META': true, 'NOFRAME': true, 'NOSCRIPT': true, 'PARAM': true, 'SCRIPT': true, 'STYLE': true, 'TITLE': true };\n\n            // This list determines which css default values lookup tables are precomputed at load time\n            // Lookup tables for other tag names will be automatically built at runtime if needed\n            var tagNames = ['A', 'ABBR', 'ADDRESS', 'AREA', 'ARTICLE', 'ASIDE', 'AUDIO', 'B', 'BASE', 'BDI', 'BDO', 'BLOCKQUOTE', 'BODY', 'BR', 'BUTTON', 'CANVAS', 'CAPTION', 'CENTER', 'CITE', 'CODE', 'COL', 'COLGROUP', 'COMMAND', 'DATALIST', 'DD', 'DEL', 'DETAILS', 'DFN', 'DIV', 'DL', 'DT', 'EM', 'EMBED', 'FIELDSET', 'FIGCAPTION', 'FIGURE', 'FONT', 'FOOTER', 'FORM', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEAD', 'HEADER', 'HGROUP', 'HR', 'HTML', 'I', 'IFRAME', 'IMG', 'INPUT', 'INS', 'KBD', 'LABEL', 'LEGEND', 'LI', 'LINK', 'MAP', 'MARK', 'MATH', 'MENU', 'META', 'METER', 'NAV', 'NOBR', 'NOSCRIPT', 'OBJECT', 'OL', 'OPTION', 'OPTGROUP', 'OUTPUT', 'P', 'PARAM', 'PRE', 'PROGRESS', 'Q', 'RP', 'RT', 'RUBY', 'S', 'SAMP', 'SCRIPT', 'SECTION', 'SELECT', 'SMALL', 'SOURCE', 'SPAN', 'STRONG', 'STYLE', 'SUB', 'SUMMARY', 'SUP', 'SVG', 'TABLE', 'TBODY', 'TD', 'TEXTAREA', 'TFOOT', 'TH', 'THEAD', 'TIME', 'TITLE', 'TR', 'TRACK', 'U', 'UL', 'VAR', 'VIDEO', 'WBR'];\n\n            // Precompute the lookup tables.\n            [].forEach.call(tagNames, function (name) {\n                if (!noStyleTags[name]) {\n                    defaultStylesByTagName[name] = computeDefaultStyleByTagName(name);\n                }\n            });\n\n            function computeDefaultStyleByTagName(tagName) {\n                var defaultStyle = {},\n                    element = document.body.appendChild(document.createElement(tagName)),\n                    computedStyle = window.getComputedStyle(element);\n\n                [].forEach.call(computedStyle, function (style) {\n                    defaultStyle[style] = computedStyle[style];\n                });\n                document.body.removeChild(element);\n                return defaultStyle;\n            }\n\n            function getDefaultStyleByTagName(tagName) {\n                tagName = tagName.toUpperCase();\n                if (!defaultStylesByTagName[tagName]) {\n                    defaultStylesByTagName[tagName] = computeDefaultStyleByTagName(tagName);\n                }\n                return defaultStylesByTagName[tagName];\n            };\n\n            function serializeWithStyles(elem) {\n\n                var cssTexts = [],\n                    elements = void 0,\n                    computedStyle = void 0,\n                    defaultStyle = void 0,\n                    result = void 0;\n\n                if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n                    // 'Error: Object passed in to serializeWithSyles not of nodeType Node.ELEMENT_NODE'\n\n                    return;\n                }\n\n                cssTexts = [];\n                elements = elem.querySelectorAll('*');\n\n                [].forEach.call(elements, function (el, i) {\n                    if (!noStyleTags[el.tagName]) {\n                        computedStyle = window.getComputedStyle(el);\n                        defaultStyle = getDefaultStyleByTagName(el.tagName);\n                        cssTexts[i] = el.style.cssText;\n                        [].forEach.call(computedStyle, function (cssPropName) {\n                            if (computedStyle[cssPropName] !== defaultStyle[cssPropName]) {\n                                el.style[cssPropName] = computedStyle[cssPropName];\n                            }\n                        });\n                    }\n                });\n\n                result = elem.outerHTML;\n                elements = [].map.call(elements, function (el, i) {\n                    el.style.cssText = cssTexts[i];\n                    return el;\n                });\n\n                return result;\n            };\n\n            return serializeWithStyles;\n        }\n    };\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY2hhcnRzL2hlbHBlcnMvc2VyaWFsaXplV2l0aFN0eWxlcy5qcz9kNWMzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICByZXR1cm4ge1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiByZXR1cm5zIHNlcmlhbGl6ZXIgZnVuY3Rpb24sIG9ubHkgcnVuIGl0IHdoZW4geW91IGtub3cgeW91IHdhbnQgdG8gc2VyaWFsaXplIHlvdXIgY2hhcnRcbiAgICAgICAgICogQHJldHVybiB7ZnVuY30gc2VyaWFsaXplciB0byBhZGQgc3R5bGVzIGluIGxpbmUgdG8gZG9tIHN0cmluZ1xuICAgICAgICAgKi9cbiAgICAgICAgaW5pdGlhbGl6ZVNlcmlhbGl6ZXI6IGZ1bmN0aW9uIGluaXRpYWxpemVTZXJpYWxpemVyKCkge1xuXG4gICAgICAgICAgICAvLyBNYXBwaW5nIGJldHdlZW4gdGFnIG5hbWVzIGFuZCBjc3MgZGVmYXVsdCB2YWx1ZXMgbG9va3VwIHRhYmxlcy4gVGhpcyBhbGxvd3MgdG8gZXhjbHVkZSBkZWZhdWx0IHZhbHVlcyBpbiB0aGUgcmVzdWx0LlxuICAgICAgICAgICAgdmFyIGRlZmF1bHRTdHlsZXNCeVRhZ05hbWUgPSB7fTtcblxuICAgICAgICAgICAgLy8gU3R5bGVzIGluaGVyaXRlZCBmcm9tIHN0eWxlIHNoZWV0cyB3aWxsIG5vdCBiZSByZW5kZXJlZCBmb3IgZWxlbWVudHMgd2l0aCB0aGVzZSB0YWcgbmFtZXNcbiAgICAgICAgICAgIHZhciBub1N0eWxlVGFncyA9IHsgJ0JBU0UnOiB0cnVlLCAnSEVBRCc6IHRydWUsICdIVE1MJzogdHJ1ZSwgJ01FVEEnOiB0cnVlLCAnTk9GUkFNRSc6IHRydWUsICdOT1NDUklQVCc6IHRydWUsICdQQVJBTSc6IHRydWUsICdTQ1JJUFQnOiB0cnVlLCAnU1RZTEUnOiB0cnVlLCAnVElUTEUnOiB0cnVlIH07XG5cbiAgICAgICAgICAgIC8vIFRoaXMgbGlzdCBkZXRlcm1pbmVzIHdoaWNoIGNzcyBkZWZhdWx0IHZhbHVlcyBsb29rdXAgdGFibGVzIGFyZSBwcmVjb21wdXRlZCBhdCBsb2FkIHRpbWVcbiAgICAgICAgICAgIC8vIExvb2t1cCB0YWJsZXMgZm9yIG90aGVyIHRhZyBuYW1lcyB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgYnVpbHQgYXQgcnVudGltZSBpZiBuZWVkZWRcbiAgICAgICAgICAgIHZhciB0YWdOYW1lcyA9IFsnQScsICdBQkJSJywgJ0FERFJFU1MnLCAnQVJFQScsICdBUlRJQ0xFJywgJ0FTSURFJywgJ0FVRElPJywgJ0InLCAnQkFTRScsICdCREknLCAnQkRPJywgJ0JMT0NLUVVPVEUnLCAnQk9EWScsICdCUicsICdCVVRUT04nLCAnQ0FOVkFTJywgJ0NBUFRJT04nLCAnQ0VOVEVSJywgJ0NJVEUnLCAnQ09ERScsICdDT0wnLCAnQ09MR1JPVVAnLCAnQ09NTUFORCcsICdEQVRBTElTVCcsICdERCcsICdERUwnLCAnREVUQUlMUycsICdERk4nLCAnRElWJywgJ0RMJywgJ0RUJywgJ0VNJywgJ0VNQkVEJywgJ0ZJRUxEU0VUJywgJ0ZJR0NBUFRJT04nLCAnRklHVVJFJywgJ0ZPTlQnLCAnRk9PVEVSJywgJ0ZPUk0nLCAnSDEnLCAnSDInLCAnSDMnLCAnSDQnLCAnSDUnLCAnSDYnLCAnSEVBRCcsICdIRUFERVInLCAnSEdST1VQJywgJ0hSJywgJ0hUTUwnLCAnSScsICdJRlJBTUUnLCAnSU1HJywgJ0lOUFVUJywgJ0lOUycsICdLQkQnLCAnTEFCRUwnLCAnTEVHRU5EJywgJ0xJJywgJ0xJTksnLCAnTUFQJywgJ01BUksnLCAnTUFUSCcsICdNRU5VJywgJ01FVEEnLCAnTUVURVInLCAnTkFWJywgJ05PQlInLCAnTk9TQ1JJUFQnLCAnT0JKRUNUJywgJ09MJywgJ09QVElPTicsICdPUFRHUk9VUCcsICdPVVRQVVQnLCAnUCcsICdQQVJBTScsICdQUkUnLCAnUFJPR1JFU1MnLCAnUScsICdSUCcsICdSVCcsICdSVUJZJywgJ1MnLCAnU0FNUCcsICdTQ1JJUFQnLCAnU0VDVElPTicsICdTRUxFQ1QnLCAnU01BTEwnLCAnU09VUkNFJywgJ1NQQU4nLCAnU1RST05HJywgJ1NUWUxFJywgJ1NVQicsICdTVU1NQVJZJywgJ1NVUCcsICdTVkcnLCAnVEFCTEUnLCAnVEJPRFknLCAnVEQnLCAnVEVYVEFSRUEnLCAnVEZPT1QnLCAnVEgnLCAnVEhFQUQnLCAnVElNRScsICdUSVRMRScsICdUUicsICdUUkFDSycsICdVJywgJ1VMJywgJ1ZBUicsICdWSURFTycsICdXQlInXTtcblxuICAgICAgICAgICAgLy8gUHJlY29tcHV0ZSB0aGUgbG9va3VwIHRhYmxlcy5cbiAgICAgICAgICAgIFtdLmZvckVhY2guY2FsbCh0YWdOYW1lcywgZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICAgICAgICBpZiAoIW5vU3R5bGVUYWdzW25hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHRTdHlsZXNCeVRhZ05hbWVbbmFtZV0gPSBjb21wdXRlRGVmYXVsdFN0eWxlQnlUYWdOYW1lKG5hbWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBmdW5jdGlvbiBjb21wdXRlRGVmYXVsdFN0eWxlQnlUYWdOYW1lKHRhZ05hbWUpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGVmYXVsdFN0eWxlID0ge30sXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQgPSBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnTmFtZSkpLFxuICAgICAgICAgICAgICAgICAgICBjb21wdXRlZFN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZWxlbWVudCk7XG5cbiAgICAgICAgICAgICAgICBbXS5mb3JFYWNoLmNhbGwoY29tcHV0ZWRTdHlsZSwgZnVuY3Rpb24gKHN0eWxlKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHRTdHlsZVtzdHlsZV0gPSBjb21wdXRlZFN0eWxlW3N0eWxlXTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGVsZW1lbnQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBkZWZhdWx0U3R5bGU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZ1bmN0aW9uIGdldERlZmF1bHRTdHlsZUJ5VGFnTmFtZSh0YWdOYW1lKSB7XG4gICAgICAgICAgICAgICAgdGFnTmFtZSA9IHRhZ05hbWUudG9VcHBlckNhc2UoKTtcbiAgICAgICAgICAgICAgICBpZiAoIWRlZmF1bHRTdHlsZXNCeVRhZ05hbWVbdGFnTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFN0eWxlc0J5VGFnTmFtZVt0YWdOYW1lXSA9IGNvbXB1dGVEZWZhdWx0U3R5bGVCeVRhZ05hbWUodGFnTmFtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBkZWZhdWx0U3R5bGVzQnlUYWdOYW1lW3RhZ05hbWVdO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgZnVuY3Rpb24gc2VyaWFsaXplV2l0aFN0eWxlcyhlbGVtKSB7XG5cbiAgICAgICAgICAgICAgICB2YXIgY3NzVGV4dHMgPSBbXSxcbiAgICAgICAgICAgICAgICAgICAgZWxlbWVudHMgPSB2b2lkIDAsXG4gICAgICAgICAgICAgICAgICAgIGNvbXB1dGVkU3R5bGUgPSB2b2lkIDAsXG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHRTdHlsZSA9IHZvaWQgMCxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gdm9pZCAwO1xuXG4gICAgICAgICAgICAgICAgaWYgKCFlbGVtIHx8IGVsZW0ubm9kZVR5cGUgIT09IE5vZGUuRUxFTUVOVF9OT0RFKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vICdFcnJvcjogT2JqZWN0IHBhc3NlZCBpbiB0byBzZXJpYWxpemVXaXRoU3lsZXMgbm90IG9mIG5vZGVUeXBlIE5vZGUuRUxFTUVOVF9OT0RFJ1xuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBjc3NUZXh0cyA9IFtdO1xuICAgICAgICAgICAgICAgIGVsZW1lbnRzID0gZWxlbS5xdWVyeVNlbGVjdG9yQWxsKCcqJyk7XG5cbiAgICAgICAgICAgICAgICBbXS5mb3JFYWNoLmNhbGwoZWxlbWVudHMsIGZ1bmN0aW9uIChlbCwgaSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIW5vU3R5bGVUYWdzW2VsLnRhZ05hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wdXRlZFN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZWwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdFN0eWxlID0gZ2V0RGVmYXVsdFN0eWxlQnlUYWdOYW1lKGVsLnRhZ05hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY3NzVGV4dHNbaV0gPSBlbC5zdHlsZS5jc3NUZXh0O1xuICAgICAgICAgICAgICAgICAgICAgICAgW10uZm9yRWFjaC5jYWxsKGNvbXB1dGVkU3R5bGUsIGZ1bmN0aW9uIChjc3NQcm9wTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb21wdXRlZFN0eWxlW2Nzc1Byb3BOYW1lXSAhPT0gZGVmYXVsdFN0eWxlW2Nzc1Byb3BOYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbC5zdHlsZVtjc3NQcm9wTmFtZV0gPSBjb21wdXRlZFN0eWxlW2Nzc1Byb3BOYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gZWxlbS5vdXRlckhUTUw7XG4gICAgICAgICAgICAgICAgZWxlbWVudHMgPSBbXS5tYXAuY2FsbChlbGVtZW50cywgZnVuY3Rpb24gKGVsLCBpKSB7XG4gICAgICAgICAgICAgICAgICAgIGVsLnN0eWxlLmNzc1RleHQgPSBjc3NUZXh0c1tpXTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHJldHVybiBzZXJpYWxpemVXaXRoU3R5bGVzO1xuICAgICAgICB9XG4gICAgfTtcbn0oKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9jaGFydHMvaGVscGVycy9zZXJpYWxpemVXaXRoU3R5bGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAyMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMiAzIDUgNiA3IDggOSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\treturn base64;\n\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(23)(module), (function() { return this; }())))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 23 */
/***/ (function(module, exports) {

	eval("module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzP2MzYzIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihtb2R1bGUpIHtcclxuXHRpZighbW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xyXG5cdFx0bW9kdWxlLmRlcHJlY2F0ZSA9IGZ1bmN0aW9uKCkge307XHJcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcclxuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxyXG5cdFx0bW9kdWxlLmNoaWxkcmVuID0gW107XHJcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcclxuXHR9XHJcblx0cmV0dXJuIG1vZHVsZTtcclxufVxyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAod2VicGFjaykvYnVpbGRpbi9tb2R1bGUuanNcbi8vIG1vZHVsZSBpZCA9IDIzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAyIDMgNSA2IDcgOCA5Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 24 */,
/* 25 */,
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (true) {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return _;\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n}.call(this));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 27 */,
/* 28 */,
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _ = __webpack_require__(26),\n    d3Selection = __webpack_require__(1),\n    PubSub = __webpack_require__(2),\n    debounceDelay = 200,\n    cachedWidth = window.innerWidth;\n\nd3Selection.select(window).on('resize', _.debounce(function () {\n    var newWidth = window.innerWidth;\n\n    if (cachedWidth !== newWidth) {\n        cachedWidth = newWidth;\n        PubSub.publish('resize');\n    }\n}, debounceDelay));//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZW1vcy9oZWxwZXJzL3Jlc2l6ZUhlbHBlci5qcz9mMjQ1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIF8gPSByZXF1aXJlKCd1bmRlcnNjb3JlJyksXG4gICAgZDNTZWxlY3Rpb24gPSByZXF1aXJlKCdkMy1zZWxlY3Rpb24nKSxcbiAgICBQdWJTdWIgPSByZXF1aXJlKCdwdWJzdWItanMnKSxcbiAgICBkZWJvdW5jZURlbGF5ID0gMjAwLFxuICAgIGNhY2hlZFdpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG5cbmQzU2VsZWN0aW9uLnNlbGVjdCh3aW5kb3cpLm9uKCdyZXNpemUnLCBfLmRlYm91bmNlKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgbmV3V2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcblxuICAgIGlmIChjYWNoZWRXaWR0aCAhPT0gbmV3V2lkdGgpIHtcbiAgICAgICAgY2FjaGVkV2lkdGggPSBuZXdXaWR0aDtcbiAgICAgICAgUHViU3ViLnB1Ymxpc2goJ3Jlc2l6ZScpO1xuICAgIH1cbn0sIGRlYm91bmNlRGVsYXkpKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2RlbW9zL2hlbHBlcnMvcmVzaXplSGVscGVyLmpzXG4vLyBtb2R1bGUgaWQgPSAyOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAyIDMgNSA2IDcgOCA5Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n    'use strict';\n\n    var d3Array = __webpack_require__(4);\n    var d3Axis = __webpack_require__(6);\n    var d3Brush = __webpack_require__(31);\n    var d3Ease = __webpack_require__(5);\n    var d3Scale = __webpack_require__(10);\n    var d3Shape = __webpack_require__(33);\n    var d3Dispatch = __webpack_require__(8);\n    var d3Selection = __webpack_require__(1);\n    var d3Time = __webpack_require__(13);\n    var d3Transition = __webpack_require__(15);\n    var d3TimeFormat = __webpack_require__(14);\n\n    var colorHelper = __webpack_require__(19);\n    var timeAxisHelper = __webpack_require__(35);\n\n    var _require = __webpack_require__(20),\n        axisTimeCombinations = _require.axisTimeCombinations;\n\n    /**\n     * @typedef BrushChartData\n     * @type {Object[]}\n     * @property {Number} value        Value to chart (required)\n     * @property {Date} date           Date of the value (required)\n     *\n     * @example\n     * [\n     *     {\n     *         value: 1,\n     *         date: '2011-01-06T00:00:00Z'\n     *     },\n     *     {\n     *         value: 2,\n     *         date: '2011-01-07T00:00:00Z'\n     *     }\n     * ]\n     */\n\n    /**\n     * Brush Chart reusable API class that renders a\n     * simple and configurable brush chart.\n     *\n     * @module Brush\n     * @tutorial brush\n     * @requires d3-array, d3-axis, d3-brush, d3-ease, d3-scale, d3-shape, d3-selection, d3-time, d3-time-format\n     *\n     * @example\n     * let brushChart = brush();\n     *\n     * brushChart\n     *     .height(500)\n     *     .width(800);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(brushChart);\n     *\n     */\n\n    return function module() {\n\n        var margin = {\n            top: 20,\n            right: 20,\n            bottom: 30,\n            left: 20\n        },\n            width = 960,\n            height = 500,\n            data = void 0,\n            svg = void 0,\n            ease = d3Ease.easeQuadOut,\n            dateLabel = 'date',\n            valueLabel = 'value',\n            dateRange = [null, null],\n            chartWidth = void 0,\n            chartHeight = void 0,\n            xScale = void 0,\n            yScale = void 0,\n            xAxis = void 0,\n            xAxisFormat = null,\n            xTicks = null,\n            xAxisCustomFormat = null,\n            brush = void 0,\n            chartBrush = void 0,\n            handle = void 0,\n            tickPadding = 5,\n            gradient = colorHelper.colorGradients.greenBlue,\n\n\n        // Dispatcher object to broadcast the mouse events\n        // Ref: https://github.com/mbostock/d3/wiki/Internals#d3_dispatch\n        dispatcher = d3Dispatch.dispatch('customBrushStart', 'customBrushEnd'),\n\n\n        // extractors\n        getValue = function getValue(_ref) {\n            var value = _ref.value;\n            return value;\n        },\n            getDate = function getDate(_ref2) {\n            var date = _ref2.date;\n            return date;\n        };\n\n        /**\n         * This function creates the graph using the selection as container\n         * @param  {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {BrushChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function (_data) {\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = cleanData(cloneData(_data));\n\n                buildScales();\n                buildAxis();\n                buildSVG(this);\n                buildGradient();\n                buildBrush();\n                drawArea();\n                drawAxis();\n                drawBrush();\n                drawHandles();\n            });\n        }\n\n        /**\n         * Creates the d3 x axis, setting orientation\n         * @private\n         */\n        function buildAxis() {\n            var minor = void 0,\n                major = void 0;\n\n            if (xAxisFormat === 'custom' && typeof xAxisCustomFormat === 'string') {\n                minor = {\n                    tick: xTicks,\n                    format: d3TimeFormat.timeFormat(xAxisCustomFormat)\n                };\n            } else {\n                var _timeAxisHelper$getXA = timeAxisHelper.getXAxisSettings(data, width, xAxisFormat);\n\n                minor = _timeAxisHelper$getXA.minor;\n                major = _timeAxisHelper$getXA.major;\n            }\n\n            xAxis = d3Axis.axisBottom(xScale).ticks(minor.tick).tickSize(10, 0).tickPadding([tickPadding]).tickFormat(minor.format);\n        }\n\n        /**\n         * Creates the brush element and attaches a listener\n         * @return {void}\n         */\n        function buildBrush() {\n            brush = d3Brush.brushX().extent([[0, 0], [chartWidth, chartHeight]]).on('brush', handleBrushStart).on('end', handleBrushEnd);\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * Also applies the Margin convention\n         * @private\n         */\n        function buildContainerGroups() {\n            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');\n\n            container.append('g').classed('chart-group', true);\n            container.append('g').classed('metadata-group', true);\n            container.append('g').classed('x-axis-group', true);\n            container.append('g').classed('brush-group', true);\n        }\n\n        /**\n         * Creates the gradient on the area\n         * @return {void}\n         */\n        function buildGradient() {\n            var metadataGroup = svg.select('.metadata-group');\n\n            metadataGroup.append('linearGradient').attr('id', 'brush-area-gradient').attr('gradientUnits', 'userSpaceOnUse').attr('x1', 0).attr('x2', xScale(data[data.length - 1].date)).attr('y1', 0).attr('y2', 0).selectAll('stop').data([{ offset: '0%', color: gradient[0] }, { offset: '100%', color: gradient[1] }]).enter().append('stop').attr('offset', function (_ref3) {\n                var offset = _ref3.offset;\n                return offset;\n            }).attr('stop-color', function (_ref4) {\n                var color = _ref4.color;\n                return color;\n            });\n        }\n\n        /**\n         * Creates the x and y scales of the graph\n         * @private\n         */\n        function buildScales() {\n            xScale = d3Scale.scaleTime().domain(d3Array.extent(data, getDate)).range([0, chartWidth]);\n\n            yScale = d3Scale.scaleLinear().domain([0, d3Array.max(data, getValue)]).range([chartHeight, 0]);\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container).append('svg').classed('britechart brush-chart', true);\n\n                buildContainerGroups();\n            }\n\n            svg.attr('width', width).attr('height', height);\n        }\n\n        /**\n         * Cleaning data adding the proper format\n         *\n         * @param  {BrushChartData} data Data\n         */\n        function cleanData(data) {\n            return data.map(function (d) {\n                d.date = new Date(d[dateLabel]);\n                d.value = +d[valueLabel];\n\n                return d;\n            });\n        }\n\n        /**\n         * Clones the passed array of data\n         * @param  {Object[]} dataToClone Data to clone\n         * @return {Object[]}             Cloned data\n         */\n        function cloneData(dataToClone) {\n            return JSON.parse(JSON.stringify(dataToClone));\n        }\n\n        /**\n         * Draws the x axis on the svg object within its group\n         *\n         * @private\n         */\n        function drawAxis() {\n            svg.select('.x-axis-group').append('g').attr('class', 'x axis').attr('transform', 'translate(0, ' + chartHeight + ')').call(xAxis);\n        }\n\n        /**\n         * Draws the area that is going to represent the data\n         *\n         * @return {void}\n         */\n        function drawArea() {\n            // Create and configure the area generator\n            var area = d3Shape.area().x(function (_ref5) {\n                var date = _ref5.date;\n                return xScale(date);\n            }).y0(chartHeight).y1(function (_ref6) {\n                var value = _ref6.value;\n                return yScale(value);\n            }).curve(d3Shape.curveBasis);\n\n            // Create the area path\n            svg.select('.chart-group').append('path').datum(data).attr('class', 'brush-area').attr('d', area);\n        }\n\n        /**\n         * Draws the Brush components on its group\n         * @return {void}\n         */\n        function drawBrush() {\n            chartBrush = svg.select('.brush-group').call(brush);\n\n            // Update the height of the brushing rectangle\n            chartBrush.selectAll('rect').classed('brush-rect', true).attr('height', chartHeight);\n        }\n\n        /**\n         * Draws a handle for the Brush section\n         * @return {void}\n         */\n        function drawHandles() {\n            var handleFillColor = colorHelper.colorSchemasHuman.grey[1];\n\n            // Styling\n            handle = chartBrush.selectAll('.handle.brush-rect').style('fill', handleFillColor);\n        }\n\n        /**\n         * When a brush event starts, we can extract info from the extension\n         * of the brush.\n         *\n         * @return {void}\n         */\n        function handleBrushStart() {\n            var s = d3Selection.event.selection,\n                dateExtent = s.map(xScale.invert);\n\n            dispatcher.call('customBrushStart', this, dateExtent);\n            // updateHandlers(dateExtent);\n        }\n\n        /**\n         * Processes the end brush event, snapping the boundaries to days\n         * as showed on the example on https://bl.ocks.org/mbostock/6232537\n         * @return {void}\n         * @private\n         */\n        function handleBrushEnd() {\n            if (!d3Selection.event.sourceEvent) return; // Only transition after input.\n            if (!d3Selection.event.selection) return; // Ignore empty selections.\n\n            var s = d3Selection.event.selection,\n                dateExtent = s.map(xScale.invert),\n                dateExtentRounded = dateExtent.map(d3Time.timeDay.round);\n\n            // If empty when rounded, use floor & ceil instead.\n            if (dateExtentRounded[0] >= dateExtentRounded[1]) {\n                dateExtentRounded[0] = d3Time.timeDay.floor(dateExtent[0]);\n                dateExtentRounded[1] = d3Time.timeDay.offset(dateExtentRounded[0]);\n            }\n\n            d3Selection.select(this).transition().call(d3Selection.event.target.move, dateExtentRounded.map(xScale));\n\n            dispatcher.call('customBrushEnd', this, dateExtentRounded);\n        }\n\n        /**\n         * Sets a new brush extent within the passed percentage positions\n         * @param {Number} a Percentage of data that the brush start with\n         * @param {Number} b Percentage of data that the brush ends with\n         * @example\n         *     setBrushByPercentages(0.25, 0.5)\n         */\n        function setBrushByPercentages(a, b) {\n            var x0 = a * chartWidth,\n                x1 = b * chartWidth;\n\n            brush.move(chartBrush, [x0, x1]);\n        }\n\n        /**\n         * Sets a new brush extent within the passed dates\n         * @param {String | Date} dateA Initial Date\n         * @param {String | Date} dateB End Date\n         */\n        function setBrushByDates(dateA, dateB) {\n            var x0 = xScale(new Date(dateA)),\n                x1 = xScale(new Date(dateB));\n\n            brush.move(chartBrush, [x0, x1]);\n        }\n\n        /**\n         * Updates visibility and position of the brush handlers\n         * @param  {Number[]} dateExtent Date range\n         * @return {void}\n         */\n        function updateHandlers(dateExtent) {\n            if (dateExtent === null) {\n                handle.attr('display', 'none');\n            } else {\n                handle.attr('display', null).attr('transform', function (d, i) {\n                    return 'translate(' + dateExtent[i] + ',' + chartHeight / 2 + ')';\n                });\n            }\n        }\n\n        // API\n\n        /**\n         * Exposes the constants to be used to force the x axis to respect a certain granularity\n         * current options: MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR\n         * @example\n         *     brush.xAxisCustomFormat(brush.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.axisTimeCombinations = axisTimeCombinations;\n\n        /**\n         * Gets or Sets the dateRange for the selected part of the brush\n         * @param  {String[]} _x Desired dateRange for the graph\n         * @return { dateRange | module} Current dateRange or Chart module to chain calls\n         * @public\n         */\n        exports.dateRange = function (_x) {\n            if (!arguments.length) {\n                return dateRange;\n            }\n            dateRange = _x;\n\n            if (Array.isArray(dateRange)) {\n                setBrushByDates.apply(undefined, _toConsumableArray(dateRange));\n            }\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the gradient of the chart\n         * @param  {String[]} _x        Desired gradient for the graph\n         * @return {String | Module}    Current gradient or Chart module to chain calls\n         * @public\n         */\n        exports.gradient = function (_x) {\n            if (!arguments.length) {\n                return gradient;\n            }\n            gradient = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {Number} _x          Desired width for the graph\n         * @return {Number | Module}    Current height or Chart module to chain calls\n         * @public\n         */\n        exports.height = function (_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {Object} _x          Margin object to get/set\n         * @return {Object | Module}    Current margin or Chart module to chain calls\n         * @public\n         */\n        exports.margin = function (_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n         * We are going to expose this events:\n         * customMouseOver, customMouseMove and customMouseOut\n         *\n         * @return {module} Bar Chart\n         * @public\n         */\n        exports.on = function () {\n            var value = dispatcher.on.apply(dispatcher, arguments);\n\n            return value === dispatcher ? exports : value;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {Number} _x          Desired width for the graph\n         * @return {Number | Module}    Current width or Chart module to chain calls\n         * @public\n         */\n        exports.width = function (_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            width = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x format\n         * It requires a `xAxisFormat` of 'custom' in order to work.\n         * @param  {String} _x              Desired format for x axis\n         * @return {String | Module}        Current format or module to chain calls\n         */\n        exports.xAxisCustomFormat = function (_x) {\n            if (!arguments.length) {\n                return xAxisCustomFormat;\n            }\n            xAxisCustomFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x axis grouping\n         * @param  {String} _x          Desired format\n         * @return {String | Module}    Current format or module to chain calls\n         * @example\n         *     brush.xAxisFormat(brush.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.xAxisFormat = function (_x) {\n            if (!arguments.length) {\n                return xAxisFormat;\n            }\n            xAxisFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x ticks. It requires a `xAxisCustomFormat` of 'custom' in order to work.\n         * NOTE: This value needs to be a multiple of 2, 5 or 10. They won't always work as expected, as D3 decides at the end\n         * how many and where the ticks will appear.\n         *\n         * @param  {Number} _x              Desired number of x axis ticks (multiple of 2, 5 or 10)\n         * @return {Number | Module}        Current number or ticks or module to chain calls\n         */\n        exports.xTicks = function (_x) {\n            if (!arguments.length) {\n                return xTicks;\n            }\n            xTicks = _x;\n\n            return this;\n        };\n\n        return exports;\n    };\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-brush/ Version 1.0.4. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports, __webpack_require__(8), __webpack_require__(32), __webpack_require__(12), __webpack_require__(1), __webpack_require__(15)) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Dispatch,d3Drag,d3Interpolate,d3Selection,d3Transition) { 'use strict';\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = d3Dispatch.dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          d3Selection.select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = d3Interpolate.interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            d3Transition.interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = d3Selection.select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      d3Selection.customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (d3Selection.event.touches) { if (d3Selection.event.changedTouches.length < d3Selection.event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = d3Selection.event.target.__data__.type,\n        mode = (d3Selection.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && d3Selection.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = d3Selection.mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = d3Selection.select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (d3Selection.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = d3Selection.select(d3Selection.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      d3Drag.dragDisable(d3Selection.event.view);\n    }\n\n    nopropagation();\n    d3Transition.interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = d3Selection.mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (d3Selection.event.touches) {\n        if (d3Selection.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        d3Drag.dragEnable(d3Selection.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (d3Selection.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-drag/ Version 1.1.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports, __webpack_require__(8), __webpack_require__(1)) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-selection'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3));\n}(this, (function (exports,d3Dispatch,d3Selection) { 'use strict';\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n};\n\nvar nodrag = function(view) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch$$1) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch$$1;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: d3Selection.event.x, y: d3Selection.event.y} : d;\n}\n\nfunction touchable() {\n  return \"ontouchstart\" in this;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = d3Dispatch.dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), d3Selection.mouse, this, arguments);\n    if (!gesture) return;\n    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(d3Selection.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = d3Selection.event.clientX;\n    mousedowny = d3Selection.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = d3Selection.event.clientX - mousedownx, dy = d3Selection.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(d3Selection.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = d3Selection.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, d3Selection.touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = d3Selection.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = d3Selection.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!d3Selection.customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      d3Selection.customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nexports.drag = drag;\nexports.dragDisable = nodrag;\nexports.dragEnable = yesdrag;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-shape/ Version 1.2.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports, __webpack_require__(34)) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Path) { 'use strict';\n\nvar constant = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs = Math.abs;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar max = Math.max;\nvar min = Math.min;\nvar sin = Math.sin;\nvar sqrt = Math.sqrt;\n\nvar epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = d3Path.path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant(0),\n      y1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar lineRadial$1 = function() {\n  return lineRadial(line().curve(curveRadialLinear));\n};\n\nvar areaRadial = function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar pointRadial = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nvar slice = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x,\n      y$$1 = y,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = d3Path.path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n\nvar cross = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);\nvar kx = Math.sin(tau / 10) * kr;\nvar ky = -Math.cos(tau / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = d3Path.path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending = function(series) {\n  var sums = series.map(sum);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$1 = function(series) {\n  return ascending(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nexports.arc = arc;\nexports.area = area;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending;\nexports.stackOrderDescending = descending$1;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

	eval("// https://d3js.org/d3-path/ Version 1.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar pi = Math.PI;\nvar tau = 2 * pi;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexports.path = path;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXBhdGgvYnVpbGQvZDMtcGF0aC5qcz9mNmQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGh0dHBzOi8vZDNqcy5vcmcvZDMtcGF0aC8gVmVyc2lvbiAxLjAuNS4gQ29weXJpZ2h0IDIwMTcgTWlrZSBCb3N0b2NrLlxuKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcblx0dHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnID8gZmFjdG9yeShleHBvcnRzKSA6XG5cdHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCA/IGRlZmluZShbJ2V4cG9ydHMnXSwgZmFjdG9yeSkgOlxuXHQoZmFjdG9yeSgoZ2xvYmFsLmQzID0gZ2xvYmFsLmQzIHx8IHt9KSkpO1xufSh0aGlzLCAoZnVuY3Rpb24gKGV4cG9ydHMpIHsgJ3VzZSBzdHJpY3QnO1xuXG52YXIgcGkgPSBNYXRoLlBJO1xudmFyIHRhdSA9IDIgKiBwaTtcbnZhciBlcHNpbG9uID0gMWUtNjtcbnZhciB0YXVFcHNpbG9uID0gdGF1IC0gZXBzaWxvbjtcblxuZnVuY3Rpb24gUGF0aCgpIHtcbiAgdGhpcy5feDAgPSB0aGlzLl95MCA9IC8vIHN0YXJ0IG9mIGN1cnJlbnQgc3VicGF0aFxuICB0aGlzLl94MSA9IHRoaXMuX3kxID0gbnVsbDsgLy8gZW5kIG9mIGN1cnJlbnQgc3VicGF0aFxuICB0aGlzLl8gPSBcIlwiO1xufVxuXG5mdW5jdGlvbiBwYXRoKCkge1xuICByZXR1cm4gbmV3IFBhdGg7XG59XG5cblBhdGgucHJvdG90eXBlID0gcGF0aC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBQYXRoLFxuICBtb3ZlVG86IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB0aGlzLl8gKz0gXCJNXCIgKyAodGhpcy5feDAgPSB0aGlzLl94MSA9ICt4KSArIFwiLFwiICsgKHRoaXMuX3kwID0gdGhpcy5feTEgPSAreSk7XG4gIH0sXG4gIGNsb3NlUGF0aDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX3gxICE9PSBudWxsKSB7XG4gICAgICB0aGlzLl94MSA9IHRoaXMuX3gwLCB0aGlzLl95MSA9IHRoaXMuX3kwO1xuICAgICAgdGhpcy5fICs9IFwiWlwiO1xuICAgIH1cbiAgfSxcbiAgbGluZVRvOiBmdW5jdGlvbih4LCB5KSB7XG4gICAgdGhpcy5fICs9IFwiTFwiICsgKHRoaXMuX3gxID0gK3gpICsgXCIsXCIgKyAodGhpcy5feTEgPSAreSk7XG4gIH0sXG4gIHF1YWRyYXRpY0N1cnZlVG86IGZ1bmN0aW9uKHgxLCB5MSwgeCwgeSkge1xuICAgIHRoaXMuXyArPSBcIlFcIiArICgreDEpICsgXCIsXCIgKyAoK3kxKSArIFwiLFwiICsgKHRoaXMuX3gxID0gK3gpICsgXCIsXCIgKyAodGhpcy5feTEgPSAreSk7XG4gIH0sXG4gIGJlemllckN1cnZlVG86IGZ1bmN0aW9uKHgxLCB5MSwgeDIsIHkyLCB4LCB5KSB7XG4gICAgdGhpcy5fICs9IFwiQ1wiICsgKCt4MSkgKyBcIixcIiArICgreTEpICsgXCIsXCIgKyAoK3gyKSArIFwiLFwiICsgKCt5MikgKyBcIixcIiArICh0aGlzLl94MSA9ICt4KSArIFwiLFwiICsgKHRoaXMuX3kxID0gK3kpO1xuICB9LFxuICBhcmNUbzogZnVuY3Rpb24oeDEsIHkxLCB4MiwgeTIsIHIpIHtcbiAgICB4MSA9ICt4MSwgeTEgPSAreTEsIHgyID0gK3gyLCB5MiA9ICt5MiwgciA9ICtyO1xuICAgIHZhciB4MCA9IHRoaXMuX3gxLFxuICAgICAgICB5MCA9IHRoaXMuX3kxLFxuICAgICAgICB4MjEgPSB4MiAtIHgxLFxuICAgICAgICB5MjEgPSB5MiAtIHkxLFxuICAgICAgICB4MDEgPSB4MCAtIHgxLFxuICAgICAgICB5MDEgPSB5MCAtIHkxLFxuICAgICAgICBsMDFfMiA9IHgwMSAqIHgwMSArIHkwMSAqIHkwMTtcblxuICAgIC8vIElzIHRoZSByYWRpdXMgbmVnYXRpdmU/IEVycm9yLlxuICAgIGlmIChyIDwgMCkgdGhyb3cgbmV3IEVycm9yKFwibmVnYXRpdmUgcmFkaXVzOiBcIiArIHIpO1xuXG4gICAgLy8gSXMgdGhpcyBwYXRoIGVtcHR5PyBNb3ZlIHRvICh4MSx5MSkuXG4gICAgaWYgKHRoaXMuX3gxID09PSBudWxsKSB7XG4gICAgICB0aGlzLl8gKz0gXCJNXCIgKyAodGhpcy5feDEgPSB4MSkgKyBcIixcIiArICh0aGlzLl95MSA9IHkxKTtcbiAgICB9XG5cbiAgICAvLyBPciwgaXMgKHgxLHkxKSBjb2luY2lkZW50IHdpdGggKHgwLHkwKT8gRG8gbm90aGluZy5cbiAgICBlbHNlIGlmICghKGwwMV8yID4gZXBzaWxvbikpIHt9XG5cbiAgICAvLyBPciwgYXJlICh4MCx5MCksICh4MSx5MSkgYW5kICh4Mix5MikgY29sbGluZWFyP1xuICAgIC8vIEVxdWl2YWxlbnRseSwgaXMgKHgxLHkxKSBjb2luY2lkZW50IHdpdGggKHgyLHkyKT9cbiAgICAvLyBPciwgaXMgdGhlIHJhZGl1cyB6ZXJvPyBMaW5lIHRvICh4MSx5MSkuXG4gICAgZWxzZSBpZiAoIShNYXRoLmFicyh5MDEgKiB4MjEgLSB5MjEgKiB4MDEpID4gZXBzaWxvbikgfHwgIXIpIHtcbiAgICAgIHRoaXMuXyArPSBcIkxcIiArICh0aGlzLl94MSA9IHgxKSArIFwiLFwiICsgKHRoaXMuX3kxID0geTEpO1xuICAgIH1cblxuICAgIC8vIE90aGVyd2lzZSwgZHJhdyBhbiBhcmMhXG4gICAgZWxzZSB7XG4gICAgICB2YXIgeDIwID0geDIgLSB4MCxcbiAgICAgICAgICB5MjAgPSB5MiAtIHkwLFxuICAgICAgICAgIGwyMV8yID0geDIxICogeDIxICsgeTIxICogeTIxLFxuICAgICAgICAgIGwyMF8yID0geDIwICogeDIwICsgeTIwICogeTIwLFxuICAgICAgICAgIGwyMSA9IE1hdGguc3FydChsMjFfMiksXG4gICAgICAgICAgbDAxID0gTWF0aC5zcXJ0KGwwMV8yKSxcbiAgICAgICAgICBsID0gciAqIE1hdGgudGFuKChwaSAtIE1hdGguYWNvcygobDIxXzIgKyBsMDFfMiAtIGwyMF8yKSAvICgyICogbDIxICogbDAxKSkpIC8gMiksXG4gICAgICAgICAgdDAxID0gbCAvIGwwMSxcbiAgICAgICAgICB0MjEgPSBsIC8gbDIxO1xuXG4gICAgICAvLyBJZiB0aGUgc3RhcnQgdGFuZ2VudCBpcyBub3QgY29pbmNpZGVudCB3aXRoICh4MCx5MCksIGxpbmUgdG8uXG4gICAgICBpZiAoTWF0aC5hYnModDAxIC0gMSkgPiBlcHNpbG9uKSB7XG4gICAgICAgIHRoaXMuXyArPSBcIkxcIiArICh4MSArIHQwMSAqIHgwMSkgKyBcIixcIiArICh5MSArIHQwMSAqIHkwMSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuXyArPSBcIkFcIiArIHIgKyBcIixcIiArIHIgKyBcIiwwLDAsXCIgKyAoKyh5MDEgKiB4MjAgPiB4MDEgKiB5MjApKSArIFwiLFwiICsgKHRoaXMuX3gxID0geDEgKyB0MjEgKiB4MjEpICsgXCIsXCIgKyAodGhpcy5feTEgPSB5MSArIHQyMSAqIHkyMSk7XG4gICAgfVxuICB9LFxuICBhcmM6IGZ1bmN0aW9uKHgsIHksIHIsIGEwLCBhMSwgY2N3KSB7XG4gICAgeCA9ICt4LCB5ID0gK3ksIHIgPSArcjtcbiAgICB2YXIgZHggPSByICogTWF0aC5jb3MoYTApLFxuICAgICAgICBkeSA9IHIgKiBNYXRoLnNpbihhMCksXG4gICAgICAgIHgwID0geCArIGR4LFxuICAgICAgICB5MCA9IHkgKyBkeSxcbiAgICAgICAgY3cgPSAxIF4gY2N3LFxuICAgICAgICBkYSA9IGNjdyA/IGEwIC0gYTEgOiBhMSAtIGEwO1xuXG4gICAgLy8gSXMgdGhlIHJhZGl1cyBuZWdhdGl2ZT8gRXJyb3IuXG4gICAgaWYgKHIgPCAwKSB0aHJvdyBuZXcgRXJyb3IoXCJuZWdhdGl2ZSByYWRpdXM6IFwiICsgcik7XG5cbiAgICAvLyBJcyB0aGlzIHBhdGggZW1wdHk/IE1vdmUgdG8gKHgwLHkwKS5cbiAgICBpZiAodGhpcy5feDEgPT09IG51bGwpIHtcbiAgICAgIHRoaXMuXyArPSBcIk1cIiArIHgwICsgXCIsXCIgKyB5MDtcbiAgICB9XG5cbiAgICAvLyBPciwgaXMgKHgwLHkwKSBub3QgY29pbmNpZGVudCB3aXRoIHRoZSBwcmV2aW91cyBwb2ludD8gTGluZSB0byAoeDAseTApLlxuICAgIGVsc2UgaWYgKE1hdGguYWJzKHRoaXMuX3gxIC0geDApID4gZXBzaWxvbiB8fCBNYXRoLmFicyh0aGlzLl95MSAtIHkwKSA+IGVwc2lsb24pIHtcbiAgICAgIHRoaXMuXyArPSBcIkxcIiArIHgwICsgXCIsXCIgKyB5MDtcbiAgICB9XG5cbiAgICAvLyBJcyB0aGlzIGFyYyBlbXB0eT8gV2XigJlyZSBkb25lLlxuICAgIGlmICghcikgcmV0dXJuO1xuXG4gICAgLy8gRG9lcyB0aGUgYW5nbGUgZ28gdGhlIHdyb25nIHdheT8gRmxpcCB0aGUgZGlyZWN0aW9uLlxuICAgIGlmIChkYSA8IDApIGRhID0gZGEgJSB0YXUgKyB0YXU7XG5cbiAgICAvLyBJcyB0aGlzIGEgY29tcGxldGUgY2lyY2xlPyBEcmF3IHR3byBhcmNzIHRvIGNvbXBsZXRlIHRoZSBjaXJjbGUuXG4gICAgaWYgKGRhID4gdGF1RXBzaWxvbikge1xuICAgICAgdGhpcy5fICs9IFwiQVwiICsgciArIFwiLFwiICsgciArIFwiLDAsMSxcIiArIGN3ICsgXCIsXCIgKyAoeCAtIGR4KSArIFwiLFwiICsgKHkgLSBkeSkgKyBcIkFcIiArIHIgKyBcIixcIiArIHIgKyBcIiwwLDEsXCIgKyBjdyArIFwiLFwiICsgKHRoaXMuX3gxID0geDApICsgXCIsXCIgKyAodGhpcy5feTEgPSB5MCk7XG4gICAgfVxuXG4gICAgLy8gSXMgdGhpcyBhcmMgbm9uLWVtcHR5PyBEcmF3IGFuIGFyYyFcbiAgICBlbHNlIGlmIChkYSA+IGVwc2lsb24pIHtcbiAgICAgIHRoaXMuXyArPSBcIkFcIiArIHIgKyBcIixcIiArIHIgKyBcIiwwLFwiICsgKCsoZGEgPj0gcGkpKSArIFwiLFwiICsgY3cgKyBcIixcIiArICh0aGlzLl94MSA9IHggKyByICogTWF0aC5jb3MoYTEpKSArIFwiLFwiICsgKHRoaXMuX3kxID0geSArIHIgKiBNYXRoLnNpbihhMSkpO1xuICAgIH1cbiAgfSxcbiAgcmVjdDogZnVuY3Rpb24oeCwgeSwgdywgaCkge1xuICAgIHRoaXMuXyArPSBcIk1cIiArICh0aGlzLl94MCA9IHRoaXMuX3gxID0gK3gpICsgXCIsXCIgKyAodGhpcy5feTAgPSB0aGlzLl95MSA9ICt5KSArIFwiaFwiICsgKCt3KSArIFwidlwiICsgKCtoKSArIFwiaFwiICsgKC13KSArIFwiWlwiO1xuICB9LFxuICB0b1N0cmluZzogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuXztcbiAgfVxufTtcblxuZXhwb3J0cy5wYXRoID0gcGF0aDtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxufSkpKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9kMy1wYXRoL2J1aWxkL2QzLXBhdGguanNcbi8vIG1vZHVsZSBpZCA9IDM0XG4vLyBtb2R1bGUgY2h1bmtzID0gMSAyIDUgNiA3IDgiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n    'use strict';\n\n    var _settingsToMajorTickM;\n\n    var d3Time = __webpack_require__(13);\n    var d3TimeFormat = __webpack_require__(14);\n\n    var _require = __webpack_require__(20),\n        axisTimeCombinations = _require.axisTimeCombinations,\n        timeBenchmarks = _require.timeBenchmarks;\n\n    var singleTickWidth = 20;\n    var horizontalTickSpacing = 50;\n    var minEntryNumForDayFormat = 5;\n\n    var formatMap = {\n        minute: d3TimeFormat.timeFormat('%M m'),\n        hour: d3TimeFormat.timeFormat('%H %p'),\n        day: d3TimeFormat.timeFormat('%e'),\n        daymonth: d3TimeFormat.timeFormat('%d %b'),\n        month: d3TimeFormat.timeFormat('%b'),\n        year: d3TimeFormat.timeFormat('%Y')\n    };\n    var localeTimeMap = {\n        minute: { minute: 'numeric' },\n        hour: { hour: 'numeric' },\n        day: { day: 'numeric' },\n        daymonth: { day: 'numeric', month: 'short' },\n        month: { month: 'short' },\n        year: { year: 'numeric' }\n    };\n    var settingsToMajorTickMap = (_settingsToMajorTickM = {}, _defineProperty(_settingsToMajorTickM, axisTimeCombinations.MINUTE_HOUR, d3Time.timeHour.every(1)), _defineProperty(_settingsToMajorTickM, axisTimeCombinations.HOUR_DAY, d3Time.timeDay.every(1)), _defineProperty(_settingsToMajorTickM, axisTimeCombinations.DAY_MONTH, d3Time.timeMonth.every(1)), _defineProperty(_settingsToMajorTickM, axisTimeCombinations.MONTH_YEAR, d3Time.timeYear.every(1)), _settingsToMajorTickM);\n\n    /**\n     * Figures out the proper settings from the current time span\n     * @param  {Number} timeSpan    Span of time charted by the graph in milliseconds\n     * @return {String}             Type of settings for the given timeSpan\n     */\n    var getAxisSettingsFromTimeSpan = function getAxisSettingsFromTimeSpan(timeSpan) {\n        var ONE_YEAR = timeBenchmarks.ONE_YEAR,\n            ONE_DAY = timeBenchmarks.ONE_DAY;\n\n        var settings = void 0;\n\n        if (timeSpan < ONE_DAY) {\n            settings = axisTimeCombinations.HOUR_DAY;\n        } else if (timeSpan < ONE_YEAR) {\n            settings = axisTimeCombinations.DAY_MONTH;\n        } else {\n            settings = axisTimeCombinations.MONTH_YEAR;\n        }\n\n        return settings;\n    };\n\n    /**\n     * Calculates the maximum number of ticks for the x axis\n     * @param  {Number} width Chart width\n     * @param  {Number} dataPointNumber  Number of entries on the data\n     * @return {Number}       Number of ticks to render\n     */\n    var getMaxNumOfHorizontalTicks = function getMaxNumOfHorizontalTicks(width, dataPointNumber) {\n        var ticksForWidth = Math.ceil(width / (singleTickWidth + horizontalTickSpacing));\n\n        return dataPointNumber < minEntryNumForDayFormat ? d3Time.timeDay : Math.min(dataPointNumber, ticksForWidth);\n    };\n\n    /**\n     * Takes a locale (string) and the format to return and returns a function to format dates\n     * @param  {String} locale    locale tag eg. en-US, fr-FR, ru-RU\n     * @param  {string} timeUnit  minute, hour, day, dayMonth, month, year\n     * @return {function}         function that formats dates in the proper locale\n     */\n    var getLocaleDateFormatter = function getLocaleDateFormatter(locale) {\n        var timeUnit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'day';\n\n        var options = localeTimeMap[timeUnit];\n        var formatter = new Intl.DateTimeFormat(locale, options);\n\n        return function (date) {\n            return formatter.format(date);\n        };\n    };\n\n    /**\n     * Returns tick object to be used when building the x axis\n     * @param {dataByDate} dataByDate       Chart data ordered by Date\n     * @param {Number} width                Chart width\n     * @param {String} settings             Optional forced settings for axis\n     * @return {object} tick settings for major and minr axis\n     */\n    var getXAxisSettings = function getXAxisSettings(dataByDate, width) {\n        var settings = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var locale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n        var firstDate = new Date(dataByDate[0].date);\n        var lastDate = new Date(dataByDate[dataByDate.length - 1].date);\n        var dateTimeSpan = lastDate - firstDate;\n\n        if (locale && (typeof Intl === 'undefined' || (typeof Intl === 'undefined' ? 'undefined' : _typeof(Intl)) === 'object' && !Intl.DateTimeFormat)) {\n            locale = null;\n        }\n\n        if (!settings) {\n            settings = getAxisSettingsFromTimeSpan(dateTimeSpan);\n        }\n\n        var _settings$split = settings.split('-'),\n            _settings$split2 = _slicedToArray(_settings$split, 2),\n            minor = _settings$split2[0],\n            major = _settings$split2[1];\n\n        var majorTickValue = settingsToMajorTickMap[settings];\n        var minorTickValue = getMaxNumOfHorizontalTicks(width, dataByDate.length);\n\n        return {\n            minor: {\n                format: locale ? getLocaleDateFormatter(locale, minor) : formatMap[minor],\n                tick: minorTickValue\n            },\n            major: {\n                format: locale ? getLocaleDateFormatter(locale, major) : formatMap[major],\n                tick: majorTickValue\n            }\n        };\n    };\n\n    return {\n        getXAxisSettings: getXAxisSettings,\n        getLocaleDateFormatter: getLocaleDateFormatter\n    };\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY2hhcnRzL2hlbHBlcnMvdGltZUF4aXMuanM/MzZhOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBfc2xpY2VkVG9BcnJheSA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gc2xpY2VJdGVyYXRvcihhcnIsIGkpIHsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfZSA9IHVuZGVmaW5lZDsgdHJ5IHsgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgeyBfYXJyLnB1c2goX3MudmFsdWUpOyBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gdHJ1ZTsgX2UgPSBlcnI7IH0gZmluYWxseSB7IHRyeSB7IGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0pIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfSByZXR1cm4gZnVuY3Rpb24gKGFyciwgaSkgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IHJldHVybiBhcnI7IH0gZWxzZSBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSB7IHJldHVybiBzbGljZUl0ZXJhdG9yKGFyciwgaSk7IH0gZWxzZSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlXCIpOyB9IH07IH0oKTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG5kZWZpbmUoZnVuY3Rpb24gKHJlcXVpcmUpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgX3NldHRpbmdzVG9NYWpvclRpY2tNO1xuXG4gICAgdmFyIGQzVGltZSA9IHJlcXVpcmUoJ2QzLXRpbWUnKTtcbiAgICB2YXIgZDNUaW1lRm9ybWF0ID0gcmVxdWlyZSgnZDMtdGltZS1mb3JtYXQnKTtcblxuICAgIHZhciBfcmVxdWlyZSA9IHJlcXVpcmUoJy4vY29uc3RhbnRzJyksXG4gICAgICAgIGF4aXNUaW1lQ29tYmluYXRpb25zID0gX3JlcXVpcmUuYXhpc1RpbWVDb21iaW5hdGlvbnMsXG4gICAgICAgIHRpbWVCZW5jaG1hcmtzID0gX3JlcXVpcmUudGltZUJlbmNobWFya3M7XG5cbiAgICB2YXIgc2luZ2xlVGlja1dpZHRoID0gMjA7XG4gICAgdmFyIGhvcml6b250YWxUaWNrU3BhY2luZyA9IDUwO1xuICAgIHZhciBtaW5FbnRyeU51bUZvckRheUZvcm1hdCA9IDU7XG5cbiAgICB2YXIgZm9ybWF0TWFwID0ge1xuICAgICAgICBtaW51dGU6IGQzVGltZUZvcm1hdC50aW1lRm9ybWF0KCclTSBtJyksXG4gICAgICAgIGhvdXI6IGQzVGltZUZvcm1hdC50aW1lRm9ybWF0KCclSCAlcCcpLFxuICAgICAgICBkYXk6IGQzVGltZUZvcm1hdC50aW1lRm9ybWF0KCclZScpLFxuICAgICAgICBkYXltb250aDogZDNUaW1lRm9ybWF0LnRpbWVGb3JtYXQoJyVkICViJyksXG4gICAgICAgIG1vbnRoOiBkM1RpbWVGb3JtYXQudGltZUZvcm1hdCgnJWInKSxcbiAgICAgICAgeWVhcjogZDNUaW1lRm9ybWF0LnRpbWVGb3JtYXQoJyVZJylcbiAgICB9O1xuICAgIHZhciBsb2NhbGVUaW1lTWFwID0ge1xuICAgICAgICBtaW51dGU6IHsgbWludXRlOiAnbnVtZXJpYycgfSxcbiAgICAgICAgaG91cjogeyBob3VyOiAnbnVtZXJpYycgfSxcbiAgICAgICAgZGF5OiB7IGRheTogJ251bWVyaWMnIH0sXG4gICAgICAgIGRheW1vbnRoOiB7IGRheTogJ251bWVyaWMnLCBtb250aDogJ3Nob3J0JyB9LFxuICAgICAgICBtb250aDogeyBtb250aDogJ3Nob3J0JyB9LFxuICAgICAgICB5ZWFyOiB7IHllYXI6ICdudW1lcmljJyB9XG4gICAgfTtcbiAgICB2YXIgc2V0dGluZ3NUb01ham9yVGlja01hcCA9IChfc2V0dGluZ3NUb01ham9yVGlja00gPSB7fSwgX2RlZmluZVByb3BlcnR5KF9zZXR0aW5nc1RvTWFqb3JUaWNrTSwgYXhpc1RpbWVDb21iaW5hdGlvbnMuTUlOVVRFX0hPVVIsIGQzVGltZS50aW1lSG91ci5ldmVyeSgxKSksIF9kZWZpbmVQcm9wZXJ0eShfc2V0dGluZ3NUb01ham9yVGlja00sIGF4aXNUaW1lQ29tYmluYXRpb25zLkhPVVJfREFZLCBkM1RpbWUudGltZURheS5ldmVyeSgxKSksIF9kZWZpbmVQcm9wZXJ0eShfc2V0dGluZ3NUb01ham9yVGlja00sIGF4aXNUaW1lQ29tYmluYXRpb25zLkRBWV9NT05USCwgZDNUaW1lLnRpbWVNb250aC5ldmVyeSgxKSksIF9kZWZpbmVQcm9wZXJ0eShfc2V0dGluZ3NUb01ham9yVGlja00sIGF4aXNUaW1lQ29tYmluYXRpb25zLk1PTlRIX1lFQVIsIGQzVGltZS50aW1lWWVhci5ldmVyeSgxKSksIF9zZXR0aW5nc1RvTWFqb3JUaWNrTSk7XG5cbiAgICAvKipcbiAgICAgKiBGaWd1cmVzIG91dCB0aGUgcHJvcGVyIHNldHRpbmdzIGZyb20gdGhlIGN1cnJlbnQgdGltZSBzcGFuXG4gICAgICogQHBhcmFtICB7TnVtYmVyfSB0aW1lU3BhbiAgICBTcGFuIG9mIHRpbWUgY2hhcnRlZCBieSB0aGUgZ3JhcGggaW4gbWlsbGlzZWNvbmRzXG4gICAgICogQHJldHVybiB7U3RyaW5nfSAgICAgICAgICAgICBUeXBlIG9mIHNldHRpbmdzIGZvciB0aGUgZ2l2ZW4gdGltZVNwYW5cbiAgICAgKi9cbiAgICB2YXIgZ2V0QXhpc1NldHRpbmdzRnJvbVRpbWVTcGFuID0gZnVuY3Rpb24gZ2V0QXhpc1NldHRpbmdzRnJvbVRpbWVTcGFuKHRpbWVTcGFuKSB7XG4gICAgICAgIHZhciBPTkVfWUVBUiA9IHRpbWVCZW5jaG1hcmtzLk9ORV9ZRUFSLFxuICAgICAgICAgICAgT05FX0RBWSA9IHRpbWVCZW5jaG1hcmtzLk9ORV9EQVk7XG5cbiAgICAgICAgdmFyIHNldHRpbmdzID0gdm9pZCAwO1xuXG4gICAgICAgIGlmICh0aW1lU3BhbiA8IE9ORV9EQVkpIHtcbiAgICAgICAgICAgIHNldHRpbmdzID0gYXhpc1RpbWVDb21iaW5hdGlvbnMuSE9VUl9EQVk7XG4gICAgICAgIH0gZWxzZSBpZiAodGltZVNwYW4gPCBPTkVfWUVBUikge1xuICAgICAgICAgICAgc2V0dGluZ3MgPSBheGlzVGltZUNvbWJpbmF0aW9ucy5EQVlfTU9OVEg7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZXR0aW5ncyA9IGF4aXNUaW1lQ29tYmluYXRpb25zLk1PTlRIX1lFQVI7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gc2V0dGluZ3M7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENhbGN1bGF0ZXMgdGhlIG1heGltdW0gbnVtYmVyIG9mIHRpY2tzIGZvciB0aGUgeCBheGlzXG4gICAgICogQHBhcmFtICB7TnVtYmVyfSB3aWR0aCBDaGFydCB3aWR0aFxuICAgICAqIEBwYXJhbSAge051bWJlcn0gZGF0YVBvaW50TnVtYmVyICBOdW1iZXIgb2YgZW50cmllcyBvbiB0aGUgZGF0YVxuICAgICAqIEByZXR1cm4ge051bWJlcn0gICAgICAgTnVtYmVyIG9mIHRpY2tzIHRvIHJlbmRlclxuICAgICAqL1xuICAgIHZhciBnZXRNYXhOdW1PZkhvcml6b250YWxUaWNrcyA9IGZ1bmN0aW9uIGdldE1heE51bU9mSG9yaXpvbnRhbFRpY2tzKHdpZHRoLCBkYXRhUG9pbnROdW1iZXIpIHtcbiAgICAgICAgdmFyIHRpY2tzRm9yV2lkdGggPSBNYXRoLmNlaWwod2lkdGggLyAoc2luZ2xlVGlja1dpZHRoICsgaG9yaXpvbnRhbFRpY2tTcGFjaW5nKSk7XG5cbiAgICAgICAgcmV0dXJuIGRhdGFQb2ludE51bWJlciA8IG1pbkVudHJ5TnVtRm9yRGF5Rm9ybWF0ID8gZDNUaW1lLnRpbWVEYXkgOiBNYXRoLm1pbihkYXRhUG9pbnROdW1iZXIsIHRpY2tzRm9yV2lkdGgpO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBUYWtlcyBhIGxvY2FsZSAoc3RyaW5nKSBhbmQgdGhlIGZvcm1hdCB0byByZXR1cm4gYW5kIHJldHVybnMgYSBmdW5jdGlvbiB0byBmb3JtYXQgZGF0ZXNcbiAgICAgKiBAcGFyYW0gIHtTdHJpbmd9IGxvY2FsZSAgICBsb2NhbGUgdGFnIGVnLiBlbi1VUywgZnItRlIsIHJ1LVJVXG4gICAgICogQHBhcmFtICB7c3RyaW5nfSB0aW1lVW5pdCAgbWludXRlLCBob3VyLCBkYXksIGRheU1vbnRoLCBtb250aCwgeWVhclxuICAgICAqIEByZXR1cm4ge2Z1bmN0aW9ufSAgICAgICAgIGZ1bmN0aW9uIHRoYXQgZm9ybWF0cyBkYXRlcyBpbiB0aGUgcHJvcGVyIGxvY2FsZVxuICAgICAqL1xuICAgIHZhciBnZXRMb2NhbGVEYXRlRm9ybWF0dGVyID0gZnVuY3Rpb24gZ2V0TG9jYWxlRGF0ZUZvcm1hdHRlcihsb2NhbGUpIHtcbiAgICAgICAgdmFyIHRpbWVVbml0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAnZGF5JztcblxuICAgICAgICB2YXIgb3B0aW9ucyA9IGxvY2FsZVRpbWVNYXBbdGltZVVuaXRdO1xuICAgICAgICB2YXIgZm9ybWF0dGVyID0gbmV3IEludGwuRGF0ZVRpbWVGb3JtYXQobG9jYWxlLCBvcHRpb25zKTtcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGRhdGUpIHtcbiAgICAgICAgICAgIHJldHVybiBmb3JtYXR0ZXIuZm9ybWF0KGRhdGUpO1xuICAgICAgICB9O1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRpY2sgb2JqZWN0IHRvIGJlIHVzZWQgd2hlbiBidWlsZGluZyB0aGUgeCBheGlzXG4gICAgICogQHBhcmFtIHtkYXRhQnlEYXRlfSBkYXRhQnlEYXRlICAgICAgIENoYXJ0IGRhdGEgb3JkZXJlZCBieSBEYXRlXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IHdpZHRoICAgICAgICAgICAgICAgIENoYXJ0IHdpZHRoXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHNldHRpbmdzICAgICAgICAgICAgIE9wdGlvbmFsIGZvcmNlZCBzZXR0aW5ncyBmb3IgYXhpc1xuICAgICAqIEByZXR1cm4ge29iamVjdH0gdGljayBzZXR0aW5ncyBmb3IgbWFqb3IgYW5kIG1pbnIgYXhpc1xuICAgICAqL1xuICAgIHZhciBnZXRYQXhpc1NldHRpbmdzID0gZnVuY3Rpb24gZ2V0WEF4aXNTZXR0aW5ncyhkYXRhQnlEYXRlLCB3aWR0aCkge1xuICAgICAgICB2YXIgc2V0dGluZ3MgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IG51bGw7XG4gICAgICAgIHZhciBsb2NhbGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IG51bGw7XG5cbiAgICAgICAgdmFyIGZpcnN0RGF0ZSA9IG5ldyBEYXRlKGRhdGFCeURhdGVbMF0uZGF0ZSk7XG4gICAgICAgIHZhciBsYXN0RGF0ZSA9IG5ldyBEYXRlKGRhdGFCeURhdGVbZGF0YUJ5RGF0ZS5sZW5ndGggLSAxXS5kYXRlKTtcbiAgICAgICAgdmFyIGRhdGVUaW1lU3BhbiA9IGxhc3REYXRlIC0gZmlyc3REYXRlO1xuXG4gICAgICAgIGlmIChsb2NhbGUgJiYgKHR5cGVvZiBJbnRsID09PSAndW5kZWZpbmVkJyB8fCAodHlwZW9mIEludGwgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKEludGwpKSA9PT0gJ29iamVjdCcgJiYgIUludGwuRGF0ZVRpbWVGb3JtYXQpKSB7XG4gICAgICAgICAgICBsb2NhbGUgPSBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFzZXR0aW5ncykge1xuICAgICAgICAgICAgc2V0dGluZ3MgPSBnZXRBeGlzU2V0dGluZ3NGcm9tVGltZVNwYW4oZGF0ZVRpbWVTcGFuKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBfc2V0dGluZ3Mkc3BsaXQgPSBzZXR0aW5ncy5zcGxpdCgnLScpLFxuICAgICAgICAgICAgX3NldHRpbmdzJHNwbGl0MiA9IF9zbGljZWRUb0FycmF5KF9zZXR0aW5ncyRzcGxpdCwgMiksXG4gICAgICAgICAgICBtaW5vciA9IF9zZXR0aW5ncyRzcGxpdDJbMF0sXG4gICAgICAgICAgICBtYWpvciA9IF9zZXR0aW5ncyRzcGxpdDJbMV07XG5cbiAgICAgICAgdmFyIG1ham9yVGlja1ZhbHVlID0gc2V0dGluZ3NUb01ham9yVGlja01hcFtzZXR0aW5nc107XG4gICAgICAgIHZhciBtaW5vclRpY2tWYWx1ZSA9IGdldE1heE51bU9mSG9yaXpvbnRhbFRpY2tzKHdpZHRoLCBkYXRhQnlEYXRlLmxlbmd0aCk7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG1pbm9yOiB7XG4gICAgICAgICAgICAgICAgZm9ybWF0OiBsb2NhbGUgPyBnZXRMb2NhbGVEYXRlRm9ybWF0dGVyKGxvY2FsZSwgbWlub3IpIDogZm9ybWF0TWFwW21pbm9yXSxcbiAgICAgICAgICAgICAgICB0aWNrOiBtaW5vclRpY2tWYWx1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1ham9yOiB7XG4gICAgICAgICAgICAgICAgZm9ybWF0OiBsb2NhbGUgPyBnZXRMb2NhbGVEYXRlRm9ybWF0dGVyKGxvY2FsZSwgbWFqb3IpIDogZm9ybWF0TWFwW21ham9yXSxcbiAgICAgICAgICAgICAgICB0aWNrOiBtYWpvclRpY2tWYWx1ZVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH07XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBnZXRYQXhpc1NldHRpbmdzOiBnZXRYQXhpc1NldHRpbmdzLFxuICAgICAgICBnZXRMb2NhbGVEYXRlRm9ybWF0dGVyOiBnZXRMb2NhbGVEYXRlRm9ybWF0dGVyXG4gICAgfTtcbn0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2NoYXJ0cy9oZWxwZXJzL3RpbWVBeGlzLmpzXG4vLyBtb2R1bGUgaWQgPSAzNVxuLy8gbW9kdWxlIGNodW5rcyA9IDEgNSA3Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n    'use strict';\n\n    var d3Format = __webpack_require__(9);\n\n    /**\n     * Calculates percentage of value from total\n     * @param  {Number}  value    Value to check\n     * @param  {Number}  total    Sum of values\n     * @param  {String}  decimals Specifies number of decimals https://github.com/d3/d3-format\n     * @return {String}           Percentage\n     */\n    function calculatePercent(value, total, decimals) {\n        return d3Format.format(decimals)(value / total * 100);\n    }\n\n    /**\n     * Checks if a number is an integer of has decimal values\n     * @param  {Number}  value Value to check\n     * @return {Boolean}       If it is an iteger\n     */\n    function isInteger(value) {\n        return value % 1 === 0;\n    }\n\n    return {\n        calculatePercent: calculatePercent,\n        isInteger: isInteger\n    };\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY2hhcnRzL2hlbHBlcnMvY29tbW9uLmpzPzkwODQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5kZWZpbmUoZnVuY3Rpb24gKHJlcXVpcmUpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgZDNGb3JtYXQgPSByZXF1aXJlKCdkMy1mb3JtYXQnKTtcblxuICAgIC8qKlxuICAgICAqIENhbGN1bGF0ZXMgcGVyY2VudGFnZSBvZiB2YWx1ZSBmcm9tIHRvdGFsXG4gICAgICogQHBhcmFtICB7TnVtYmVyfSAgdmFsdWUgICAgVmFsdWUgdG8gY2hlY2tcbiAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9ICB0b3RhbCAgICBTdW0gb2YgdmFsdWVzXG4gICAgICogQHBhcmFtICB7U3RyaW5nfSAgZGVjaW1hbHMgU3BlY2lmaWVzIG51bWJlciBvZiBkZWNpbWFscyBodHRwczovL2dpdGh1Yi5jb20vZDMvZDMtZm9ybWF0XG4gICAgICogQHJldHVybiB7U3RyaW5nfSAgICAgICAgICAgUGVyY2VudGFnZVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNhbGN1bGF0ZVBlcmNlbnQodmFsdWUsIHRvdGFsLCBkZWNpbWFscykge1xuICAgICAgICByZXR1cm4gZDNGb3JtYXQuZm9ybWF0KGRlY2ltYWxzKSh2YWx1ZSAvIHRvdGFsICogMTAwKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDaGVja3MgaWYgYSBudW1iZXIgaXMgYW4gaW50ZWdlciBvZiBoYXMgZGVjaW1hbCB2YWx1ZXNcbiAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9ICB2YWx1ZSBWYWx1ZSB0byBjaGVja1xuICAgICAqIEByZXR1cm4ge0Jvb2xlYW59ICAgICAgIElmIGl0IGlzIGFuIGl0ZWdlclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGlzSW50ZWdlcih2YWx1ZSkge1xuICAgICAgICByZXR1cm4gdmFsdWUgJSAxID09PSAwO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIGNhbGN1bGF0ZVBlcmNlbnQ6IGNhbGN1bGF0ZVBlcmNlbnQsXG4gICAgICAgIGlzSW50ZWdlcjogaXNJbnRlZ2VyXG4gICAgfTtcbn0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2NoYXJ0cy9oZWxwZXJzL2NvbW1vbi5qc1xuLy8gbW9kdWxlIGlkID0gMzlcbi8vIG1vZHVsZSBjaHVua3MgPSAyIDMgNSA3IDgiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n\n    var d3Selection = __webpack_require__(1),\n        colors = __webpack_require__(19),\n        selectClass = 'form-control';\n\n    /**\n     * Creates a color schema selector\n     * @param  {String}   selectContainerSelector   CSS DOM selector for the select box root\n     * @param  {String}   chartSelector             CSS DOM selector of the chart to render\n     * @param  {Function} callback                  Optional callback to execute after color change\n     * @return {void}\n     */\n    function createColorSelector(selectContainerSelector, chartSelector, callback) {\n        var colorKeys = Object.keys(colors.colorSchemas),\n            containerSelector = document.querySelector(selectContainerSelector);\n\n        if (!containerSelector) {\n            return;\n        }\n\n        // Create Select\n        var sel = document.createElement('select');\n\n        sel.className += ' ' + selectClass;\n\n        // And fill with options\n        colorKeys.forEach(function (key) {\n            var opt = document.createElement('option');\n\n            opt.value = key;\n            opt.text = colors.colorSchemasHuman[key];\n            sel.add(opt);\n        });\n\n        // Add it to the DOM\n        containerSelector.append(sel);\n\n        // Listen for changes\n        d3Selection.select(sel).on('change', function () {\n            // Get new color schema\n            var newSchema = colors.colorSchemas[this.value];\n\n            d3Selection.select(chartSelector).remove();\n\n            // Draw\n            if (callback) {\n                callback(newSchema);\n            }\n        });\n    }\n\n    return {\n        createColorSelector: createColorSelector\n    };\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZW1vcy9oZWxwZXJzL2NvbG9yU2VsZWN0b3IuanM/M2ZiNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmRlZmluZShmdW5jdGlvbiAocmVxdWlyZSkge1xuXG4gICAgdmFyIGQzU2VsZWN0aW9uID0gcmVxdWlyZSgnZDMtc2VsZWN0aW9uJyksXG4gICAgICAgIGNvbG9ycyA9IHJlcXVpcmUoJy4vLi4vLi4vc3JjL2NoYXJ0cy9oZWxwZXJzL2NvbG9ycycpLFxuICAgICAgICBzZWxlY3RDbGFzcyA9ICdmb3JtLWNvbnRyb2wnO1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIGNvbG9yIHNjaGVtYSBzZWxlY3RvclxuICAgICAqIEBwYXJhbSAge1N0cmluZ30gICBzZWxlY3RDb250YWluZXJTZWxlY3RvciAgIENTUyBET00gc2VsZWN0b3IgZm9yIHRoZSBzZWxlY3QgYm94IHJvb3RcbiAgICAgKiBAcGFyYW0gIHtTdHJpbmd9ICAgY2hhcnRTZWxlY3RvciAgICAgICAgICAgICBDU1MgRE9NIHNlbGVjdG9yIG9mIHRoZSBjaGFydCB0byByZW5kZXJcbiAgICAgKiBAcGFyYW0gIHtGdW5jdGlvbn0gY2FsbGJhY2sgICAgICAgICAgICAgICAgICBPcHRpb25hbCBjYWxsYmFjayB0byBleGVjdXRlIGFmdGVyIGNvbG9yIGNoYW5nZVxuICAgICAqIEByZXR1cm4ge3ZvaWR9XG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlQ29sb3JTZWxlY3RvcihzZWxlY3RDb250YWluZXJTZWxlY3RvciwgY2hhcnRTZWxlY3RvciwgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIGNvbG9yS2V5cyA9IE9iamVjdC5rZXlzKGNvbG9ycy5jb2xvclNjaGVtYXMpLFxuICAgICAgICAgICAgY29udGFpbmVyU2VsZWN0b3IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdENvbnRhaW5lclNlbGVjdG9yKTtcblxuICAgICAgICBpZiAoIWNvbnRhaW5lclNlbGVjdG9yKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDcmVhdGUgU2VsZWN0XG4gICAgICAgIHZhciBzZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzZWxlY3QnKTtcblxuICAgICAgICBzZWwuY2xhc3NOYW1lICs9ICcgJyArIHNlbGVjdENsYXNzO1xuXG4gICAgICAgIC8vIEFuZCBmaWxsIHdpdGggb3B0aW9uc1xuICAgICAgICBjb2xvcktleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgICB2YXIgb3B0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG5cbiAgICAgICAgICAgIG9wdC52YWx1ZSA9IGtleTtcbiAgICAgICAgICAgIG9wdC50ZXh0ID0gY29sb3JzLmNvbG9yU2NoZW1hc0h1bWFuW2tleV07XG4gICAgICAgICAgICBzZWwuYWRkKG9wdCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIEFkZCBpdCB0byB0aGUgRE9NXG4gICAgICAgIGNvbnRhaW5lclNlbGVjdG9yLmFwcGVuZChzZWwpO1xuXG4gICAgICAgIC8vIExpc3RlbiBmb3IgY2hhbmdlc1xuICAgICAgICBkM1NlbGVjdGlvbi5zZWxlY3Qoc2VsKS5vbignY2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgLy8gR2V0IG5ldyBjb2xvciBzY2hlbWFcbiAgICAgICAgICAgIHZhciBuZXdTY2hlbWEgPSBjb2xvcnMuY29sb3JTY2hlbWFzW3RoaXMudmFsdWVdO1xuXG4gICAgICAgICAgICBkM1NlbGVjdGlvbi5zZWxlY3QoY2hhcnRTZWxlY3RvcikucmVtb3ZlKCk7XG5cbiAgICAgICAgICAgIC8vIERyYXdcbiAgICAgICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKG5ld1NjaGVtYSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIGNyZWF0ZUNvbG9yU2VsZWN0b3I6IGNyZWF0ZUNvbG9yU2VsZWN0b3JcbiAgICB9O1xufSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9kZW1vcy9oZWxwZXJzL2NvbG9yU2VsZWN0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDQ1XG4vLyBtb2R1bGUgY2h1bmtzID0gMiAzIDUgNyA4Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 46 */,
/* 47 */,
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n    'use strict';\n\n    var d3Ease = __webpack_require__(5);\n    var d3Format = __webpack_require__(9);\n    var d3Selection = __webpack_require__(1);\n    var d3Transition = __webpack_require__(15);\n    var d3TimeFormat = __webpack_require__(14);\n\n    var _require = __webpack_require__(20),\n        axisTimeCombinations = _require.axisTimeCombinations;\n\n    var _require2 = __webpack_require__(49),\n        formatIntegerValue = _require2.formatIntegerValue,\n        formatDecimalValue = _require2.formatDecimalValue;\n\n    var _require3 = __webpack_require__(39),\n        isInteger = _require3.isInteger;\n\n    /**\n     * Tooltip Component reusable API class that renders a\n     * simple and configurable tooltip element for Britechart's\n     * line chart or stacked area chart.\n     *\n     * @module Tooltip\n     * @tutorial tooltip\n     * @requires d3-array, d3-axis, d3-dispatch, d3-format, d3-scale, d3-selection, d3-transition\n     *\n     * @example\n     * var lineChart = line(),\n     *     tooltip = tooltip();\n     *\n     * tooltip\n     *     .title('Tooltip title');\n     *\n     * lineChart\n     *     .width(500)\n     *     .on('customMouseOver', function() {\n     *          tooltip.show();\n     *     })\n     *     .on('customMouseMove', function(dataPoint, topicColorMap, dataPointXPosition) {\n     *          tooltip.update(dataPoint, topicColorMap, dataPointXPosition);\n     *     })\n     *     .on('customMouseOut', function() {\n     *          tooltip.hide();\n     *     });\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(lineChart);\n     *\n     * d3Selection.select('.metadata-group .hover-marker')\n     *     .datum([])\n     *     .call(tooltip);\n     *\n     */\n\n\n    return function module() {\n\n        var margin = {\n            top: 2,\n            right: 2,\n            bottom: 2,\n            left: 2\n        },\n            width = 250,\n            height = 45,\n            title = 'Tooltip title',\n            shouldShowDateInTitle = true,\n            valueFormat = null,\n\n\n        // tooltip\n        tooltip = void 0,\n            tooltipOffset = {\n            y: -55,\n            x: 0\n        },\n            tooltipMaxTopicLength = 170,\n            tooltipTextContainer = void 0,\n            tooltipDivider = void 0,\n            tooltipBody = void 0,\n            tooltipTitle = void 0,\n            tooltipWidth = 250,\n            tooltipHeight = 48,\n            tooltipBorderRadius = 3,\n            ttTextX = 0,\n            ttTextY = 37,\n            textSize = void 0,\n            entryLineLimit = 3,\n\n\n        // Animations\n        mouseChaseDuration = 100,\n            ease = d3Ease.easeQuadInOut,\n            circleYOffset = 8,\n            colorMap = void 0,\n            bodyFillColor = '#FFFFFF',\n            borderStrokeColor = '#D2D6DF',\n            titleFillColor = '#6D717A',\n            textFillColor = '#282C35',\n            tooltipTextColor = '#000000',\n            dateLabel = 'date',\n            valueLabel = 'value',\n            nameLabel = 'name',\n            topicLabel = 'topics',\n            defaultAxisSettings = axisTimeCombinations.DAY_MONTH,\n            dateFormat = null,\n            topicsOrder = [],\n\n\n        // formats\n        monthDayYearFormat = d3TimeFormat.timeFormat('%b %d, %Y'),\n            monthDayHourFormat = d3TimeFormat.timeFormat('%b %d, %I %p'),\n            locale = void 0,\n            chartWidth = void 0,\n            chartHeight = void 0,\n            data = void 0,\n            svg = void 0;\n\n        /**\n         * This function creates the graph using the selection as container\n         * @param {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {Object} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function (_data) {\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n                data = _data;\n\n                buildSVG(this);\n            });\n        }\n\n        /**\n         * Builds containers for the tooltip\n         * Also applies the Margin convention\n         * @private\n         */\n        function buildContainerGroups() {\n            var container = svg.append('g').classed('tooltip-container-group', true).attr('transform', 'translate( ' + margin.left + ', ' + margin.top + ')');\n\n            container.append('g').classed('tooltip-group', true);\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container).append('g').classed('britechart britechart-tooltip', true);\n\n                buildContainerGroups();\n                drawTooltip();\n            }\n            svg.transition().attr('width', width).attr('height', height);\n\n            // Hidden by default\n            exports.hide();\n        }\n\n        /**\n         * Resets the tooltipBody content\n         * @return void\n         */\n        function cleanContent() {\n            tooltipBody.selectAll('text').remove();\n            tooltipBody.selectAll('circle').remove();\n        }\n\n        /**\n         * Draws the different elements of the Tooltip box\n         * @return void\n         */\n        function drawTooltip() {\n            tooltipTextContainer = svg.selectAll('.tooltip-group').append('g').classed('tooltip-text', true);\n\n            tooltip = tooltipTextContainer.append('rect').classed('tooltip-text-container', true).attr('x', -tooltipWidth / 4 + 8).attr('y', 0).attr('width', tooltipWidth).attr('height', tooltipHeight).attr('rx', tooltipBorderRadius).attr('ry', tooltipBorderRadius).style('fill', bodyFillColor).style('stroke', borderStrokeColor).style('stroke-width', 1);\n\n            tooltipTitle = tooltipTextContainer.append('text').classed('tooltip-title', true).attr('x', -tooltipWidth / 4 + 17).attr('dy', '.35em').attr('y', 16).style('fill', titleFillColor);\n\n            tooltipDivider = tooltipTextContainer.append('line').classed('tooltip-divider', true).attr('x1', -tooltipWidth / 4 + 15).attr('x2', 265).attr('y1', 31).attr('y2', 31).style('stroke', borderStrokeColor);\n\n            tooltipBody = tooltipTextContainer.append('g').classed('tooltip-body', true).style('transform', 'translateY(8px)').style('fill', textFillColor);\n        }\n\n        /**\n         * Formats the value depending on its characteristics\n         * @param  {Number} value Value to format\n         * @return {Number}       Formatted value\n         */\n        function getFormattedValue(value) {\n            var valueFormatter = formatDecimalValue;\n\n            if (!value) {\n                return 0;\n            }\n            if (valueFormat) {\n                valueFormatter = d3Format.format(valueFormat);\n            } else if (isInteger(value)) {\n                valueFormatter = formatIntegerValue;\n            }\n\n            return valueFormatter(value);\n        }\n\n        /**\n         * Calculates the desired position for the tooltip\n         * @param  {Number} mouseX             Current horizontal mouse position\n         * @param  {Number} mouseY             Current vertical mouse position\n         * @return {Number[]}                  X and Y position\n         */\n        function getTooltipPosition(_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n                mouseX = _ref2[0],\n                mouseY = _ref2[1];\n\n            var tooltipX = void 0,\n                tooltipY = void 0;\n\n            // show tooltip to the right\n            if (mouseX - tooltipWidth < 0) {\n                // Tooltip on the right\n                tooltipX = tooltipWidth - 185;\n            } else {\n                // Tooltip on the left\n                tooltipX = -205;\n            }\n\n            if (mouseY) {\n                tooltipY = tooltipOffset.y;\n                // tooltipY = mouseY + tooltipOffset.y;\n            } else {\n                tooltipY = tooltipOffset.y;\n            }\n\n            return [tooltipX, tooltipY];\n        }\n\n        /**\n         * Extracts the value from the data object\n         * @param  {Object} data Data value containing the info\n         * @return {String}      Value to show\n         */\n        function getValueText(data) {\n            var value = data[valueLabel];\n            var valueText = void 0;\n\n            if (data.missingValue) {\n                valueText = '-';\n            } else {\n                valueText = getFormattedValue(value).toString();\n            }\n\n            return valueText;\n        }\n\n        /**\n         * Resets the height of the tooltip and the pointer for the text\n         * position\n         */\n        function resetSizeAndPositionPointers() {\n            tooltipHeight = 48;\n            ttTextY = 37;\n            ttTextX = 0;\n        }\n\n        /**\n         * Draws the data entries inside the tooltip for a given topic\n         * @param  {Object} topic Topic to extract data from\n         * @return void\n         */\n        function updateTopicContent(topic) {\n            var name = topic[nameLabel],\n                tooltipRight = void 0,\n                tooltipLeftText = void 0,\n                tooltipRightText = void 0,\n                elementText = void 0;\n\n            tooltipLeftText = topic.topicName || name;\n            tooltipRightText = getValueText(topic);\n\n            elementText = tooltipBody.append('text').classed('tooltip-left-text', true).attr('dy', '1em').attr('x', ttTextX - 20).attr('y', ttTextY).style('fill', tooltipTextColor).text(tooltipLeftText).call(textWrap, tooltipMaxTopicLength, -25);\n\n            tooltipRight = tooltipBody.append('text').classed('tooltip-right-text', true).attr('dy', '1em').attr('x', ttTextX + 8).attr('y', ttTextY).style('fill', tooltipTextColor).text(tooltipRightText);\n\n            textSize = elementText.node().getBBox();\n            tooltipHeight += textSize.height + 5;\n\n            // Not sure if necessary\n            tooltipRight.attr('x', tooltipWidth - tooltipRight.node().getBBox().width - 10 - tooltipWidth / 4);\n\n            tooltipBody.append('circle').classed('tooltip-circle', true).attr('cx', 23 - tooltipWidth / 4).attr('cy', ttTextY + circleYOffset).attr('r', 5).style('fill', colorMap[name]).style('stroke-width', 1);\n\n            ttTextY += textSize.height + 7;\n        }\n\n        /**\n         * Updates size and position of tooltip depending on the side of the chart we are in\n         * TODO: This needs a refactor, following the mini-tooltip code.\n         *\n         * @param  {Object} dataPoint DataPoint of the tooltip\n         * @param  {Number} xPosition DataPoint's x position in the chart\n         * @param  {Number} xPosition DataPoint's y position in the chart\n         * @return void\n         */\n        function updatePositionAndSize(dataPoint, xPosition, yPosition) {\n            var _getTooltipPosition = getTooltipPosition([xPosition, yPosition]),\n                _getTooltipPosition2 = _slicedToArray(_getTooltipPosition, 2),\n                tooltipX = _getTooltipPosition2[0],\n                tooltipY = _getTooltipPosition2[1];\n\n            tooltip.attr('width', tooltipWidth).attr('height', tooltipHeight + 10);\n\n            tooltipTextContainer.transition().duration(mouseChaseDuration).ease(ease).attr('transform', 'translate(' + tooltipX + ', ' + tooltipY + ')');\n\n            tooltipDivider.attr('x2', tooltipWidth - 60);\n        }\n\n        /**\n         * Updates value of tooltipTitle with the data meaning and the date\n         * @param  {Object} dataPoint Point of data to use as source\n         * @return void\n         */\n        function updateTitle(dataPoint) {\n            var tTitle = title;\n\n            if (shouldShowDateInTitle) {\n                tTitle = tTitle + ' - ' + formatDate(new Date(dataPoint[dateLabel]));\n            }\n\n            tooltipTitle.text(tTitle);\n        }\n\n        /**\n         * Figures out which date format to use when showing the date of the current data entry\n         * @return {Function} The proper date formatting function\n         */\n        function formatDate(date) {\n            var settings = dateFormat || defaultAxisSettings;\n            var format = null;\n            var localeOptions = { month: 'short', day: 'numeric' };\n\n            if (settings === axisTimeCombinations.DAY_MONTH || settings === axisTimeCombinations.MONTH_YEAR) {\n                format = monthDayYearFormat;\n                localeOptions.year = 'numeric';\n            } else if (settings === axisTimeCombinations.HOUR_DAY || settings === axisTimeCombinations.MINUTE_HOUR) {\n                format = monthDayHourFormat;\n                localeOptions.hour = 'numeric';\n            }\n\n            if (locale && typeof Intl !== 'undefined' && (typeof Intl === 'undefined' ? 'undefined' : _typeof(Intl)) === 'object' && Intl.DateTimeFormat) {\n                var f = Intl.DateTimeFormat(locale, localeOptions);\n\n                return f.format(date);\n            }\n\n            return format(date);\n        }\n\n        /**\n         * Helper method to sort the passed topics array by the names passed int he order arary\n         * @param  {Object[]} topics    Topics data, retrieved from datapoint passed by line chart\n         * @param  {Object[]} order     Array of names in the order to sort topics by\n         * @return {Object[]}           sorted topics object\n         */\n        function _sortByTopicsOrder(topics) {\n            var order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : topicsOrder;\n\n            return order.map(function (orderName) {\n                return topics.filter(function (_ref3) {\n                    var name = _ref3.name;\n                    return name === orderName;\n                })[0];\n            });\n        }\n\n        /**\n         * Sorts topic by alphabetical order for arrays of objects with a name proeprty\n         * @param  {Array} topics   List of topic objects\n         * @return {Array}          List of topic name strings\n         */\n        function _sortByAlpha(topics) {\n            return topics.map(function (d) {\n                return d;\n            }).sort(function (a, b) {\n                if (a.name > b.name) return 1;\n                if (a.name === b.name) return 0;\n                return -1;\n            });\n\n            var otherIndex = topics.map(function (_ref4) {\n                var name = _ref4.name;\n                return name;\n            }).indexOf('Other');\n\n            if (otherIndex >= 0) {\n                var other = topics.splice(otherIndex, 1);\n\n                topics = topics.concat(other);\n            }\n        }\n\n        /**\n         * Wraps a text given the text, width, x position and textFormatter function\n         * @param  {D3Selection} text  Selection with the text to wrap inside\n         * @param  {Number} width Desired max width for that line\n         * @param  {Number} xpos  Initial x position of the text\n         *\n         * REF: http://bl.ocks.org/mbostock/7555321\n         * More discussions on https://github.com/mbostock/d3/issues/1642\n         */\n        function textWrap(text, width, xpos) {\n            xpos = xpos || 0;\n\n            text.each(function () {\n                var words, word, line, lineNumber, lineHeight, y, dy, tspan;\n\n                text = d3Selection.select(this);\n\n                words = text.text().split(/\\s+/).reverse();\n                line = [];\n                lineNumber = 0;\n                lineHeight = 1.2;\n                y = text.attr('y');\n                dy = parseFloat(text.attr('dy'));\n                tspan = text.text(null).append('tspan').attr('x', xpos).attr('y', y).attr('dy', dy + 'em');\n\n                while (word = words.pop()) {\n                    line.push(word);\n                    tspan.text(line.join(' '));\n\n                    if (tspan.node().getComputedTextLength() > width) {\n                        line.pop();\n                        tspan.text(line.join(' '));\n\n                        if (lineNumber < entryLineLimit - 1) {\n                            line = [word];\n                            tspan = text.append('tspan').attr('x', xpos).attr('y', y).attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word);\n                        }\n                    }\n                }\n            });\n        }\n\n        /**\n         * Draws the data entries inside the tooltip\n         * @param  {Object} dataPoint   Data entry from to take the info\n         * @return void\n         */\n        function updateContent(dataPoint) {\n            var topics = dataPoint[topicLabel];\n\n            // sort order by topicsOrder array if passed\n            if (topicsOrder.length) {\n                topics = _sortByTopicsOrder(topics);\n            } else if (topics.length && topics[0].name) {\n                topics = _sortByAlpha(topics);\n            }\n\n            cleanContent();\n            updateTitle(dataPoint);\n            resetSizeAndPositionPointers();\n            topics.forEach(updateTopicContent);\n        }\n\n        /**\n         * Updates tooltip title, content, size and position\n         * sorts by alphatical name order if not forced order given\n         *\n         * @param  {lineChartPointByDate} dataPoint  Current datapoint to show info about\n         * @param  {Number} xPosition           Position of the mouse on the X axis\n         * @return void\n         */\n        function updateTooltip(dataPoint, xPosition, yPosition) {\n            updateContent(dataPoint);\n            updatePositionAndSize(dataPoint, xPosition, yPosition);\n        }\n\n        // API\n\n        /**\n         * constants to be used to force the x axis to respect a certain granularity\n         * current options: HOUR_DAY, DAY_MONTH, MONTH_YEAR\n         * @example tooltip.dateFormat(tooltip.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.axisTimeCombinations = axisTimeCombinations;\n\n        /**\n         * Gets or Sets the dateLabel of the data\n         * @param  {Number} _x Desired dateLabel\n         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n         * @public\n         */\n        exports.dateLabel = function (_x) {\n            if (!arguments.length) {\n                return dateLabel;\n            }\n            dateLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the tooltip to use a certain date format\n         * @param  {String} _x Desired format\n         * @return { (String|Module) }    Current format or module to chain calls\n         */\n        exports.dateFormat = function (_x) {\n            if (!arguments.length) {\n                return dateFormat || defaultAxisSettings;\n            }\n            dateFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Hides the tooltip\n         * @return {Module} Tooltip module to chain calls\n         * @public\n         */\n        exports.hide = function () {\n            svg.style('display', 'none');\n\n            return this;\n        };\n\n        /**\n         * Pass locale for the tooltip to render the date in\n         * @param  {String} _x  must be a locale tag like 'en-US' or 'fr-FR'\n         * @return { (String|Module) }    Current locale or module to chain calls\n         */\n        exports.locale = function (_x) {\n            if (!arguments.length) {\n                return locale;\n            }\n            locale = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the nameLabel of the data\n         * @param  {Number} _x Desired nameLabel\n         * @return { nameLabel | module} Current nameLabel or Chart module to chain calls\n         * @public\n         */\n        exports.nameLabel = function (_x) {\n            if (!arguments.length) {\n                return nameLabel;\n            }\n            nameLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Shows the tooltip\n         * @return {Module} Tooltip module to chain calls\n         * @public\n         */\n        exports.show = function () {\n            svg.style('display', 'block');\n\n            return this;\n        };\n\n        /**\n         * Pass an override for the ordering of your tooltip\n         * @param  {Object[]} _x    Array of the names of your tooltip items\n         * @return { overrideOrder | module} Current overrideOrder or Chart module to chain calls\n         * @public\n         */\n        exports.topicsOrder = function (_x) {\n            if (!arguments.length) {\n                return topicsOrder;\n            }\n            topicsOrder = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the title of the tooltip\n         * @param  {string} _x Desired title\n         * @return { string | module} Current title or module to chain calls\n         * @public\n         */\n        exports.title = function (_x) {\n            if (!arguments.length) {\n                return title;\n            }\n            title = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the topicLabel of the data\n         * @param  {Number} _x Desired topicLabel\n         * @return { topicLabel | module} Current topicLabel or Chart module to chain calls\n         * @public\n         */\n        exports.topicLabel = function (_x) {\n            if (!arguments.length) {\n                return topicLabel;\n            }\n            topicLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Updates the position and content of the tooltip\n         * @param  {Object} dataPoint    Datapoint to represent\n         * @param  {Object} colorMapping Color scheme of the topics\n         * @param  {Number} position     X-scale position in pixels\n         * @return {Module} Tooltip module to chain calls\n         * @public\n         */\n        exports.update = function (dataPoint, colorMapping, xPosition) {\n            var yPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            colorMap = colorMapping;\n            updateTooltip(dataPoint, xPosition, yPosition);\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueFormat of the tooltip\n         * @param  {String} _x Desired valueFormat\n         * @return { String | module} Current valueFormat or module to chain calls\n         * @public\n         */\n        exports.valueFormat = function (_x) {\n            if (!arguments.length) {\n                return valueFormat;\n            }\n            valueFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabel of the data\n         * @param  {Number} _x Desired valueLabel\n         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabel = function (_x) {\n            if (!arguments.length) {\n                return valueLabel;\n            }\n            valueLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets shouldShowDateInTitle\n         * @param  {Boolean} _x Desired value\n         * @return { shouldShowDateInTitle | module} Current shouldShowDateInTitle or Chart module to chain calls\n         * @public\n         */\n        exports.shouldShowDateInTitle = function (_x) {\n            if (!arguments.length) {\n                return shouldShowDateInTitle;\n            }\n            shouldShowDateInTitle = _x;\n\n            return this;\n        };\n        return exports;\n    };\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY2hhcnRzL3Rvb2x0aXAuanM/YzRkNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxudmFyIF9zbGljZWRUb0FycmF5ID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBzbGljZUl0ZXJhdG9yKGFyciwgaSkgeyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSkgX2lbXCJyZXR1cm5cIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9IHJldHVybiBmdW5jdGlvbiAoYXJyLCBpKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgcmV0dXJuIGFycjsgfSBlbHNlIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpIHsgcmV0dXJuIHNsaWNlSXRlcmF0b3IoYXJyLCBpKTsgfSBlbHNlIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2VcIik7IH0gfTsgfSgpO1xuXG5kZWZpbmUoZnVuY3Rpb24gKHJlcXVpcmUpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgZDNFYXNlID0gcmVxdWlyZSgnZDMtZWFzZScpO1xuICAgIHZhciBkM0Zvcm1hdCA9IHJlcXVpcmUoJ2QzLWZvcm1hdCcpO1xuICAgIHZhciBkM1NlbGVjdGlvbiA9IHJlcXVpcmUoJ2QzLXNlbGVjdGlvbicpO1xuICAgIHZhciBkM1RyYW5zaXRpb24gPSByZXF1aXJlKCdkMy10cmFuc2l0aW9uJyk7XG4gICAgdmFyIGQzVGltZUZvcm1hdCA9IHJlcXVpcmUoJ2QzLXRpbWUtZm9ybWF0Jyk7XG5cbiAgICB2YXIgX3JlcXVpcmUgPSByZXF1aXJlKCcuL2hlbHBlcnMvY29uc3RhbnRzJyksXG4gICAgICAgIGF4aXNUaW1lQ29tYmluYXRpb25zID0gX3JlcXVpcmUuYXhpc1RpbWVDb21iaW5hdGlvbnM7XG5cbiAgICB2YXIgX3JlcXVpcmUyID0gcmVxdWlyZSgnLi9oZWxwZXJzL2Zvcm1hdEhlbHBlcnMnKSxcbiAgICAgICAgZm9ybWF0SW50ZWdlclZhbHVlID0gX3JlcXVpcmUyLmZvcm1hdEludGVnZXJWYWx1ZSxcbiAgICAgICAgZm9ybWF0RGVjaW1hbFZhbHVlID0gX3JlcXVpcmUyLmZvcm1hdERlY2ltYWxWYWx1ZTtcblxuICAgIHZhciBfcmVxdWlyZTMgPSByZXF1aXJlKCcuL2hlbHBlcnMvY29tbW9uJyksXG4gICAgICAgIGlzSW50ZWdlciA9IF9yZXF1aXJlMy5pc0ludGVnZXI7XG5cbiAgICAvKipcbiAgICAgKiBUb29sdGlwIENvbXBvbmVudCByZXVzYWJsZSBBUEkgY2xhc3MgdGhhdCByZW5kZXJzIGFcbiAgICAgKiBzaW1wbGUgYW5kIGNvbmZpZ3VyYWJsZSB0b29sdGlwIGVsZW1lbnQgZm9yIEJyaXRlY2hhcnQnc1xuICAgICAqIGxpbmUgY2hhcnQgb3Igc3RhY2tlZCBhcmVhIGNoYXJ0LlxuICAgICAqXG4gICAgICogQG1vZHVsZSBUb29sdGlwXG4gICAgICogQHR1dG9yaWFsIHRvb2x0aXBcbiAgICAgKiBAcmVxdWlyZXMgZDMtYXJyYXksIGQzLWF4aXMsIGQzLWRpc3BhdGNoLCBkMy1mb3JtYXQsIGQzLXNjYWxlLCBkMy1zZWxlY3Rpb24sIGQzLXRyYW5zaXRpb25cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogdmFyIGxpbmVDaGFydCA9IGxpbmUoKSxcbiAgICAgKiAgICAgdG9vbHRpcCA9IHRvb2x0aXAoKTtcbiAgICAgKlxuICAgICAqIHRvb2x0aXBcbiAgICAgKiAgICAgLnRpdGxlKCdUb29sdGlwIHRpdGxlJyk7XG4gICAgICpcbiAgICAgKiBsaW5lQ2hhcnRcbiAgICAgKiAgICAgLndpZHRoKDUwMClcbiAgICAgKiAgICAgLm9uKCdjdXN0b21Nb3VzZU92ZXInLCBmdW5jdGlvbigpIHtcbiAgICAgKiAgICAgICAgICB0b29sdGlwLnNob3coKTtcbiAgICAgKiAgICAgfSlcbiAgICAgKiAgICAgLm9uKCdjdXN0b21Nb3VzZU1vdmUnLCBmdW5jdGlvbihkYXRhUG9pbnQsIHRvcGljQ29sb3JNYXAsIGRhdGFQb2ludFhQb3NpdGlvbikge1xuICAgICAqICAgICAgICAgIHRvb2x0aXAudXBkYXRlKGRhdGFQb2ludCwgdG9waWNDb2xvck1hcCwgZGF0YVBvaW50WFBvc2l0aW9uKTtcbiAgICAgKiAgICAgfSlcbiAgICAgKiAgICAgLm9uKCdjdXN0b21Nb3VzZU91dCcsIGZ1bmN0aW9uKCkge1xuICAgICAqICAgICAgICAgIHRvb2x0aXAuaGlkZSgpO1xuICAgICAqICAgICB9KTtcbiAgICAgKlxuICAgICAqIGQzU2VsZWN0aW9uLnNlbGVjdCgnLmNzcy1zZWxlY3RvcicpXG4gICAgICogICAgIC5kYXR1bShkYXRhc2V0KVxuICAgICAqICAgICAuY2FsbChsaW5lQ2hhcnQpO1xuICAgICAqXG4gICAgICogZDNTZWxlY3Rpb24uc2VsZWN0KCcubWV0YWRhdGEtZ3JvdXAgLmhvdmVyLW1hcmtlcicpXG4gICAgICogICAgIC5kYXR1bShbXSlcbiAgICAgKiAgICAgLmNhbGwodG9vbHRpcCk7XG4gICAgICpcbiAgICAgKi9cblxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIG1vZHVsZSgpIHtcblxuICAgICAgICB2YXIgbWFyZ2luID0ge1xuICAgICAgICAgICAgdG9wOiAyLFxuICAgICAgICAgICAgcmlnaHQ6IDIsXG4gICAgICAgICAgICBib3R0b206IDIsXG4gICAgICAgICAgICBsZWZ0OiAyXG4gICAgICAgIH0sXG4gICAgICAgICAgICB3aWR0aCA9IDI1MCxcbiAgICAgICAgICAgIGhlaWdodCA9IDQ1LFxuICAgICAgICAgICAgdGl0bGUgPSAnVG9vbHRpcCB0aXRsZScsXG4gICAgICAgICAgICBzaG91bGRTaG93RGF0ZUluVGl0bGUgPSB0cnVlLFxuICAgICAgICAgICAgdmFsdWVGb3JtYXQgPSBudWxsLFxuXG5cbiAgICAgICAgLy8gdG9vbHRpcFxuICAgICAgICB0b29sdGlwID0gdm9pZCAwLFxuICAgICAgICAgICAgdG9vbHRpcE9mZnNldCA9IHtcbiAgICAgICAgICAgIHk6IC01NSxcbiAgICAgICAgICAgIHg6IDBcbiAgICAgICAgfSxcbiAgICAgICAgICAgIHRvb2x0aXBNYXhUb3BpY0xlbmd0aCA9IDE3MCxcbiAgICAgICAgICAgIHRvb2x0aXBUZXh0Q29udGFpbmVyID0gdm9pZCAwLFxuICAgICAgICAgICAgdG9vbHRpcERpdmlkZXIgPSB2b2lkIDAsXG4gICAgICAgICAgICB0b29sdGlwQm9keSA9IHZvaWQgMCxcbiAgICAgICAgICAgIHRvb2x0aXBUaXRsZSA9IHZvaWQgMCxcbiAgICAgICAgICAgIHRvb2x0aXBXaWR0aCA9IDI1MCxcbiAgICAgICAgICAgIHRvb2x0aXBIZWlnaHQgPSA0OCxcbiAgICAgICAgICAgIHRvb2x0aXBCb3JkZXJSYWRpdXMgPSAzLFxuICAgICAgICAgICAgdHRUZXh0WCA9IDAsXG4gICAgICAgICAgICB0dFRleHRZID0gMzcsXG4gICAgICAgICAgICB0ZXh0U2l6ZSA9IHZvaWQgMCxcbiAgICAgICAgICAgIGVudHJ5TGluZUxpbWl0ID0gMyxcblxuXG4gICAgICAgIC8vIEFuaW1hdGlvbnNcbiAgICAgICAgbW91c2VDaGFzZUR1cmF0aW9uID0gMTAwLFxuICAgICAgICAgICAgZWFzZSA9IGQzRWFzZS5lYXNlUXVhZEluT3V0LFxuICAgICAgICAgICAgY2lyY2xlWU9mZnNldCA9IDgsXG4gICAgICAgICAgICBjb2xvck1hcCA9IHZvaWQgMCxcbiAgICAgICAgICAgIGJvZHlGaWxsQ29sb3IgPSAnI0ZGRkZGRicsXG4gICAgICAgICAgICBib3JkZXJTdHJva2VDb2xvciA9ICcjRDJENkRGJyxcbiAgICAgICAgICAgIHRpdGxlRmlsbENvbG9yID0gJyM2RDcxN0EnLFxuICAgICAgICAgICAgdGV4dEZpbGxDb2xvciA9ICcjMjgyQzM1JyxcbiAgICAgICAgICAgIHRvb2x0aXBUZXh0Q29sb3IgPSAnIzAwMDAwMCcsXG4gICAgICAgICAgICBkYXRlTGFiZWwgPSAnZGF0ZScsXG4gICAgICAgICAgICB2YWx1ZUxhYmVsID0gJ3ZhbHVlJyxcbiAgICAgICAgICAgIG5hbWVMYWJlbCA9ICduYW1lJyxcbiAgICAgICAgICAgIHRvcGljTGFiZWwgPSAndG9waWNzJyxcbiAgICAgICAgICAgIGRlZmF1bHRBeGlzU2V0dGluZ3MgPSBheGlzVGltZUNvbWJpbmF0aW9ucy5EQVlfTU9OVEgsXG4gICAgICAgICAgICBkYXRlRm9ybWF0ID0gbnVsbCxcbiAgICAgICAgICAgIHRvcGljc09yZGVyID0gW10sXG5cblxuICAgICAgICAvLyBmb3JtYXRzXG4gICAgICAgIG1vbnRoRGF5WWVhckZvcm1hdCA9IGQzVGltZUZvcm1hdC50aW1lRm9ybWF0KCclYiAlZCwgJVknKSxcbiAgICAgICAgICAgIG1vbnRoRGF5SG91ckZvcm1hdCA9IGQzVGltZUZvcm1hdC50aW1lRm9ybWF0KCclYiAlZCwgJUkgJXAnKSxcbiAgICAgICAgICAgIGxvY2FsZSA9IHZvaWQgMCxcbiAgICAgICAgICAgIGNoYXJ0V2lkdGggPSB2b2lkIDAsXG4gICAgICAgICAgICBjaGFydEhlaWdodCA9IHZvaWQgMCxcbiAgICAgICAgICAgIGRhdGEgPSB2b2lkIDAsXG4gICAgICAgICAgICBzdmcgPSB2b2lkIDA7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoaXMgZnVuY3Rpb24gY3JlYXRlcyB0aGUgZ3JhcGggdXNpbmcgdGhlIHNlbGVjdGlvbiBhcyBjb250YWluZXJcbiAgICAgICAgICogQHBhcmFtIHtEM1NlbGVjdGlvbn0gX3NlbGVjdGlvbiBBIGQzIHNlbGVjdGlvbiB0aGF0IHJlcHJlc2VudHNcbiAgICAgICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhlIGNvbnRhaW5lcihzKSB3aGVyZSB0aGUgY2hhcnQocykgd2lsbCBiZSByZW5kZXJlZFxuICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gX2RhdGEgVGhlIGRhdGEgdG8gYXR0YWNoIGFuZCBnZW5lcmF0ZSB0aGUgY2hhcnRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIGV4cG9ydHMoX3NlbGVjdGlvbikge1xuICAgICAgICAgICAgX3NlbGVjdGlvbi5lYWNoKGZ1bmN0aW9uIChfZGF0YSkge1xuICAgICAgICAgICAgICAgIGNoYXJ0V2lkdGggPSB3aWR0aCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0O1xuICAgICAgICAgICAgICAgIGNoYXJ0SGVpZ2h0ID0gaGVpZ2h0IC0gbWFyZ2luLnRvcCAtIG1hcmdpbi5ib3R0b207XG4gICAgICAgICAgICAgICAgZGF0YSA9IF9kYXRhO1xuXG4gICAgICAgICAgICAgICAgYnVpbGRTVkcodGhpcyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBCdWlsZHMgY29udGFpbmVycyBmb3IgdGhlIHRvb2x0aXBcbiAgICAgICAgICogQWxzbyBhcHBsaWVzIHRoZSBNYXJnaW4gY29udmVudGlvblxuICAgICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gYnVpbGRDb250YWluZXJHcm91cHMoKSB7XG4gICAgICAgICAgICB2YXIgY29udGFpbmVyID0gc3ZnLmFwcGVuZCgnZycpLmNsYXNzZWQoJ3Rvb2x0aXAtY29udGFpbmVyLWdyb3VwJywgdHJ1ZSkuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSggJyArIG1hcmdpbi5sZWZ0ICsgJywgJyArIG1hcmdpbi50b3AgKyAnKScpO1xuXG4gICAgICAgICAgICBjb250YWluZXIuYXBwZW5kKCdnJykuY2xhc3NlZCgndG9vbHRpcC1ncm91cCcsIHRydWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEJ1aWxkcyB0aGUgU1ZHIGVsZW1lbnQgdGhhdCB3aWxsIGNvbnRhaW4gdGhlIGNoYXJ0XG4gICAgICAgICAqIEBwYXJhbSAge0hUTUxFbGVtZW50fSBjb250YWluZXIgRE9NIGVsZW1lbnQgdGhhdCB3aWxsIHdvcmsgYXMgdGhlIGNvbnRhaW5lciBvZiB0aGUgZ3JhcGhcbiAgICAgICAgICogQHByaXZhdGVcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIGJ1aWxkU1ZHKGNvbnRhaW5lcikge1xuICAgICAgICAgICAgaWYgKCFzdmcpIHtcbiAgICAgICAgICAgICAgICBzdmcgPSBkM1NlbGVjdGlvbi5zZWxlY3QoY29udGFpbmVyKS5hcHBlbmQoJ2cnKS5jbGFzc2VkKCdicml0ZWNoYXJ0IGJyaXRlY2hhcnQtdG9vbHRpcCcsIHRydWUpO1xuXG4gICAgICAgICAgICAgICAgYnVpbGRDb250YWluZXJHcm91cHMoKTtcbiAgICAgICAgICAgICAgICBkcmF3VG9vbHRpcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3ZnLnRyYW5zaXRpb24oKS5hdHRyKCd3aWR0aCcsIHdpZHRoKS5hdHRyKCdoZWlnaHQnLCBoZWlnaHQpO1xuXG4gICAgICAgICAgICAvLyBIaWRkZW4gYnkgZGVmYXVsdFxuICAgICAgICAgICAgZXhwb3J0cy5oaWRlKCk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogUmVzZXRzIHRoZSB0b29sdGlwQm9keSBjb250ZW50XG4gICAgICAgICAqIEByZXR1cm4gdm9pZFxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gY2xlYW5Db250ZW50KCkge1xuICAgICAgICAgICAgdG9vbHRpcEJvZHkuc2VsZWN0QWxsKCd0ZXh0JykucmVtb3ZlKCk7XG4gICAgICAgICAgICB0b29sdGlwQm9keS5zZWxlY3RBbGwoJ2NpcmNsZScpLnJlbW92ZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIERyYXdzIHRoZSBkaWZmZXJlbnQgZWxlbWVudHMgb2YgdGhlIFRvb2x0aXAgYm94XG4gICAgICAgICAqIEByZXR1cm4gdm9pZFxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gZHJhd1Rvb2x0aXAoKSB7XG4gICAgICAgICAgICB0b29sdGlwVGV4dENvbnRhaW5lciA9IHN2Zy5zZWxlY3RBbGwoJy50b29sdGlwLWdyb3VwJykuYXBwZW5kKCdnJykuY2xhc3NlZCgndG9vbHRpcC10ZXh0JywgdHJ1ZSk7XG5cbiAgICAgICAgICAgIHRvb2x0aXAgPSB0b29sdGlwVGV4dENvbnRhaW5lci5hcHBlbmQoJ3JlY3QnKS5jbGFzc2VkKCd0b29sdGlwLXRleHQtY29udGFpbmVyJywgdHJ1ZSkuYXR0cigneCcsIC10b29sdGlwV2lkdGggLyA0ICsgOCkuYXR0cigneScsIDApLmF0dHIoJ3dpZHRoJywgdG9vbHRpcFdpZHRoKS5hdHRyKCdoZWlnaHQnLCB0b29sdGlwSGVpZ2h0KS5hdHRyKCdyeCcsIHRvb2x0aXBCb3JkZXJSYWRpdXMpLmF0dHIoJ3J5JywgdG9vbHRpcEJvcmRlclJhZGl1cykuc3R5bGUoJ2ZpbGwnLCBib2R5RmlsbENvbG9yKS5zdHlsZSgnc3Ryb2tlJywgYm9yZGVyU3Ryb2tlQ29sb3IpLnN0eWxlKCdzdHJva2Utd2lkdGgnLCAxKTtcblxuICAgICAgICAgICAgdG9vbHRpcFRpdGxlID0gdG9vbHRpcFRleHRDb250YWluZXIuYXBwZW5kKCd0ZXh0JykuY2xhc3NlZCgndG9vbHRpcC10aXRsZScsIHRydWUpLmF0dHIoJ3gnLCAtdG9vbHRpcFdpZHRoIC8gNCArIDE3KS5hdHRyKCdkeScsICcuMzVlbScpLmF0dHIoJ3knLCAxNikuc3R5bGUoJ2ZpbGwnLCB0aXRsZUZpbGxDb2xvcik7XG5cbiAgICAgICAgICAgIHRvb2x0aXBEaXZpZGVyID0gdG9vbHRpcFRleHRDb250YWluZXIuYXBwZW5kKCdsaW5lJykuY2xhc3NlZCgndG9vbHRpcC1kaXZpZGVyJywgdHJ1ZSkuYXR0cigneDEnLCAtdG9vbHRpcFdpZHRoIC8gNCArIDE1KS5hdHRyKCd4MicsIDI2NSkuYXR0cigneTEnLCAzMSkuYXR0cigneTInLCAzMSkuc3R5bGUoJ3N0cm9rZScsIGJvcmRlclN0cm9rZUNvbG9yKTtcblxuICAgICAgICAgICAgdG9vbHRpcEJvZHkgPSB0b29sdGlwVGV4dENvbnRhaW5lci5hcHBlbmQoJ2cnKS5jbGFzc2VkKCd0b29sdGlwLWJvZHknLCB0cnVlKS5zdHlsZSgndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZVkoOHB4KScpLnN0eWxlKCdmaWxsJywgdGV4dEZpbGxDb2xvcik7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogRm9ybWF0cyB0aGUgdmFsdWUgZGVwZW5kaW5nIG9uIGl0cyBjaGFyYWN0ZXJpc3RpY3NcbiAgICAgICAgICogQHBhcmFtICB7TnVtYmVyfSB2YWx1ZSBWYWx1ZSB0byBmb3JtYXRcbiAgICAgICAgICogQHJldHVybiB7TnVtYmVyfSAgICAgICBGb3JtYXR0ZWQgdmFsdWVcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIGdldEZvcm1hdHRlZFZhbHVlKHZhbHVlKSB7XG4gICAgICAgICAgICB2YXIgdmFsdWVGb3JtYXR0ZXIgPSBmb3JtYXREZWNpbWFsVmFsdWU7XG5cbiAgICAgICAgICAgIGlmICghdmFsdWUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2YWx1ZUZvcm1hdCkge1xuICAgICAgICAgICAgICAgIHZhbHVlRm9ybWF0dGVyID0gZDNGb3JtYXQuZm9ybWF0KHZhbHVlRm9ybWF0KTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNJbnRlZ2VyKHZhbHVlKSkge1xuICAgICAgICAgICAgICAgIHZhbHVlRm9ybWF0dGVyID0gZm9ybWF0SW50ZWdlclZhbHVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gdmFsdWVGb3JtYXR0ZXIodmFsdWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIENhbGN1bGF0ZXMgdGhlIGRlc2lyZWQgcG9zaXRpb24gZm9yIHRoZSB0b29sdGlwXG4gICAgICAgICAqIEBwYXJhbSAge051bWJlcn0gbW91c2VYICAgICAgICAgICAgIEN1cnJlbnQgaG9yaXpvbnRhbCBtb3VzZSBwb3NpdGlvblxuICAgICAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IG1vdXNlWSAgICAgICAgICAgICBDdXJyZW50IHZlcnRpY2FsIG1vdXNlIHBvc2l0aW9uXG4gICAgICAgICAqIEByZXR1cm4ge051bWJlcltdfSAgICAgICAgICAgICAgICAgIFggYW5kIFkgcG9zaXRpb25cbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIGdldFRvb2x0aXBQb3NpdGlvbihfcmVmKSB7XG4gICAgICAgICAgICB2YXIgX3JlZjIgPSBfc2xpY2VkVG9BcnJheShfcmVmLCAyKSxcbiAgICAgICAgICAgICAgICBtb3VzZVggPSBfcmVmMlswXSxcbiAgICAgICAgICAgICAgICBtb3VzZVkgPSBfcmVmMlsxXTtcblxuICAgICAgICAgICAgdmFyIHRvb2x0aXBYID0gdm9pZCAwLFxuICAgICAgICAgICAgICAgIHRvb2x0aXBZID0gdm9pZCAwO1xuXG4gICAgICAgICAgICAvLyBzaG93IHRvb2x0aXAgdG8gdGhlIHJpZ2h0XG4gICAgICAgICAgICBpZiAobW91c2VYIC0gdG9vbHRpcFdpZHRoIDwgMCkge1xuICAgICAgICAgICAgICAgIC8vIFRvb2x0aXAgb24gdGhlIHJpZ2h0XG4gICAgICAgICAgICAgICAgdG9vbHRpcFggPSB0b29sdGlwV2lkdGggLSAxODU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIFRvb2x0aXAgb24gdGhlIGxlZnRcbiAgICAgICAgICAgICAgICB0b29sdGlwWCA9IC0yMDU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChtb3VzZVkpIHtcbiAgICAgICAgICAgICAgICB0b29sdGlwWSA9IHRvb2x0aXBPZmZzZXQueTtcbiAgICAgICAgICAgICAgICAvLyB0b29sdGlwWSA9IG1vdXNlWSArIHRvb2x0aXBPZmZzZXQueTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdG9vbHRpcFkgPSB0b29sdGlwT2Zmc2V0Lnk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBbdG9vbHRpcFgsIHRvb2x0aXBZXTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBFeHRyYWN0cyB0aGUgdmFsdWUgZnJvbSB0aGUgZGF0YSBvYmplY3RcbiAgICAgICAgICogQHBhcmFtICB7T2JqZWN0fSBkYXRhIERhdGEgdmFsdWUgY29udGFpbmluZyB0aGUgaW5mb1xuICAgICAgICAgKiBAcmV0dXJuIHtTdHJpbmd9ICAgICAgVmFsdWUgdG8gc2hvd1xuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gZ2V0VmFsdWVUZXh0KGRhdGEpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdmFsdWVMYWJlbF07XG4gICAgICAgICAgICB2YXIgdmFsdWVUZXh0ID0gdm9pZCAwO1xuXG4gICAgICAgICAgICBpZiAoZGF0YS5taXNzaW5nVmFsdWUpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZVRleHQgPSAnLSc7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhbHVlVGV4dCA9IGdldEZvcm1hdHRlZFZhbHVlKHZhbHVlKS50b1N0cmluZygpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gdmFsdWVUZXh0O1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJlc2V0cyB0aGUgaGVpZ2h0IG9mIHRoZSB0b29sdGlwIGFuZCB0aGUgcG9pbnRlciBmb3IgdGhlIHRleHRcbiAgICAgICAgICogcG9zaXRpb25cbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIHJlc2V0U2l6ZUFuZFBvc2l0aW9uUG9pbnRlcnMoKSB7XG4gICAgICAgICAgICB0b29sdGlwSGVpZ2h0ID0gNDg7XG4gICAgICAgICAgICB0dFRleHRZID0gMzc7XG4gICAgICAgICAgICB0dFRleHRYID0gMDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEcmF3cyB0aGUgZGF0YSBlbnRyaWVzIGluc2lkZSB0aGUgdG9vbHRpcCBmb3IgYSBnaXZlbiB0b3BpY1xuICAgICAgICAgKiBAcGFyYW0gIHtPYmplY3R9IHRvcGljIFRvcGljIHRvIGV4dHJhY3QgZGF0YSBmcm9tXG4gICAgICAgICAqIEByZXR1cm4gdm9pZFxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gdXBkYXRlVG9waWNDb250ZW50KHRvcGljKSB7XG4gICAgICAgICAgICB2YXIgbmFtZSA9IHRvcGljW25hbWVMYWJlbF0sXG4gICAgICAgICAgICAgICAgdG9vbHRpcFJpZ2h0ID0gdm9pZCAwLFxuICAgICAgICAgICAgICAgIHRvb2x0aXBMZWZ0VGV4dCA9IHZvaWQgMCxcbiAgICAgICAgICAgICAgICB0b29sdGlwUmlnaHRUZXh0ID0gdm9pZCAwLFxuICAgICAgICAgICAgICAgIGVsZW1lbnRUZXh0ID0gdm9pZCAwO1xuXG4gICAgICAgICAgICB0b29sdGlwTGVmdFRleHQgPSB0b3BpYy50b3BpY05hbWUgfHwgbmFtZTtcbiAgICAgICAgICAgIHRvb2x0aXBSaWdodFRleHQgPSBnZXRWYWx1ZVRleHQodG9waWMpO1xuXG4gICAgICAgICAgICBlbGVtZW50VGV4dCA9IHRvb2x0aXBCb2R5LmFwcGVuZCgndGV4dCcpLmNsYXNzZWQoJ3Rvb2x0aXAtbGVmdC10ZXh0JywgdHJ1ZSkuYXR0cignZHknLCAnMWVtJykuYXR0cigneCcsIHR0VGV4dFggLSAyMCkuYXR0cigneScsIHR0VGV4dFkpLnN0eWxlKCdmaWxsJywgdG9vbHRpcFRleHRDb2xvcikudGV4dCh0b29sdGlwTGVmdFRleHQpLmNhbGwodGV4dFdyYXAsIHRvb2x0aXBNYXhUb3BpY0xlbmd0aCwgLTI1KTtcblxuICAgICAgICAgICAgdG9vbHRpcFJpZ2h0ID0gdG9vbHRpcEJvZHkuYXBwZW5kKCd0ZXh0JykuY2xhc3NlZCgndG9vbHRpcC1yaWdodC10ZXh0JywgdHJ1ZSkuYXR0cignZHknLCAnMWVtJykuYXR0cigneCcsIHR0VGV4dFggKyA4KS5hdHRyKCd5JywgdHRUZXh0WSkuc3R5bGUoJ2ZpbGwnLCB0b29sdGlwVGV4dENvbG9yKS50ZXh0KHRvb2x0aXBSaWdodFRleHQpO1xuXG4gICAgICAgICAgICB0ZXh0U2l6ZSA9IGVsZW1lbnRUZXh0Lm5vZGUoKS5nZXRCQm94KCk7XG4gICAgICAgICAgICB0b29sdGlwSGVpZ2h0ICs9IHRleHRTaXplLmhlaWdodCArIDU7XG5cbiAgICAgICAgICAgIC8vIE5vdCBzdXJlIGlmIG5lY2Vzc2FyeVxuICAgICAgICAgICAgdG9vbHRpcFJpZ2h0LmF0dHIoJ3gnLCB0b29sdGlwV2lkdGggLSB0b29sdGlwUmlnaHQubm9kZSgpLmdldEJCb3goKS53aWR0aCAtIDEwIC0gdG9vbHRpcFdpZHRoIC8gNCk7XG5cbiAgICAgICAgICAgIHRvb2x0aXBCb2R5LmFwcGVuZCgnY2lyY2xlJykuY2xhc3NlZCgndG9vbHRpcC1jaXJjbGUnLCB0cnVlKS5hdHRyKCdjeCcsIDIzIC0gdG9vbHRpcFdpZHRoIC8gNCkuYXR0cignY3knLCB0dFRleHRZICsgY2lyY2xlWU9mZnNldCkuYXR0cigncicsIDUpLnN0eWxlKCdmaWxsJywgY29sb3JNYXBbbmFtZV0pLnN0eWxlKCdzdHJva2Utd2lkdGgnLCAxKTtcblxuICAgICAgICAgICAgdHRUZXh0WSArPSB0ZXh0U2l6ZS5oZWlnaHQgKyA3O1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFVwZGF0ZXMgc2l6ZSBhbmQgcG9zaXRpb24gb2YgdG9vbHRpcCBkZXBlbmRpbmcgb24gdGhlIHNpZGUgb2YgdGhlIGNoYXJ0IHdlIGFyZSBpblxuICAgICAgICAgKiBUT0RPOiBUaGlzIG5lZWRzIGEgcmVmYWN0b3IsIGZvbGxvd2luZyB0aGUgbWluaS10b29sdGlwIGNvZGUuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSAge09iamVjdH0gZGF0YVBvaW50IERhdGFQb2ludCBvZiB0aGUgdG9vbHRpcFxuICAgICAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IHhQb3NpdGlvbiBEYXRhUG9pbnQncyB4IHBvc2l0aW9uIGluIHRoZSBjaGFydFxuICAgICAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IHhQb3NpdGlvbiBEYXRhUG9pbnQncyB5IHBvc2l0aW9uIGluIHRoZSBjaGFydFxuICAgICAgICAgKiBAcmV0dXJuIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIHVwZGF0ZVBvc2l0aW9uQW5kU2l6ZShkYXRhUG9pbnQsIHhQb3NpdGlvbiwgeVBvc2l0aW9uKSB7XG4gICAgICAgICAgICB2YXIgX2dldFRvb2x0aXBQb3NpdGlvbiA9IGdldFRvb2x0aXBQb3NpdGlvbihbeFBvc2l0aW9uLCB5UG9zaXRpb25dKSxcbiAgICAgICAgICAgICAgICBfZ2V0VG9vbHRpcFBvc2l0aW9uMiA9IF9zbGljZWRUb0FycmF5KF9nZXRUb29sdGlwUG9zaXRpb24sIDIpLFxuICAgICAgICAgICAgICAgIHRvb2x0aXBYID0gX2dldFRvb2x0aXBQb3NpdGlvbjJbMF0sXG4gICAgICAgICAgICAgICAgdG9vbHRpcFkgPSBfZ2V0VG9vbHRpcFBvc2l0aW9uMlsxXTtcblxuICAgICAgICAgICAgdG9vbHRpcC5hdHRyKCd3aWR0aCcsIHRvb2x0aXBXaWR0aCkuYXR0cignaGVpZ2h0JywgdG9vbHRpcEhlaWdodCArIDEwKTtcblxuICAgICAgICAgICAgdG9vbHRpcFRleHRDb250YWluZXIudHJhbnNpdGlvbigpLmR1cmF0aW9uKG1vdXNlQ2hhc2VEdXJhdGlvbikuZWFzZShlYXNlKS5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKCcgKyB0b29sdGlwWCArICcsICcgKyB0b29sdGlwWSArICcpJyk7XG5cbiAgICAgICAgICAgIHRvb2x0aXBEaXZpZGVyLmF0dHIoJ3gyJywgdG9vbHRpcFdpZHRoIC0gNjApO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFVwZGF0ZXMgdmFsdWUgb2YgdG9vbHRpcFRpdGxlIHdpdGggdGhlIGRhdGEgbWVhbmluZyBhbmQgdGhlIGRhdGVcbiAgICAgICAgICogQHBhcmFtICB7T2JqZWN0fSBkYXRhUG9pbnQgUG9pbnQgb2YgZGF0YSB0byB1c2UgYXMgc291cmNlXG4gICAgICAgICAqIEByZXR1cm4gdm9pZFxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gdXBkYXRlVGl0bGUoZGF0YVBvaW50KSB7XG4gICAgICAgICAgICB2YXIgdFRpdGxlID0gdGl0bGU7XG5cbiAgICAgICAgICAgIGlmIChzaG91bGRTaG93RGF0ZUluVGl0bGUpIHtcbiAgICAgICAgICAgICAgICB0VGl0bGUgPSB0VGl0bGUgKyAnIC0gJyArIGZvcm1hdERhdGUobmV3IERhdGUoZGF0YVBvaW50W2RhdGVMYWJlbF0pKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdG9vbHRpcFRpdGxlLnRleHQodFRpdGxlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBGaWd1cmVzIG91dCB3aGljaCBkYXRlIGZvcm1hdCB0byB1c2Ugd2hlbiBzaG93aW5nIHRoZSBkYXRlIG9mIHRoZSBjdXJyZW50IGRhdGEgZW50cnlcbiAgICAgICAgICogQHJldHVybiB7RnVuY3Rpb259IFRoZSBwcm9wZXIgZGF0ZSBmb3JtYXR0aW5nIGZ1bmN0aW9uXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBmb3JtYXREYXRlKGRhdGUpIHtcbiAgICAgICAgICAgIHZhciBzZXR0aW5ncyA9IGRhdGVGb3JtYXQgfHwgZGVmYXVsdEF4aXNTZXR0aW5ncztcbiAgICAgICAgICAgIHZhciBmb3JtYXQgPSBudWxsO1xuICAgICAgICAgICAgdmFyIGxvY2FsZU9wdGlvbnMgPSB7IG1vbnRoOiAnc2hvcnQnLCBkYXk6ICdudW1lcmljJyB9O1xuXG4gICAgICAgICAgICBpZiAoc2V0dGluZ3MgPT09IGF4aXNUaW1lQ29tYmluYXRpb25zLkRBWV9NT05USCB8fCBzZXR0aW5ncyA9PT0gYXhpc1RpbWVDb21iaW5hdGlvbnMuTU9OVEhfWUVBUikge1xuICAgICAgICAgICAgICAgIGZvcm1hdCA9IG1vbnRoRGF5WWVhckZvcm1hdDtcbiAgICAgICAgICAgICAgICBsb2NhbGVPcHRpb25zLnllYXIgPSAnbnVtZXJpYyc7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHNldHRpbmdzID09PSBheGlzVGltZUNvbWJpbmF0aW9ucy5IT1VSX0RBWSB8fCBzZXR0aW5ncyA9PT0gYXhpc1RpbWVDb21iaW5hdGlvbnMuTUlOVVRFX0hPVVIpIHtcbiAgICAgICAgICAgICAgICBmb3JtYXQgPSBtb250aERheUhvdXJGb3JtYXQ7XG4gICAgICAgICAgICAgICAgbG9jYWxlT3B0aW9ucy5ob3VyID0gJ251bWVyaWMnO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAobG9jYWxlICYmIHR5cGVvZiBJbnRsICE9PSAndW5kZWZpbmVkJyAmJiAodHlwZW9mIEludGwgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKEludGwpKSA9PT0gJ29iamVjdCcgJiYgSW50bC5EYXRlVGltZUZvcm1hdCkge1xuICAgICAgICAgICAgICAgIHZhciBmID0gSW50bC5EYXRlVGltZUZvcm1hdChsb2NhbGUsIGxvY2FsZU9wdGlvbnMpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIGYuZm9ybWF0KGRhdGUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gZm9ybWF0KGRhdGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEhlbHBlciBtZXRob2QgdG8gc29ydCB0aGUgcGFzc2VkIHRvcGljcyBhcnJheSBieSB0aGUgbmFtZXMgcGFzc2VkIGludCBoZSBvcmRlciBhcmFyeVxuICAgICAgICAgKiBAcGFyYW0gIHtPYmplY3RbXX0gdG9waWNzICAgIFRvcGljcyBkYXRhLCByZXRyaWV2ZWQgZnJvbSBkYXRhcG9pbnQgcGFzc2VkIGJ5IGxpbmUgY2hhcnRcbiAgICAgICAgICogQHBhcmFtICB7T2JqZWN0W119IG9yZGVyICAgICBBcnJheSBvZiBuYW1lcyBpbiB0aGUgb3JkZXIgdG8gc29ydCB0b3BpY3MgYnlcbiAgICAgICAgICogQHJldHVybiB7T2JqZWN0W119ICAgICAgICAgICBzb3J0ZWQgdG9waWNzIG9iamVjdFxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gX3NvcnRCeVRvcGljc09yZGVyKHRvcGljcykge1xuICAgICAgICAgICAgdmFyIG9yZGVyID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB0b3BpY3NPcmRlcjtcblxuICAgICAgICAgICAgcmV0dXJuIG9yZGVyLm1hcChmdW5jdGlvbiAob3JkZXJOYW1lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRvcGljcy5maWx0ZXIoZnVuY3Rpb24gKF9yZWYzKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBuYW1lID0gX3JlZjMubmFtZTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5hbWUgPT09IG9yZGVyTmFtZTtcbiAgICAgICAgICAgICAgICB9KVswXTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNvcnRzIHRvcGljIGJ5IGFscGhhYmV0aWNhbCBvcmRlciBmb3IgYXJyYXlzIG9mIG9iamVjdHMgd2l0aCBhIG5hbWUgcHJvZXBydHlcbiAgICAgICAgICogQHBhcmFtICB7QXJyYXl9IHRvcGljcyAgIExpc3Qgb2YgdG9waWMgb2JqZWN0c1xuICAgICAgICAgKiBAcmV0dXJuIHtBcnJheX0gICAgICAgICAgTGlzdCBvZiB0b3BpYyBuYW1lIHN0cmluZ3NcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIF9zb3J0QnlBbHBoYSh0b3BpY3MpIHtcbiAgICAgICAgICAgIHJldHVybiB0b3BpY3MubWFwKGZ1bmN0aW9uIChkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGQ7XG4gICAgICAgICAgICB9KS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICAgICAgaWYgKGEubmFtZSA+IGIubmFtZSkgcmV0dXJuIDE7XG4gICAgICAgICAgICAgICAgaWYgKGEubmFtZSA9PT0gYi5uYW1lKSByZXR1cm4gMDtcbiAgICAgICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdmFyIG90aGVySW5kZXggPSB0b3BpY3MubWFwKGZ1bmN0aW9uIChfcmVmNCkge1xuICAgICAgICAgICAgICAgIHZhciBuYW1lID0gX3JlZjQubmFtZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmFtZTtcbiAgICAgICAgICAgIH0pLmluZGV4T2YoJ090aGVyJyk7XG5cbiAgICAgICAgICAgIGlmIChvdGhlckluZGV4ID49IDApIHtcbiAgICAgICAgICAgICAgICB2YXIgb3RoZXIgPSB0b3BpY3Muc3BsaWNlKG90aGVySW5kZXgsIDEpO1xuXG4gICAgICAgICAgICAgICAgdG9waWNzID0gdG9waWNzLmNvbmNhdChvdGhlcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogV3JhcHMgYSB0ZXh0IGdpdmVuIHRoZSB0ZXh0LCB3aWR0aCwgeCBwb3NpdGlvbiBhbmQgdGV4dEZvcm1hdHRlciBmdW5jdGlvblxuICAgICAgICAgKiBAcGFyYW0gIHtEM1NlbGVjdGlvbn0gdGV4dCAgU2VsZWN0aW9uIHdpdGggdGhlIHRleHQgdG8gd3JhcCBpbnNpZGVcbiAgICAgICAgICogQHBhcmFtICB7TnVtYmVyfSB3aWR0aCBEZXNpcmVkIG1heCB3aWR0aCBmb3IgdGhhdCBsaW5lXG4gICAgICAgICAqIEBwYXJhbSAge051bWJlcn0geHBvcyAgSW5pdGlhbCB4IHBvc2l0aW9uIG9mIHRoZSB0ZXh0XG4gICAgICAgICAqXG4gICAgICAgICAqIFJFRjogaHR0cDovL2JsLm9ja3Mub3JnL21ib3N0b2NrLzc1NTUzMjFcbiAgICAgICAgICogTW9yZSBkaXNjdXNzaW9ucyBvbiBodHRwczovL2dpdGh1Yi5jb20vbWJvc3RvY2svZDMvaXNzdWVzLzE2NDJcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIHRleHRXcmFwKHRleHQsIHdpZHRoLCB4cG9zKSB7XG4gICAgICAgICAgICB4cG9zID0geHBvcyB8fCAwO1xuXG4gICAgICAgICAgICB0ZXh0LmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZhciB3b3Jkcywgd29yZCwgbGluZSwgbGluZU51bWJlciwgbGluZUhlaWdodCwgeSwgZHksIHRzcGFuO1xuXG4gICAgICAgICAgICAgICAgdGV4dCA9IGQzU2VsZWN0aW9uLnNlbGVjdCh0aGlzKTtcblxuICAgICAgICAgICAgICAgIHdvcmRzID0gdGV4dC50ZXh0KCkuc3BsaXQoL1xccysvKS5yZXZlcnNlKCk7XG4gICAgICAgICAgICAgICAgbGluZSA9IFtdO1xuICAgICAgICAgICAgICAgIGxpbmVOdW1iZXIgPSAwO1xuICAgICAgICAgICAgICAgIGxpbmVIZWlnaHQgPSAxLjI7XG4gICAgICAgICAgICAgICAgeSA9IHRleHQuYXR0cigneScpO1xuICAgICAgICAgICAgICAgIGR5ID0gcGFyc2VGbG9hdCh0ZXh0LmF0dHIoJ2R5JykpO1xuICAgICAgICAgICAgICAgIHRzcGFuID0gdGV4dC50ZXh0KG51bGwpLmFwcGVuZCgndHNwYW4nKS5hdHRyKCd4JywgeHBvcykuYXR0cigneScsIHkpLmF0dHIoJ2R5JywgZHkgKyAnZW0nKTtcblxuICAgICAgICAgICAgICAgIHdoaWxlICh3b3JkID0gd29yZHMucG9wKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgbGluZS5wdXNoKHdvcmQpO1xuICAgICAgICAgICAgICAgICAgICB0c3Bhbi50ZXh0KGxpbmUuam9pbignICcpKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAodHNwYW4ubm9kZSgpLmdldENvbXB1dGVkVGV4dExlbmd0aCgpID4gd2lkdGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmUucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0c3Bhbi50ZXh0KGxpbmUuam9pbignICcpKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxpbmVOdW1iZXIgPCBlbnRyeUxpbmVMaW1pdCAtIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lID0gW3dvcmRdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRzcGFuID0gdGV4dC5hcHBlbmQoJ3RzcGFuJykuYXR0cigneCcsIHhwb3MpLmF0dHIoJ3knLCB5KS5hdHRyKCdkeScsICsrbGluZU51bWJlciAqIGxpbmVIZWlnaHQgKyBkeSArICdlbScpLnRleHQod29yZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEcmF3cyB0aGUgZGF0YSBlbnRyaWVzIGluc2lkZSB0aGUgdG9vbHRpcFxuICAgICAgICAgKiBAcGFyYW0gIHtPYmplY3R9IGRhdGFQb2ludCAgIERhdGEgZW50cnkgZnJvbSB0byB0YWtlIHRoZSBpbmZvXG4gICAgICAgICAqIEByZXR1cm4gdm9pZFxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gdXBkYXRlQ29udGVudChkYXRhUG9pbnQpIHtcbiAgICAgICAgICAgIHZhciB0b3BpY3MgPSBkYXRhUG9pbnRbdG9waWNMYWJlbF07XG5cbiAgICAgICAgICAgIC8vIHNvcnQgb3JkZXIgYnkgdG9waWNzT3JkZXIgYXJyYXkgaWYgcGFzc2VkXG4gICAgICAgICAgICBpZiAodG9waWNzT3JkZXIubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdG9waWNzID0gX3NvcnRCeVRvcGljc09yZGVyKHRvcGljcyk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRvcGljcy5sZW5ndGggJiYgdG9waWNzWzBdLm5hbWUpIHtcbiAgICAgICAgICAgICAgICB0b3BpY3MgPSBfc29ydEJ5QWxwaGEodG9waWNzKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY2xlYW5Db250ZW50KCk7XG4gICAgICAgICAgICB1cGRhdGVUaXRsZShkYXRhUG9pbnQpO1xuICAgICAgICAgICAgcmVzZXRTaXplQW5kUG9zaXRpb25Qb2ludGVycygpO1xuICAgICAgICAgICAgdG9waWNzLmZvckVhY2godXBkYXRlVG9waWNDb250ZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBVcGRhdGVzIHRvb2x0aXAgdGl0bGUsIGNvbnRlbnQsIHNpemUgYW5kIHBvc2l0aW9uXG4gICAgICAgICAqIHNvcnRzIGJ5IGFscGhhdGljYWwgbmFtZSBvcmRlciBpZiBub3QgZm9yY2VkIG9yZGVyIGdpdmVuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSAge2xpbmVDaGFydFBvaW50QnlEYXRlfSBkYXRhUG9pbnQgIEN1cnJlbnQgZGF0YXBvaW50IHRvIHNob3cgaW5mbyBhYm91dFxuICAgICAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IHhQb3NpdGlvbiAgICAgICAgICAgUG9zaXRpb24gb2YgdGhlIG1vdXNlIG9uIHRoZSBYIGF4aXNcbiAgICAgICAgICogQHJldHVybiB2b2lkXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiB1cGRhdGVUb29sdGlwKGRhdGFQb2ludCwgeFBvc2l0aW9uLCB5UG9zaXRpb24pIHtcbiAgICAgICAgICAgIHVwZGF0ZUNvbnRlbnQoZGF0YVBvaW50KTtcbiAgICAgICAgICAgIHVwZGF0ZVBvc2l0aW9uQW5kU2l6ZShkYXRhUG9pbnQsIHhQb3NpdGlvbiwgeVBvc2l0aW9uKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEFQSVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBjb25zdGFudHMgdG8gYmUgdXNlZCB0byBmb3JjZSB0aGUgeCBheGlzIHRvIHJlc3BlY3QgYSBjZXJ0YWluIGdyYW51bGFyaXR5XG4gICAgICAgICAqIGN1cnJlbnQgb3B0aW9uczogSE9VUl9EQVksIERBWV9NT05USCwgTU9OVEhfWUVBUlxuICAgICAgICAgKiBAZXhhbXBsZSB0b29sdGlwLmRhdGVGb3JtYXQodG9vbHRpcC5heGlzVGltZUNvbWJpbmF0aW9ucy5IT1VSX0RBWSlcbiAgICAgICAgICovXG4gICAgICAgIGV4cG9ydHMuYXhpc1RpbWVDb21iaW5hdGlvbnMgPSBheGlzVGltZUNvbWJpbmF0aW9ucztcblxuICAgICAgICAvKipcbiAgICAgICAgICogR2V0cyBvciBTZXRzIHRoZSBkYXRlTGFiZWwgb2YgdGhlIGRhdGFcbiAgICAgICAgICogQHBhcmFtICB7TnVtYmVyfSBfeCBEZXNpcmVkIGRhdGVMYWJlbFxuICAgICAgICAgKiBAcmV0dXJuIHsgZGF0ZUxhYmVsIHwgbW9kdWxlfSBDdXJyZW50IGRhdGVMYWJlbCBvciBDaGFydCBtb2R1bGUgdG8gY2hhaW4gY2FsbHNcbiAgICAgICAgICogQHB1YmxpY1xuICAgICAgICAgKi9cbiAgICAgICAgZXhwb3J0cy5kYXRlTGFiZWwgPSBmdW5jdGlvbiAoX3gpIHtcbiAgICAgICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBkYXRlTGFiZWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkYXRlTGFiZWwgPSBfeDtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEV4cG9zZXMgdGhlIGFiaWxpdHkgdG8gZm9yY2UgdGhlIHRvb2x0aXAgdG8gdXNlIGEgY2VydGFpbiBkYXRlIGZvcm1hdFxuICAgICAgICAgKiBAcGFyYW0gIHtTdHJpbmd9IF94IERlc2lyZWQgZm9ybWF0XG4gICAgICAgICAqIEByZXR1cm4geyAoU3RyaW5nfE1vZHVsZSkgfSAgICBDdXJyZW50IGZvcm1hdCBvciBtb2R1bGUgdG8gY2hhaW4gY2FsbHNcbiAgICAgICAgICovXG4gICAgICAgIGV4cG9ydHMuZGF0ZUZvcm1hdCA9IGZ1bmN0aW9uIChfeCkge1xuICAgICAgICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGVGb3JtYXQgfHwgZGVmYXVsdEF4aXNTZXR0aW5ncztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRhdGVGb3JtYXQgPSBfeDtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEhpZGVzIHRoZSB0b29sdGlwXG4gICAgICAgICAqIEByZXR1cm4ge01vZHVsZX0gVG9vbHRpcCBtb2R1bGUgdG8gY2hhaW4gY2FsbHNcbiAgICAgICAgICogQHB1YmxpY1xuICAgICAgICAgKi9cbiAgICAgICAgZXhwb3J0cy5oaWRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgc3ZnLnN0eWxlKCdkaXNwbGF5JywgJ25vbmUnKTtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFBhc3MgbG9jYWxlIGZvciB0aGUgdG9vbHRpcCB0byByZW5kZXIgdGhlIGRhdGUgaW5cbiAgICAgICAgICogQHBhcmFtICB7U3RyaW5nfSBfeCAgbXVzdCBiZSBhIGxvY2FsZSB0YWcgbGlrZSAnZW4tVVMnIG9yICdmci1GUidcbiAgICAgICAgICogQHJldHVybiB7IChTdHJpbmd8TW9kdWxlKSB9ICAgIEN1cnJlbnQgbG9jYWxlIG9yIG1vZHVsZSB0byBjaGFpbiBjYWxsc1xuICAgICAgICAgKi9cbiAgICAgICAgZXhwb3J0cy5sb2NhbGUgPSBmdW5jdGlvbiAoX3gpIHtcbiAgICAgICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBsb2NhbGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsb2NhbGUgPSBfeDtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldHMgb3IgU2V0cyB0aGUgbmFtZUxhYmVsIG9mIHRoZSBkYXRhXG4gICAgICAgICAqIEBwYXJhbSAge051bWJlcn0gX3ggRGVzaXJlZCBuYW1lTGFiZWxcbiAgICAgICAgICogQHJldHVybiB7IG5hbWVMYWJlbCB8IG1vZHVsZX0gQ3VycmVudCBuYW1lTGFiZWwgb3IgQ2hhcnQgbW9kdWxlIHRvIGNoYWluIGNhbGxzXG4gICAgICAgICAqIEBwdWJsaWNcbiAgICAgICAgICovXG4gICAgICAgIGV4cG9ydHMubmFtZUxhYmVsID0gZnVuY3Rpb24gKF94KSB7XG4gICAgICAgICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmFtZUxhYmVsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbmFtZUxhYmVsID0gX3g7XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTaG93cyB0aGUgdG9vbHRpcFxuICAgICAgICAgKiBAcmV0dXJuIHtNb2R1bGV9IFRvb2x0aXAgbW9kdWxlIHRvIGNoYWluIGNhbGxzXG4gICAgICAgICAqIEBwdWJsaWNcbiAgICAgICAgICovXG4gICAgICAgIGV4cG9ydHMuc2hvdyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHN2Zy5zdHlsZSgnZGlzcGxheScsICdibG9jaycpO1xuXG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogUGFzcyBhbiBvdmVycmlkZSBmb3IgdGhlIG9yZGVyaW5nIG9mIHlvdXIgdG9vbHRpcFxuICAgICAgICAgKiBAcGFyYW0gIHtPYmplY3RbXX0gX3ggICAgQXJyYXkgb2YgdGhlIG5hbWVzIG9mIHlvdXIgdG9vbHRpcCBpdGVtc1xuICAgICAgICAgKiBAcmV0dXJuIHsgb3ZlcnJpZGVPcmRlciB8IG1vZHVsZX0gQ3VycmVudCBvdmVycmlkZU9yZGVyIG9yIENoYXJ0IG1vZHVsZSB0byBjaGFpbiBjYWxsc1xuICAgICAgICAgKiBAcHVibGljXG4gICAgICAgICAqL1xuICAgICAgICBleHBvcnRzLnRvcGljc09yZGVyID0gZnVuY3Rpb24gKF94KSB7XG4gICAgICAgICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdG9waWNzT3JkZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0b3BpY3NPcmRlciA9IF94O1xuXG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogR2V0cyBvciBTZXRzIHRoZSB0aXRsZSBvZiB0aGUgdG9vbHRpcFxuICAgICAgICAgKiBAcGFyYW0gIHtzdHJpbmd9IF94IERlc2lyZWQgdGl0bGVcbiAgICAgICAgICogQHJldHVybiB7IHN0cmluZyB8IG1vZHVsZX0gQ3VycmVudCB0aXRsZSBvciBtb2R1bGUgdG8gY2hhaW4gY2FsbHNcbiAgICAgICAgICogQHB1YmxpY1xuICAgICAgICAgKi9cbiAgICAgICAgZXhwb3J0cy50aXRsZSA9IGZ1bmN0aW9uIChfeCkge1xuICAgICAgICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRpdGxlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGl0bGUgPSBfeDtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldHMgb3IgU2V0cyB0aGUgdG9waWNMYWJlbCBvZiB0aGUgZGF0YVxuICAgICAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IF94IERlc2lyZWQgdG9waWNMYWJlbFxuICAgICAgICAgKiBAcmV0dXJuIHsgdG9waWNMYWJlbCB8IG1vZHVsZX0gQ3VycmVudCB0b3BpY0xhYmVsIG9yIENoYXJ0IG1vZHVsZSB0byBjaGFpbiBjYWxsc1xuICAgICAgICAgKiBAcHVibGljXG4gICAgICAgICAqL1xuICAgICAgICBleHBvcnRzLnRvcGljTGFiZWwgPSBmdW5jdGlvbiAoX3gpIHtcbiAgICAgICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0b3BpY0xhYmVsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdG9waWNMYWJlbCA9IF94O1xuXG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogVXBkYXRlcyB0aGUgcG9zaXRpb24gYW5kIGNvbnRlbnQgb2YgdGhlIHRvb2x0aXBcbiAgICAgICAgICogQHBhcmFtICB7T2JqZWN0fSBkYXRhUG9pbnQgICAgRGF0YXBvaW50IHRvIHJlcHJlc2VudFxuICAgICAgICAgKiBAcGFyYW0gIHtPYmplY3R9IGNvbG9yTWFwcGluZyBDb2xvciBzY2hlbWUgb2YgdGhlIHRvcGljc1xuICAgICAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IHBvc2l0aW9uICAgICBYLXNjYWxlIHBvc2l0aW9uIGluIHBpeGVsc1xuICAgICAgICAgKiBAcmV0dXJuIHtNb2R1bGV9IFRvb2x0aXAgbW9kdWxlIHRvIGNoYWluIGNhbGxzXG4gICAgICAgICAqIEBwdWJsaWNcbiAgICAgICAgICovXG4gICAgICAgIGV4cG9ydHMudXBkYXRlID0gZnVuY3Rpb24gKGRhdGFQb2ludCwgY29sb3JNYXBwaW5nLCB4UG9zaXRpb24pIHtcbiAgICAgICAgICAgIHZhciB5UG9zaXRpb24gPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IG51bGw7XG5cbiAgICAgICAgICAgIGNvbG9yTWFwID0gY29sb3JNYXBwaW5nO1xuICAgICAgICAgICAgdXBkYXRlVG9vbHRpcChkYXRhUG9pbnQsIHhQb3NpdGlvbiwgeVBvc2l0aW9uKTtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldHMgb3IgU2V0cyB0aGUgdmFsdWVGb3JtYXQgb2YgdGhlIHRvb2x0aXBcbiAgICAgICAgICogQHBhcmFtICB7U3RyaW5nfSBfeCBEZXNpcmVkIHZhbHVlRm9ybWF0XG4gICAgICAgICAqIEByZXR1cm4geyBTdHJpbmcgfCBtb2R1bGV9IEN1cnJlbnQgdmFsdWVGb3JtYXQgb3IgbW9kdWxlIHRvIGNoYWluIGNhbGxzXG4gICAgICAgICAqIEBwdWJsaWNcbiAgICAgICAgICovXG4gICAgICAgIGV4cG9ydHMudmFsdWVGb3JtYXQgPSBmdW5jdGlvbiAoX3gpIHtcbiAgICAgICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZUZvcm1hdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhbHVlRm9ybWF0ID0gX3g7XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBHZXRzIG9yIFNldHMgdGhlIHZhbHVlTGFiZWwgb2YgdGhlIGRhdGFcbiAgICAgICAgICogQHBhcmFtICB7TnVtYmVyfSBfeCBEZXNpcmVkIHZhbHVlTGFiZWxcbiAgICAgICAgICogQHJldHVybiB7IHZhbHVlTGFiZWwgfCBtb2R1bGV9IEN1cnJlbnQgdmFsdWVMYWJlbCBvciBDaGFydCBtb2R1bGUgdG8gY2hhaW4gY2FsbHNcbiAgICAgICAgICogQHB1YmxpY1xuICAgICAgICAgKi9cbiAgICAgICAgZXhwb3J0cy52YWx1ZUxhYmVsID0gZnVuY3Rpb24gKF94KSB7XG4gICAgICAgICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWVMYWJlbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhbHVlTGFiZWwgPSBfeDtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldHMgb3IgU2V0cyBzaG91bGRTaG93RGF0ZUluVGl0bGVcbiAgICAgICAgICogQHBhcmFtICB7Qm9vbGVhbn0gX3ggRGVzaXJlZCB2YWx1ZVxuICAgICAgICAgKiBAcmV0dXJuIHsgc2hvdWxkU2hvd0RhdGVJblRpdGxlIHwgbW9kdWxlfSBDdXJyZW50IHNob3VsZFNob3dEYXRlSW5UaXRsZSBvciBDaGFydCBtb2R1bGUgdG8gY2hhaW4gY2FsbHNcbiAgICAgICAgICogQHB1YmxpY1xuICAgICAgICAgKi9cbiAgICAgICAgZXhwb3J0cy5zaG91bGRTaG93RGF0ZUluVGl0bGUgPSBmdW5jdGlvbiAoX3gpIHtcbiAgICAgICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBzaG91bGRTaG93RGF0ZUluVGl0bGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzaG91bGRTaG93RGF0ZUluVGl0bGUgPSBfeDtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBleHBvcnRzO1xuICAgIH07XG59KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9jaGFydHMvdG9vbHRpcC5qc1xuLy8gbW9kdWxlIGlkID0gNDhcbi8vIG1vZHVsZSBjaHVua3MgPSAzIDUgNyA4Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n    'use strict';\n\n    var d3Format = __webpack_require__(9);\n\n    var integerValueFormats = {\n        small: {\n            limit: 10,\n            format: d3Format.format('')\n        },\n        medium: {\n            limit: 1000,\n            format: d3Format.format('')\n        },\n        large: {\n            limit: null,\n            format: d3Format.format('.2s')\n        }\n    };\n    var decimalValueFormats = {\n        small: {\n            limit: 10,\n            format: d3Format.format('.3f')\n        },\n        medium: {\n            limit: 100,\n            format: d3Format.format('.1f')\n        },\n        large: {\n            limit: null,\n            format: d3Format.format('.2s')\n        }\n    };\n\n    function getValueSize(value, limits) {\n        var size = 'large';\n\n        if (value < limits.small.limit) {\n            size = 'small';\n        } else if (value < limits.medium.limit) {\n            size = 'medium';\n        }\n        return size;\n    }\n\n    /**\n     * Formats an integer value depending on its value range\n     * @param  {Number} value Decimal point value to format\n     * @return {Number}       Formatted value to show\n     */\n    function formatIntegerValue(value) {\n        var size = getValueSize(value, integerValueFormats);\n        var format = integerValueFormats[size].format;\n\n        return format(value);\n    }\n\n    /**\n     * Formats a floating point value depending on its value range\n     * @param  {Number} value Decimal point value to format\n     * @return {Number}       Formatted value to show\n     */\n    function formatDecimalValue(value) {\n        var size = getValueSize(value, decimalValueFormats);\n        var format = decimalValueFormats[size].format;\n\n        return format(value);\n    }\n\n    return {\n        formatDecimalValue: formatDecimalValue,\n        formatIntegerValue: formatIntegerValue\n    };\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY2hhcnRzL2hlbHBlcnMvZm9ybWF0SGVscGVycy5qcz85ZWRiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZGVmaW5lKGZ1bmN0aW9uIChyZXF1aXJlKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgdmFyIGQzRm9ybWF0ID0gcmVxdWlyZSgnZDMtZm9ybWF0Jyk7XG5cbiAgICB2YXIgaW50ZWdlclZhbHVlRm9ybWF0cyA9IHtcbiAgICAgICAgc21hbGw6IHtcbiAgICAgICAgICAgIGxpbWl0OiAxMCxcbiAgICAgICAgICAgIGZvcm1hdDogZDNGb3JtYXQuZm9ybWF0KCcnKVxuICAgICAgICB9LFxuICAgICAgICBtZWRpdW06IHtcbiAgICAgICAgICAgIGxpbWl0OiAxMDAwLFxuICAgICAgICAgICAgZm9ybWF0OiBkM0Zvcm1hdC5mb3JtYXQoJycpXG4gICAgICAgIH0sXG4gICAgICAgIGxhcmdlOiB7XG4gICAgICAgICAgICBsaW1pdDogbnVsbCxcbiAgICAgICAgICAgIGZvcm1hdDogZDNGb3JtYXQuZm9ybWF0KCcuMnMnKVxuICAgICAgICB9XG4gICAgfTtcbiAgICB2YXIgZGVjaW1hbFZhbHVlRm9ybWF0cyA9IHtcbiAgICAgICAgc21hbGw6IHtcbiAgICAgICAgICAgIGxpbWl0OiAxMCxcbiAgICAgICAgICAgIGZvcm1hdDogZDNGb3JtYXQuZm9ybWF0KCcuM2YnKVxuICAgICAgICB9LFxuICAgICAgICBtZWRpdW06IHtcbiAgICAgICAgICAgIGxpbWl0OiAxMDAsXG4gICAgICAgICAgICBmb3JtYXQ6IGQzRm9ybWF0LmZvcm1hdCgnLjFmJylcbiAgICAgICAgfSxcbiAgICAgICAgbGFyZ2U6IHtcbiAgICAgICAgICAgIGxpbWl0OiBudWxsLFxuICAgICAgICAgICAgZm9ybWF0OiBkM0Zvcm1hdC5mb3JtYXQoJy4ycycpXG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gZ2V0VmFsdWVTaXplKHZhbHVlLCBsaW1pdHMpIHtcbiAgICAgICAgdmFyIHNpemUgPSAnbGFyZ2UnO1xuXG4gICAgICAgIGlmICh2YWx1ZSA8IGxpbWl0cy5zbWFsbC5saW1pdCkge1xuICAgICAgICAgICAgc2l6ZSA9ICdzbWFsbCc7XG4gICAgICAgIH0gZWxzZSBpZiAodmFsdWUgPCBsaW1pdHMubWVkaXVtLmxpbWl0KSB7XG4gICAgICAgICAgICBzaXplID0gJ21lZGl1bSc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNpemU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRm9ybWF0cyBhbiBpbnRlZ2VyIHZhbHVlIGRlcGVuZGluZyBvbiBpdHMgdmFsdWUgcmFuZ2VcbiAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IHZhbHVlIERlY2ltYWwgcG9pbnQgdmFsdWUgdG8gZm9ybWF0XG4gICAgICogQHJldHVybiB7TnVtYmVyfSAgICAgICBGb3JtYXR0ZWQgdmFsdWUgdG8gc2hvd1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIGZvcm1hdEludGVnZXJWYWx1ZSh2YWx1ZSkge1xuICAgICAgICB2YXIgc2l6ZSA9IGdldFZhbHVlU2l6ZSh2YWx1ZSwgaW50ZWdlclZhbHVlRm9ybWF0cyk7XG4gICAgICAgIHZhciBmb3JtYXQgPSBpbnRlZ2VyVmFsdWVGb3JtYXRzW3NpemVdLmZvcm1hdDtcblxuICAgICAgICByZXR1cm4gZm9ybWF0KHZhbHVlKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBGb3JtYXRzIGEgZmxvYXRpbmcgcG9pbnQgdmFsdWUgZGVwZW5kaW5nIG9uIGl0cyB2YWx1ZSByYW5nZVxuICAgICAqIEBwYXJhbSAge051bWJlcn0gdmFsdWUgRGVjaW1hbCBwb2ludCB2YWx1ZSB0byBmb3JtYXRcbiAgICAgKiBAcmV0dXJuIHtOdW1iZXJ9ICAgICAgIEZvcm1hdHRlZCB2YWx1ZSB0byBzaG93XG4gICAgICovXG4gICAgZnVuY3Rpb24gZm9ybWF0RGVjaW1hbFZhbHVlKHZhbHVlKSB7XG4gICAgICAgIHZhciBzaXplID0gZ2V0VmFsdWVTaXplKHZhbHVlLCBkZWNpbWFsVmFsdWVGb3JtYXRzKTtcbiAgICAgICAgdmFyIGZvcm1hdCA9IGRlY2ltYWxWYWx1ZUZvcm1hdHNbc2l6ZV0uZm9ybWF0O1xuXG4gICAgICAgIHJldHVybiBmb3JtYXQodmFsdWUpO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIGZvcm1hdERlY2ltYWxWYWx1ZTogZm9ybWF0RGVjaW1hbFZhbHVlLFxuICAgICAgICBmb3JtYXRJbnRlZ2VyVmFsdWU6IGZvcm1hdEludGVnZXJWYWx1ZVxuICAgIH07XG59KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9jaGFydHMvaGVscGVycy9mb3JtYXRIZWxwZXJzLmpzXG4vLyBtb2R1bGUgaWQgPSA0OVxuLy8gbW9kdWxlIGNodW5rcyA9IDMgNSA3IDgiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 50 */,
/* 51 */,
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n    'use strict';\n\n    var d3Array = __webpack_require__(4);\n    var d3Axis = __webpack_require__(6);\n    var d3Collection = __webpack_require__(11);\n    var d3Dispatch = __webpack_require__(8);\n    var d3Ease = __webpack_require__(5);\n    var d3Scale = __webpack_require__(10);\n    var d3Shape = __webpack_require__(33);\n    var d3Selection = __webpack_require__(1);\n    var d3Transition = __webpack_require__(15);\n    var d3TimeFormat = __webpack_require__(14);\n\n    var _require = __webpack_require__(18),\n        exportChart = _require.exportChart;\n\n    var colorHelper = __webpack_require__(19);\n\n    var _require2 = __webpack_require__(39),\n        isInteger = _require2.isInteger;\n\n    var _require3 = __webpack_require__(35),\n        getXAxisSettings = _require3.getXAxisSettings,\n        getLocaleDateFormatter = _require3.getLocaleDateFormatter;\n\n    var _require4 = __webpack_require__(20),\n        axisTimeCombinations = _require4.axisTimeCombinations,\n        lineGradientId = _require4.lineGradientId;\n\n    var _require5 = __webpack_require__(49),\n        formatIntegerValue = _require5.formatIntegerValue,\n        formatDecimalValue = _require5.formatDecimalValue;\n    /**\n     * @typedef D3Selection\n     * @type {Array[]}\n     * @property {Number} length            Size of the selection\n     * @property {DOMElement} parentNode    Parent of the selection\n     */\n\n    /**\n     * @typedef lineChartDataByTopic\n     * @type {Object}\n     * @property {String} topicName    Topic name (required)\n     * @property {Number} topic        Topic identifier (required)\n     * @property {Object[]} dates      All date entries with values for that topic (required)\n     *\n     * @example\n     * {\n     *     topicName: 'San Francisco',\n     *     topic: 123,\n     *     dates: [\n     *         {\n     *             date: '2017-01-16T16:00:00-08:00',\n     *             value: 1\n     *         },\n     *         {\n     *             date: '2017-01-16T17:00:00-08:00',\n     *             value: 2\n     *         }\n     *     ]\n     * }\n     */\n\n    /**\n     * @typedef LineChartData\n     * @type {Object[]}\n     * @property {lineChartDataByTopic[]} dataByTopic  Data values to chart (required)\n     *\n     * @example\n     * {\n     *     dataByTopic: [\n     *         {\n     *             topicName: 'San Francisco',\n     *             topic: 123,\n     *             dates: [\n     *                 {\n     *                     date: '2017-01-16T16:00:00-08:00',\n     *                     value: 1\n     *                 },\n     *                 {\n     *                     date: '2017-01-16T17:00:00-08:00',\n     *                     value: 2\n     *                 }\n     *             ]\n     *         },\n     *         {\n     *             topicName: 'Other',\n     *             topic: 345,\n     *             dates: [\n     *                 {...},\n     *                 {...}\n     *             ]\n     *         }\n     *     ]\n     * }\n     */\n\n    /**\n     * Line Chart reusable API module that allows us\n     * rendering a multi line and configurable chart.\n     *\n     * @module Line\n     * @tutorial line\n     * @requires d3-array, d3-axis, d3-brush, d3-ease, d3-format, d3-scale, d3-shape, d3-selection, d3-time, d3-time-format\n     *\n     * @example\n     * let lineChart = line();\n     *\n     * lineChart\n     *     .aspectRatio(0.5)\n     *     .width(500);\n     *\n     * d3Selection.select('.css-selector')\n     *     .datum(dataset)\n     *     .call(lineChart);\n     *\n     */\n\n\n    return function line() {\n\n        var margin = {\n            top: 60,\n            right: 30,\n            bottom: 40,\n            left: 70\n        },\n            width = 960,\n            height = 500,\n            aspectRatio = null,\n            tooltipThreshold = 480,\n            svg = void 0,\n            paths = void 0,\n            chartWidth = void 0,\n            chartHeight = void 0,\n            xScale = void 0,\n            yScale = void 0,\n            colorScale = void 0,\n            xAxis = void 0,\n            xMonthAxis = void 0,\n            yAxis = void 0,\n            xAxisPadding = {\n            top: 0,\n            left: 15,\n            bottom: 0,\n            right: 0\n        },\n            monthAxisPadding = 28,\n            tickPadding = 5,\n            colorSchema = colorHelper.colorSchemas.britecharts,\n            singleLineGradientColors = colorHelper.colorGradients.greenBlue,\n            topicColorMap = void 0,\n            xAxisFormat = null,\n            xTicks = null,\n            xAxisCustomFormat = null,\n            locale = void 0,\n            isAnimated = false,\n            ease = d3Ease.easeQuadInOut,\n            animationDuration = 1500,\n            maskingRectangle = void 0,\n            lineCurve = 'linear',\n            curveMap = {\n            linear: d3Shape.curveLinear,\n            basis: d3Shape.curveBasis,\n            cardinal: d3Shape.curveCardinal,\n            catmullRom: d3Shape.curveCatmullRom,\n            monotoneX: d3Shape.curveMonotoneX,\n            monotoneY: d3Shape.curveMonotoneY,\n            natural: d3Shape.curveNatural,\n            step: d3Shape.curveStep,\n            stepAfter: d3Shape.curveStepAfter,\n            stepBefore: d3Shape.curveStepBefore\n        },\n            dataByTopic = void 0,\n            dataByDate = void 0,\n            dateLabel = 'date',\n            valueLabel = 'value',\n            topicLabel = 'topic',\n            topicNameLabel = 'topicName',\n            yTicks = 5,\n            overlay = void 0,\n            overlayColor = 'rgba(0, 0, 0, 0)',\n            verticalMarkerContainer = void 0,\n            verticalMarkerLine = void 0,\n            verticalGridLines = void 0,\n            horizontalGridLines = void 0,\n            grid = null,\n            baseLine = void 0,\n            pathYCache = {},\n\n\n        // extractors\n        getDate = function getDate(_ref) {\n            var date = _ref.date;\n            return date;\n        },\n            getValue = function getValue(_ref2) {\n            var value = _ref2.value;\n            return value;\n        },\n            getTopic = function getTopic(_ref3) {\n            var topic = _ref3.topic;\n            return topic;\n        },\n            getLineColor = function getLineColor(_ref4) {\n            var topic = _ref4.topic;\n            return colorScale(topic);\n        },\n\n\n        // events\n        dispatcher = d3Dispatch.dispatch('customMouseOver', 'customMouseOut', 'customMouseMove');\n\n        /**\n         * This function creates the graph using the selection and data provided\n         *\n         * @param {D3Selection} _selection A d3 selection that represents\n         *                                  the container(s) where the chart(s) will be rendered\n         * @param {LineChartData} _data The data to attach and generate the chart\n         */\n        function exports(_selection) {\n            _selection.each(function (_data) {\n                var _cleanData = cleanData(_data);\n\n                dataByTopic = _cleanData.dataByTopic;\n                dataByDate = _cleanData.dataByDate;\n\n\n                chartWidth = width - margin.left - margin.right;\n                chartHeight = height - margin.top - margin.bottom;\n\n                buildScales();\n                buildSVG(this);\n                buildAxis();\n                drawAxis();\n                buildGradient();\n                drawLines();\n                createMaskingClip();\n\n                if (shouldShowTooltip()) {\n                    drawVerticalMarker();\n                    drawHoverOverlay();\n                    addMouseEvents();\n                }\n            });\n        }\n\n        /**\n         * Adds events to the container group if the environment is not mobile\n         * Adding: mouseover, mouseout and mousemove\n         */\n        function addMouseEvents() {\n            svg.on('mouseover', function (d) {\n                handleMouseOver(this, d);\n            }).on('mouseout', function (d) {\n                handleMouseOut(this, d);\n            }).on('mousemove', function (d) {\n                handleMouseMove(this, d);\n            });\n        }\n\n        /**\n         * Adjusts the position of the y axis' ticks\n         * @param  {D3Selection} selection Y axis group\n         * @return void\n         */\n        function adjustYTickLabels(selection) {\n            selection.selectAll('.tick text').attr('transform', 'translate(0, -7)');\n        }\n\n        /**\n         * Formats the value depending on its characteristics\n         * @param  {Number} value Value to format\n         * @return {Number}       Formatted value\n         */\n        function getFormattedValue(value) {\n            var format = void 0;\n\n            if (isInteger(value)) {\n                format = formatIntegerValue;\n            } else {\n                format = formatDecimalValue;\n            }\n\n            return format(value);\n        }\n\n        /**\n         * Creates the d3 x and y axis, setting orientations\n         * @private\n         */\n        function buildAxis() {\n            var dataTimeSpan = yScale.domain()[1] - yScale.domain()[0];\n            var yTickNumber = dataTimeSpan < yTicks - 1 ? dataTimeSpan : yTicks;\n            var minor = void 0,\n                major = void 0;\n\n            if (xAxisFormat === 'custom' && typeof xAxisCustomFormat === 'string') {\n                minor = {\n                    tick: xTicks,\n                    format: d3TimeFormat.timeFormat(xAxisCustomFormat)\n                };\n                major = null;\n            } else {\n                var _getXAxisSettings = getXAxisSettings(dataByDate, width, xAxisFormat, locale);\n\n                minor = _getXAxisSettings.minor;\n                major = _getXAxisSettings.major;\n\n\n                xMonthAxis = d3Axis.axisBottom(xScale).ticks(major.tick).tickSize(0, 0).tickFormat(major.format);\n            }\n\n            xAxis = d3Axis.axisBottom(xScale).ticks(minor.tick).tickSize(10, 0).tickPadding(tickPadding).tickFormat(minor.format);\n\n            yAxis = d3Axis.axisLeft(yScale).ticks(yTickNumber).tickSize([0]).tickPadding(tickPadding).tickFormat(getFormattedValue);\n\n            drawGridLines(minor.tick, yTickNumber);\n        }\n\n        /**\n         * Builds containers for the chart, the axis and a wrapper for all of them\n         * NOTE: The order of drawing of this group elements is really important,\n         * as everything else will be drawn on top of them\n         * @private\n         */\n        function buildContainerGroups() {\n            var container = svg.append('g').classed('container-group', true).attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n            container.append('g').classed('x-axis-group', true).append('g').classed('axis x', true);\n            container.selectAll('.x-axis-group').append('g').classed('month-axis', true);\n            container.append('g').classed('y-axis-group axis y', true);\n            container.append('g').classed('grid-lines-group', true);\n            container.append('g').classed('chart-group', true);\n            container.append('g').classed('metadata-group', true);\n        }\n\n        /**\n         * Builds the gradient element to be used later\n         * @return {void}\n         */\n        function buildGradient() {\n            svg.select('.metadata-group').append('linearGradient').attr('id', lineGradientId).attr('x1', '0%').attr('y1', '0%').attr('x2', '100%').attr('y2', '0%').selectAll('stop').data([{ offset: '0%', color: singleLineGradientColors[0] }, { offset: '100%', color: singleLineGradientColors[1] }]).enter().append('stop').attr('offset', function (_ref5) {\n                var offset = _ref5.offset;\n                return offset;\n            }).attr('stop-color', function (_ref6) {\n                var color = _ref6.color;\n                return color;\n            });\n        }\n\n        /**\n         * Creates the x and y scales of the graph\n         * @private\n         */\n        function buildScales() {\n            var minX = d3Array.min(dataByTopic, function (_ref7) {\n                var dates = _ref7.dates;\n                return d3Array.min(dates, getDate);\n            }),\n                maxX = d3Array.max(dataByTopic, function (_ref8) {\n                var dates = _ref8.dates;\n                return d3Array.max(dates, getDate);\n            }),\n                maxY = d3Array.max(dataByTopic, function (_ref9) {\n                var dates = _ref9.dates;\n                return d3Array.max(dates, getValue);\n            }),\n                minY = d3Array.min(dataByTopic, function (_ref10) {\n                var dates = _ref10.dates;\n                return d3Array.min(dates, getValue);\n            });\n            var yScaleBottomValue = Math.abs(minY) < 0 ? Math.abs(minY) : 0;\n\n            xScale = d3Scale.scaleTime().domain([minX, maxX]).rangeRound([0, chartWidth]);\n\n            yScale = d3Scale.scaleLinear().domain([yScaleBottomValue, Math.abs(maxY)]).rangeRound([chartHeight, 0]).nice();\n\n            colorScale = d3Scale.scaleOrdinal().range(colorSchema).domain(dataByTopic.map(getTopic));\n\n            var range = colorScale.range();\n\n            topicColorMap = colorScale.domain().reduce(function (memo, item, i) {\n                memo[item] = range[i];\n\n                return memo;\n            }, {});\n        }\n\n        /**\n         * Builds the SVG element that will contain the chart\n         *\n         * @param  {HTMLElement} container DOM element that will work as the container of the graph\n         * @private\n         */\n        function buildSVG(container) {\n            if (!svg) {\n                svg = d3Selection.select(container).append('svg').classed('britechart line-chart', true);\n\n                buildContainerGroups();\n            }\n\n            svg.attr('width', width).attr('height', height);\n        }\n\n        /**\n         * Parses dates and values into JS Date objects and numbers\n         * @param  {obj} dataByTopic    Raw data grouped by topic\n         * @return {obj}                Parsed data with dataByTopic and dataByDate\n         */\n        function cleanData(_ref11) {\n            var dataByTopic = _ref11.dataByTopic,\n                dataByDate = _ref11.dataByDate;\n\n\n            if (dataByTopic) {\n                var flatData = [];\n\n                dataByTopic.forEach(function (topic) {\n                    topic.dates.forEach(function (date) {\n                        flatData.push({\n                            topicName: topic[topicNameLabel],\n                            name: topic[topicLabel],\n                            date: date[dateLabel],\n                            value: date[valueLabel]\n                        });\n                    });\n                });\n\n                // Nest data by date and format\n                dataByDate = d3Collection.nest().key(getDate).entries(flatData).map(function (d) {\n                    return {\n                        date: new Date(d.key),\n                        topics: d.values\n                    };\n                });\n\n                // Normalize dates in keys\n                dataByDate = dataByDate.map(function (d) {\n                    d.date = new Date(d.date);\n\n                    return d;\n                });\n\n                // Normalize dataByTopic\n                dataByTopic.forEach(function (kv) {\n                    kv.dates.forEach(function (d) {\n                        d.date = new Date(d[dateLabel]);\n                        d.value = +d[valueLabel];\n                    });\n                });\n            }\n\n            return { dataByTopic: dataByTopic, dataByDate: dataByDate };\n        }\n\n        /**\n         * Removes all the datapoints highlighter circles added to the marker container\n         * @return void\n         */\n        function cleanDataPointHighlights() {\n            verticalMarkerContainer.selectAll('.circle-container').remove();\n        }\n\n        /**\n         * Creates a masking clip that would help us fake an animation if the\n         * proper flag is true\n         *\n         * @return {void}\n         */\n        function createMaskingClip() {\n            if (isAnimated) {\n                // We use a white rectangle to simulate the line drawing animation\n                maskingRectangle = svg.append('rect').attr('class', 'masking-rectangle').attr('width', width).attr('height', height).attr('x', 0).attr('y', 0);\n\n                maskingRectangle.transition().duration(animationDuration).ease(ease).attr('x', width).on('end', function () {\n                    return maskingRectangle.remove();\n                });\n            }\n        }\n\n        /**\n         * Draws the x and y axis on the svg object within their\n         * respective groups\n         * @private\n         */\n        function drawAxis() {\n            svg.select('.x-axis-group .axis.x').attr('transform', 'translate(0, ' + chartHeight + ')').call(xAxis);\n\n            if (xAxisFormat !== 'custom') {\n                svg.select('.x-axis-group .month-axis').attr('transform', 'translate(0, ' + (chartHeight + monthAxisPadding) + ')').call(xMonthAxis);\n            }\n\n            svg.select('.y-axis-group.axis.y').transition().ease(ease).attr('transform', 'translate(' + -xAxisPadding.left + ', 0)').call(yAxis).call(adjustYTickLabels);\n        }\n\n        /**\n         * Draws the line elements within the chart group\n         * @private\n         */\n        function drawLines() {\n            var lines = void 0,\n                topicLine = void 0;\n\n            topicLine = d3Shape.line().curve(curveMap[lineCurve]).x(function (_ref12) {\n                var date = _ref12.date;\n                return xScale(date);\n            }).y(function (_ref13) {\n                var value = _ref13.value;\n                return yScale(value);\n            });\n\n            lines = svg.select('.chart-group').selectAll('.line').data(dataByTopic);\n\n            paths = lines.enter().append('g').attr('class', 'topic').append('path').attr('class', 'line').attr('id', function (_ref14) {\n                var topic = _ref14.topic;\n                return topic;\n            }).attr('d', function (_ref15) {\n                var dates = _ref15.dates;\n                return topicLine(dates);\n            }).style('stroke', function (d) {\n                return dataByTopic.length === 1 ? 'url(#' + lineGradientId + ')' : getLineColor(d);\n            });\n\n            lines.exit().remove();\n        }\n\n        /**\n         * Draws grid lines on the background of the chart\n         * @return void\n         */\n        function drawGridLines(xTicks, yTicks) {\n            if (grid === 'horizontal' || grid === 'full') {\n                horizontalGridLines = svg.select('.grid-lines-group').selectAll('line.horizontal-grid-line').data(yScale.ticks(yTicks)).enter().append('line').attr('class', 'horizontal-grid-line').attr('x1', -xAxisPadding.left - 30).attr('x2', chartWidth).attr('y1', function (d) {\n                    return yScale(d);\n                }).attr('y2', function (d) {\n                    return yScale(d);\n                });\n            }\n\n            if (grid === 'vertical' || grid === 'full') {\n                verticalGridLines = svg.select('.grid-lines-group').selectAll('line.vertical-grid-line').data(xScale.ticks(xTicks)).enter().append('line').attr('class', 'vertical-grid-line').attr('y1', 0).attr('y2', chartHeight).attr('x1', function (d) {\n                    return xScale(d);\n                }).attr('x2', function (d) {\n                    return xScale(d);\n                });\n            }\n\n            //draw a horizontal line to extend x-axis till the edges\n            baseLine = svg.select('.grid-lines-group').selectAll('line.extended-x-line').data([0]).enter().append('line').attr('class', 'extended-x-line').attr('x1', -xAxisPadding.left - 30).attr('x2', chartWidth).attr('y1', height - margin.bottom - margin.top).attr('y2', height - margin.bottom - margin.top);\n        }\n\n        /**\n         * Draws an overlay element over the graph\n         * @inner\n         * @return void\n         */\n        function drawHoverOverlay() {\n            overlay = svg.select('.metadata-group').append('rect').attr('class', 'overlay').attr('y1', 0).attr('y2', height).attr('height', chartHeight).attr('width', chartWidth).attr('fill', overlayColor).style('display', 'none');\n        }\n\n        /**\n         * Creates the vertical marker\n         * @return void\n         */\n        function drawVerticalMarker() {\n            verticalMarkerContainer = svg.select('.metadata-group').append('g').attr('class', 'hover-marker vertical-marker-container').attr('transform', 'translate(9999, 0)');\n\n            verticalMarkerLine = verticalMarkerContainer.selectAll('path').data([{\n                x1: 0,\n                y1: 0,\n                x2: 0,\n                y2: 0\n            }]).enter().append('line').classed('vertical-marker', true).attr('x1', 0).attr('y1', chartHeight).attr('x2', 0).attr('y2', 0);\n        }\n\n        /**\n         * Finds out which datapoint is closer to the given x position\n         * @param  {Number} x0 Date value for data point\n         * @param  {Object} d0 Previous datapoint\n         * @param  {Object} d1 Next datapoint\n         * @return {Object}    d0 or d1, the datapoint with closest date to x0\n         */\n        function findOutNearestDate(x0, d0, d1) {\n            return new Date(x0).getTime() - new Date(d0.date).getTime() > new Date(d1.date).getTime() - new Date(x0).getTime() ? d0 : d1;\n        }\n\n        /**\n         * Extract X position on the graph from a given mouse event\n         * @param  {Object} event D3 mouse event\n         * @return {Number}       Position on the x axis of the mouse\n         */\n        function getMouseXPosition(event) {\n            return d3Selection.mouse(event)[0];\n        }\n\n        /**\n         * Finds out the data entry that is closer to the given position on pixels\n         * @param  {Number} mouseX X position of the mouse\n         * @return {Object}        Data entry that is closer to that x axis position\n         */\n        function getNearestDataPoint(mouseX) {\n            var dateFromInvertedX = xScale.invert(mouseX);\n            var bisectDate = d3Array.bisector(getDate).left;\n            var dataEntryIndex = bisectDate(dataByDate, dateFromInvertedX, 1);\n            var dataEntryForXPosition = dataByDate[dataEntryIndex];\n            var previousDataEntryForXPosition = dataByDate[dataEntryIndex - 1];\n            var nearestDataPoint = void 0;\n\n            if (previousDataEntryForXPosition && dataEntryForXPosition) {\n                nearestDataPoint = findOutNearestDate(dateFromInvertedX, dataEntryForXPosition, previousDataEntryForXPosition);\n            } else {\n                nearestDataPoint = dataEntryForXPosition;\n            }\n\n            return nearestDataPoint;\n        }\n\n        /**\n         * MouseMove handler, calculates the nearest dataPoint to the cursor\n         * and updates metadata related to it\n         * @private\n         */\n        function handleMouseMove(e) {\n            var xPositionOffset = -margin.left,\n                //Arbitrary number, will love to know how to assess it\n            dataPoint = getNearestDataPoint(getMouseXPosition(e) + xPositionOffset),\n                dataPointXPosition = void 0;\n\n            if (dataPoint) {\n                dataPointXPosition = xScale(new Date(dataPoint.date));\n                // More verticalMarker to that datapoint\n                moveVerticalMarker(dataPointXPosition);\n                // Add data points highlighting\n                highlightDataPoints(dataPoint);\n                // Emit event with xPosition for tooltip or similar feature\n                dispatcher.call('customMouseMove', e, dataPoint, topicColorMap, dataPointXPosition);\n            }\n        }\n\n        /**\n         * MouseOut handler, hides overlay and removes active class on verticalMarkerLine\n         * It also resets the container of the vertical marker\n         * @private\n         */\n        function handleMouseOut(e, d) {\n            overlay.style('display', 'none');\n            verticalMarkerLine.classed('bc-is-active', false);\n            verticalMarkerContainer.attr('transform', 'translate(9999, 0)');\n\n            dispatcher.call('customMouseOut', e, d, d3Selection.mouse(e));\n        }\n\n        /**\n         * Mouseover handler, shows overlay and adds active class to verticalMarkerLine\n         * @private\n         */\n        function handleMouseOver(e, d) {\n            overlay.style('display', 'block');\n            verticalMarkerLine.classed('bc-is-active', true);\n\n            dispatcher.call('customMouseOver', e, d, d3Selection.mouse(e));\n        }\n\n        /**\n         * Creates coloured circles marking where the exact data y value is for a given data point\n         * @param  {Object} dataPoint Data point to extract info from\n         * @private\n         */\n        function highlightDataPoints(dataPoint) {\n            cleanDataPointHighlights();\n\n            var nodes = paths.nodes();\n            var nodesById = nodes.reduce(function (acc, node) {\n                acc[node.id] = node;\n\n                return acc;\n            }, {});\n\n            // Group corresponding path node with its topic, and\n            // sorting the topics based on the order of the colors,\n            // so that the order always stays constant\n            var topicsWithNode = dataPoint.topics.map(function (topic) {\n                return {\n                    topic: topic,\n                    node: nodesById[topic.name]\n                };\n            }).filter(function (_ref16) {\n                var topic = _ref16.topic;\n                return !!topic;\n            }).sort(function (a, b) {\n                return topicColorMap[a.topic.name] < topicColorMap[b.topic.name];\n            });\n\n            dataPoint.topics = topicsWithNode.map(function (_ref17) {\n                var topic = _ref17.topic;\n                return topic;\n            });\n\n            dataPoint.topics.forEach(function (_ref18, index) {\n                var name = _ref18.name;\n\n                var marker = verticalMarkerContainer.append('g').classed('circle-container', true),\n                    circleSize = 12;\n\n                marker.append('circle').classed('data-point-highlighter', true).attr('cx', circleSize).attr('cy', 0).attr('r', 5).style('stroke', topicColorMap[name]);\n\n                var path = topicsWithNode[index].node;\n                var x = xScale(new Date(dataPoint.topics[index].date));\n                var y = getPathYFromX(x, path, name);\n\n                marker.attr('transform', 'translate( ' + -circleSize + ', ' + y + ' )');\n            });\n        }\n\n        /**\n         * Finds the y coordinate of a path given an x coordinate and the line's path node.\n         * @param  {number} x The x coordinate\n         * @param  {node} path The path node element\n         * @param {*} name - The name identifier of the topic\n         * @param  {number} error The margin of error from the actual x coordinate. Default 0.01\n         * @private\n         */\n        function getPathYFromX(x, path, name, error) {\n            var key = name + '-' + x;\n\n            if (key in pathYCache) {\n                return pathYCache[key];\n            }\n\n            error = error || 0.01;\n\n            var maxIterations = 100;\n\n            var lengthStart = 0;\n            var lengthEnd = path.getTotalLength();\n            var point = path.getPointAtLength((lengthEnd + lengthStart) / 2);\n            var iterations = 0;\n\n            while (x < point.x - error || x > point.x + error) {\n                var midpoint = (lengthStart + lengthEnd) / 2;\n\n                point = path.getPointAtLength(midpoint);\n\n                if (x < point.x) {\n                    lengthEnd = midpoint;\n                } else {\n                    lengthStart = midpoint;\n                }\n\n                iterations += 1;\n                if (maxIterations < iterations) {\n                    break;\n                }\n            }\n\n            pathYCache[key] = point.y;\n\n            return pathYCache[key];\n        }\n\n        /**\n         * Helper method to update the x position of the vertical marker\n         * @param  {Object} dataPoint Data entry to extract info\n         * @return void\n         */\n        function moveVerticalMarker(verticalMarkerXPosition) {\n            verticalMarkerContainer.attr('transform', 'translate(' + verticalMarkerXPosition + ',0)');\n        }\n\n        /**\n         * Determines if we should add the tooltip related logic depending on the\n         * size of the chart and the tooltipThreshold variable value\n         * @return {Boolean} Should we build the tooltip?\n         */\n        function shouldShowTooltip() {\n            return width > tooltipThreshold;\n        }\n\n        // API Methods\n\n        /**\n         * Gets or Sets the aspect ratio of the chart\n         * @param  {Number} _x Desired aspect ratio for the graph\n         * @return { (Number | Module) } Current aspect ratio or Line Chart module to chain calls\n         * @public\n         */\n        exports.aspectRatio = function (_x) {\n            if (!arguments.length) {\n                return aspectRatio;\n            }\n            aspectRatio = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the colorSchema of the chart\n         * @param  {String[]} _x Desired colorSchema for the graph\n         * @return { colorSchema | module} Current colorSchema or Chart module to chain calls\n         * @public\n         */\n        exports.colorSchema = function (_x) {\n            if (!arguments.length) {\n                return colorSchema;\n            }\n            colorSchema = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the dateLabel of the chart\n         * @param  {Number} _x Desired dateLabel for the graph\n         * @return { dateLabel | module} Current dateLabel or Chart module to chain calls\n         * @public\n         */\n        exports.dateLabel = function (_x) {\n            if (!arguments.length) {\n                return dateLabel;\n            }\n            dateLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x axis grouping\n         * @param  {String} _x Desired format\n         * @return { (String|Module) }    Current format or module to chain calls\n         * @example\n         *     line.xAxisFormat(line.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.xAxisFormat = function (_x) {\n            if (!arguments.length) {\n                return xAxisFormat;\n            }\n            xAxisFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x format\n         * It requires a `xAxisFormat` of 'custom' in order to work.\n         * NOTE: localization not supported\n         * @param  {String} _x              Desired format for x axis\n         * @return { (String|Module) }      Current format or module to chain calls\n         */\n        exports.xAxisCustomFormat = function (_x) {\n            if (!arguments.length) {\n                return xAxisCustomFormat;\n            }\n            xAxisCustomFormat = _x;\n\n            return this;\n        };\n\n        /**\n         * Exposes the ability to force the chart to show a certain x ticks. It requires a `xAxisFormat` of 'custom' in order to work.\n         * NOTE: This value needs to be a multiple of 2, 5 or 10. They won't always work as expected, as D3 decides at the end\n         * how many and where the ticks will appear.\n         *\n         * @param  {Number} _x              Desired number of x axis ticks (multiple of 2, 5 or 10)\n         * @return { (Number|Module) }      Current number or ticks or module to chain calls\n         */\n        exports.xTicks = function (_x) {\n            if (!arguments.length) {\n                return xTicks;\n            }\n            xTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the grid mode.\n         *\n         * @param  {String} _x Desired mode for the grid ('vertical'|'horizontal'|'full')\n         * @return { String | module} Current mode of the grid or Line Chart module to chain calls\n         * @public\n         */\n        exports.grid = function (_x) {\n            if (!arguments.length) {\n                return grid;\n            }\n            grid = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the height of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return { (Number | Module) } Current height or Line Chart module to chain calls\n         * @public\n         */\n        exports.height = function (_x) {\n            if (!arguments.length) {\n                return height;\n            }\n            if (aspectRatio) {\n                width = Math.ceil(_x / aspectRatio);\n            }\n            height = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the isAnimated property of the chart, making it to animate when render.\n         * By default this is 'false'\n         *\n         * @param  {Boolean} _x Desired animation flag\n         * @return { isAnimated | module} Current isAnimated flag or Chart module\n         * @public\n         */\n        exports.isAnimated = function (_x) {\n            if (!arguments.length) {\n                return isAnimated;\n            }\n            isAnimated = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the margin of the chart\n         * @param  {Object} _x Margin object to get/set\n         * @return { (Number | Module) } Current margin or Line Chart module to chain calls\n         * @public\n         */\n        exports.margin = function (_x) {\n            if (!arguments.length) {\n                return margin;\n            }\n            margin = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the curve of the line chart\n         * @param  {curve} _x Desired curve for the lines, default 'linear'. Other options are:\n         * basis, natural, monotoneX, monotoneY, step, stepAfter, stepBefore, cardinal, and\n         * catmullRom. Visit https://github.com/d3/d3-shape#curves for more information.\n         * @return { (curve | Module) } Current line curve or Line Chart module to chain calls\n         * @public\n         */\n        exports.lineCurve = function (_x) {\n            if (!arguments.length) {\n                return lineCurve;\n            }\n            lineCurve = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the gradient colors of the line chart when there is only one line\n         * @param  {String[]} _x Desired color gradient for the line (array of two hexadecimal numbers)\n         * @return { (Number | Module) } Current color gradient or Line Chart module to chain calls\n         * @public\n         */\n        exports.lineGradient = function (_x) {\n            if (!arguments.length) {\n                return singleLineGradientColors;\n            }\n            singleLineGradientColors = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the minimum width of the graph in order to show the tooltip\n         * NOTE: This could also depend on the aspect ratio\n         * @param  {Number} _x Desired tooltip threshold for the graph\n         * @return { (Number | Module) } Current tooltip threshold or Line Chart module to chain calls\n         * @public\n         */\n        exports.tooltipThreshold = function (_x) {\n            if (!arguments.length) {\n                return tooltipThreshold;\n            }\n            tooltipThreshold = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the topicLabel of the chart\n         * @param  {Number} _x Desired topicLabel for the graph\n         * @return { topicLabel | module} Current topicLabel or Chart module to chain calls\n         * @public\n         */\n        exports.topicLabel = function (_x) {\n            if (!arguments.length) {\n                return topicLabel;\n            }\n            topicLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the valueLabel of the chart\n         * @param  {Number} _x Desired valueLabel for the graph\n         * @return { valueLabel | module} Current valueLabel or Chart module to chain calls\n         * @public\n         */\n        exports.valueLabel = function (_x) {\n            if (!arguments.length) {\n                return valueLabel;\n            }\n            valueLabel = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the number of ticks of the y axis on the chart\n         * (Default is 5)\n         * @param  {Number} _x          Desired yTicks\n         * @return {Number | module}   Current yTicks or Chart module to chain calls\n         * @public\n         */\n        exports.yTicks = function (_x) {\n            if (!arguments.length) {\n                return yTicks;\n            }\n            yTicks = _x;\n\n            return this;\n        };\n\n        /**\n         * Gets or Sets the width of the chart\n         * @param  {Number} _x Desired width for the graph\n         * @return {Number | Module} Current width or Line Chart module to chain calls\n         * @public\n         */\n        exports.width = function (_x) {\n            if (!arguments.length) {\n                return width;\n            }\n            if (aspectRatio) {\n                height = Math.ceil(_x * aspectRatio);\n            }\n            width = _x;\n\n            return this;\n        };\n\n        /**\n         * Pass language tag for the tooltip to localize the date.\n         * Feature uses Intl.DateTimeFormat, for compatability and support, refer to\n         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n         * @param  {String} _x  must be a language tag (BCP 47) like 'en-US' or 'fr-FR'\n         * @return { (String|Module) }    Current locale or module to chain calls\n         */\n        exports.locale = function (_x) {\n            if (!arguments.length) {\n                return locale;\n            }\n            locale = _x;\n\n            return this;\n        };\n\n        /**\n         * Chart exported to png and a download action is fired\n         * @public\n         */\n        exports.exportChart = function (filename, title) {\n            exportChart.call(exports, svg, filename, title);\n        };\n\n        /**\n         * Exposes an 'on' method that acts as a bridge with the event dispatcher\n         * We are going to expose this events:\n         * customMouseHover, customMouseMove and customMouseOut\n         *\n         * @return {module} Bar Chart\n         * @public\n         */\n        exports.on = function () {\n            var value = dispatcher.on.apply(dispatcher, arguments);\n\n            return value === dispatcher ? exports : value;\n        };\n\n        /**\n         * Exposes the constants to be used to force the x axis to respect a certain granularity\n         * current options: MINUTE_HOUR, HOUR_DAY, DAY_MONTH, MONTH_YEAR\n         * @example\n         *     line.xAxisCustomFormat(line.axisTimeCombinations.HOUR_DAY)\n         */\n        exports.axisTimeCombinations = axisTimeCombinations;\n\n        return exports;\n    };\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY2hhcnRzL2xpbmUuanM/OWQ2NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmRlZmluZShmdW5jdGlvbiAocmVxdWlyZSkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIHZhciBkM0FycmF5ID0gcmVxdWlyZSgnZDMtYXJyYXknKTtcbiAgICB2YXIgZDNBeGlzID0gcmVxdWlyZSgnZDMtYXhpcycpO1xuICAgIHZhciBkM0NvbGxlY3Rpb24gPSByZXF1aXJlKCdkMy1jb2xsZWN0aW9uJyk7XG4gICAgdmFyIGQzRGlzcGF0Y2ggPSByZXF1aXJlKCdkMy1kaXNwYXRjaCcpO1xuICAgIHZhciBkM0Vhc2UgPSByZXF1aXJlKCdkMy1lYXNlJyk7XG4gICAgdmFyIGQzU2NhbGUgPSByZXF1aXJlKCdkMy1zY2FsZScpO1xuICAgIHZhciBkM1NoYXBlID0gcmVxdWlyZSgnZDMtc2hhcGUnKTtcbiAgICB2YXIgZDNTZWxlY3Rpb24gPSByZXF1aXJlKCdkMy1zZWxlY3Rpb24nKTtcbiAgICB2YXIgZDNUcmFuc2l0aW9uID0gcmVxdWlyZSgnZDMtdHJhbnNpdGlvbicpO1xuICAgIHZhciBkM1RpbWVGb3JtYXQgPSByZXF1aXJlKCdkMy10aW1lLWZvcm1hdCcpO1xuXG4gICAgdmFyIF9yZXF1aXJlID0gcmVxdWlyZSgnLi9oZWxwZXJzL2V4cG9ydENoYXJ0JyksXG4gICAgICAgIGV4cG9ydENoYXJ0ID0gX3JlcXVpcmUuZXhwb3J0Q2hhcnQ7XG5cbiAgICB2YXIgY29sb3JIZWxwZXIgPSByZXF1aXJlKCcuL2hlbHBlcnMvY29sb3JzJyk7XG5cbiAgICB2YXIgX3JlcXVpcmUyID0gcmVxdWlyZSgnLi9oZWxwZXJzL2NvbW1vbicpLFxuICAgICAgICBpc0ludGVnZXIgPSBfcmVxdWlyZTIuaXNJbnRlZ2VyO1xuXG4gICAgdmFyIF9yZXF1aXJlMyA9IHJlcXVpcmUoJy4vaGVscGVycy90aW1lQXhpcycpLFxuICAgICAgICBnZXRYQXhpc1NldHRpbmdzID0gX3JlcXVpcmUzLmdldFhBeGlzU2V0dGluZ3MsXG4gICAgICAgIGdldExvY2FsZURhdGVGb3JtYXR0ZXIgPSBfcmVxdWlyZTMuZ2V0TG9jYWxlRGF0ZUZvcm1hdHRlcjtcblxuICAgIHZhciBfcmVxdWlyZTQgPSByZXF1aXJlKCcuL2hlbHBlcnMvY29uc3RhbnRzJyksXG4gICAgICAgIGF4aXNUaW1lQ29tYmluYXRpb25zID0gX3JlcXVpcmU0LmF4aXNUaW1lQ29tYmluYXRpb25zLFxuICAgICAgICBsaW5lR3JhZGllbnRJZCA9IF9yZXF1aXJlNC5saW5lR3JhZGllbnRJZDtcblxuICAgIHZhciBfcmVxdWlyZTUgPSByZXF1aXJlKCcuL2hlbHBlcnMvZm9ybWF0SGVscGVycycpLFxuICAgICAgICBmb3JtYXRJbnRlZ2VyVmFsdWUgPSBfcmVxdWlyZTUuZm9ybWF0SW50ZWdlclZhbHVlLFxuICAgICAgICBmb3JtYXREZWNpbWFsVmFsdWUgPSBfcmVxdWlyZTUuZm9ybWF0RGVjaW1hbFZhbHVlO1xuICAgIC8qKlxuICAgICAqIEB0eXBlZGVmIEQzU2VsZWN0aW9uXG4gICAgICogQHR5cGUge0FycmF5W119XG4gICAgICogQHByb3BlcnR5IHtOdW1iZXJ9IGxlbmd0aCAgICAgICAgICAgIFNpemUgb2YgdGhlIHNlbGVjdGlvblxuICAgICAqIEBwcm9wZXJ0eSB7RE9NRWxlbWVudH0gcGFyZW50Tm9kZSAgICBQYXJlbnQgb2YgdGhlIHNlbGVjdGlvblxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQHR5cGVkZWYgbGluZUNoYXJ0RGF0YUJ5VG9waWNcbiAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAqIEBwcm9wZXJ0eSB7U3RyaW5nfSB0b3BpY05hbWUgICAgVG9waWMgbmFtZSAocmVxdWlyZWQpXG4gICAgICogQHByb3BlcnR5IHtOdW1iZXJ9IHRvcGljICAgICAgICBUb3BpYyBpZGVudGlmaWVyIChyZXF1aXJlZClcbiAgICAgKiBAcHJvcGVydHkge09iamVjdFtdfSBkYXRlcyAgICAgIEFsbCBkYXRlIGVudHJpZXMgd2l0aCB2YWx1ZXMgZm9yIHRoYXQgdG9waWMgKHJlcXVpcmVkKVxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiB7XG4gICAgICogICAgIHRvcGljTmFtZTogJ1NhbiBGcmFuY2lzY28nLFxuICAgICAqICAgICB0b3BpYzogMTIzLFxuICAgICAqICAgICBkYXRlczogW1xuICAgICAqICAgICAgICAge1xuICAgICAqICAgICAgICAgICAgIGRhdGU6ICcyMDE3LTAxLTE2VDE2OjAwOjAwLTA4OjAwJyxcbiAgICAgKiAgICAgICAgICAgICB2YWx1ZTogMVxuICAgICAqICAgICAgICAgfSxcbiAgICAgKiAgICAgICAgIHtcbiAgICAgKiAgICAgICAgICAgICBkYXRlOiAnMjAxNy0wMS0xNlQxNzowMDowMC0wODowMCcsXG4gICAgICogICAgICAgICAgICAgdmFsdWU6IDJcbiAgICAgKiAgICAgICAgIH1cbiAgICAgKiAgICAgXVxuICAgICAqIH1cbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEB0eXBlZGVmIExpbmVDaGFydERhdGFcbiAgICAgKiBAdHlwZSB7T2JqZWN0W119XG4gICAgICogQHByb3BlcnR5IHtsaW5lQ2hhcnREYXRhQnlUb3BpY1tdfSBkYXRhQnlUb3BpYyAgRGF0YSB2YWx1ZXMgdG8gY2hhcnQgKHJlcXVpcmVkKVxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiB7XG4gICAgICogICAgIGRhdGFCeVRvcGljOiBbXG4gICAgICogICAgICAgICB7XG4gICAgICogICAgICAgICAgICAgdG9waWNOYW1lOiAnU2FuIEZyYW5jaXNjbycsXG4gICAgICogICAgICAgICAgICAgdG9waWM6IDEyMyxcbiAgICAgKiAgICAgICAgICAgICBkYXRlczogW1xuICAgICAqICAgICAgICAgICAgICAgICB7XG4gICAgICogICAgICAgICAgICAgICAgICAgICBkYXRlOiAnMjAxNy0wMS0xNlQxNjowMDowMC0wODowMCcsXG4gICAgICogICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMVxuICAgICAqICAgICAgICAgICAgICAgICB9LFxuICAgICAqICAgICAgICAgICAgICAgICB7XG4gICAgICogICAgICAgICAgICAgICAgICAgICBkYXRlOiAnMjAxNy0wMS0xNlQxNzowMDowMC0wODowMCcsXG4gICAgICogICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMlxuICAgICAqICAgICAgICAgICAgICAgICB9XG4gICAgICogICAgICAgICAgICAgXVxuICAgICAqICAgICAgICAgfSxcbiAgICAgKiAgICAgICAgIHtcbiAgICAgKiAgICAgICAgICAgICB0b3BpY05hbWU6ICdPdGhlcicsXG4gICAgICogICAgICAgICAgICAgdG9waWM6IDM0NSxcbiAgICAgKiAgICAgICAgICAgICBkYXRlczogW1xuICAgICAqICAgICAgICAgICAgICAgICB7Li4ufSxcbiAgICAgKiAgICAgICAgICAgICAgICAgey4uLn1cbiAgICAgKiAgICAgICAgICAgICBdXG4gICAgICogICAgICAgICB9XG4gICAgICogICAgIF1cbiAgICAgKiB9XG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBMaW5lIENoYXJ0IHJldXNhYmxlIEFQSSBtb2R1bGUgdGhhdCBhbGxvd3MgdXNcbiAgICAgKiByZW5kZXJpbmcgYSBtdWx0aSBsaW5lIGFuZCBjb25maWd1cmFibGUgY2hhcnQuXG4gICAgICpcbiAgICAgKiBAbW9kdWxlIExpbmVcbiAgICAgKiBAdHV0b3JpYWwgbGluZVxuICAgICAqIEByZXF1aXJlcyBkMy1hcnJheSwgZDMtYXhpcywgZDMtYnJ1c2gsIGQzLWVhc2UsIGQzLWZvcm1hdCwgZDMtc2NhbGUsIGQzLXNoYXBlLCBkMy1zZWxlY3Rpb24sIGQzLXRpbWUsIGQzLXRpbWUtZm9ybWF0XG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGxldCBsaW5lQ2hhcnQgPSBsaW5lKCk7XG4gICAgICpcbiAgICAgKiBsaW5lQ2hhcnRcbiAgICAgKiAgICAgLmFzcGVjdFJhdGlvKDAuNSlcbiAgICAgKiAgICAgLndpZHRoKDUwMCk7XG4gICAgICpcbiAgICAgKiBkM1NlbGVjdGlvbi5zZWxlY3QoJy5jc3Mtc2VsZWN0b3InKVxuICAgICAqICAgICAuZGF0dW0oZGF0YXNldClcbiAgICAgKiAgICAgLmNhbGwobGluZUNoYXJ0KTtcbiAgICAgKlxuICAgICAqL1xuXG5cbiAgICByZXR1cm4gZnVuY3Rpb24gbGluZSgpIHtcblxuICAgICAgICB2YXIgbWFyZ2luID0ge1xuICAgICAgICAgICAgdG9wOiA2MCxcbiAgICAgICAgICAgIHJpZ2h0OiAzMCxcbiAgICAgICAgICAgIGJvdHRvbTogNDAsXG4gICAgICAgICAgICBsZWZ0OiA3MFxuICAgICAgICB9LFxuICAgICAgICAgICAgd2lkdGggPSA5NjAsXG4gICAgICAgICAgICBoZWlnaHQgPSA1MDAsXG4gICAgICAgICAgICBhc3BlY3RSYXRpbyA9IG51bGwsXG4gICAgICAgICAgICB0b29sdGlwVGhyZXNob2xkID0gNDgwLFxuICAgICAgICAgICAgc3ZnID0gdm9pZCAwLFxuICAgICAgICAgICAgcGF0aHMgPSB2b2lkIDAsXG4gICAgICAgICAgICBjaGFydFdpZHRoID0gdm9pZCAwLFxuICAgICAgICAgICAgY2hhcnRIZWlnaHQgPSB2b2lkIDAsXG4gICAgICAgICAgICB4U2NhbGUgPSB2b2lkIDAsXG4gICAgICAgICAgICB5U2NhbGUgPSB2b2lkIDAsXG4gICAgICAgICAgICBjb2xvclNjYWxlID0gdm9pZCAwLFxuICAgICAgICAgICAgeEF4aXMgPSB2b2lkIDAsXG4gICAgICAgICAgICB4TW9udGhBeGlzID0gdm9pZCAwLFxuICAgICAgICAgICAgeUF4aXMgPSB2b2lkIDAsXG4gICAgICAgICAgICB4QXhpc1BhZGRpbmcgPSB7XG4gICAgICAgICAgICB0b3A6IDAsXG4gICAgICAgICAgICBsZWZ0OiAxNSxcbiAgICAgICAgICAgIGJvdHRvbTogMCxcbiAgICAgICAgICAgIHJpZ2h0OiAwXG4gICAgICAgIH0sXG4gICAgICAgICAgICBtb250aEF4aXNQYWRkaW5nID0gMjgsXG4gICAgICAgICAgICB0aWNrUGFkZGluZyA9IDUsXG4gICAgICAgICAgICBjb2xvclNjaGVtYSA9IGNvbG9ySGVscGVyLmNvbG9yU2NoZW1hcy5icml0ZWNoYXJ0cyxcbiAgICAgICAgICAgIHNpbmdsZUxpbmVHcmFkaWVudENvbG9ycyA9IGNvbG9ySGVscGVyLmNvbG9yR3JhZGllbnRzLmdyZWVuQmx1ZSxcbiAgICAgICAgICAgIHRvcGljQ29sb3JNYXAgPSB2b2lkIDAsXG4gICAgICAgICAgICB4QXhpc0Zvcm1hdCA9IG51bGwsXG4gICAgICAgICAgICB4VGlja3MgPSBudWxsLFxuICAgICAgICAgICAgeEF4aXNDdXN0b21Gb3JtYXQgPSBudWxsLFxuICAgICAgICAgICAgbG9jYWxlID0gdm9pZCAwLFxuICAgICAgICAgICAgaXNBbmltYXRlZCA9IGZhbHNlLFxuICAgICAgICAgICAgZWFzZSA9IGQzRWFzZS5lYXNlUXVhZEluT3V0LFxuICAgICAgICAgICAgYW5pbWF0aW9uRHVyYXRpb24gPSAxNTAwLFxuICAgICAgICAgICAgbWFza2luZ1JlY3RhbmdsZSA9IHZvaWQgMCxcbiAgICAgICAgICAgIGxpbmVDdXJ2ZSA9ICdsaW5lYXInLFxuICAgICAgICAgICAgY3VydmVNYXAgPSB7XG4gICAgICAgICAgICBsaW5lYXI6IGQzU2hhcGUuY3VydmVMaW5lYXIsXG4gICAgICAgICAgICBiYXNpczogZDNTaGFwZS5jdXJ2ZUJhc2lzLFxuICAgICAgICAgICAgY2FyZGluYWw6IGQzU2hhcGUuY3VydmVDYXJkaW5hbCxcbiAgICAgICAgICAgIGNhdG11bGxSb206IGQzU2hhcGUuY3VydmVDYXRtdWxsUm9tLFxuICAgICAgICAgICAgbW9ub3RvbmVYOiBkM1NoYXBlLmN1cnZlTW9ub3RvbmVYLFxuICAgICAgICAgICAgbW9ub3RvbmVZOiBkM1NoYXBlLmN1cnZlTW9ub3RvbmVZLFxuICAgICAgICAgICAgbmF0dXJhbDogZDNTaGFwZS5jdXJ2ZU5hdHVyYWwsXG4gICAgICAgICAgICBzdGVwOiBkM1NoYXBlLmN1cnZlU3RlcCxcbiAgICAgICAgICAgIHN0ZXBBZnRlcjogZDNTaGFwZS5jdXJ2ZVN0ZXBBZnRlcixcbiAgICAgICAgICAgIHN0ZXBCZWZvcmU6IGQzU2hhcGUuY3VydmVTdGVwQmVmb3JlXG4gICAgICAgIH0sXG4gICAgICAgICAgICBkYXRhQnlUb3BpYyA9IHZvaWQgMCxcbiAgICAgICAgICAgIGRhdGFCeURhdGUgPSB2b2lkIDAsXG4gICAgICAgICAgICBkYXRlTGFiZWwgPSAnZGF0ZScsXG4gICAgICAgICAgICB2YWx1ZUxhYmVsID0gJ3ZhbHVlJyxcbiAgICAgICAgICAgIHRvcGljTGFiZWwgPSAndG9waWMnLFxuICAgICAgICAgICAgdG9waWNOYW1lTGFiZWwgPSAndG9waWNOYW1lJyxcbiAgICAgICAgICAgIHlUaWNrcyA9IDUsXG4gICAgICAgICAgICBvdmVybGF5ID0gdm9pZCAwLFxuICAgICAgICAgICAgb3ZlcmxheUNvbG9yID0gJ3JnYmEoMCwgMCwgMCwgMCknLFxuICAgICAgICAgICAgdmVydGljYWxNYXJrZXJDb250YWluZXIgPSB2b2lkIDAsXG4gICAgICAgICAgICB2ZXJ0aWNhbE1hcmtlckxpbmUgPSB2b2lkIDAsXG4gICAgICAgICAgICB2ZXJ0aWNhbEdyaWRMaW5lcyA9IHZvaWQgMCxcbiAgICAgICAgICAgIGhvcml6b250YWxHcmlkTGluZXMgPSB2b2lkIDAsXG4gICAgICAgICAgICBncmlkID0gbnVsbCxcbiAgICAgICAgICAgIGJhc2VMaW5lID0gdm9pZCAwLFxuICAgICAgICAgICAgcGF0aFlDYWNoZSA9IHt9LFxuXG5cbiAgICAgICAgLy8gZXh0cmFjdG9yc1xuICAgICAgICBnZXREYXRlID0gZnVuY3Rpb24gZ2V0RGF0ZShfcmVmKSB7XG4gICAgICAgICAgICB2YXIgZGF0ZSA9IF9yZWYuZGF0ZTtcbiAgICAgICAgICAgIHJldHVybiBkYXRlO1xuICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0VmFsdWUgPSBmdW5jdGlvbiBnZXRWYWx1ZShfcmVmMikge1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gX3JlZjIudmFsdWU7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH0sXG4gICAgICAgICAgICBnZXRUb3BpYyA9IGZ1bmN0aW9uIGdldFRvcGljKF9yZWYzKSB7XG4gICAgICAgICAgICB2YXIgdG9waWMgPSBfcmVmMy50b3BpYztcbiAgICAgICAgICAgIHJldHVybiB0b3BpYztcbiAgICAgICAgfSxcbiAgICAgICAgICAgIGdldExpbmVDb2xvciA9IGZ1bmN0aW9uIGdldExpbmVDb2xvcihfcmVmNCkge1xuICAgICAgICAgICAgdmFyIHRvcGljID0gX3JlZjQudG9waWM7XG4gICAgICAgICAgICByZXR1cm4gY29sb3JTY2FsZSh0b3BpYyk7XG4gICAgICAgIH0sXG5cblxuICAgICAgICAvLyBldmVudHNcbiAgICAgICAgZGlzcGF0Y2hlciA9IGQzRGlzcGF0Y2guZGlzcGF0Y2goJ2N1c3RvbU1vdXNlT3ZlcicsICdjdXN0b21Nb3VzZU91dCcsICdjdXN0b21Nb3VzZU1vdmUnKTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogVGhpcyBmdW5jdGlvbiBjcmVhdGVzIHRoZSBncmFwaCB1c2luZyB0aGUgc2VsZWN0aW9uIGFuZCBkYXRhIHByb3ZpZGVkXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSB7RDNTZWxlY3Rpb259IF9zZWxlY3Rpb24gQSBkMyBzZWxlY3Rpb24gdGhhdCByZXByZXNlbnRzXG4gICAgICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSBjb250YWluZXIocykgd2hlcmUgdGhlIGNoYXJ0KHMpIHdpbGwgYmUgcmVuZGVyZWRcbiAgICAgICAgICogQHBhcmFtIHtMaW5lQ2hhcnREYXRhfSBfZGF0YSBUaGUgZGF0YSB0byBhdHRhY2ggYW5kIGdlbmVyYXRlIHRoZSBjaGFydFxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gZXhwb3J0cyhfc2VsZWN0aW9uKSB7XG4gICAgICAgICAgICBfc2VsZWN0aW9uLmVhY2goZnVuY3Rpb24gKF9kYXRhKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9jbGVhbkRhdGEgPSBjbGVhbkRhdGEoX2RhdGEpO1xuXG4gICAgICAgICAgICAgICAgZGF0YUJ5VG9waWMgPSBfY2xlYW5EYXRhLmRhdGFCeVRvcGljO1xuICAgICAgICAgICAgICAgIGRhdGFCeURhdGUgPSBfY2xlYW5EYXRhLmRhdGFCeURhdGU7XG5cblxuICAgICAgICAgICAgICAgIGNoYXJ0V2lkdGggPSB3aWR0aCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0O1xuICAgICAgICAgICAgICAgIGNoYXJ0SGVpZ2h0ID0gaGVpZ2h0IC0gbWFyZ2luLnRvcCAtIG1hcmdpbi5ib3R0b207XG5cbiAgICAgICAgICAgICAgICBidWlsZFNjYWxlcygpO1xuICAgICAgICAgICAgICAgIGJ1aWxkU1ZHKHRoaXMpO1xuICAgICAgICAgICAgICAgIGJ1aWxkQXhpcygpO1xuICAgICAgICAgICAgICAgIGRyYXdBeGlzKCk7XG4gICAgICAgICAgICAgICAgYnVpbGRHcmFkaWVudCgpO1xuICAgICAgICAgICAgICAgIGRyYXdMaW5lcygpO1xuICAgICAgICAgICAgICAgIGNyZWF0ZU1hc2tpbmdDbGlwKCk7XG5cbiAgICAgICAgICAgICAgICBpZiAoc2hvdWxkU2hvd1Rvb2x0aXAoKSkge1xuICAgICAgICAgICAgICAgICAgICBkcmF3VmVydGljYWxNYXJrZXIoKTtcbiAgICAgICAgICAgICAgICAgICAgZHJhd0hvdmVyT3ZlcmxheSgpO1xuICAgICAgICAgICAgICAgICAgICBhZGRNb3VzZUV2ZW50cygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEFkZHMgZXZlbnRzIHRvIHRoZSBjb250YWluZXIgZ3JvdXAgaWYgdGhlIGVudmlyb25tZW50IGlzIG5vdCBtb2JpbGVcbiAgICAgICAgICogQWRkaW5nOiBtb3VzZW92ZXIsIG1vdXNlb3V0IGFuZCBtb3VzZW1vdmVcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIGFkZE1vdXNlRXZlbnRzKCkge1xuICAgICAgICAgICAgc3ZnLm9uKCdtb3VzZW92ZXInLCBmdW5jdGlvbiAoZCkge1xuICAgICAgICAgICAgICAgIGhhbmRsZU1vdXNlT3Zlcih0aGlzLCBkKTtcbiAgICAgICAgICAgIH0pLm9uKCdtb3VzZW91dCcsIGZ1bmN0aW9uIChkKSB7XG4gICAgICAgICAgICAgICAgaGFuZGxlTW91c2VPdXQodGhpcywgZCk7XG4gICAgICAgICAgICB9KS5vbignbW91c2Vtb3ZlJywgZnVuY3Rpb24gKGQpIHtcbiAgICAgICAgICAgICAgICBoYW5kbGVNb3VzZU1vdmUodGhpcywgZCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBZGp1c3RzIHRoZSBwb3NpdGlvbiBvZiB0aGUgeSBheGlzJyB0aWNrc1xuICAgICAgICAgKiBAcGFyYW0gIHtEM1NlbGVjdGlvbn0gc2VsZWN0aW9uIFkgYXhpcyBncm91cFxuICAgICAgICAgKiBAcmV0dXJuIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIGFkanVzdFlUaWNrTGFiZWxzKHNlbGVjdGlvbikge1xuICAgICAgICAgICAgc2VsZWN0aW9uLnNlbGVjdEFsbCgnLnRpY2sgdGV4dCcpLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoMCwgLTcpJyk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogRm9ybWF0cyB0aGUgdmFsdWUgZGVwZW5kaW5nIG9uIGl0cyBjaGFyYWN0ZXJpc3RpY3NcbiAgICAgICAgICogQHBhcmFtICB7TnVtYmVyfSB2YWx1ZSBWYWx1ZSB0byBmb3JtYXRcbiAgICAgICAgICogQHJldHVybiB7TnVtYmVyfSAgICAgICBGb3JtYXR0ZWQgdmFsdWVcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIGdldEZvcm1hdHRlZFZhbHVlKHZhbHVlKSB7XG4gICAgICAgICAgICB2YXIgZm9ybWF0ID0gdm9pZCAwO1xuXG4gICAgICAgICAgICBpZiAoaXNJbnRlZ2VyKHZhbHVlKSkge1xuICAgICAgICAgICAgICAgIGZvcm1hdCA9IGZvcm1hdEludGVnZXJWYWx1ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZm9ybWF0ID0gZm9ybWF0RGVjaW1hbFZhbHVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gZm9ybWF0KHZhbHVlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDcmVhdGVzIHRoZSBkMyB4IGFuZCB5IGF4aXMsIHNldHRpbmcgb3JpZW50YXRpb25zXG4gICAgICAgICAqIEBwcml2YXRlXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBidWlsZEF4aXMoKSB7XG4gICAgICAgICAgICB2YXIgZGF0YVRpbWVTcGFuID0geVNjYWxlLmRvbWFpbigpWzFdIC0geVNjYWxlLmRvbWFpbigpWzBdO1xuICAgICAgICAgICAgdmFyIHlUaWNrTnVtYmVyID0gZGF0YVRpbWVTcGFuIDwgeVRpY2tzIC0gMSA/IGRhdGFUaW1lU3BhbiA6IHlUaWNrcztcbiAgICAgICAgICAgIHZhciBtaW5vciA9IHZvaWQgMCxcbiAgICAgICAgICAgICAgICBtYWpvciA9IHZvaWQgMDtcblxuICAgICAgICAgICAgaWYgKHhBeGlzRm9ybWF0ID09PSAnY3VzdG9tJyAmJiB0eXBlb2YgeEF4aXNDdXN0b21Gb3JtYXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgbWlub3IgPSB7XG4gICAgICAgICAgICAgICAgICAgIHRpY2s6IHhUaWNrcyxcbiAgICAgICAgICAgICAgICAgICAgZm9ybWF0OiBkM1RpbWVGb3JtYXQudGltZUZvcm1hdCh4QXhpc0N1c3RvbUZvcm1hdClcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIG1ham9yID0gbnVsbDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIF9nZXRYQXhpc1NldHRpbmdzID0gZ2V0WEF4aXNTZXR0aW5ncyhkYXRhQnlEYXRlLCB3aWR0aCwgeEF4aXNGb3JtYXQsIGxvY2FsZSk7XG5cbiAgICAgICAgICAgICAgICBtaW5vciA9IF9nZXRYQXhpc1NldHRpbmdzLm1pbm9yO1xuICAgICAgICAgICAgICAgIG1ham9yID0gX2dldFhBeGlzU2V0dGluZ3MubWFqb3I7XG5cblxuICAgICAgICAgICAgICAgIHhNb250aEF4aXMgPSBkM0F4aXMuYXhpc0JvdHRvbSh4U2NhbGUpLnRpY2tzKG1ham9yLnRpY2spLnRpY2tTaXplKDAsIDApLnRpY2tGb3JtYXQobWFqb3IuZm9ybWF0KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgeEF4aXMgPSBkM0F4aXMuYXhpc0JvdHRvbSh4U2NhbGUpLnRpY2tzKG1pbm9yLnRpY2spLnRpY2tTaXplKDEwLCAwKS50aWNrUGFkZGluZyh0aWNrUGFkZGluZykudGlja0Zvcm1hdChtaW5vci5mb3JtYXQpO1xuXG4gICAgICAgICAgICB5QXhpcyA9IGQzQXhpcy5heGlzTGVmdCh5U2NhbGUpLnRpY2tzKHlUaWNrTnVtYmVyKS50aWNrU2l6ZShbMF0pLnRpY2tQYWRkaW5nKHRpY2tQYWRkaW5nKS50aWNrRm9ybWF0KGdldEZvcm1hdHRlZFZhbHVlKTtcblxuICAgICAgICAgICAgZHJhd0dyaWRMaW5lcyhtaW5vci50aWNrLCB5VGlja051bWJlcik7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogQnVpbGRzIGNvbnRhaW5lcnMgZm9yIHRoZSBjaGFydCwgdGhlIGF4aXMgYW5kIGEgd3JhcHBlciBmb3IgYWxsIG9mIHRoZW1cbiAgICAgICAgICogTk9URTogVGhlIG9yZGVyIG9mIGRyYXdpbmcgb2YgdGhpcyBncm91cCBlbGVtZW50cyBpcyByZWFsbHkgaW1wb3J0YW50LFxuICAgICAgICAgKiBhcyBldmVyeXRoaW5nIGVsc2Ugd2lsbCBiZSBkcmF3biBvbiB0b3Agb2YgdGhlbVxuICAgICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gYnVpbGRDb250YWluZXJHcm91cHMoKSB7XG4gICAgICAgICAgICB2YXIgY29udGFpbmVyID0gc3ZnLmFwcGVuZCgnZycpLmNsYXNzZWQoJ2NvbnRhaW5lci1ncm91cCcsIHRydWUpLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoJyArIG1hcmdpbi5sZWZ0ICsgJywnICsgbWFyZ2luLnRvcCArICcpJyk7XG5cbiAgICAgICAgICAgIGNvbnRhaW5lci5hcHBlbmQoJ2cnKS5jbGFzc2VkKCd4LWF4aXMtZ3JvdXAnLCB0cnVlKS5hcHBlbmQoJ2cnKS5jbGFzc2VkKCdheGlzIHgnLCB0cnVlKTtcbiAgICAgICAgICAgIGNvbnRhaW5lci5zZWxlY3RBbGwoJy54LWF4aXMtZ3JvdXAnKS5hcHBlbmQoJ2cnKS5jbGFzc2VkKCdtb250aC1heGlzJywgdHJ1ZSk7XG4gICAgICAgICAgICBjb250YWluZXIuYXBwZW5kKCdnJykuY2xhc3NlZCgneS1heGlzLWdyb3VwIGF4aXMgeScsIHRydWUpO1xuICAgICAgICAgICAgY29udGFpbmVyLmFwcGVuZCgnZycpLmNsYXNzZWQoJ2dyaWQtbGluZXMtZ3JvdXAnLCB0cnVlKTtcbiAgICAgICAgICAgIGNvbnRhaW5lci5hcHBlbmQoJ2cnKS5jbGFzc2VkKCdjaGFydC1ncm91cCcsIHRydWUpO1xuICAgICAgICAgICAgY29udGFpbmVyLmFwcGVuZCgnZycpLmNsYXNzZWQoJ21ldGFkYXRhLWdyb3VwJywgdHJ1ZSk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogQnVpbGRzIHRoZSBncmFkaWVudCBlbGVtZW50IHRvIGJlIHVzZWQgbGF0ZXJcbiAgICAgICAgICogQHJldHVybiB7dm9pZH1cbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIGJ1aWxkR3JhZGllbnQoKSB7XG4gICAgICAgICAgICBzdmcuc2VsZWN0KCcubWV0YWRhdGEtZ3JvdXAnKS5hcHBlbmQoJ2xpbmVhckdyYWRpZW50JykuYXR0cignaWQnLCBsaW5lR3JhZGllbnRJZCkuYXR0cigneDEnLCAnMCUnKS5hdHRyKCd5MScsICcwJScpLmF0dHIoJ3gyJywgJzEwMCUnKS5hdHRyKCd5MicsICcwJScpLnNlbGVjdEFsbCgnc3RvcCcpLmRhdGEoW3sgb2Zmc2V0OiAnMCUnLCBjb2xvcjogc2luZ2xlTGluZUdyYWRpZW50Q29sb3JzWzBdIH0sIHsgb2Zmc2V0OiAnMTAwJScsIGNvbG9yOiBzaW5nbGVMaW5lR3JhZGllbnRDb2xvcnNbMV0gfV0pLmVudGVyKCkuYXBwZW5kKCdzdG9wJykuYXR0cignb2Zmc2V0JywgZnVuY3Rpb24gKF9yZWY1KSB7XG4gICAgICAgICAgICAgICAgdmFyIG9mZnNldCA9IF9yZWY1Lm9mZnNldDtcbiAgICAgICAgICAgICAgICByZXR1cm4gb2Zmc2V0O1xuICAgICAgICAgICAgfSkuYXR0cignc3RvcC1jb2xvcicsIGZ1bmN0aW9uIChfcmVmNikge1xuICAgICAgICAgICAgICAgIHZhciBjb2xvciA9IF9yZWY2LmNvbG9yO1xuICAgICAgICAgICAgICAgIHJldHVybiBjb2xvcjtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIENyZWF0ZXMgdGhlIHggYW5kIHkgc2NhbGVzIG9mIHRoZSBncmFwaFxuICAgICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gYnVpbGRTY2FsZXMoKSB7XG4gICAgICAgICAgICB2YXIgbWluWCA9IGQzQXJyYXkubWluKGRhdGFCeVRvcGljLCBmdW5jdGlvbiAoX3JlZjcpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGF0ZXMgPSBfcmVmNy5kYXRlcztcbiAgICAgICAgICAgICAgICByZXR1cm4gZDNBcnJheS5taW4oZGF0ZXMsIGdldERhdGUpO1xuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgbWF4WCA9IGQzQXJyYXkubWF4KGRhdGFCeVRvcGljLCBmdW5jdGlvbiAoX3JlZjgpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGF0ZXMgPSBfcmVmOC5kYXRlcztcbiAgICAgICAgICAgICAgICByZXR1cm4gZDNBcnJheS5tYXgoZGF0ZXMsIGdldERhdGUpO1xuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgbWF4WSA9IGQzQXJyYXkubWF4KGRhdGFCeVRvcGljLCBmdW5jdGlvbiAoX3JlZjkpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGF0ZXMgPSBfcmVmOS5kYXRlcztcbiAgICAgICAgICAgICAgICByZXR1cm4gZDNBcnJheS5tYXgoZGF0ZXMsIGdldFZhbHVlKTtcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIG1pblkgPSBkM0FycmF5Lm1pbihkYXRhQnlUb3BpYywgZnVuY3Rpb24gKF9yZWYxMCkge1xuICAgICAgICAgICAgICAgIHZhciBkYXRlcyA9IF9yZWYxMC5kYXRlcztcbiAgICAgICAgICAgICAgICByZXR1cm4gZDNBcnJheS5taW4oZGF0ZXMsIGdldFZhbHVlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdmFyIHlTY2FsZUJvdHRvbVZhbHVlID0gTWF0aC5hYnMobWluWSkgPCAwID8gTWF0aC5hYnMobWluWSkgOiAwO1xuXG4gICAgICAgICAgICB4U2NhbGUgPSBkM1NjYWxlLnNjYWxlVGltZSgpLmRvbWFpbihbbWluWCwgbWF4WF0pLnJhbmdlUm91bmQoWzAsIGNoYXJ0V2lkdGhdKTtcblxuICAgICAgICAgICAgeVNjYWxlID0gZDNTY2FsZS5zY2FsZUxpbmVhcigpLmRvbWFpbihbeVNjYWxlQm90dG9tVmFsdWUsIE1hdGguYWJzKG1heFkpXSkucmFuZ2VSb3VuZChbY2hhcnRIZWlnaHQsIDBdKS5uaWNlKCk7XG5cbiAgICAgICAgICAgIGNvbG9yU2NhbGUgPSBkM1NjYWxlLnNjYWxlT3JkaW5hbCgpLnJhbmdlKGNvbG9yU2NoZW1hKS5kb21haW4oZGF0YUJ5VG9waWMubWFwKGdldFRvcGljKSk7XG5cbiAgICAgICAgICAgIHZhciByYW5nZSA9IGNvbG9yU2NhbGUucmFuZ2UoKTtcblxuICAgICAgICAgICAgdG9waWNDb2xvck1hcCA9IGNvbG9yU2NhbGUuZG9tYWluKCkucmVkdWNlKGZ1bmN0aW9uIChtZW1vLCBpdGVtLCBpKSB7XG4gICAgICAgICAgICAgICAgbWVtb1tpdGVtXSA9IHJhbmdlW2ldO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIG1lbW87XG4gICAgICAgICAgICB9LCB7fSk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogQnVpbGRzIHRoZSBTVkcgZWxlbWVudCB0aGF0IHdpbGwgY29udGFpbiB0aGUgY2hhcnRcbiAgICAgICAgICpcbiAgICAgICAgICogQHBhcmFtICB7SFRNTEVsZW1lbnR9IGNvbnRhaW5lciBET00gZWxlbWVudCB0aGF0IHdpbGwgd29yayBhcyB0aGUgY29udGFpbmVyIG9mIHRoZSBncmFwaFxuICAgICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gYnVpbGRTVkcoY29udGFpbmVyKSB7XG4gICAgICAgICAgICBpZiAoIXN2Zykge1xuICAgICAgICAgICAgICAgIHN2ZyA9IGQzU2VsZWN0aW9uLnNlbGVjdChjb250YWluZXIpLmFwcGVuZCgnc3ZnJykuY2xhc3NlZCgnYnJpdGVjaGFydCBsaW5lLWNoYXJ0JywgdHJ1ZSk7XG5cbiAgICAgICAgICAgICAgICBidWlsZENvbnRhaW5lckdyb3VwcygpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBzdmcuYXR0cignd2lkdGgnLCB3aWR0aCkuYXR0cignaGVpZ2h0JywgaGVpZ2h0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBQYXJzZXMgZGF0ZXMgYW5kIHZhbHVlcyBpbnRvIEpTIERhdGUgb2JqZWN0cyBhbmQgbnVtYmVyc1xuICAgICAgICAgKiBAcGFyYW0gIHtvYmp9IGRhdGFCeVRvcGljICAgIFJhdyBkYXRhIGdyb3VwZWQgYnkgdG9waWNcbiAgICAgICAgICogQHJldHVybiB7b2JqfSAgICAgICAgICAgICAgICBQYXJzZWQgZGF0YSB3aXRoIGRhdGFCeVRvcGljIGFuZCBkYXRhQnlEYXRlXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBjbGVhbkRhdGEoX3JlZjExKSB7XG4gICAgICAgICAgICB2YXIgZGF0YUJ5VG9waWMgPSBfcmVmMTEuZGF0YUJ5VG9waWMsXG4gICAgICAgICAgICAgICAgZGF0YUJ5RGF0ZSA9IF9yZWYxMS5kYXRhQnlEYXRlO1xuXG5cbiAgICAgICAgICAgIGlmIChkYXRhQnlUb3BpYykge1xuICAgICAgICAgICAgICAgIHZhciBmbGF0RGF0YSA9IFtdO1xuXG4gICAgICAgICAgICAgICAgZGF0YUJ5VG9waWMuZm9yRWFjaChmdW5jdGlvbiAodG9waWMpIHtcbiAgICAgICAgICAgICAgICAgICAgdG9waWMuZGF0ZXMuZm9yRWFjaChmdW5jdGlvbiAoZGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmxhdERhdGEucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9waWNOYW1lOiB0b3BpY1t0b3BpY05hbWVMYWJlbF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogdG9waWNbdG9waWNMYWJlbF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZTogZGF0ZVtkYXRlTGFiZWxdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBkYXRlW3ZhbHVlTGFiZWxdXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAvLyBOZXN0IGRhdGEgYnkgZGF0ZSBhbmQgZm9ybWF0XG4gICAgICAgICAgICAgICAgZGF0YUJ5RGF0ZSA9IGQzQ29sbGVjdGlvbi5uZXN0KCkua2V5KGdldERhdGUpLmVudHJpZXMoZmxhdERhdGEpLm1hcChmdW5jdGlvbiAoZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZTogbmV3IERhdGUoZC5rZXkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgdG9waWNzOiBkLnZhbHVlc1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgLy8gTm9ybWFsaXplIGRhdGVzIGluIGtleXNcbiAgICAgICAgICAgICAgICBkYXRhQnlEYXRlID0gZGF0YUJ5RGF0ZS5tYXAoZnVuY3Rpb24gKGQpIHtcbiAgICAgICAgICAgICAgICAgICAgZC5kYXRlID0gbmV3IERhdGUoZC5kYXRlKTtcblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZDtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIC8vIE5vcm1hbGl6ZSBkYXRhQnlUb3BpY1xuICAgICAgICAgICAgICAgIGRhdGFCeVRvcGljLmZvckVhY2goZnVuY3Rpb24gKGt2KSB7XG4gICAgICAgICAgICAgICAgICAgIGt2LmRhdGVzLmZvckVhY2goZnVuY3Rpb24gKGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGQuZGF0ZSA9IG5ldyBEYXRlKGRbZGF0ZUxhYmVsXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBkLnZhbHVlID0gK2RbdmFsdWVMYWJlbF07XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4geyBkYXRhQnlUb3BpYzogZGF0YUJ5VG9waWMsIGRhdGFCeURhdGU6IGRhdGFCeURhdGUgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZW1vdmVzIGFsbCB0aGUgZGF0YXBvaW50cyBoaWdobGlnaHRlciBjaXJjbGVzIGFkZGVkIHRvIHRoZSBtYXJrZXIgY29udGFpbmVyXG4gICAgICAgICAqIEByZXR1cm4gdm9pZFxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gY2xlYW5EYXRhUG9pbnRIaWdobGlnaHRzKCkge1xuICAgICAgICAgICAgdmVydGljYWxNYXJrZXJDb250YWluZXIuc2VsZWN0QWxsKCcuY2lyY2xlLWNvbnRhaW5lcicpLnJlbW92ZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIENyZWF0ZXMgYSBtYXNraW5nIGNsaXAgdGhhdCB3b3VsZCBoZWxwIHVzIGZha2UgYW4gYW5pbWF0aW9uIGlmIHRoZVxuICAgICAgICAgKiBwcm9wZXIgZmxhZyBpcyB0cnVlXG4gICAgICAgICAqXG4gICAgICAgICAqIEByZXR1cm4ge3ZvaWR9XG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBjcmVhdGVNYXNraW5nQ2xpcCgpIHtcbiAgICAgICAgICAgIGlmIChpc0FuaW1hdGVkKSB7XG4gICAgICAgICAgICAgICAgLy8gV2UgdXNlIGEgd2hpdGUgcmVjdGFuZ2xlIHRvIHNpbXVsYXRlIHRoZSBsaW5lIGRyYXdpbmcgYW5pbWF0aW9uXG4gICAgICAgICAgICAgICAgbWFza2luZ1JlY3RhbmdsZSA9IHN2Zy5hcHBlbmQoJ3JlY3QnKS5hdHRyKCdjbGFzcycsICdtYXNraW5nLXJlY3RhbmdsZScpLmF0dHIoJ3dpZHRoJywgd2lkdGgpLmF0dHIoJ2hlaWdodCcsIGhlaWdodCkuYXR0cigneCcsIDApLmF0dHIoJ3knLCAwKTtcblxuICAgICAgICAgICAgICAgIG1hc2tpbmdSZWN0YW5nbGUudHJhbnNpdGlvbigpLmR1cmF0aW9uKGFuaW1hdGlvbkR1cmF0aW9uKS5lYXNlKGVhc2UpLmF0dHIoJ3gnLCB3aWR0aCkub24oJ2VuZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1hc2tpbmdSZWN0YW5nbGUucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogRHJhd3MgdGhlIHggYW5kIHkgYXhpcyBvbiB0aGUgc3ZnIG9iamVjdCB3aXRoaW4gdGhlaXJcbiAgICAgICAgICogcmVzcGVjdGl2ZSBncm91cHNcbiAgICAgICAgICogQHByaXZhdGVcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIGRyYXdBeGlzKCkge1xuICAgICAgICAgICAgc3ZnLnNlbGVjdCgnLngtYXhpcy1ncm91cCAuYXhpcy54JykuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgwLCAnICsgY2hhcnRIZWlnaHQgKyAnKScpLmNhbGwoeEF4aXMpO1xuXG4gICAgICAgICAgICBpZiAoeEF4aXNGb3JtYXQgIT09ICdjdXN0b20nKSB7XG4gICAgICAgICAgICAgICAgc3ZnLnNlbGVjdCgnLngtYXhpcy1ncm91cCAubW9udGgtYXhpcycpLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoMCwgJyArIChjaGFydEhlaWdodCArIG1vbnRoQXhpc1BhZGRpbmcpICsgJyknKS5jYWxsKHhNb250aEF4aXMpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBzdmcuc2VsZWN0KCcueS1heGlzLWdyb3VwLmF4aXMueScpLnRyYW5zaXRpb24oKS5lYXNlKGVhc2UpLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoJyArIC14QXhpc1BhZGRpbmcubGVmdCArICcsIDApJykuY2FsbCh5QXhpcykuY2FsbChhZGp1c3RZVGlja0xhYmVscyk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogRHJhd3MgdGhlIGxpbmUgZWxlbWVudHMgd2l0aGluIHRoZSBjaGFydCBncm91cFxuICAgICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gZHJhd0xpbmVzKCkge1xuICAgICAgICAgICAgdmFyIGxpbmVzID0gdm9pZCAwLFxuICAgICAgICAgICAgICAgIHRvcGljTGluZSA9IHZvaWQgMDtcblxuICAgICAgICAgICAgdG9waWNMaW5lID0gZDNTaGFwZS5saW5lKCkuY3VydmUoY3VydmVNYXBbbGluZUN1cnZlXSkueChmdW5jdGlvbiAoX3JlZjEyKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRhdGUgPSBfcmVmMTIuZGF0ZTtcbiAgICAgICAgICAgICAgICByZXR1cm4geFNjYWxlKGRhdGUpO1xuICAgICAgICAgICAgfSkueShmdW5jdGlvbiAoX3JlZjEzKSB7XG4gICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gX3JlZjEzLnZhbHVlO1xuICAgICAgICAgICAgICAgIHJldHVybiB5U2NhbGUodmFsdWUpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGxpbmVzID0gc3ZnLnNlbGVjdCgnLmNoYXJ0LWdyb3VwJykuc2VsZWN0QWxsKCcubGluZScpLmRhdGEoZGF0YUJ5VG9waWMpO1xuXG4gICAgICAgICAgICBwYXRocyA9IGxpbmVzLmVudGVyKCkuYXBwZW5kKCdnJykuYXR0cignY2xhc3MnLCAndG9waWMnKS5hcHBlbmQoJ3BhdGgnKS5hdHRyKCdjbGFzcycsICdsaW5lJykuYXR0cignaWQnLCBmdW5jdGlvbiAoX3JlZjE0KSB7XG4gICAgICAgICAgICAgICAgdmFyIHRvcGljID0gX3JlZjE0LnRvcGljO1xuICAgICAgICAgICAgICAgIHJldHVybiB0b3BpYztcbiAgICAgICAgICAgIH0pLmF0dHIoJ2QnLCBmdW5jdGlvbiAoX3JlZjE1KSB7XG4gICAgICAgICAgICAgICAgdmFyIGRhdGVzID0gX3JlZjE1LmRhdGVzO1xuICAgICAgICAgICAgICAgIHJldHVybiB0b3BpY0xpbmUoZGF0ZXMpO1xuICAgICAgICAgICAgfSkuc3R5bGUoJ3N0cm9rZScsIGZ1bmN0aW9uIChkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRhdGFCeVRvcGljLmxlbmd0aCA9PT0gMSA/ICd1cmwoIycgKyBsaW5lR3JhZGllbnRJZCArICcpJyA6IGdldExpbmVDb2xvcihkKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBsaW5lcy5leGl0KCkucmVtb3ZlKCk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogRHJhd3MgZ3JpZCBsaW5lcyBvbiB0aGUgYmFja2dyb3VuZCBvZiB0aGUgY2hhcnRcbiAgICAgICAgICogQHJldHVybiB2b2lkXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBkcmF3R3JpZExpbmVzKHhUaWNrcywgeVRpY2tzKSB7XG4gICAgICAgICAgICBpZiAoZ3JpZCA9PT0gJ2hvcml6b250YWwnIHx8IGdyaWQgPT09ICdmdWxsJykge1xuICAgICAgICAgICAgICAgIGhvcml6b250YWxHcmlkTGluZXMgPSBzdmcuc2VsZWN0KCcuZ3JpZC1saW5lcy1ncm91cCcpLnNlbGVjdEFsbCgnbGluZS5ob3Jpem9udGFsLWdyaWQtbGluZScpLmRhdGEoeVNjYWxlLnRpY2tzKHlUaWNrcykpLmVudGVyKCkuYXBwZW5kKCdsaW5lJykuYXR0cignY2xhc3MnLCAnaG9yaXpvbnRhbC1ncmlkLWxpbmUnKS5hdHRyKCd4MScsIC14QXhpc1BhZGRpbmcubGVmdCAtIDMwKS5hdHRyKCd4MicsIGNoYXJ0V2lkdGgpLmF0dHIoJ3kxJywgZnVuY3Rpb24gKGQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHlTY2FsZShkKTtcbiAgICAgICAgICAgICAgICB9KS5hdHRyKCd5MicsIGZ1bmN0aW9uIChkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB5U2NhbGUoZCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChncmlkID09PSAndmVydGljYWwnIHx8IGdyaWQgPT09ICdmdWxsJykge1xuICAgICAgICAgICAgICAgIHZlcnRpY2FsR3JpZExpbmVzID0gc3ZnLnNlbGVjdCgnLmdyaWQtbGluZXMtZ3JvdXAnKS5zZWxlY3RBbGwoJ2xpbmUudmVydGljYWwtZ3JpZC1saW5lJykuZGF0YSh4U2NhbGUudGlja3MoeFRpY2tzKSkuZW50ZXIoKS5hcHBlbmQoJ2xpbmUnKS5hdHRyKCdjbGFzcycsICd2ZXJ0aWNhbC1ncmlkLWxpbmUnKS5hdHRyKCd5MScsIDApLmF0dHIoJ3kyJywgY2hhcnRIZWlnaHQpLmF0dHIoJ3gxJywgZnVuY3Rpb24gKGQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHhTY2FsZShkKTtcbiAgICAgICAgICAgICAgICB9KS5hdHRyKCd4MicsIGZ1bmN0aW9uIChkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB4U2NhbGUoZCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vZHJhdyBhIGhvcml6b250YWwgbGluZSB0byBleHRlbmQgeC1heGlzIHRpbGwgdGhlIGVkZ2VzXG4gICAgICAgICAgICBiYXNlTGluZSA9IHN2Zy5zZWxlY3QoJy5ncmlkLWxpbmVzLWdyb3VwJykuc2VsZWN0QWxsKCdsaW5lLmV4dGVuZGVkLXgtbGluZScpLmRhdGEoWzBdKS5lbnRlcigpLmFwcGVuZCgnbGluZScpLmF0dHIoJ2NsYXNzJywgJ2V4dGVuZGVkLXgtbGluZScpLmF0dHIoJ3gxJywgLXhBeGlzUGFkZGluZy5sZWZ0IC0gMzApLmF0dHIoJ3gyJywgY2hhcnRXaWR0aCkuYXR0cigneTEnLCBoZWlnaHQgLSBtYXJnaW4uYm90dG9tIC0gbWFyZ2luLnRvcCkuYXR0cigneTInLCBoZWlnaHQgLSBtYXJnaW4uYm90dG9tIC0gbWFyZ2luLnRvcCk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogRHJhd3MgYW4gb3ZlcmxheSBlbGVtZW50IG92ZXIgdGhlIGdyYXBoXG4gICAgICAgICAqIEBpbm5lclxuICAgICAgICAgKiBAcmV0dXJuIHZvaWRcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIGRyYXdIb3Zlck92ZXJsYXkoKSB7XG4gICAgICAgICAgICBvdmVybGF5ID0gc3ZnLnNlbGVjdCgnLm1ldGFkYXRhLWdyb3VwJykuYXBwZW5kKCdyZWN0JykuYXR0cignY2xhc3MnLCAnb3ZlcmxheScpLmF0dHIoJ3kxJywgMCkuYXR0cigneTInLCBoZWlnaHQpLmF0dHIoJ2hlaWdodCcsIGNoYXJ0SGVpZ2h0KS5hdHRyKCd3aWR0aCcsIGNoYXJ0V2lkdGgpLmF0dHIoJ2ZpbGwnLCBvdmVybGF5Q29sb3IpLnN0eWxlKCdkaXNwbGF5JywgJ25vbmUnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDcmVhdGVzIHRoZSB2ZXJ0aWNhbCBtYXJrZXJcbiAgICAgICAgICogQHJldHVybiB2b2lkXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBkcmF3VmVydGljYWxNYXJrZXIoKSB7XG4gICAgICAgICAgICB2ZXJ0aWNhbE1hcmtlckNvbnRhaW5lciA9IHN2Zy5zZWxlY3QoJy5tZXRhZGF0YS1ncm91cCcpLmFwcGVuZCgnZycpLmF0dHIoJ2NsYXNzJywgJ2hvdmVyLW1hcmtlciB2ZXJ0aWNhbC1tYXJrZXItY29udGFpbmVyJykuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSg5OTk5LCAwKScpO1xuXG4gICAgICAgICAgICB2ZXJ0aWNhbE1hcmtlckxpbmUgPSB2ZXJ0aWNhbE1hcmtlckNvbnRhaW5lci5zZWxlY3RBbGwoJ3BhdGgnKS5kYXRhKFt7XG4gICAgICAgICAgICAgICAgeDE6IDAsXG4gICAgICAgICAgICAgICAgeTE6IDAsXG4gICAgICAgICAgICAgICAgeDI6IDAsXG4gICAgICAgICAgICAgICAgeTI6IDBcbiAgICAgICAgICAgIH1dKS5lbnRlcigpLmFwcGVuZCgnbGluZScpLmNsYXNzZWQoJ3ZlcnRpY2FsLW1hcmtlcicsIHRydWUpLmF0dHIoJ3gxJywgMCkuYXR0cigneTEnLCBjaGFydEhlaWdodCkuYXR0cigneDInLCAwKS5hdHRyKCd5MicsIDApO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEZpbmRzIG91dCB3aGljaCBkYXRhcG9pbnQgaXMgY2xvc2VyIHRvIHRoZSBnaXZlbiB4IHBvc2l0aW9uXG4gICAgICAgICAqIEBwYXJhbSAge051bWJlcn0geDAgRGF0ZSB2YWx1ZSBmb3IgZGF0YSBwb2ludFxuICAgICAgICAgKiBAcGFyYW0gIHtPYmplY3R9IGQwIFByZXZpb3VzIGRhdGFwb2ludFxuICAgICAgICAgKiBAcGFyYW0gIHtPYmplY3R9IGQxIE5leHQgZGF0YXBvaW50XG4gICAgICAgICAqIEByZXR1cm4ge09iamVjdH0gICAgZDAgb3IgZDEsIHRoZSBkYXRhcG9pbnQgd2l0aCBjbG9zZXN0IGRhdGUgdG8geDBcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIGZpbmRPdXROZWFyZXN0RGF0ZSh4MCwgZDAsIGQxKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IERhdGUoeDApLmdldFRpbWUoKSAtIG5ldyBEYXRlKGQwLmRhdGUpLmdldFRpbWUoKSA+IG5ldyBEYXRlKGQxLmRhdGUpLmdldFRpbWUoKSAtIG5ldyBEYXRlKHgwKS5nZXRUaW1lKCkgPyBkMCA6IGQxO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEV4dHJhY3QgWCBwb3NpdGlvbiBvbiB0aGUgZ3JhcGggZnJvbSBhIGdpdmVuIG1vdXNlIGV2ZW50XG4gICAgICAgICAqIEBwYXJhbSAge09iamVjdH0gZXZlbnQgRDMgbW91c2UgZXZlbnRcbiAgICAgICAgICogQHJldHVybiB7TnVtYmVyfSAgICAgICBQb3NpdGlvbiBvbiB0aGUgeCBheGlzIG9mIHRoZSBtb3VzZVxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gZ2V0TW91c2VYUG9zaXRpb24oZXZlbnQpIHtcbiAgICAgICAgICAgIHJldHVybiBkM1NlbGVjdGlvbi5tb3VzZShldmVudClbMF07XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogRmluZHMgb3V0IHRoZSBkYXRhIGVudHJ5IHRoYXQgaXMgY2xvc2VyIHRvIHRoZSBnaXZlbiBwb3NpdGlvbiBvbiBwaXhlbHNcbiAgICAgICAgICogQHBhcmFtICB7TnVtYmVyfSBtb3VzZVggWCBwb3NpdGlvbiBvZiB0aGUgbW91c2VcbiAgICAgICAgICogQHJldHVybiB7T2JqZWN0fSAgICAgICAgRGF0YSBlbnRyeSB0aGF0IGlzIGNsb3NlciB0byB0aGF0IHggYXhpcyBwb3NpdGlvblxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gZ2V0TmVhcmVzdERhdGFQb2ludChtb3VzZVgpIHtcbiAgICAgICAgICAgIHZhciBkYXRlRnJvbUludmVydGVkWCA9IHhTY2FsZS5pbnZlcnQobW91c2VYKTtcbiAgICAgICAgICAgIHZhciBiaXNlY3REYXRlID0gZDNBcnJheS5iaXNlY3RvcihnZXREYXRlKS5sZWZ0O1xuICAgICAgICAgICAgdmFyIGRhdGFFbnRyeUluZGV4ID0gYmlzZWN0RGF0ZShkYXRhQnlEYXRlLCBkYXRlRnJvbUludmVydGVkWCwgMSk7XG4gICAgICAgICAgICB2YXIgZGF0YUVudHJ5Rm9yWFBvc2l0aW9uID0gZGF0YUJ5RGF0ZVtkYXRhRW50cnlJbmRleF07XG4gICAgICAgICAgICB2YXIgcHJldmlvdXNEYXRhRW50cnlGb3JYUG9zaXRpb24gPSBkYXRhQnlEYXRlW2RhdGFFbnRyeUluZGV4IC0gMV07XG4gICAgICAgICAgICB2YXIgbmVhcmVzdERhdGFQb2ludCA9IHZvaWQgMDtcblxuICAgICAgICAgICAgaWYgKHByZXZpb3VzRGF0YUVudHJ5Rm9yWFBvc2l0aW9uICYmIGRhdGFFbnRyeUZvclhQb3NpdGlvbikge1xuICAgICAgICAgICAgICAgIG5lYXJlc3REYXRhUG9pbnQgPSBmaW5kT3V0TmVhcmVzdERhdGUoZGF0ZUZyb21JbnZlcnRlZFgsIGRhdGFFbnRyeUZvclhQb3NpdGlvbiwgcHJldmlvdXNEYXRhRW50cnlGb3JYUG9zaXRpb24pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBuZWFyZXN0RGF0YVBvaW50ID0gZGF0YUVudHJ5Rm9yWFBvc2l0aW9uO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gbmVhcmVzdERhdGFQb2ludDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBNb3VzZU1vdmUgaGFuZGxlciwgY2FsY3VsYXRlcyB0aGUgbmVhcmVzdCBkYXRhUG9pbnQgdG8gdGhlIGN1cnNvclxuICAgICAgICAgKiBhbmQgdXBkYXRlcyBtZXRhZGF0YSByZWxhdGVkIHRvIGl0XG4gICAgICAgICAqIEBwcml2YXRlXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBoYW5kbGVNb3VzZU1vdmUoZSkge1xuICAgICAgICAgICAgdmFyIHhQb3NpdGlvbk9mZnNldCA9IC1tYXJnaW4ubGVmdCxcbiAgICAgICAgICAgICAgICAvL0FyYml0cmFyeSBudW1iZXIsIHdpbGwgbG92ZSB0byBrbm93IGhvdyB0byBhc3Nlc3MgaXRcbiAgICAgICAgICAgIGRhdGFQb2ludCA9IGdldE5lYXJlc3REYXRhUG9pbnQoZ2V0TW91c2VYUG9zaXRpb24oZSkgKyB4UG9zaXRpb25PZmZzZXQpLFxuICAgICAgICAgICAgICAgIGRhdGFQb2ludFhQb3NpdGlvbiA9IHZvaWQgMDtcblxuICAgICAgICAgICAgaWYgKGRhdGFQb2ludCkge1xuICAgICAgICAgICAgICAgIGRhdGFQb2ludFhQb3NpdGlvbiA9IHhTY2FsZShuZXcgRGF0ZShkYXRhUG9pbnQuZGF0ZSkpO1xuICAgICAgICAgICAgICAgIC8vIE1vcmUgdmVydGljYWxNYXJrZXIgdG8gdGhhdCBkYXRhcG9pbnRcbiAgICAgICAgICAgICAgICBtb3ZlVmVydGljYWxNYXJrZXIoZGF0YVBvaW50WFBvc2l0aW9uKTtcbiAgICAgICAgICAgICAgICAvLyBBZGQgZGF0YSBwb2ludHMgaGlnaGxpZ2h0aW5nXG4gICAgICAgICAgICAgICAgaGlnaGxpZ2h0RGF0YVBvaW50cyhkYXRhUG9pbnQpO1xuICAgICAgICAgICAgICAgIC8vIEVtaXQgZXZlbnQgd2l0aCB4UG9zaXRpb24gZm9yIHRvb2x0aXAgb3Igc2ltaWxhciBmZWF0dXJlXG4gICAgICAgICAgICAgICAgZGlzcGF0Y2hlci5jYWxsKCdjdXN0b21Nb3VzZU1vdmUnLCBlLCBkYXRhUG9pbnQsIHRvcGljQ29sb3JNYXAsIGRhdGFQb2ludFhQb3NpdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogTW91c2VPdXQgaGFuZGxlciwgaGlkZXMgb3ZlcmxheSBhbmQgcmVtb3ZlcyBhY3RpdmUgY2xhc3Mgb24gdmVydGljYWxNYXJrZXJMaW5lXG4gICAgICAgICAqIEl0IGFsc28gcmVzZXRzIHRoZSBjb250YWluZXIgb2YgdGhlIHZlcnRpY2FsIG1hcmtlclxuICAgICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gaGFuZGxlTW91c2VPdXQoZSwgZCkge1xuICAgICAgICAgICAgb3ZlcmxheS5zdHlsZSgnZGlzcGxheScsICdub25lJyk7XG4gICAgICAgICAgICB2ZXJ0aWNhbE1hcmtlckxpbmUuY2xhc3NlZCgnYmMtaXMtYWN0aXZlJywgZmFsc2UpO1xuICAgICAgICAgICAgdmVydGljYWxNYXJrZXJDb250YWluZXIuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSg5OTk5LCAwKScpO1xuXG4gICAgICAgICAgICBkaXNwYXRjaGVyLmNhbGwoJ2N1c3RvbU1vdXNlT3V0JywgZSwgZCwgZDNTZWxlY3Rpb24ubW91c2UoZSkpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIE1vdXNlb3ZlciBoYW5kbGVyLCBzaG93cyBvdmVybGF5IGFuZCBhZGRzIGFjdGl2ZSBjbGFzcyB0byB2ZXJ0aWNhbE1hcmtlckxpbmVcbiAgICAgICAgICogQHByaXZhdGVcbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIGhhbmRsZU1vdXNlT3ZlcihlLCBkKSB7XG4gICAgICAgICAgICBvdmVybGF5LnN0eWxlKCdkaXNwbGF5JywgJ2Jsb2NrJyk7XG4gICAgICAgICAgICB2ZXJ0aWNhbE1hcmtlckxpbmUuY2xhc3NlZCgnYmMtaXMtYWN0aXZlJywgdHJ1ZSk7XG5cbiAgICAgICAgICAgIGRpc3BhdGNoZXIuY2FsbCgnY3VzdG9tTW91c2VPdmVyJywgZSwgZCwgZDNTZWxlY3Rpb24ubW91c2UoZSkpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIENyZWF0ZXMgY29sb3VyZWQgY2lyY2xlcyBtYXJraW5nIHdoZXJlIHRoZSBleGFjdCBkYXRhIHkgdmFsdWUgaXMgZm9yIGEgZ2l2ZW4gZGF0YSBwb2ludFxuICAgICAgICAgKiBAcGFyYW0gIHtPYmplY3R9IGRhdGFQb2ludCBEYXRhIHBvaW50IHRvIGV4dHJhY3QgaW5mbyBmcm9tXG4gICAgICAgICAqIEBwcml2YXRlXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBoaWdobGlnaHREYXRhUG9pbnRzKGRhdGFQb2ludCkge1xuICAgICAgICAgICAgY2xlYW5EYXRhUG9pbnRIaWdobGlnaHRzKCk7XG5cbiAgICAgICAgICAgIHZhciBub2RlcyA9IHBhdGhzLm5vZGVzKCk7XG4gICAgICAgICAgICB2YXIgbm9kZXNCeUlkID0gbm9kZXMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIG5vZGUpIHtcbiAgICAgICAgICAgICAgICBhY2Nbbm9kZS5pZF0gPSBub2RlO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgICAgICAgIH0sIHt9KTtcblxuICAgICAgICAgICAgLy8gR3JvdXAgY29ycmVzcG9uZGluZyBwYXRoIG5vZGUgd2l0aCBpdHMgdG9waWMsIGFuZFxuICAgICAgICAgICAgLy8gc29ydGluZyB0aGUgdG9waWNzIGJhc2VkIG9uIHRoZSBvcmRlciBvZiB0aGUgY29sb3JzLFxuICAgICAgICAgICAgLy8gc28gdGhhdCB0aGUgb3JkZXIgYWx3YXlzIHN0YXlzIGNvbnN0YW50XG4gICAgICAgICAgICB2YXIgdG9waWNzV2l0aE5vZGUgPSBkYXRhUG9pbnQudG9waWNzLm1hcChmdW5jdGlvbiAodG9waWMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICB0b3BpYzogdG9waWMsXG4gICAgICAgICAgICAgICAgICAgIG5vZGU6IG5vZGVzQnlJZFt0b3BpYy5uYW1lXVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9KS5maWx0ZXIoZnVuY3Rpb24gKF9yZWYxNikge1xuICAgICAgICAgICAgICAgIHZhciB0b3BpYyA9IF9yZWYxNi50b3BpYztcbiAgICAgICAgICAgICAgICByZXR1cm4gISF0b3BpYztcbiAgICAgICAgICAgIH0pLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdG9waWNDb2xvck1hcFthLnRvcGljLm5hbWVdIDwgdG9waWNDb2xvck1hcFtiLnRvcGljLm5hbWVdO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGRhdGFQb2ludC50b3BpY3MgPSB0b3BpY3NXaXRoTm9kZS5tYXAoZnVuY3Rpb24gKF9yZWYxNykge1xuICAgICAgICAgICAgICAgIHZhciB0b3BpYyA9IF9yZWYxNy50b3BpYztcbiAgICAgICAgICAgICAgICByZXR1cm4gdG9waWM7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgZGF0YVBvaW50LnRvcGljcy5mb3JFYWNoKGZ1bmN0aW9uIChfcmVmMTgsIGluZGV4KSB7XG4gICAgICAgICAgICAgICAgdmFyIG5hbWUgPSBfcmVmMTgubmFtZTtcblxuICAgICAgICAgICAgICAgIHZhciBtYXJrZXIgPSB2ZXJ0aWNhbE1hcmtlckNvbnRhaW5lci5hcHBlbmQoJ2cnKS5jbGFzc2VkKCdjaXJjbGUtY29udGFpbmVyJywgdHJ1ZSksXG4gICAgICAgICAgICAgICAgICAgIGNpcmNsZVNpemUgPSAxMjtcblxuICAgICAgICAgICAgICAgIG1hcmtlci5hcHBlbmQoJ2NpcmNsZScpLmNsYXNzZWQoJ2RhdGEtcG9pbnQtaGlnaGxpZ2h0ZXInLCB0cnVlKS5hdHRyKCdjeCcsIGNpcmNsZVNpemUpLmF0dHIoJ2N5JywgMCkuYXR0cigncicsIDUpLnN0eWxlKCdzdHJva2UnLCB0b3BpY0NvbG9yTWFwW25hbWVdKTtcblxuICAgICAgICAgICAgICAgIHZhciBwYXRoID0gdG9waWNzV2l0aE5vZGVbaW5kZXhdLm5vZGU7XG4gICAgICAgICAgICAgICAgdmFyIHggPSB4U2NhbGUobmV3IERhdGUoZGF0YVBvaW50LnRvcGljc1tpbmRleF0uZGF0ZSkpO1xuICAgICAgICAgICAgICAgIHZhciB5ID0gZ2V0UGF0aFlGcm9tWCh4LCBwYXRoLCBuYW1lKTtcblxuICAgICAgICAgICAgICAgIG1hcmtlci5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKCAnICsgLWNpcmNsZVNpemUgKyAnLCAnICsgeSArICcgKScpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvKipcbiAgICAgICAgICogRmluZHMgdGhlIHkgY29vcmRpbmF0ZSBvZiBhIHBhdGggZ2l2ZW4gYW4geCBjb29yZGluYXRlIGFuZCB0aGUgbGluZSdzIHBhdGggbm9kZS5cbiAgICAgICAgICogQHBhcmFtICB7bnVtYmVyfSB4IFRoZSB4IGNvb3JkaW5hdGVcbiAgICAgICAgICogQHBhcmFtICB7bm9kZX0gcGF0aCBUaGUgcGF0aCBub2RlIGVsZW1lbnRcbiAgICAgICAgICogQHBhcmFtIHsqfSBuYW1lIC0gVGhlIG5hbWUgaWRlbnRpZmllciBvZiB0aGUgdG9waWNcbiAgICAgICAgICogQHBhcmFtICB7bnVtYmVyfSBlcnJvciBUaGUgbWFyZ2luIG9mIGVycm9yIGZyb20gdGhlIGFjdHVhbCB4IGNvb3JkaW5hdGUuIERlZmF1bHQgMC4wMVxuICAgICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gZ2V0UGF0aFlGcm9tWCh4LCBwYXRoLCBuYW1lLCBlcnJvcikge1xuICAgICAgICAgICAgdmFyIGtleSA9IG5hbWUgKyAnLScgKyB4O1xuXG4gICAgICAgICAgICBpZiAoa2V5IGluIHBhdGhZQ2FjaGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcGF0aFlDYWNoZVtrZXldO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBlcnJvciA9IGVycm9yIHx8IDAuMDE7XG5cbiAgICAgICAgICAgIHZhciBtYXhJdGVyYXRpb25zID0gMTAwO1xuXG4gICAgICAgICAgICB2YXIgbGVuZ3RoU3RhcnQgPSAwO1xuICAgICAgICAgICAgdmFyIGxlbmd0aEVuZCA9IHBhdGguZ2V0VG90YWxMZW5ndGgoKTtcbiAgICAgICAgICAgIHZhciBwb2ludCA9IHBhdGguZ2V0UG9pbnRBdExlbmd0aCgobGVuZ3RoRW5kICsgbGVuZ3RoU3RhcnQpIC8gMik7XG4gICAgICAgICAgICB2YXIgaXRlcmF0aW9ucyA9IDA7XG5cbiAgICAgICAgICAgIHdoaWxlICh4IDwgcG9pbnQueCAtIGVycm9yIHx8IHggPiBwb2ludC54ICsgZXJyb3IpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWlkcG9pbnQgPSAobGVuZ3RoU3RhcnQgKyBsZW5ndGhFbmQpIC8gMjtcblxuICAgICAgICAgICAgICAgIHBvaW50ID0gcGF0aC5nZXRQb2ludEF0TGVuZ3RoKG1pZHBvaW50KTtcblxuICAgICAgICAgICAgICAgIGlmICh4IDwgcG9pbnQueCkge1xuICAgICAgICAgICAgICAgICAgICBsZW5ndGhFbmQgPSBtaWRwb2ludDtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBsZW5ndGhTdGFydCA9IG1pZHBvaW50O1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGl0ZXJhdGlvbnMgKz0gMTtcbiAgICAgICAgICAgICAgICBpZiAobWF4SXRlcmF0aW9ucyA8IGl0ZXJhdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBwYXRoWUNhY2hlW2tleV0gPSBwb2ludC55O1xuXG4gICAgICAgICAgICByZXR1cm4gcGF0aFlDYWNoZVtrZXldO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEhlbHBlciBtZXRob2QgdG8gdXBkYXRlIHRoZSB4IHBvc2l0aW9uIG9mIHRoZSB2ZXJ0aWNhbCBtYXJrZXJcbiAgICAgICAgICogQHBhcmFtICB7T2JqZWN0fSBkYXRhUG9pbnQgRGF0YSBlbnRyeSB0byBleHRyYWN0IGluZm9cbiAgICAgICAgICogQHJldHVybiB2b2lkXG4gICAgICAgICAqL1xuICAgICAgICBmdW5jdGlvbiBtb3ZlVmVydGljYWxNYXJrZXIodmVydGljYWxNYXJrZXJYUG9zaXRpb24pIHtcbiAgICAgICAgICAgIHZlcnRpY2FsTWFya2VyQ29udGFpbmVyLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoJyArIHZlcnRpY2FsTWFya2VyWFBvc2l0aW9uICsgJywwKScpO1xuICAgICAgICB9XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIERldGVybWluZXMgaWYgd2Ugc2hvdWxkIGFkZCB0aGUgdG9vbHRpcCByZWxhdGVkIGxvZ2ljIGRlcGVuZGluZyBvbiB0aGVcbiAgICAgICAgICogc2l6ZSBvZiB0aGUgY2hhcnQgYW5kIHRoZSB0b29sdGlwVGhyZXNob2xkIHZhcmlhYmxlIHZhbHVlXG4gICAgICAgICAqIEByZXR1cm4ge0Jvb2xlYW59IFNob3VsZCB3ZSBidWlsZCB0aGUgdG9vbHRpcD9cbiAgICAgICAgICovXG4gICAgICAgIGZ1bmN0aW9uIHNob3VsZFNob3dUb29sdGlwKCkge1xuICAgICAgICAgICAgcmV0dXJuIHdpZHRoID4gdG9vbHRpcFRocmVzaG9sZDtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEFQSSBNZXRob2RzXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldHMgb3IgU2V0cyB0aGUgYXNwZWN0IHJhdGlvIG9mIHRoZSBjaGFydFxuICAgICAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IF94IERlc2lyZWQgYXNwZWN0IHJhdGlvIGZvciB0aGUgZ3JhcGhcbiAgICAgICAgICogQHJldHVybiB7IChOdW1iZXIgfCBNb2R1bGUpIH0gQ3VycmVudCBhc3BlY3QgcmF0aW8gb3IgTGluZSBDaGFydCBtb2R1bGUgdG8gY2hhaW4gY2FsbHNcbiAgICAgICAgICogQHB1YmxpY1xuICAgICAgICAgKi9cbiAgICAgICAgZXhwb3J0cy5hc3BlY3RSYXRpbyA9IGZ1bmN0aW9uIChfeCkge1xuICAgICAgICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFzcGVjdFJhdGlvO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXNwZWN0UmF0aW8gPSBfeDtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldHMgb3IgU2V0cyB0aGUgY29sb3JTY2hlbWEgb2YgdGhlIGNoYXJ0XG4gICAgICAgICAqIEBwYXJhbSAge1N0cmluZ1tdfSBfeCBEZXNpcmVkIGNvbG9yU2NoZW1hIGZvciB0aGUgZ3JhcGhcbiAgICAgICAgICogQHJldHVybiB7IGNvbG9yU2NoZW1hIHwgbW9kdWxlfSBDdXJyZW50IGNvbG9yU2NoZW1hIG9yIENoYXJ0IG1vZHVsZSB0byBjaGFpbiBjYWxsc1xuICAgICAgICAgKiBAcHVibGljXG4gICAgICAgICAqL1xuICAgICAgICBleHBvcnRzLmNvbG9yU2NoZW1hID0gZnVuY3Rpb24gKF94KSB7XG4gICAgICAgICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29sb3JTY2hlbWE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb2xvclNjaGVtYSA9IF94O1xuXG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogR2V0cyBvciBTZXRzIHRoZSBkYXRlTGFiZWwgb2YgdGhlIGNoYXJ0XG4gICAgICAgICAqIEBwYXJhbSAge051bWJlcn0gX3ggRGVzaXJlZCBkYXRlTGFiZWwgZm9yIHRoZSBncmFwaFxuICAgICAgICAgKiBAcmV0dXJuIHsgZGF0ZUxhYmVsIHwgbW9kdWxlfSBDdXJyZW50IGRhdGVMYWJlbCBvciBDaGFydCBtb2R1bGUgdG8gY2hhaW4gY2FsbHNcbiAgICAgICAgICogQHB1YmxpY1xuICAgICAgICAgKi9cbiAgICAgICAgZXhwb3J0cy5kYXRlTGFiZWwgPSBmdW5jdGlvbiAoX3gpIHtcbiAgICAgICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBkYXRlTGFiZWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkYXRlTGFiZWwgPSBfeDtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEV4cG9zZXMgdGhlIGFiaWxpdHkgdG8gZm9yY2UgdGhlIGNoYXJ0IHRvIHNob3cgYSBjZXJ0YWluIHggYXhpcyBncm91cGluZ1xuICAgICAgICAgKiBAcGFyYW0gIHtTdHJpbmd9IF94IERlc2lyZWQgZm9ybWF0XG4gICAgICAgICAqIEByZXR1cm4geyAoU3RyaW5nfE1vZHVsZSkgfSAgICBDdXJyZW50IGZvcm1hdCBvciBtb2R1bGUgdG8gY2hhaW4gY2FsbHNcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogICAgIGxpbmUueEF4aXNGb3JtYXQobGluZS5heGlzVGltZUNvbWJpbmF0aW9ucy5IT1VSX0RBWSlcbiAgICAgICAgICovXG4gICAgICAgIGV4cG9ydHMueEF4aXNGb3JtYXQgPSBmdW5jdGlvbiAoX3gpIHtcbiAgICAgICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB4QXhpc0Zvcm1hdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHhBeGlzRm9ybWF0ID0gX3g7XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBFeHBvc2VzIHRoZSBhYmlsaXR5IHRvIGZvcmNlIHRoZSBjaGFydCB0byBzaG93IGEgY2VydGFpbiB4IGZvcm1hdFxuICAgICAgICAgKiBJdCByZXF1aXJlcyBhIGB4QXhpc0Zvcm1hdGAgb2YgJ2N1c3RvbScgaW4gb3JkZXIgdG8gd29yay5cbiAgICAgICAgICogTk9URTogbG9jYWxpemF0aW9uIG5vdCBzdXBwb3J0ZWRcbiAgICAgICAgICogQHBhcmFtICB7U3RyaW5nfSBfeCAgICAgICAgICAgICAgRGVzaXJlZCBmb3JtYXQgZm9yIHggYXhpc1xuICAgICAgICAgKiBAcmV0dXJuIHsgKFN0cmluZ3xNb2R1bGUpIH0gICAgICBDdXJyZW50IGZvcm1hdCBvciBtb2R1bGUgdG8gY2hhaW4gY2FsbHNcbiAgICAgICAgICovXG4gICAgICAgIGV4cG9ydHMueEF4aXNDdXN0b21Gb3JtYXQgPSBmdW5jdGlvbiAoX3gpIHtcbiAgICAgICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB4QXhpc0N1c3RvbUZvcm1hdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHhBeGlzQ3VzdG9tRm9ybWF0ID0gX3g7XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBFeHBvc2VzIHRoZSBhYmlsaXR5IHRvIGZvcmNlIHRoZSBjaGFydCB0byBzaG93IGEgY2VydGFpbiB4IHRpY2tzLiBJdCByZXF1aXJlcyBhIGB4QXhpc0Zvcm1hdGAgb2YgJ2N1c3RvbScgaW4gb3JkZXIgdG8gd29yay5cbiAgICAgICAgICogTk9URTogVGhpcyB2YWx1ZSBuZWVkcyB0byBiZSBhIG11bHRpcGxlIG9mIDIsIDUgb3IgMTAuIFRoZXkgd29uJ3QgYWx3YXlzIHdvcmsgYXMgZXhwZWN0ZWQsIGFzIEQzIGRlY2lkZXMgYXQgdGhlIGVuZFxuICAgICAgICAgKiBob3cgbWFueSBhbmQgd2hlcmUgdGhlIHRpY2tzIHdpbGwgYXBwZWFyLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IF94ICAgICAgICAgICAgICBEZXNpcmVkIG51bWJlciBvZiB4IGF4aXMgdGlja3MgKG11bHRpcGxlIG9mIDIsIDUgb3IgMTApXG4gICAgICAgICAqIEByZXR1cm4geyAoTnVtYmVyfE1vZHVsZSkgfSAgICAgIEN1cnJlbnQgbnVtYmVyIG9yIHRpY2tzIG9yIG1vZHVsZSB0byBjaGFpbiBjYWxsc1xuICAgICAgICAgKi9cbiAgICAgICAgZXhwb3J0cy54VGlja3MgPSBmdW5jdGlvbiAoX3gpIHtcbiAgICAgICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB4VGlja3M7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB4VGlja3MgPSBfeDtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldHMgb3IgU2V0cyB0aGUgZ3JpZCBtb2RlLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0gIHtTdHJpbmd9IF94IERlc2lyZWQgbW9kZSBmb3IgdGhlIGdyaWQgKCd2ZXJ0aWNhbCd8J2hvcml6b250YWwnfCdmdWxsJylcbiAgICAgICAgICogQHJldHVybiB7IFN0cmluZyB8IG1vZHVsZX0gQ3VycmVudCBtb2RlIG9mIHRoZSBncmlkIG9yIExpbmUgQ2hhcnQgbW9kdWxlIHRvIGNoYWluIGNhbGxzXG4gICAgICAgICAqIEBwdWJsaWNcbiAgICAgICAgICovXG4gICAgICAgIGV4cG9ydHMuZ3JpZCA9IGZ1bmN0aW9uIChfeCkge1xuICAgICAgICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGdyaWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBncmlkID0gX3g7XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBHZXRzIG9yIFNldHMgdGhlIGhlaWdodCBvZiB0aGUgY2hhcnRcbiAgICAgICAgICogQHBhcmFtICB7TnVtYmVyfSBfeCBEZXNpcmVkIHdpZHRoIGZvciB0aGUgZ3JhcGhcbiAgICAgICAgICogQHJldHVybiB7IChOdW1iZXIgfCBNb2R1bGUpIH0gQ3VycmVudCBoZWlnaHQgb3IgTGluZSBDaGFydCBtb2R1bGUgdG8gY2hhaW4gY2FsbHNcbiAgICAgICAgICogQHB1YmxpY1xuICAgICAgICAgKi9cbiAgICAgICAgZXhwb3J0cy5oZWlnaHQgPSBmdW5jdGlvbiAoX3gpIHtcbiAgICAgICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBoZWlnaHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYXNwZWN0UmF0aW8pIHtcbiAgICAgICAgICAgICAgICB3aWR0aCA9IE1hdGguY2VpbChfeCAvIGFzcGVjdFJhdGlvKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGhlaWdodCA9IF94O1xuXG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogR2V0cyBvciBTZXRzIHRoZSBpc0FuaW1hdGVkIHByb3BlcnR5IG9mIHRoZSBjaGFydCwgbWFraW5nIGl0IHRvIGFuaW1hdGUgd2hlbiByZW5kZXIuXG4gICAgICAgICAqIEJ5IGRlZmF1bHQgdGhpcyBpcyAnZmFsc2UnXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwYXJhbSAge0Jvb2xlYW59IF94IERlc2lyZWQgYW5pbWF0aW9uIGZsYWdcbiAgICAgICAgICogQHJldHVybiB7IGlzQW5pbWF0ZWQgfCBtb2R1bGV9IEN1cnJlbnQgaXNBbmltYXRlZCBmbGFnIG9yIENoYXJ0IG1vZHVsZVxuICAgICAgICAgKiBAcHVibGljXG4gICAgICAgICAqL1xuICAgICAgICBleHBvcnRzLmlzQW5pbWF0ZWQgPSBmdW5jdGlvbiAoX3gpIHtcbiAgICAgICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpc0FuaW1hdGVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaXNBbmltYXRlZCA9IF94O1xuXG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogR2V0cyBvciBTZXRzIHRoZSBtYXJnaW4gb2YgdGhlIGNoYXJ0XG4gICAgICAgICAqIEBwYXJhbSAge09iamVjdH0gX3ggTWFyZ2luIG9iamVjdCB0byBnZXQvc2V0XG4gICAgICAgICAqIEByZXR1cm4geyAoTnVtYmVyIHwgTW9kdWxlKSB9IEN1cnJlbnQgbWFyZ2luIG9yIExpbmUgQ2hhcnQgbW9kdWxlIHRvIGNoYWluIGNhbGxzXG4gICAgICAgICAqIEBwdWJsaWNcbiAgICAgICAgICovXG4gICAgICAgIGV4cG9ydHMubWFyZ2luID0gZnVuY3Rpb24gKF94KSB7XG4gICAgICAgICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWFyZ2luO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbWFyZ2luID0gX3g7XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBHZXRzIG9yIFNldHMgdGhlIGN1cnZlIG9mIHRoZSBsaW5lIGNoYXJ0XG4gICAgICAgICAqIEBwYXJhbSAge2N1cnZlfSBfeCBEZXNpcmVkIGN1cnZlIGZvciB0aGUgbGluZXMsIGRlZmF1bHQgJ2xpbmVhcicuIE90aGVyIG9wdGlvbnMgYXJlOlxuICAgICAgICAgKiBiYXNpcywgbmF0dXJhbCwgbW9ub3RvbmVYLCBtb25vdG9uZVksIHN0ZXAsIHN0ZXBBZnRlciwgc3RlcEJlZm9yZSwgY2FyZGluYWwsIGFuZFxuICAgICAgICAgKiBjYXRtdWxsUm9tLiBWaXNpdCBodHRwczovL2dpdGh1Yi5jb20vZDMvZDMtc2hhcGUjY3VydmVzIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICAgICAgICAgKiBAcmV0dXJuIHsgKGN1cnZlIHwgTW9kdWxlKSB9IEN1cnJlbnQgbGluZSBjdXJ2ZSBvciBMaW5lIENoYXJ0IG1vZHVsZSB0byBjaGFpbiBjYWxsc1xuICAgICAgICAgKiBAcHVibGljXG4gICAgICAgICAqL1xuICAgICAgICBleHBvcnRzLmxpbmVDdXJ2ZSA9IGZ1bmN0aW9uIChfeCkge1xuICAgICAgICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxpbmVDdXJ2ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpbmVDdXJ2ZSA9IF94O1xuXG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogR2V0cyBvciBTZXRzIHRoZSBncmFkaWVudCBjb2xvcnMgb2YgdGhlIGxpbmUgY2hhcnQgd2hlbiB0aGVyZSBpcyBvbmx5IG9uZSBsaW5lXG4gICAgICAgICAqIEBwYXJhbSAge1N0cmluZ1tdfSBfeCBEZXNpcmVkIGNvbG9yIGdyYWRpZW50IGZvciB0aGUgbGluZSAoYXJyYXkgb2YgdHdvIGhleGFkZWNpbWFsIG51bWJlcnMpXG4gICAgICAgICAqIEByZXR1cm4geyAoTnVtYmVyIHwgTW9kdWxlKSB9IEN1cnJlbnQgY29sb3IgZ3JhZGllbnQgb3IgTGluZSBDaGFydCBtb2R1bGUgdG8gY2hhaW4gY2FsbHNcbiAgICAgICAgICogQHB1YmxpY1xuICAgICAgICAgKi9cbiAgICAgICAgZXhwb3J0cy5saW5lR3JhZGllbnQgPSBmdW5jdGlvbiAoX3gpIHtcbiAgICAgICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBzaW5nbGVMaW5lR3JhZGllbnRDb2xvcnM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzaW5nbGVMaW5lR3JhZGllbnRDb2xvcnMgPSBfeDtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldHMgb3IgU2V0cyB0aGUgbWluaW11bSB3aWR0aCBvZiB0aGUgZ3JhcGggaW4gb3JkZXIgdG8gc2hvdyB0aGUgdG9vbHRpcFxuICAgICAgICAgKiBOT1RFOiBUaGlzIGNvdWxkIGFsc28gZGVwZW5kIG9uIHRoZSBhc3BlY3QgcmF0aW9cbiAgICAgICAgICogQHBhcmFtICB7TnVtYmVyfSBfeCBEZXNpcmVkIHRvb2x0aXAgdGhyZXNob2xkIGZvciB0aGUgZ3JhcGhcbiAgICAgICAgICogQHJldHVybiB7IChOdW1iZXIgfCBNb2R1bGUpIH0gQ3VycmVudCB0b29sdGlwIHRocmVzaG9sZCBvciBMaW5lIENoYXJ0IG1vZHVsZSB0byBjaGFpbiBjYWxsc1xuICAgICAgICAgKiBAcHVibGljXG4gICAgICAgICAqL1xuICAgICAgICBleHBvcnRzLnRvb2x0aXBUaHJlc2hvbGQgPSBmdW5jdGlvbiAoX3gpIHtcbiAgICAgICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0b29sdGlwVGhyZXNob2xkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdG9vbHRpcFRocmVzaG9sZCA9IF94O1xuXG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogR2V0cyBvciBTZXRzIHRoZSB0b3BpY0xhYmVsIG9mIHRoZSBjaGFydFxuICAgICAgICAgKiBAcGFyYW0gIHtOdW1iZXJ9IF94IERlc2lyZWQgdG9waWNMYWJlbCBmb3IgdGhlIGdyYXBoXG4gICAgICAgICAqIEByZXR1cm4geyB0b3BpY0xhYmVsIHwgbW9kdWxlfSBDdXJyZW50IHRvcGljTGFiZWwgb3IgQ2hhcnQgbW9kdWxlIHRvIGNoYWluIGNhbGxzXG4gICAgICAgICAqIEBwdWJsaWNcbiAgICAgICAgICovXG4gICAgICAgIGV4cG9ydHMudG9waWNMYWJlbCA9IGZ1bmN0aW9uIChfeCkge1xuICAgICAgICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRvcGljTGFiZWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0b3BpY0xhYmVsID0gX3g7XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBHZXRzIG9yIFNldHMgdGhlIHZhbHVlTGFiZWwgb2YgdGhlIGNoYXJ0XG4gICAgICAgICAqIEBwYXJhbSAge051bWJlcn0gX3ggRGVzaXJlZCB2YWx1ZUxhYmVsIGZvciB0aGUgZ3JhcGhcbiAgICAgICAgICogQHJldHVybiB7IHZhbHVlTGFiZWwgfCBtb2R1bGV9IEN1cnJlbnQgdmFsdWVMYWJlbCBvciBDaGFydCBtb2R1bGUgdG8gY2hhaW4gY2FsbHNcbiAgICAgICAgICogQHB1YmxpY1xuICAgICAgICAgKi9cbiAgICAgICAgZXhwb3J0cy52YWx1ZUxhYmVsID0gZnVuY3Rpb24gKF94KSB7XG4gICAgICAgICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWVMYWJlbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhbHVlTGFiZWwgPSBfeDtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdldHMgb3IgU2V0cyB0aGUgbnVtYmVyIG9mIHRpY2tzIG9mIHRoZSB5IGF4aXMgb24gdGhlIGNoYXJ0XG4gICAgICAgICAqIChEZWZhdWx0IGlzIDUpXG4gICAgICAgICAqIEBwYXJhbSAge051bWJlcn0gX3ggICAgICAgICAgRGVzaXJlZCB5VGlja3NcbiAgICAgICAgICogQHJldHVybiB7TnVtYmVyIHwgbW9kdWxlfSAgIEN1cnJlbnQgeVRpY2tzIG9yIENoYXJ0IG1vZHVsZSB0byBjaGFpbiBjYWxsc1xuICAgICAgICAgKiBAcHVibGljXG4gICAgICAgICAqL1xuICAgICAgICBleHBvcnRzLnlUaWNrcyA9IGZ1bmN0aW9uIChfeCkge1xuICAgICAgICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHlUaWNrcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHlUaWNrcyA9IF94O1xuXG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogR2V0cyBvciBTZXRzIHRoZSB3aWR0aCBvZiB0aGUgY2hhcnRcbiAgICAgICAgICogQHBhcmFtICB7TnVtYmVyfSBfeCBEZXNpcmVkIHdpZHRoIGZvciB0aGUgZ3JhcGhcbiAgICAgICAgICogQHJldHVybiB7TnVtYmVyIHwgTW9kdWxlfSBDdXJyZW50IHdpZHRoIG9yIExpbmUgQ2hhcnQgbW9kdWxlIHRvIGNoYWluIGNhbGxzXG4gICAgICAgICAqIEBwdWJsaWNcbiAgICAgICAgICovXG4gICAgICAgIGV4cG9ydHMud2lkdGggPSBmdW5jdGlvbiAoX3gpIHtcbiAgICAgICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB3aWR0aDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChhc3BlY3RSYXRpbykge1xuICAgICAgICAgICAgICAgIGhlaWdodCA9IE1hdGguY2VpbChfeCAqIGFzcGVjdFJhdGlvKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHdpZHRoID0gX3g7XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBQYXNzIGxhbmd1YWdlIHRhZyBmb3IgdGhlIHRvb2x0aXAgdG8gbG9jYWxpemUgdGhlIGRhdGUuXG4gICAgICAgICAqIEZlYXR1cmUgdXNlcyBJbnRsLkRhdGVUaW1lRm9ybWF0LCBmb3IgY29tcGF0YWJpbGl0eSBhbmQgc3VwcG9ydCwgcmVmZXIgdG9cbiAgICAgICAgICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvRGF0ZVRpbWVGb3JtYXRcbiAgICAgICAgICogQHBhcmFtICB7U3RyaW5nfSBfeCAgbXVzdCBiZSBhIGxhbmd1YWdlIHRhZyAoQkNQIDQ3KSBsaWtlICdlbi1VUycgb3IgJ2ZyLUZSJ1xuICAgICAgICAgKiBAcmV0dXJuIHsgKFN0cmluZ3xNb2R1bGUpIH0gICAgQ3VycmVudCBsb2NhbGUgb3IgbW9kdWxlIHRvIGNoYWluIGNhbGxzXG4gICAgICAgICAqL1xuICAgICAgICBleHBvcnRzLmxvY2FsZSA9IGZ1bmN0aW9uIChfeCkge1xuICAgICAgICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxvY2FsZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxvY2FsZSA9IF94O1xuXG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogQ2hhcnQgZXhwb3J0ZWQgdG8gcG5nIGFuZCBhIGRvd25sb2FkIGFjdGlvbiBpcyBmaXJlZFxuICAgICAgICAgKiBAcHVibGljXG4gICAgICAgICAqL1xuICAgICAgICBleHBvcnRzLmV4cG9ydENoYXJ0ID0gZnVuY3Rpb24gKGZpbGVuYW1lLCB0aXRsZSkge1xuICAgICAgICAgICAgZXhwb3J0Q2hhcnQuY2FsbChleHBvcnRzLCBzdmcsIGZpbGVuYW1lLCB0aXRsZSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEV4cG9zZXMgYW4gJ29uJyBtZXRob2QgdGhhdCBhY3RzIGFzIGEgYnJpZGdlIHdpdGggdGhlIGV2ZW50IGRpc3BhdGNoZXJcbiAgICAgICAgICogV2UgYXJlIGdvaW5nIHRvIGV4cG9zZSB0aGlzIGV2ZW50czpcbiAgICAgICAgICogY3VzdG9tTW91c2VIb3ZlciwgY3VzdG9tTW91c2VNb3ZlIGFuZCBjdXN0b21Nb3VzZU91dFxuICAgICAgICAgKlxuICAgICAgICAgKiBAcmV0dXJuIHttb2R1bGV9IEJhciBDaGFydFxuICAgICAgICAgKiBAcHVibGljXG4gICAgICAgICAqL1xuICAgICAgICBleHBvcnRzLm9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gZGlzcGF0Y2hlci5vbi5hcHBseShkaXNwYXRjaGVyLCBhcmd1bWVudHMpO1xuXG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgPT09IGRpc3BhdGNoZXIgPyBleHBvcnRzIDogdmFsdWU7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEV4cG9zZXMgdGhlIGNvbnN0YW50cyB0byBiZSB1c2VkIHRvIGZvcmNlIHRoZSB4IGF4aXMgdG8gcmVzcGVjdCBhIGNlcnRhaW4gZ3JhbnVsYXJpdHlcbiAgICAgICAgICogY3VycmVudCBvcHRpb25zOiBNSU5VVEVfSE9VUiwgSE9VUl9EQVksIERBWV9NT05USCwgTU9OVEhfWUVBUlxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiAgICAgbGluZS54QXhpc0N1c3RvbUZvcm1hdChsaW5lLmF4aXNUaW1lQ29tYmluYXRpb25zLkhPVVJfREFZKVxuICAgICAgICAgKi9cbiAgICAgICAgZXhwb3J0cy5heGlzVGltZUNvbWJpbmF0aW9ucyA9IGF4aXNUaW1lQ29tYmluYXRpb25zO1xuXG4gICAgICAgIHJldHVybiBleHBvcnRzO1xuICAgIH07XG59KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9jaGFydHMvbGluZS5qc1xuLy8gbW9kdWxlIGlkID0gNTJcbi8vIG1vZHVsZSBjaHVua3MgPSA1Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\n!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require) {\n    'use strict';\n\n    var _ = __webpack_require__(26),\n        jsonAllDatas = __webpack_require__(54),\n        jsonFiveTopics = __webpack_require__(55),\n        jsonOneSource = __webpack_require__(56),\n        jsonMultiMonthValueRange = __webpack_require__(57),\n        jsonHourDateRange = __webpack_require__(58),\n        jsonSmallValueRange = __webpack_require__(59);\n\n    function LineDataBuilder(config) {\n        this.Klass = LineDataBuilder;\n\n        this.config = _.defaults({}, config);\n\n        this.with5Topics = function () {\n            var attributes = _.extend({}, this.config, jsonFiveTopics);\n\n            return new this.Klass(attributes);\n        };\n\n        this.withOneSource = function () {\n            var attributes = _.extend({}, this.config, jsonOneSource);\n\n            return new this.Klass(attributes);\n        };\n\n        this.withSmallValueRange = function () {\n            var attributes = _.extend({}, this.config, jsonSmallValueRange);\n\n            return new this.Klass(attributes);\n        };\n\n        this.withMultiMonthValueRange = function () {\n            var attributes = _.extend({}, this.config, jsonMultiMonthValueRange);\n\n            return new this.Klass(attributes);\n        };\n\n        this.withHourDateRange = function () {\n            var attributes = _.extend({}, this.config, jsonHourDateRange);\n\n            return new this.Klass(attributes);\n        };\n\n        this.withAllDatas = function () {\n            var attributes = _.extend({}, this.config, jsonAllDatas);\n\n            return new this.Klass(attributes);\n        };\n\n        /**\n         * Sets the path for fetching the data\n         * @param  {string} path Desired path for test data\n         * @return {LineDataBuilder}      Builder object\n         */\n        this.withPath = function (path) {\n            var attributes = _.extend({}, this.config, {\n                jsonURL: path\n            });\n\n            return new this.Klass(attributes);\n        };\n\n        this.build = function () {\n            return this.config;\n        };\n    }\n\n    return {\n        LineDataBuilder: LineDataBuilder\n    };\n}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90ZXN0L2ZpeHR1cmVzL2xpbmVDaGFydERhdGFCdWlsZGVyLmpzP2VkMmEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5kZWZpbmUoZnVuY3Rpb24gKHJlcXVpcmUpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgXyA9IHJlcXVpcmUoJ3VuZGVyc2NvcmUnKSxcbiAgICAgICAganNvbkFsbERhdGFzID0gcmVxdWlyZSgnanNvbiEuLi9qc29uL2xpbmVEYXRhQWxsRGF0YXMuanNvbicpLFxuICAgICAgICBqc29uRml2ZVRvcGljcyA9IHJlcXVpcmUoJ2pzb24hLi4vanNvbi9saW5lRGF0YUZpdmVUb3BpY3MuanNvbicpLFxuICAgICAgICBqc29uT25lU291cmNlID0gcmVxdWlyZSgnanNvbiEuLi9qc29uL2xpbmVEYXRhT25lU2V0Lmpzb24nKSxcbiAgICAgICAganNvbk11bHRpTW9udGhWYWx1ZVJhbmdlID0gcmVxdWlyZSgnanNvbiEuLi9qc29uL211bHRpTW9udGhMaW5lRGF0YScpLFxuICAgICAgICBqc29uSG91ckRhdGVSYW5nZSA9IHJlcXVpcmUoJ2pzb24hLi4vanNvbi9saW5lRGF0YU9uZVNldEhvdXJseS5qc29uJyksXG4gICAgICAgIGpzb25TbWFsbFZhbHVlUmFuZ2UgPSByZXF1aXJlKCdqc29uIS4uL2pzb24vbGluZURhdGFTbWFsbFZhbHVlUmFuZ2UnKTtcblxuICAgIGZ1bmN0aW9uIExpbmVEYXRhQnVpbGRlcihjb25maWcpIHtcbiAgICAgICAgdGhpcy5LbGFzcyA9IExpbmVEYXRhQnVpbGRlcjtcblxuICAgICAgICB0aGlzLmNvbmZpZyA9IF8uZGVmYXVsdHMoe30sIGNvbmZpZyk7XG5cbiAgICAgICAgdGhpcy53aXRoNVRvcGljcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhdHRyaWJ1dGVzID0gXy5leHRlbmQoe30sIHRoaXMuY29uZmlnLCBqc29uRml2ZVRvcGljcyk7XG5cbiAgICAgICAgICAgIHJldHVybiBuZXcgdGhpcy5LbGFzcyhhdHRyaWJ1dGVzKTtcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLndpdGhPbmVTb3VyY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgYXR0cmlidXRlcyA9IF8uZXh0ZW5kKHt9LCB0aGlzLmNvbmZpZywganNvbk9uZVNvdXJjZSk7XG5cbiAgICAgICAgICAgIHJldHVybiBuZXcgdGhpcy5LbGFzcyhhdHRyaWJ1dGVzKTtcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLndpdGhTbWFsbFZhbHVlUmFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgYXR0cmlidXRlcyA9IF8uZXh0ZW5kKHt9LCB0aGlzLmNvbmZpZywganNvblNtYWxsVmFsdWVSYW5nZSk7XG5cbiAgICAgICAgICAgIHJldHVybiBuZXcgdGhpcy5LbGFzcyhhdHRyaWJ1dGVzKTtcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLndpdGhNdWx0aU1vbnRoVmFsdWVSYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhdHRyaWJ1dGVzID0gXy5leHRlbmQoe30sIHRoaXMuY29uZmlnLCBqc29uTXVsdGlNb250aFZhbHVlUmFuZ2UpO1xuXG4gICAgICAgICAgICByZXR1cm4gbmV3IHRoaXMuS2xhc3MoYXR0cmlidXRlcyk7XG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy53aXRoSG91ckRhdGVSYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhdHRyaWJ1dGVzID0gXy5leHRlbmQoe30sIHRoaXMuY29uZmlnLCBqc29uSG91ckRhdGVSYW5nZSk7XG5cbiAgICAgICAgICAgIHJldHVybiBuZXcgdGhpcy5LbGFzcyhhdHRyaWJ1dGVzKTtcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLndpdGhBbGxEYXRhcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhdHRyaWJ1dGVzID0gXy5leHRlbmQoe30sIHRoaXMuY29uZmlnLCBqc29uQWxsRGF0YXMpO1xuXG4gICAgICAgICAgICByZXR1cm4gbmV3IHRoaXMuS2xhc3MoYXR0cmlidXRlcyk7XG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNldHMgdGhlIHBhdGggZm9yIGZldGNoaW5nIHRoZSBkYXRhXG4gICAgICAgICAqIEBwYXJhbSAge3N0cmluZ30gcGF0aCBEZXNpcmVkIHBhdGggZm9yIHRlc3QgZGF0YVxuICAgICAgICAgKiBAcmV0dXJuIHtMaW5lRGF0YUJ1aWxkZXJ9ICAgICAgQnVpbGRlciBvYmplY3RcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMud2l0aFBhdGggPSBmdW5jdGlvbiAocGF0aCkge1xuICAgICAgICAgICAgdmFyIGF0dHJpYnV0ZXMgPSBfLmV4dGVuZCh7fSwgdGhpcy5jb25maWcsIHtcbiAgICAgICAgICAgICAgICBqc29uVVJMOiBwYXRoXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuIG5ldyB0aGlzLktsYXNzKGF0dHJpYnV0ZXMpO1xuICAgICAgICB9O1xuXG4gICAgICAgIHRoaXMuYnVpbGQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jb25maWc7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgTGluZURhdGFCdWlsZGVyOiBMaW5lRGF0YUJ1aWxkZXJcbiAgICB9O1xufSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi90ZXN0L2ZpeHR1cmVzL2xpbmVDaGFydERhdGFCdWlsZGVyLmpzXG4vLyBtb2R1bGUgaWQgPSA1M1xuLy8gbW9kdWxlIGNodW5rcyA9IDUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 54 */
/***/ (function(module, exports) {

	eval("module.exports = {\"data\":[{\"topicName\":\"Sales\",\"topic\":-1,\"value\":15,\"date\":\"2015-12-30T00:00:00-08:00\"},{\"topicName\":\"Sales\",\"topic\":-1,\"value\":16,\"date\":\"2015-12-31T00:00:00-08:00\"},{\"topicName\":\"Sales\",\"topic\":-1,\"value\":15,\"date\":\"2016-01-01T00:00:00-08:00\"},{\"topicName\":\"Sales\",\"topic\":-1,\"value\":18,\"date\":\"2016-01-02T00:00:00-08:00\"},{\"topicName\":\"Sales\",\"topic\":-1,\"value\":16,\"date\":\"2016-01-03T00:00:00-08:00\"}],\"dataByTopic\":[{\"topic\":-1,\"topicName\":\"Sales\",\"dates\":[{\"value\":15,\"date\":\"2015-12-30T00:00:00-08:00\"},{\"value\":16,\"date\":\"2015-12-31T00:00:00-08:00\"},{\"value\":15,\"date\":\"2016-01-01T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-02T00:00:00-08:00\"},{\"value\":16,\"date\":\"2016-01-03T00:00:00-08:00\"},{\"value\":16,\"date\":\"2016-01-04T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-05T00:00:00-08:00\"},{\"value\":15,\"date\":\"2016-01-06T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-07T00:00:00-08:00\"},{\"value\":21,\"date\":\"2016-01-08T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-09T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-10T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-11T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-12T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-13T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-14T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-15T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-16T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-17T00:00:00-08:00\"},{\"value\":20,\"date\":\"2016-01-18T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-19T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-20T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-21T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-22T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-23T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-24T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-25T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-26T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-27T00:00:00-08:00\"},{\"value\":21,\"date\":\"2016-01-28T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-29T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-30T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-01-31T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-01T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-02T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-03T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-04T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-05T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-06T00:00:00-08:00\"},{\"value\":20,\"date\":\"2016-02-07T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-08T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-09T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-10T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-11T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-12T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-13T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-14T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-15T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-16T00:00:00-08:00\"},{\"value\":21,\"date\":\"2016-02-17T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-18T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-19T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-20T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-21T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-22T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-23T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-24T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-25T00:00:00-08:00\"},{\"value\":18,\"date\":\"2016-02-26T00:00:00-08:00\"},{\"value\":20,\"date\":\"2016-02-27T00:00:00-08:00\"},{\"value\":17,\"date\":\"2016-02-28T00:00:00-08:00\"},{\"value\":17,\"date\":\"2016-02-29T00:00:00-08:00\"},{\"value\":17,\"date\":\"2016-03-01T00:00:00-08:00\"},{\"value\":17,\"date\":\"2016-03-02T00:00:00-08:00\"},{\"value\":17,\"date\":\"2016-03-03T00:00:00-08:00\"},{\"value\":17,\"date\":\"2016-03-04T00:00:00-08:00\"},{\"value\":17,\"date\":\"2016-03-05T00:00:00-08:00\"},{\"value\":17,\"date\":\"2016-03-06T00:00:00-08:00\"},{\"value\":17,\"date\":\"2016-03-07T00:00:00-08:00\"},{\"value\":20,\"date\":\"2016-03-08T00:00:00-08:00\"},{\"value\":17,\"date\":\"2016-03-09T00:00:00-08:00\"},{\"value\":17,\"date\":\"2016-03-10T00:00:00-08:00\"},{\"value\":17,\"date\":\"2016-03-11T00:00:00-08:00\"},{\"value\":17,\"date\":\"2016-03-12T00:00:00-08:00\"},{\"value\":17,\"date\":\"2016-03-13T00:00:00-08:00\"},{\"value\":17,\"date\":\"2016-03-14T00:00:00-07:00\"},{\"value\":17,\"date\":\"2016-03-15T00:00:00-07:00\"},{\"value\":17,\"date\":\"2016-03-16T00:00:00-07:00\"},{\"value\":17,\"date\":\"2016-03-17T00:00:00-07:00\"},{\"value\":20,\"date\":\"2016-03-18T00:00:00-07:00\"},{\"value\":18,\"date\":\"2016-03-19T00:00:00-07:00\"},{\"value\":18,\"date\":\"2016-03-20T00:00:00-07:00\"},{\"value\":18,\"date\":\"2016-03-21T00:00:00-07:00\"},{\"value\":18,\"date\":\"2016-03-22T00:00:00-07:00\"},{\"value\":18,\"date\":\"2016-03-23T00:00:00-07:00\"},{\"value\":18,\"date\":\"2016-03-24T00:00:00-07:00\"},{\"value\":18,\"date\":\"2016-03-25T00:00:00-07:00\"},{\"value\":18,\"date\":\"2016-03-26T00:00:00-07:00\"},{\"value\":18,\"date\":\"2016-03-27T00:00:00-07:00\"},{\"value\":30,\"date\":\"2016-03-28T00:00:00-07:00\"}]}]}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90ZXN0L2pzb24vbGluZURhdGFBbGxEYXRhcy5qc29uPzlmZDAiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XCJkYXRhXCI6W3tcInRvcGljTmFtZVwiOlwiU2FsZXNcIixcInRvcGljXCI6LTEsXCJ2YWx1ZVwiOjE1LFwiZGF0ZVwiOlwiMjAxNS0xMi0zMFQwMDowMDowMC0wODowMFwifSx7XCJ0b3BpY05hbWVcIjpcIlNhbGVzXCIsXCJ0b3BpY1wiOi0xLFwidmFsdWVcIjoxNixcImRhdGVcIjpcIjIwMTUtMTItMzFUMDA6MDA6MDAtMDg6MDBcIn0se1widG9waWNOYW1lXCI6XCJTYWxlc1wiLFwidG9waWNcIjotMSxcInZhbHVlXCI6MTUsXCJkYXRlXCI6XCIyMDE2LTAxLTAxVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInRvcGljTmFtZVwiOlwiU2FsZXNcIixcInRvcGljXCI6LTEsXCJ2YWx1ZVwiOjE4LFwiZGF0ZVwiOlwiMjAxNi0wMS0wMlQwMDowMDowMC0wODowMFwifSx7XCJ0b3BpY05hbWVcIjpcIlNhbGVzXCIsXCJ0b3BpY1wiOi0xLFwidmFsdWVcIjoxNixcImRhdGVcIjpcIjIwMTYtMDEtMDNUMDA6MDA6MDAtMDg6MDBcIn1dLFwiZGF0YUJ5VG9waWNcIjpbe1widG9waWNcIjotMSxcInRvcGljTmFtZVwiOlwiU2FsZXNcIixcImRhdGVzXCI6W3tcInZhbHVlXCI6MTUsXCJkYXRlXCI6XCIyMDE1LTEyLTMwVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTYsXCJkYXRlXCI6XCIyMDE1LTEyLTMxVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTUsXCJkYXRlXCI6XCIyMDE2LTAxLTAxVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTAyVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTYsXCJkYXRlXCI6XCIyMDE2LTAxLTAzVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTYsXCJkYXRlXCI6XCIyMDE2LTAxLTA0VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTA1VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTUsXCJkYXRlXCI6XCIyMDE2LTAxLTA2VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTA3VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MjEsXCJkYXRlXCI6XCIyMDE2LTAxLTA4VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTA5VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTEwVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTExVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTEyVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTEzVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTE0VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTE1VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTE2VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTE3VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MjAsXCJkYXRlXCI6XCIyMDE2LTAxLTE4VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTE5VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTIwVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTIxVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTIyVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTIzVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTI0VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTI1VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTI2VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTI3VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MjEsXCJkYXRlXCI6XCIyMDE2LTAxLTI4VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTI5VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTMwVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAxLTMxVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTAxVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTAyVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTAzVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTA0VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTA1VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTA2VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MjAsXCJkYXRlXCI6XCIyMDE2LTAyLTA3VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTA4VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTA5VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTEwVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTExVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTEyVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTEzVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTE0VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTE1VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTE2VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MjEsXCJkYXRlXCI6XCIyMDE2LTAyLTE3VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTE4VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTE5VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTIwVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTIxVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTIyVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTIzVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTI0VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTI1VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAyLTI2VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MjAsXCJkYXRlXCI6XCIyMDE2LTAyLTI3VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAyLTI4VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAyLTI5VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAzLTAxVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAzLTAyVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAzLTAzVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAzLTA0VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAzLTA1VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAzLTA2VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAzLTA3VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MjAsXCJkYXRlXCI6XCIyMDE2LTAzLTA4VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAzLTA5VDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAzLTEwVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAzLTExVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAzLTEyVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAzLTEzVDAwOjAwOjAwLTA4OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAzLTE0VDAwOjAwOjAwLTA3OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAzLTE1VDAwOjAwOjAwLTA3OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAzLTE2VDAwOjAwOjAwLTA3OjAwXCJ9LHtcInZhbHVlXCI6MTcsXCJkYXRlXCI6XCIyMDE2LTAzLTE3VDAwOjAwOjAwLTA3OjAwXCJ9LHtcInZhbHVlXCI6MjAsXCJkYXRlXCI6XCIyMDE2LTAzLTE4VDAwOjAwOjAwLTA3OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAzLTE5VDAwOjAwOjAwLTA3OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAzLTIwVDAwOjAwOjAwLTA3OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAzLTIxVDAwOjAwOjAwLTA3OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAzLTIyVDAwOjAwOjAwLTA3OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAzLTIzVDAwOjAwOjAwLTA3OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAzLTI0VDAwOjAwOjAwLTA3OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAzLTI1VDAwOjAwOjAwLTA3OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAzLTI2VDAwOjAwOjAwLTA3OjAwXCJ9LHtcInZhbHVlXCI6MTgsXCJkYXRlXCI6XCIyMDE2LTAzLTI3VDAwOjAwOjAwLTA3OjAwXCJ9LHtcInZhbHVlXCI6MzAsXCJkYXRlXCI6XCIyMDE2LTAzLTI4VDAwOjAwOjAwLTA3OjAwXCJ9XX1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9qc29uLWxvYWRlciEuL3Rlc3QvanNvbi9saW5lRGF0YUFsbERhdGFzLmpzb25cbi8vIG1vZHVsZSBpZCA9IDU0XG4vLyBtb2R1bGUgY2h1bmtzID0gNSJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 55 */
/***/ (function(module, exports) {

	eval("module.exports = {\"dataByTopic\":[{\"topic\":103,\"dates\":[{\"date\":\"27-Jun-15\",\"value\":1,\"fullDate\":\"2015-06-27T07:00:00.000Z\"},{\"date\":\"28-Jun-15\",\"value\":1,\"fullDate\":\"2015-06-28T07:00:00.000Z\"},{\"date\":\"29-Jun-15\",\"value\":4,\"fullDate\":\"2015-06-29T07:00:00.000Z\"},{\"date\":\"30-Jun-15\",\"value\":2,\"fullDate\":\"2015-06-30T07:00:00.000Z\"},{\"date\":\"1-Jul-15\",\"value\":3,\"fullDate\":\"2015-07-01T07:00:00.000Z\"},{\"date\":\"2-Jul-15\",\"value\":3,\"fullDate\":\"2015-07-02T07:00:00.000Z\"},{\"date\":\"3-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-03T07:00:00.000Z\"},{\"date\":\"4-Jul-15\",\"value\":3,\"fullDate\":\"2015-07-04T07:00:00.000Z\"},{\"date\":\"5-Jul-15\",\"value\":1,\"fullDate\":\"2015-07-05T07:00:00.000Z\"},{\"date\":\"6-Jul-15\",\"value\":2,\"fullDate\":\"2015-07-06T07:00:00.000Z\"},{\"date\":\"7-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-07T07:00:00.000Z\"},{\"date\":\"8-Jul-15\",\"value\":2,\"fullDate\":\"2015-07-08T07:00:00.000Z\"},{\"date\":\"9-Jul-15\",\"value\":1,\"fullDate\":\"2015-07-09T07:00:00.000Z\"},{\"date\":\"10-Jul-15\",\"value\":4,\"fullDate\":\"2015-07-10T07:00:00.000Z\"},{\"date\":\"11-Jul-15\",\"value\":2,\"fullDate\":\"2015-07-11T07:00:00.000Z\"},{\"date\":\"12-Jul-15\",\"value\":1,\"fullDate\":\"2015-07-12T07:00:00.000Z\"},{\"date\":\"13-Jul-15\",\"value\":6,\"fullDate\":\"2015-07-13T07:00:00.000Z\"},{\"date\":\"14-Jul-15\",\"value\":5,\"fullDate\":\"2015-07-14T07:00:00.000Z\"},{\"date\":\"15-Jul-15\",\"value\":2,\"fullDate\":\"2015-07-15T07:00:00.000Z\"},{\"date\":\"16-Jul-15\",\"value\":7,\"fullDate\":\"2015-07-16T07:00:00.000Z\"},{\"date\":\"17-Jul-15\",\"value\":3,\"fullDate\":\"2015-07-17T07:00:00.000Z\"},{\"date\":\"18-Jul-15\",\"value\":1,\"fullDate\":\"2015-07-18T07:00:00.000Z\"},{\"date\":\"19-Jul-15\",\"value\":4,\"fullDate\":\"2015-07-19T07:00:00.000Z\"},{\"date\":\"20-Jul-15\",\"value\":8,\"fullDate\":\"2015-07-20T07:00:00.000Z\"},{\"date\":\"21-Jul-15\",\"value\":4,\"fullDate\":\"2015-07-21T07:00:00.000Z\"},{\"date\":\"22-Jul-15\",\"value\":11,\"fullDate\":\"2015-07-22T07:00:00.000Z\"},{\"date\":\"23-Jul-15\",\"value\":7,\"fullDate\":\"2015-07-23T07:00:00.000Z\"},{\"date\":\"24-Jul-15\",\"value\":5,\"fullDate\":\"2015-07-24T07:00:00.000Z\"},{\"date\":\"25-Jul-15\",\"value\":5,\"fullDate\":\"2015-07-25T07:00:00.000Z\"},{\"date\":\"26-Jul-15\",\"value\":6,\"fullDate\":\"2015-07-26T07:00:00.000Z\"},{\"date\":\"27-Jul-15\",\"value\":16,\"fullDate\":\"2015-07-27T07:00:00.000Z\"},{\"date\":\"28-Jul-15\",\"value\":17,\"fullDate\":\"2015-07-28T07:00:00.000Z\"},{\"date\":\"29-Jul-15\",\"value\":15,\"fullDate\":\"2015-07-29T07:00:00.000Z\"},{\"date\":\"30-Jul-15\",\"value\":12,\"fullDate\":\"2015-07-30T07:00:00.000Z\"},{\"date\":\"31-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-31T07:00:00.000Z\"},{\"date\":\"1-Aug-15\",\"value\":0,\"fullDate\":\"2015-08-01T07:00:00.000Z\"},{\"date\":\"2-Aug-15\",\"value\":0,\"fullDate\":\"2015-08-02T07:00:00.000Z\"}],\"topicName\":\"San Francisco\"},{\"topic\":149,\"dates\":[{\"date\":\"27-Jun-15\",\"value\":0,\"fullDate\":\"2015-06-27T07:00:00.000Z\"},{\"date\":\"28-Jun-15\",\"value\":2,\"fullDate\":\"2015-06-28T07:00:00.000Z\"},{\"date\":\"29-Jun-15\",\"value\":4,\"fullDate\":\"2015-06-29T07:00:00.000Z\"},{\"date\":\"30-Jun-15\",\"value\":3,\"fullDate\":\"2015-06-30T07:00:00.000Z\"},{\"date\":\"1-Jul-15\",\"value\":1,\"fullDate\":\"2015-07-01T07:00:00.000Z\"},{\"date\":\"2-Jul-15\",\"value\":3,\"fullDate\":\"2015-07-02T07:00:00.000Z\"},{\"date\":\"3-Jul-15\",\"value\":3,\"fullDate\":\"2015-07-03T07:00:00.000Z\"},{\"date\":\"4-Jul-15\",\"value\":1,\"fullDate\":\"2015-07-04T07:00:00.000Z\"},{\"date\":\"5-Jul-15\",\"value\":2,\"fullDate\":\"2015-07-05T07:00:00.000Z\"},{\"date\":\"6-Jul-15\",\"value\":2,\"fullDate\":\"2015-07-06T07:00:00.000Z\"},{\"date\":\"7-Jul-15\",\"value\":4,\"fullDate\":\"2015-07-07T07:00:00.000Z\"},{\"date\":\"8-Jul-15\",\"value\":7,\"fullDate\":\"2015-07-08T07:00:00.000Z\"},{\"date\":\"9-Jul-15\",\"value\":1,\"fullDate\":\"2015-07-09T07:00:00.000Z\"},{\"date\":\"10-Jul-15\",\"value\":5,\"fullDate\":\"2015-07-10T07:00:00.000Z\"},{\"date\":\"11-Jul-15\",\"value\":9,\"fullDate\":\"2015-07-11T07:00:00.000Z\"},{\"date\":\"12-Jul-15\",\"value\":5,\"fullDate\":\"2015-07-12T07:00:00.000Z\"},{\"date\":\"13-Jul-15\",\"value\":2,\"fullDate\":\"2015-07-13T07:00:00.000Z\"},{\"date\":\"14-Jul-15\",\"value\":8,\"fullDate\":\"2015-07-14T07:00:00.000Z\"},{\"date\":\"15-Jul-15\",\"value\":3,\"fullDate\":\"2015-07-15T07:00:00.000Z\"},{\"date\":\"16-Jul-15\",\"value\":1,\"fullDate\":\"2015-07-16T07:00:00.000Z\"},{\"date\":\"17-Jul-15\",\"value\":2,\"fullDate\":\"2015-07-17T07:00:00.000Z\"},{\"date\":\"18-Jul-15\",\"value\":7,\"fullDate\":\"2015-07-18T07:00:00.000Z\"},{\"date\":\"19-Jul-15\",\"value\":1,\"fullDate\":\"2015-07-19T07:00:00.000Z\"},{\"date\":\"20-Jul-15\",\"value\":5,\"fullDate\":\"2015-07-20T07:00:00.000Z\"},{\"date\":\"21-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-21T07:00:00.000Z\"},{\"date\":\"22-Jul-15\",\"value\":2,\"fullDate\":\"2015-07-22T07:00:00.000Z\"},{\"date\":\"23-Jul-15\",\"value\":5,\"fullDate\":\"2015-07-23T07:00:00.000Z\"},{\"date\":\"24-Jul-15\",\"value\":2,\"fullDate\":\"2015-07-24T07:00:00.000Z\"},{\"date\":\"25-Jul-15\",\"value\":2,\"fullDate\":\"2015-07-25T07:00:00.000Z\"},{\"date\":\"26-Jul-15\",\"value\":3,\"fullDate\":\"2015-07-26T07:00:00.000Z\"},{\"date\":\"27-Jul-15\",\"value\":8,\"fullDate\":\"2015-07-27T07:00:00.000Z\"},{\"date\":\"28-Jul-15\",\"value\":11,\"fullDate\":\"2015-07-28T07:00:00.000Z\"},{\"date\":\"29-Jul-15\",\"value\":17,\"fullDate\":\"2015-07-29T07:00:00.000Z\"},{\"date\":\"30-Jul-15\",\"value\":14,\"fullDate\":\"2015-07-30T07:00:00.000Z\"},{\"date\":\"31-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-31T07:00:00.000Z\"},{\"date\":\"1-Aug-15\",\"value\":0,\"fullDate\":\"2015-08-01T07:00:00.000Z\"},{\"date\":\"2-Aug-15\",\"value\":0,\"fullDate\":\"2015-08-02T07:00:00.000Z\"}],\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"topic\":60,\"dates\":[{\"date\":\"27-Jun-15\",\"value\":0,\"fullDate\":\"2015-06-27T07:00:00.000Z\"},{\"date\":\"28-Jun-15\",\"value\":0,\"fullDate\":\"2015-06-28T07:00:00.000Z\"},{\"date\":\"29-Jun-15\",\"value\":18,\"fullDate\":\"2015-06-29T07:00:00.000Z\"},{\"date\":\"30-Jun-15\",\"value\":1,\"fullDate\":\"2015-06-30T07:00:00.000Z\"},{\"date\":\"1-Jul-15\",\"value\":6,\"fullDate\":\"2015-07-01T07:00:00.000Z\"},{\"date\":\"2-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-02T07:00:00.000Z\"},{\"date\":\"3-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-03T07:00:00.000Z\"},{\"date\":\"4-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-04T07:00:00.000Z\"},{\"date\":\"5-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-05T07:00:00.000Z\"},{\"date\":\"6-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-06T07:00:00.000Z\"},{\"date\":\"7-Jul-15\",\"value\":15,\"fullDate\":\"2015-07-07T07:00:00.000Z\"},{\"date\":\"8-Jul-15\",\"value\":32,\"fullDate\":\"2015-07-08T07:00:00.000Z\"},{\"date\":\"9-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-09T07:00:00.000Z\"},{\"date\":\"10-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-10T07:00:00.000Z\"},{\"date\":\"11-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-11T07:00:00.000Z\"},{\"date\":\"12-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-12T07:00:00.000Z\"},{\"date\":\"13-Jul-15\",\"value\":3,\"fullDate\":\"2015-07-13T07:00:00.000Z\"},{\"date\":\"14-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-14T07:00:00.000Z\"},{\"date\":\"15-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-15T07:00:00.000Z\"},{\"date\":\"16-Jul-15\",\"value\":15,\"fullDate\":\"2015-07-16T07:00:00.000Z\"},{\"date\":\"17-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-17T07:00:00.000Z\"},{\"date\":\"18-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-18T07:00:00.000Z\"},{\"date\":\"19-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-19T07:00:00.000Z\"},{\"date\":\"20-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-20T07:00:00.000Z\"},{\"date\":\"21-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-21T07:00:00.000Z\"},{\"date\":\"22-Jul-15\",\"value\":5,\"fullDate\":\"2015-07-22T07:00:00.000Z\"},{\"date\":\"23-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-23T07:00:00.000Z\"},{\"date\":\"24-Jul-15\",\"value\":1,\"fullDate\":\"2015-07-24T07:00:00.000Z\"},{\"date\":\"25-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-25T07:00:00.000Z\"},{\"date\":\"26-Jul-15\",\"value\":1,\"fullDate\":\"2015-07-26T07:00:00.000Z\"},{\"date\":\"27-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-27T07:00:00.000Z\"},{\"date\":\"28-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-28T07:00:00.000Z\"},{\"date\":\"29-Jul-15\",\"value\":3,\"fullDate\":\"2015-07-29T07:00:00.000Z\"},{\"date\":\"30-Jul-15\",\"value\":2,\"fullDate\":\"2015-07-30T07:00:00.000Z\"},{\"date\":\"31-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-31T07:00:00.000Z\"},{\"date\":\"1-Aug-15\",\"value\":0,\"fullDate\":\"2015-08-01T07:00:00.000Z\"},{\"date\":\"2-Aug-15\",\"value\":0,\"fullDate\":\"2015-08-02T07:00:00.000Z\"}],\"topicName\":\"Los Angeles\"},{\"topic\":81,\"dates\":[{\"date\":\"27-Jun-15\",\"value\":0,\"fullDate\":\"2015-06-27T07:00:00.000Z\"},{\"date\":\"28-Jun-15\",\"value\":0,\"fullDate\":\"2015-06-28T07:00:00.000Z\"},{\"date\":\"29-Jun-15\",\"value\":1,\"fullDate\":\"2015-06-29T07:00:00.000Z\"},{\"date\":\"30-Jun-15\",\"value\":0,\"fullDate\":\"2015-06-30T07:00:00.000Z\"},{\"date\":\"1-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-01T07:00:00.000Z\"},{\"date\":\"2-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-02T07:00:00.000Z\"},{\"date\":\"3-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-03T07:00:00.000Z\"},{\"date\":\"4-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-04T07:00:00.000Z\"},{\"date\":\"5-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-05T07:00:00.000Z\"},{\"date\":\"6-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-06T07:00:00.000Z\"},{\"date\":\"7-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-07T07:00:00.000Z\"},{\"date\":\"8-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-08T07:00:00.000Z\"},{\"date\":\"9-Jul-15\",\"value\":1,\"fullDate\":\"2015-07-09T07:00:00.000Z\"},{\"date\":\"10-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-10T07:00:00.000Z\"},{\"date\":\"11-Jul-15\",\"value\":1,\"fullDate\":\"2015-07-11T07:00:00.000Z\"},{\"date\":\"12-Jul-15\",\"value\":1,\"fullDate\":\"2015-07-12T07:00:00.000Z\"},{\"date\":\"13-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-13T07:00:00.000Z\"},{\"date\":\"14-Jul-15\",\"value\":2,\"fullDate\":\"2015-07-14T07:00:00.000Z\"},{\"date\":\"15-Jul-15\",\"value\":3,\"fullDate\":\"2015-07-15T07:00:00.000Z\"},{\"date\":\"16-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-16T07:00:00.000Z\"},{\"date\":\"17-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-17T07:00:00.000Z\"},{\"date\":\"18-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-18T07:00:00.000Z\"},{\"date\":\"19-Jul-15\",\"value\":2,\"fullDate\":\"2015-07-19T07:00:00.000Z\"},{\"date\":\"20-Jul-15\",\"value\":7,\"fullDate\":\"2015-07-20T07:00:00.000Z\"},{\"date\":\"21-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-21T07:00:00.000Z\"},{\"date\":\"22-Jul-15\",\"value\":1,\"fullDate\":\"2015-07-22T07:00:00.000Z\"},{\"date\":\"23-Jul-15\",\"value\":2,\"fullDate\":\"2015-07-23T07:00:00.000Z\"},{\"date\":\"24-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-24T07:00:00.000Z\"},{\"date\":\"25-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-25T07:00:00.000Z\"},{\"date\":\"26-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-26T07:00:00.000Z\"},{\"date\":\"27-Jul-15\",\"value\":1,\"fullDate\":\"2015-07-27T07:00:00.000Z\"},{\"date\":\"28-Jul-15\",\"value\":2,\"fullDate\":\"2015-07-28T07:00:00.000Z\"},{\"date\":\"29-Jul-15\",\"value\":2,\"fullDate\":\"2015-07-29T07:00:00.000Z\"},{\"date\":\"30-Jul-15\",\"value\":6,\"fullDate\":\"2015-07-30T07:00:00.000Z\"},{\"date\":\"31-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-31T07:00:00.000Z\"},{\"date\":\"1-Aug-15\",\"value\":0,\"fullDate\":\"2015-08-01T07:00:00.000Z\"},{\"date\":\"2-Aug-15\",\"value\":0,\"fullDate\":\"2015-08-02T07:00:00.000Z\"}],\"topicName\":\"Oakland\"},{\"topic\":0,\"topicName\":\"Other\",\"dates\":[{\"date\":\"27-Jun-15\",\"value\":3,\"fullDate\":\"2015-06-27T07:00:00.000Z\"},{\"date\":\"28-Jun-15\",\"value\":9,\"fullDate\":\"2015-06-28T07:00:00.000Z\"},{\"date\":\"29-Jun-15\",\"value\":6,\"fullDate\":\"2015-06-29T07:00:00.000Z\"},{\"date\":\"30-Jun-15\",\"value\":11,\"fullDate\":\"2015-06-30T07:00:00.000Z\"},{\"date\":\"1-Jul-15\",\"value\":7,\"fullDate\":\"2015-07-01T07:00:00.000Z\"},{\"date\":\"2-Jul-15\",\"value\":10,\"fullDate\":\"2015-07-02T07:00:00.000Z\"},{\"date\":\"3-Jul-15\",\"value\":5,\"fullDate\":\"2015-07-03T07:00:00.000Z\"},{\"date\":\"4-Jul-15\",\"value\":10,\"fullDate\":\"2015-07-04T07:00:00.000Z\"},{\"date\":\"5-Jul-15\",\"value\":8,\"fullDate\":\"2015-07-05T07:00:00.000Z\"},{\"date\":\"6-Jul-15\",\"value\":10,\"fullDate\":\"2015-07-06T07:00:00.000Z\"},{\"date\":\"7-Jul-15\",\"value\":6,\"fullDate\":\"2015-07-07T07:00:00.000Z\"},{\"date\":\"8-Jul-15\",\"value\":14,\"fullDate\":\"2015-07-08T07:00:00.000Z\"},{\"date\":\"9-Jul-15\",\"value\":12,\"fullDate\":\"2015-07-09T07:00:00.000Z\"},{\"date\":\"10-Jul-15\",\"value\":17,\"fullDate\":\"2015-07-10T07:00:00.000Z\"},{\"date\":\"11-Jul-15\",\"value\":9,\"fullDate\":\"2015-07-11T07:00:00.000Z\"},{\"date\":\"12-Jul-15\",\"value\":9,\"fullDate\":\"2015-07-12T07:00:00.000Z\"},{\"date\":\"13-Jul-15\",\"value\":9,\"fullDate\":\"2015-07-13T07:00:00.000Z\"},{\"date\":\"14-Jul-15\",\"value\":11,\"fullDate\":\"2015-07-14T07:00:00.000Z\"},{\"date\":\"15-Jul-15\",\"value\":16,\"fullDate\":\"2015-07-15T07:00:00.000Z\"},{\"date\":\"16-Jul-15\",\"value\":6,\"fullDate\":\"2015-07-16T07:00:00.000Z\"},{\"date\":\"17-Jul-15\",\"value\":7,\"fullDate\":\"2015-07-17T07:00:00.000Z\"},{\"date\":\"18-Jul-15\",\"value\":8,\"fullDate\":\"2015-07-18T07:00:00.000Z\"},{\"date\":\"19-Jul-15\",\"value\":4,\"fullDate\":\"2015-07-19T07:00:00.000Z\"},{\"date\":\"20-Jul-15\",\"value\":9,\"fullDate\":\"2015-07-20T07:00:00.000Z\"},{\"date\":\"21-Jul-15\",\"value\":5,\"fullDate\":\"2015-07-21T07:00:00.000Z\"},{\"date\":\"22-Jul-15\",\"value\":7,\"fullDate\":\"2015-07-22T07:00:00.000Z\"},{\"date\":\"23-Jul-15\",\"value\":7,\"fullDate\":\"2015-07-23T07:00:00.000Z\"},{\"date\":\"24-Jul-15\",\"value\":10,\"fullDate\":\"2015-07-24T07:00:00.000Z\"},{\"date\":\"25-Jul-15\",\"value\":8,\"fullDate\":\"2015-07-25T07:00:00.000Z\"},{\"date\":\"26-Jul-15\",\"value\":13,\"fullDate\":\"2015-07-26T07:00:00.000Z\"},{\"date\":\"27-Jul-15\",\"value\":18,\"fullDate\":\"2015-07-27T07:00:00.000Z\"},{\"date\":\"28-Jul-15\",\"value\":14,\"fullDate\":\"2015-07-28T07:00:00.000Z\"},{\"date\":\"29-Jul-15\",\"value\":30,\"fullDate\":\"2015-07-29T07:00:00.000Z\"},{\"date\":\"30-Jul-15\",\"value\":33,\"fullDate\":\"2015-07-30T07:00:00.000Z\"},{\"date\":\"31-Jul-15\",\"value\":0,\"fullDate\":\"2015-07-31T07:00:00.000Z\"},{\"date\":\"1-Aug-15\",\"value\":0,\"fullDate\":\"2015-08-01T07:00:00.000Z\"},{\"date\":\"2-Aug-15\",\"value\":0,\"fullDate\":\"2015-08-02T07:00:00.000Z\"}]}],\"dataByDate\":[{\"date\":\"2015-06-27T07:00:00.000Z\",\"topics\":[{\"name\":103,\"value\":1,\"topicName\":\"San Francisco\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":149,\"value\":0,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":0,\"value\":3,\"topicName\":\"Other\"}]},{\"date\":\"2015-06-28T07:00:00.000Z\",\"topics\":[{\"name\":103,\"value\":1,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":2,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":0,\"value\":9,\"topicName\":\"Other\"}]},{\"date\":\"2015-06-29T07:00:00.000Z\",\"topics\":[{\"name\":60,\"value\":18,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":1,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":4,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":4,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":0,\"value\":6,\"topicName\":\"Other\"}]},{\"date\":\"2015-06-30T07:00:00.000Z\",\"topics\":[{\"name\":60,\"value\":1,\"topicName\":\"Los Angeles\"},{\"name\":103,\"value\":2,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":3,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":0,\"value\":11,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-01T07:00:00.000Z\",\"topics\":[{\"name\":60,\"value\":6,\"topicName\":\"Los Angeles\"},{\"name\":103,\"value\":3,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":1,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":0,\"value\":7,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-02T07:00:00.000Z\",\"topics\":[{\"name\":103,\"value\":3,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":3,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":0,\"value\":10,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-03T07:00:00.000Z\",\"topics\":[{\"name\":149,\"value\":3,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":0,\"topicName\":\"San Francisco\"},{\"name\":0,\"value\":5,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-04T07:00:00.000Z\",\"topics\":[{\"name\":103,\"value\":3,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":1,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":0,\"value\":10,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-05T07:00:00.000Z\",\"topics\":[{\"name\":103,\"value\":1,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":2,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":0,\"value\":8,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-06T07:00:00.000Z\",\"topics\":[{\"name\":103,\"value\":2,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":2,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":0,\"value\":10,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-07T07:00:00.000Z\",\"topics\":[{\"name\":60,\"value\":15,\"topicName\":\"Los Angeles\"},{\"name\":149,\"value\":4,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":0,\"topicName\":\"San Francisco\"},{\"name\":0,\"value\":6,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-08T07:00:00.000Z\",\"topics\":[{\"name\":60,\"value\":32,\"topicName\":\"Los Angeles\"},{\"name\":103,\"value\":2,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":7,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":0,\"value\":14,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-09T07:00:00.000Z\",\"topics\":[{\"name\":81,\"value\":1,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":1,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":1,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":0,\"value\":12,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-10T07:00:00.000Z\",\"topics\":[{\"name\":103,\"value\":4,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":5,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":0,\"value\":17,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-11T07:00:00.000Z\",\"topics\":[{\"name\":81,\"value\":1,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":2,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":9,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":0,\"value\":9,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-12T07:00:00.000Z\",\"topics\":[{\"name\":81,\"value\":1,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":1,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":5,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":0,\"value\":9,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-13T07:00:00.000Z\",\"topics\":[{\"name\":60,\"value\":3,\"topicName\":\"Los Angeles\"},{\"name\":103,\"value\":6,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":2,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":0,\"value\":9,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-14T07:00:00.000Z\",\"topics\":[{\"name\":81,\"value\":2,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":5,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":8,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":0,\"value\":11,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-15T07:00:00.000Z\",\"topics\":[{\"name\":81,\"value\":3,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":2,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":3,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":0,\"value\":16,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-16T07:00:00.000Z\",\"topics\":[{\"name\":60,\"value\":15,\"topicName\":\"Los Angeles\"},{\"name\":103,\"value\":7,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":1,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":0,\"value\":6,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-17T07:00:00.000Z\",\"topics\":[{\"name\":103,\"value\":3,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":2,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":0,\"value\":7,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-18T07:00:00.000Z\",\"topics\":[{\"name\":103,\"value\":1,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":7,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":0,\"value\":8,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-19T07:00:00.000Z\",\"topics\":[{\"name\":81,\"value\":2,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":4,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":1,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":0,\"value\":4,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-20T07:00:00.000Z\",\"topics\":[{\"name\":81,\"value\":7,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":8,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":5,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":0,\"value\":9,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-21T07:00:00.000Z\",\"topics\":[{\"name\":103,\"value\":4,\"topicName\":\"San Francisco\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":149,\"value\":0,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":0,\"value\":5,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-22T07:00:00.000Z\",\"topics\":[{\"name\":60,\"value\":5,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":1,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":11,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":2,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":0,\"value\":7,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-23T07:00:00.000Z\",\"topics\":[{\"name\":81,\"value\":2,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":7,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":5,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":0,\"value\":7,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-24T07:00:00.000Z\",\"topics\":[{\"name\":60,\"value\":1,\"topicName\":\"Los Angeles\"},{\"name\":103,\"value\":5,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":2,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":0,\"value\":10,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-25T07:00:00.000Z\",\"topics\":[{\"name\":103,\"value\":5,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":2,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":0,\"value\":8,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-26T07:00:00.000Z\",\"topics\":[{\"name\":60,\"value\":1,\"topicName\":\"Los Angeles\"},{\"name\":103,\"value\":6,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":3,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":0,\"value\":13,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-27T07:00:00.000Z\",\"topics\":[{\"name\":81,\"value\":1,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":16,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":8,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":0,\"value\":18,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-28T07:00:00.000Z\",\"topics\":[{\"name\":81,\"value\":2,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":17,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":11,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":0,\"value\":14,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-29T07:00:00.000Z\",\"topics\":[{\"name\":60,\"value\":3,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":2,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":15,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":17,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":0,\"value\":30,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-30T07:00:00.000Z\",\"topics\":[{\"name\":60,\"value\":2,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":6,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":12,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":14,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":0,\"value\":33,\"topicName\":\"Other\"}]},{\"date\":\"2015-07-31T07:00:00.000Z\",\"topics\":[{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":0,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":0,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":0,\"value\":0,\"topicName\":\"Other\"}]},{\"date\":\"2015-08-01T07:00:00.000Z\",\"topics\":[{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":0,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":0,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":0,\"value\":0,\"topicName\":\"Other\"}]},{\"date\":\"2015-08-02T07:00:00.000Z\",\"topics\":[{\"name\":60,\"value\":0,\"topicName\":\"Los Angeles\"},{\"name\":81,\"value\":0,\"topicName\":\"Oakland\"},{\"name\":103,\"value\":0,\"topicName\":\"San Francisco\"},{\"name\":149,\"value\":0,\"topicName\":\"Unknown Location with a super hyper mega very very very long name.\"},{\"name\":0,\"value\":0,\"topicName\":\"Other\"}]}]}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 56 */
/***/ (function(module, exports) {

	eval("module.exports = {\"dataByTopic\":[{\"topic\":-1,\"topicName\":\"Quantity\",\"dates\":[{\"date\":\"31-Jul-16\",\"value\":0,\"fullDate\":\"2016-07-31T00:00:00-07:00\"},{\"date\":\"1-Aug-16\",\"value\":0,\"fullDate\":\"2016-08-01T00:00:00-07:00\"},{\"date\":\"2-Aug-16\",\"value\":3,\"fullDate\":\"2016-08-02T00:00:00-07:00\"},{\"date\":\"3-Aug-16\",\"value\":1,\"fullDate\":\"2016-08-03T00:00:00-07:00\"},{\"date\":\"4-Aug-16\",\"value\":3,\"fullDate\":\"2016-08-04T00:00:00-07:00\"},{\"date\":\"5-Aug-16\",\"value\":3,\"fullDate\":\"2016-08-05T00:00:00-07:00\"},{\"date\":\"6-Aug-16\",\"value\":0,\"fullDate\":\"2016-08-06T00:00:00-07:00\"},{\"date\":\"7-Aug-16\",\"value\":1,\"fullDate\":\"2016-08-07T00:00:00-07:00\"},{\"date\":\"8-Aug-16\",\"value\":1,\"fullDate\":\"2016-08-08T00:00:00-07:00\"},{\"date\":\"9-Aug-16\",\"value\":0,\"fullDate\":\"2016-08-09T00:00:00-07:00\"},{\"date\":\"10-Aug-16\",\"value\":3,\"fullDate\":\"2016-08-10T00:00:00-07:00\"},{\"date\":\"11-Aug-16\",\"value\":4,\"fullDate\":\"2016-08-11T00:00:00-07:00\"},{\"date\":\"12-Aug-16\",\"value\":4,\"fullDate\":\"2016-08-12T00:00:00-07:00\"},{\"date\":\"13-Aug-16\",\"value\":2,\"fullDate\":\"2016-08-13T00:00:00-07:00\"},{\"date\":\"14-Aug-16\",\"value\":3,\"fullDate\":\"2016-08-14T00:00:00-07:00\"},{\"date\":\"15-Aug-16\",\"value\":0,\"fullDate\":\"2016-08-15T00:00:00-07:00\"},{\"date\":\"16-Aug-16\",\"value\":1,\"fullDate\":\"2016-08-16T00:00:00-07:00\"},{\"date\":\"17-Aug-16\",\"value\":0,\"fullDate\":\"2016-08-17T00:00:00-07:00\"},{\"date\":\"18-Aug-16\",\"value\":2,\"fullDate\":\"2016-08-18T00:00:00-07:00\"},{\"date\":\"19-Aug-16\",\"value\":5,\"fullDate\":\"2016-08-19T00:00:00-07:00\"},{\"date\":\"20-Aug-16\",\"value\":1,\"fullDate\":\"2016-08-20T00:00:00-07:00\"},{\"date\":\"21-Aug-16\",\"value\":2,\"fullDate\":\"2016-08-21T00:00:00-07:00\"},{\"date\":\"22-Aug-16\",\"value\":9,\"fullDate\":\"2016-08-22T00:00:00-07:00\"},{\"date\":\"23-Aug-16\",\"value\":4,\"fullDate\":\"2016-08-23T00:00:00-07:00\"},{\"date\":\"24-Aug-16\",\"value\":3,\"fullDate\":\"2016-08-24T00:00:00-07:00\"},{\"date\":\"25-Aug-16\",\"value\":2,\"fullDate\":\"2016-08-25T00:00:00-07:00\"},{\"date\":\"26-Aug-16\",\"value\":5,\"fullDate\":\"2016-08-26T00:00:00-07:00\"}]}]}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90ZXN0L2pzb24vbGluZURhdGFPbmVTZXQuanNvbj85ZWZiIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1wiZGF0YUJ5VG9waWNcIjpbe1widG9waWNcIjotMSxcInRvcGljTmFtZVwiOlwiUXVhbnRpdHlcIixcImRhdGVzXCI6W3tcImRhdGVcIjpcIjMxLUp1bC0xNlwiLFwidmFsdWVcIjowLFwiZnVsbERhdGVcIjpcIjIwMTYtMDctMzFUMDA6MDA6MDAtMDc6MDBcIn0se1wiZGF0ZVwiOlwiMS1BdWctMTZcIixcInZhbHVlXCI6MCxcImZ1bGxEYXRlXCI6XCIyMDE2LTA4LTAxVDAwOjAwOjAwLTA3OjAwXCJ9LHtcImRhdGVcIjpcIjItQXVnLTE2XCIsXCJ2YWx1ZVwiOjMsXCJmdWxsRGF0ZVwiOlwiMjAxNi0wOC0wMlQwMDowMDowMC0wNzowMFwifSx7XCJkYXRlXCI6XCIzLUF1Zy0xNlwiLFwidmFsdWVcIjoxLFwiZnVsbERhdGVcIjpcIjIwMTYtMDgtMDNUMDA6MDA6MDAtMDc6MDBcIn0se1wiZGF0ZVwiOlwiNC1BdWctMTZcIixcInZhbHVlXCI6MyxcImZ1bGxEYXRlXCI6XCIyMDE2LTA4LTA0VDAwOjAwOjAwLTA3OjAwXCJ9LHtcImRhdGVcIjpcIjUtQXVnLTE2XCIsXCJ2YWx1ZVwiOjMsXCJmdWxsRGF0ZVwiOlwiMjAxNi0wOC0wNVQwMDowMDowMC0wNzowMFwifSx7XCJkYXRlXCI6XCI2LUF1Zy0xNlwiLFwidmFsdWVcIjowLFwiZnVsbERhdGVcIjpcIjIwMTYtMDgtMDZUMDA6MDA6MDAtMDc6MDBcIn0se1wiZGF0ZVwiOlwiNy1BdWctMTZcIixcInZhbHVlXCI6MSxcImZ1bGxEYXRlXCI6XCIyMDE2LTA4LTA3VDAwOjAwOjAwLTA3OjAwXCJ9LHtcImRhdGVcIjpcIjgtQXVnLTE2XCIsXCJ2YWx1ZVwiOjEsXCJmdWxsRGF0ZVwiOlwiMjAxNi0wOC0wOFQwMDowMDowMC0wNzowMFwifSx7XCJkYXRlXCI6XCI5LUF1Zy0xNlwiLFwidmFsdWVcIjowLFwiZnVsbERhdGVcIjpcIjIwMTYtMDgtMDlUMDA6MDA6MDAtMDc6MDBcIn0se1wiZGF0ZVwiOlwiMTAtQXVnLTE2XCIsXCJ2YWx1ZVwiOjMsXCJmdWxsRGF0ZVwiOlwiMjAxNi0wOC0xMFQwMDowMDowMC0wNzowMFwifSx7XCJkYXRlXCI6XCIxMS1BdWctMTZcIixcInZhbHVlXCI6NCxcImZ1bGxEYXRlXCI6XCIyMDE2LTA4LTExVDAwOjAwOjAwLTA3OjAwXCJ9LHtcImRhdGVcIjpcIjEyLUF1Zy0xNlwiLFwidmFsdWVcIjo0LFwiZnVsbERhdGVcIjpcIjIwMTYtMDgtMTJUMDA6MDA6MDAtMDc6MDBcIn0se1wiZGF0ZVwiOlwiMTMtQXVnLTE2XCIsXCJ2YWx1ZVwiOjIsXCJmdWxsRGF0ZVwiOlwiMjAxNi0wOC0xM1QwMDowMDowMC0wNzowMFwifSx7XCJkYXRlXCI6XCIxNC1BdWctMTZcIixcInZhbHVlXCI6MyxcImZ1bGxEYXRlXCI6XCIyMDE2LTA4LTE0VDAwOjAwOjAwLTA3OjAwXCJ9LHtcImRhdGVcIjpcIjE1LUF1Zy0xNlwiLFwidmFsdWVcIjowLFwiZnVsbERhdGVcIjpcIjIwMTYtMDgtMTVUMDA6MDA6MDAtMDc6MDBcIn0se1wiZGF0ZVwiOlwiMTYtQXVnLTE2XCIsXCJ2YWx1ZVwiOjEsXCJmdWxsRGF0ZVwiOlwiMjAxNi0wOC0xNlQwMDowMDowMC0wNzowMFwifSx7XCJkYXRlXCI6XCIxNy1BdWctMTZcIixcInZhbHVlXCI6MCxcImZ1bGxEYXRlXCI6XCIyMDE2LTA4LTE3VDAwOjAwOjAwLTA3OjAwXCJ9LHtcImRhdGVcIjpcIjE4LUF1Zy0xNlwiLFwidmFsdWVcIjoyLFwiZnVsbERhdGVcIjpcIjIwMTYtMDgtMThUMDA6MDA6MDAtMDc6MDBcIn0se1wiZGF0ZVwiOlwiMTktQXVnLTE2XCIsXCJ2YWx1ZVwiOjUsXCJmdWxsRGF0ZVwiOlwiMjAxNi0wOC0xOVQwMDowMDowMC0wNzowMFwifSx7XCJkYXRlXCI6XCIyMC1BdWctMTZcIixcInZhbHVlXCI6MSxcImZ1bGxEYXRlXCI6XCIyMDE2LTA4LTIwVDAwOjAwOjAwLTA3OjAwXCJ9LHtcImRhdGVcIjpcIjIxLUF1Zy0xNlwiLFwidmFsdWVcIjoyLFwiZnVsbERhdGVcIjpcIjIwMTYtMDgtMjFUMDA6MDA6MDAtMDc6MDBcIn0se1wiZGF0ZVwiOlwiMjItQXVnLTE2XCIsXCJ2YWx1ZVwiOjksXCJmdWxsRGF0ZVwiOlwiMjAxNi0wOC0yMlQwMDowMDowMC0wNzowMFwifSx7XCJkYXRlXCI6XCIyMy1BdWctMTZcIixcInZhbHVlXCI6NCxcImZ1bGxEYXRlXCI6XCIyMDE2LTA4LTIzVDAwOjAwOjAwLTA3OjAwXCJ9LHtcImRhdGVcIjpcIjI0LUF1Zy0xNlwiLFwidmFsdWVcIjozLFwiZnVsbERhdGVcIjpcIjIwMTYtMDgtMjRUMDA6MDA6MDAtMDc6MDBcIn0se1wiZGF0ZVwiOlwiMjUtQXVnLTE2XCIsXCJ2YWx1ZVwiOjIsXCJmdWxsRGF0ZVwiOlwiMjAxNi0wOC0yNVQwMDowMDowMC0wNzowMFwifSx7XCJkYXRlXCI6XCIyNi1BdWctMTZcIixcInZhbHVlXCI6NSxcImZ1bGxEYXRlXCI6XCIyMDE2LTA4LTI2VDAwOjAwOjAwLTA3OjAwXCJ9XX1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9qc29uLWxvYWRlciEuL3Rlc3QvanNvbi9saW5lRGF0YU9uZVNldC5qc29uXG4vLyBtb2R1bGUgaWQgPSA1NlxuLy8gbW9kdWxlIGNodW5rcyA9IDUiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 57 */
/***/ (function(module, exports) {

	eval("module.exports = {\"dataByTopic\":[{\"topic\":-1,\"topicName\":\"Quantity\",\"dates\":[{\"date\":1422000000000,\"value\":0,\"fullDate\":\"2015-01-23T03:00:00-05:00\"},{\"date\":1422086400000,\"value\":0,\"fullDate\":\"2015-01-24T03:00:00-05:00\"},{\"date\":1422172800000,\"value\":0,\"fullDate\":\"2015-01-25T03:00:00-05:00\"},{\"date\":1422259200000,\"value\":0,\"fullDate\":\"2015-01-26T03:00:00-05:00\"},{\"date\":1422345600000,\"value\":0,\"fullDate\":\"2015-01-27T03:00:00-05:00\"},{\"date\":1422432000000,\"value\":0,\"fullDate\":\"2015-01-28T03:00:00-05:00\"},{\"date\":1422518400000,\"value\":0,\"fullDate\":\"2015-01-29T03:00:00-05:00\"},{\"date\":1422604800000,\"value\":0,\"fullDate\":\"2015-01-30T03:00:00-05:00\"},{\"date\":1422691200000,\"value\":0,\"fullDate\":\"2015-01-31T03:00:00-05:00\"},{\"date\":1422777600000,\"value\":0,\"fullDate\":\"2015-02-01T03:00:00-05:00\"},{\"date\":1422864000000,\"value\":0,\"fullDate\":\"2015-02-02T03:00:00-05:00\"},{\"date\":1422950400000,\"value\":0,\"fullDate\":\"2015-02-03T03:00:00-05:00\"},{\"date\":1423036800000,\"value\":0,\"fullDate\":\"2015-02-04T03:00:00-05:00\"},{\"date\":1423123200000,\"value\":0,\"fullDate\":\"2015-02-05T03:00:00-05:00\"},{\"date\":1423209600000,\"value\":0,\"fullDate\":\"2015-02-06T03:00:00-05:00\"},{\"date\":1423296000000,\"value\":0,\"fullDate\":\"2015-02-07T03:00:00-05:00\"},{\"date\":1423382400000,\"value\":0,\"fullDate\":\"2015-02-08T03:00:00-05:00\"},{\"date\":1423468800000,\"value\":0,\"fullDate\":\"2015-02-09T03:00:00-05:00\"},{\"date\":1423555200000,\"value\":0,\"fullDate\":\"2015-02-10T03:00:00-05:00\"},{\"date\":1423641600000,\"value\":0,\"fullDate\":\"2015-02-11T03:00:00-05:00\"},{\"date\":1423728000000,\"value\":0,\"fullDate\":\"2015-02-12T03:00:00-05:00\"},{\"date\":1423814400000,\"value\":0,\"fullDate\":\"2015-02-13T03:00:00-05:00\"},{\"date\":1423900800000,\"value\":0,\"fullDate\":\"2015-02-14T03:00:00-05:00\"},{\"date\":1423987200000,\"value\":0,\"fullDate\":\"2015-02-15T03:00:00-05:00\"},{\"date\":1424073600000,\"value\":0,\"fullDate\":\"2015-02-16T03:00:00-05:00\"},{\"date\":1424160000000,\"value\":0,\"fullDate\":\"2015-02-17T03:00:00-05:00\"},{\"date\":1424246400000,\"value\":0,\"fullDate\":\"2015-02-18T03:00:00-05:00\"},{\"date\":1424332800000,\"value\":0,\"fullDate\":\"2015-02-19T03:00:00-05:00\"},{\"date\":1424419200000,\"value\":0,\"fullDate\":\"2015-02-20T03:00:00-05:00\"},{\"date\":1424505600000,\"value\":0,\"fullDate\":\"2015-02-21T03:00:00-05:00\"},{\"date\":1424592000000,\"value\":0,\"fullDate\":\"2015-02-22T03:00:00-05:00\"},{\"date\":1424678400000,\"value\":0,\"fullDate\":\"2015-02-23T03:00:00-05:00\"},{\"date\":1424764800000,\"value\":0,\"fullDate\":\"2015-02-24T03:00:00-05:00\"},{\"date\":1424851200000,\"value\":0,\"fullDate\":\"2015-02-25T03:00:00-05:00\"},{\"date\":1424937600000,\"value\":0,\"fullDate\":\"2015-02-26T03:00:00-05:00\"},{\"date\":1425024000000,\"value\":0,\"fullDate\":\"2015-02-27T03:00:00-05:00\"},{\"date\":1425110400000,\"value\":0,\"fullDate\":\"2015-02-28T03:00:00-05:00\"},{\"date\":1425196800000,\"value\":0,\"fullDate\":\"2015-03-01T03:00:00-05:00\"},{\"date\":1425283200000,\"value\":0,\"fullDate\":\"2015-03-02T03:00:00-05:00\"},{\"date\":1425369600000,\"value\":0,\"fullDate\":\"2015-03-03T03:00:00-05:00\"},{\"date\":1425456000000,\"value\":0,\"fullDate\":\"2015-03-04T03:00:00-05:00\"},{\"date\":1425542400000,\"value\":0,\"fullDate\":\"2015-03-05T03:00:00-05:00\"},{\"date\":1425628800000,\"value\":0,\"fullDate\":\"2015-03-06T03:00:00-05:00\"},{\"date\":1425715200000,\"value\":0,\"fullDate\":\"2015-03-07T03:00:00-05:00\"},{\"date\":1425884400000,\"value\":0,\"fullDate\":\"2015-03-09T03:00:00-04:00\"},{\"date\":1425970800000,\"value\":0,\"fullDate\":\"2015-03-10T03:00:00-04:00\"},{\"date\":1426057200000,\"value\":0,\"fullDate\":\"2015-03-11T03:00:00-04:00\"},{\"date\":1426143600000,\"value\":0,\"fullDate\":\"2015-03-12T03:00:00-04:00\"},{\"date\":1426230000000,\"value\":0,\"fullDate\":\"2015-03-13T03:00:00-04:00\"},{\"date\":1426316400000,\"value\":0,\"fullDate\":\"2015-03-14T03:00:00-04:00\"},{\"date\":1426402800000,\"value\":0,\"fullDate\":\"2015-03-15T03:00:00-04:00\"},{\"date\":1426489200000,\"value\":0,\"fullDate\":\"2015-03-16T03:00:00-04:00\"},{\"date\":1426575600000,\"value\":0,\"fullDate\":\"2015-03-17T03:00:00-04:00\"},{\"date\":1426662000000,\"value\":0,\"fullDate\":\"2015-03-18T03:00:00-04:00\"},{\"date\":1426748400000,\"value\":0,\"fullDate\":\"2015-03-19T03:00:00-04:00\"},{\"date\":1426834800000,\"value\":0,\"fullDate\":\"2015-03-20T03:00:00-04:00\"},{\"date\":1426921200000,\"value\":0,\"fullDate\":\"2015-03-21T03:00:00-04:00\"},{\"date\":1427007600000,\"value\":0,\"fullDate\":\"2015-03-22T03:00:00-04:00\"},{\"date\":1427094000000,\"value\":0,\"fullDate\":\"2015-03-23T03:00:00-04:00\"},{\"date\":1427180400000,\"value\":0,\"fullDate\":\"2015-03-24T03:00:00-04:00\"},{\"date\":1427266800000,\"value\":0,\"fullDate\":\"2015-03-25T03:00:00-04:00\"},{\"date\":1427353200000,\"value\":0,\"fullDate\":\"2015-03-26T03:00:00-04:00\"},{\"date\":1427439600000,\"value\":0,\"fullDate\":\"2015-03-27T03:00:00-04:00\"},{\"date\":1427526000000,\"value\":0,\"fullDate\":\"2015-03-28T03:00:00-04:00\"},{\"date\":1427612400000,\"value\":0,\"fullDate\":\"2015-03-29T03:00:00-04:00\"},{\"date\":1427698800000,\"value\":0,\"fullDate\":\"2015-03-30T03:00:00-04:00\"},{\"date\":1427785200000,\"value\":0,\"fullDate\":\"2015-03-31T03:00:00-04:00\"},{\"date\":1427871600000,\"value\":0,\"fullDate\":\"2015-04-01T03:00:00-04:00\"},{\"date\":1427958000000,\"value\":0,\"fullDate\":\"2015-04-02T03:00:00-04:00\"},{\"date\":1428044400000,\"value\":0,\"fullDate\":\"2015-04-03T03:00:00-04:00\"},{\"date\":1428130800000,\"value\":0,\"fullDate\":\"2015-04-04T03:00:00-04:00\"},{\"date\":1428217200000,\"value\":0,\"fullDate\":\"2015-04-05T03:00:00-04:00\"},{\"date\":1428303600000,\"value\":0,\"fullDate\":\"2015-04-06T03:00:00-04:00\"},{\"date\":1428390000000,\"value\":0,\"fullDate\":\"2015-04-07T03:00:00-04:00\"},{\"date\":1428476400000,\"value\":0,\"fullDate\":\"2015-04-08T03:00:00-04:00\"},{\"date\":1428562800000,\"value\":0,\"fullDate\":\"2015-04-09T03:00:00-04:00\"},{\"date\":1428649200000,\"value\":0,\"fullDate\":\"2015-04-10T03:00:00-04:00\"},{\"date\":1428735600000,\"value\":0,\"fullDate\":\"2015-04-11T03:00:00-04:00\"},{\"date\":1428822000000,\"value\":0,\"fullDate\":\"2015-04-12T03:00:00-04:00\"},{\"date\":1428908400000,\"value\":0,\"fullDate\":\"2015-04-13T03:00:00-04:00\"},{\"date\":1428994800000,\"value\":0,\"fullDate\":\"2015-04-14T03:00:00-04:00\"},{\"date\":1429081200000,\"value\":0,\"fullDate\":\"2015-04-15T03:00:00-04:00\"},{\"date\":1429167600000,\"value\":0,\"fullDate\":\"2015-04-16T03:00:00-04:00\"},{\"date\":1429254000000,\"value\":0,\"fullDate\":\"2015-04-17T03:00:00-04:00\"},{\"date\":1429340400000,\"value\":0,\"fullDate\":\"2015-04-18T03:00:00-04:00\"},{\"date\":1429426800000,\"value\":0,\"fullDate\":\"2015-04-19T03:00:00-04:00\"},{\"date\":1429513200000,\"value\":0,\"fullDate\":\"2015-04-20T03:00:00-04:00\"},{\"date\":1429599600000,\"value\":0,\"fullDate\":\"2015-04-21T03:00:00-04:00\"},{\"date\":1429686000000,\"value\":0,\"fullDate\":\"2015-04-22T03:00:00-04:00\"},{\"date\":1429772400000,\"value\":0,\"fullDate\":\"2015-04-23T03:00:00-04:00\"},{\"date\":1429858800000,\"value\":0,\"fullDate\":\"2015-04-24T03:00:00-04:00\"},{\"date\":1429945200000,\"value\":0,\"fullDate\":\"2015-04-25T03:00:00-04:00\"},{\"date\":1430031600000,\"value\":0,\"fullDate\":\"2015-04-26T03:00:00-04:00\"},{\"date\":1430118000000,\"value\":0,\"fullDate\":\"2015-04-27T03:00:00-04:00\"},{\"date\":1430204400000,\"value\":0,\"fullDate\":\"2015-04-28T03:00:00-04:00\"},{\"date\":1430290800000,\"value\":0,\"fullDate\":\"2015-04-29T03:00:00-04:00\"},{\"date\":1430377200000,\"value\":0,\"fullDate\":\"2015-04-30T03:00:00-04:00\"},{\"date\":1430463600000,\"value\":0,\"fullDate\":\"2015-05-01T03:00:00-04:00\"},{\"date\":1430550000000,\"value\":0,\"fullDate\":\"2015-05-02T03:00:00-04:00\"},{\"date\":1430636400000,\"value\":0,\"fullDate\":\"2015-05-03T03:00:00-04:00\"},{\"date\":1430722800000,\"value\":0,\"fullDate\":\"2015-05-04T03:00:00-04:00\"},{\"date\":1430809200000,\"value\":0,\"fullDate\":\"2015-05-05T03:00:00-04:00\"},{\"date\":1430895600000,\"value\":0,\"fullDate\":\"2015-05-06T03:00:00-04:00\"},{\"date\":1430982000000,\"value\":0,\"fullDate\":\"2015-05-07T03:00:00-04:00\"},{\"date\":1431068400000,\"value\":0,\"fullDate\":\"2015-05-08T03:00:00-04:00\"},{\"date\":1431154800000,\"value\":0,\"fullDate\":\"2015-05-09T03:00:00-04:00\"},{\"date\":1431241200000,\"value\":0,\"fullDate\":\"2015-05-10T03:00:00-04:00\"},{\"date\":1431327600000,\"value\":0,\"fullDate\":\"2015-05-11T03:00:00-04:00\"},{\"date\":1431414000000,\"value\":0,\"fullDate\":\"2015-05-12T03:00:00-04:00\"},{\"date\":1431500400000,\"value\":0,\"fullDate\":\"2015-05-13T03:00:00-04:00\"},{\"date\":1431586800000,\"value\":0,\"fullDate\":\"2015-05-14T03:00:00-04:00\"},{\"date\":1431673200000,\"value\":0,\"fullDate\":\"2015-05-15T03:00:00-04:00\"},{\"date\":1431759600000,\"value\":0,\"fullDate\":\"2015-05-16T03:00:00-04:00\"},{\"date\":1431846000000,\"value\":0,\"fullDate\":\"2015-05-17T03:00:00-04:00\"},{\"date\":1431932400000,\"value\":0,\"fullDate\":\"2015-05-18T03:00:00-04:00\"},{\"date\":1432018800000,\"value\":0,\"fullDate\":\"2015-05-19T03:00:00-04:00\"},{\"date\":1432105200000,\"value\":0,\"fullDate\":\"2015-05-20T03:00:00-04:00\"},{\"date\":1432191600000,\"value\":0,\"fullDate\":\"2015-05-21T03:00:00-04:00\"},{\"date\":1432278000000,\"value\":0,\"fullDate\":\"2015-05-22T03:00:00-04:00\"},{\"date\":1432364400000,\"value\":0,\"fullDate\":\"2015-05-23T03:00:00-04:00\"},{\"date\":1432450800000,\"value\":0,\"fullDate\":\"2015-05-24T03:00:00-04:00\"},{\"date\":1432537200000,\"value\":0,\"fullDate\":\"2015-05-25T03:00:00-04:00\"},{\"date\":1432623600000,\"value\":0,\"fullDate\":\"2015-05-26T03:00:00-04:00\"},{\"date\":1432710000000,\"value\":0,\"fullDate\":\"2015-05-27T03:00:00-04:00\"},{\"date\":1432796400000,\"value\":0,\"fullDate\":\"2015-05-28T03:00:00-04:00\"},{\"date\":1432882800000,\"value\":0,\"fullDate\":\"2015-05-29T03:00:00-04:00\"},{\"date\":1432969200000,\"value\":0,\"fullDate\":\"2015-05-30T03:00:00-04:00\"},{\"date\":1433055600000,\"value\":0,\"fullDate\":\"2015-05-31T03:00:00-04:00\"},{\"date\":1433142000000,\"value\":0,\"fullDate\":\"2015-06-01T03:00:00-04:00\"},{\"date\":1433228400000,\"value\":0,\"fullDate\":\"2015-06-02T03:00:00-04:00\"},{\"date\":1433314800000,\"value\":0,\"fullDate\":\"2015-06-03T03:00:00-04:00\"},{\"date\":1433401200000,\"value\":0,\"fullDate\":\"2015-06-04T03:00:00-04:00\"},{\"date\":1433487600000,\"value\":0,\"fullDate\":\"2015-06-05T03:00:00-04:00\"},{\"date\":1433574000000,\"value\":0,\"fullDate\":\"2015-06-06T03:00:00-04:00\"},{\"date\":1433660400000,\"value\":0,\"fullDate\":\"2015-06-07T03:00:00-04:00\"},{\"date\":1433746800000,\"value\":0,\"fullDate\":\"2015-06-08T03:00:00-04:00\"},{\"date\":1433833200000,\"value\":0,\"fullDate\":\"2015-06-09T03:00:00-04:00\"},{\"date\":1433919600000,\"value\":0,\"fullDate\":\"2015-06-10T03:00:00-04:00\"},{\"date\":1434006000000,\"value\":0,\"fullDate\":\"2015-06-11T03:00:00-04:00\"},{\"date\":1434092400000,\"value\":0,\"fullDate\":\"2015-06-12T03:00:00-04:00\"},{\"date\":1434178800000,\"value\":0,\"fullDate\":\"2015-06-13T03:00:00-04:00\"},{\"date\":1434265200000,\"value\":0,\"fullDate\":\"2015-06-14T03:00:00-04:00\"},{\"date\":1434351600000,\"value\":0,\"fullDate\":\"2015-06-15T03:00:00-04:00\"},{\"date\":1434438000000,\"value\":0,\"fullDate\":\"2015-06-16T03:00:00-04:00\"},{\"date\":1434524400000,\"value\":0,\"fullDate\":\"2015-06-17T03:00:00-04:00\"},{\"date\":1434610800000,\"value\":0,\"fullDate\":\"2015-06-18T03:00:00-04:00\"},{\"date\":1434697200000,\"value\":0,\"fullDate\":\"2015-06-19T03:00:00-04:00\"},{\"date\":1434783600000,\"value\":0,\"fullDate\":\"2015-06-20T03:00:00-04:00\"},{\"date\":1434870000000,\"value\":0,\"fullDate\":\"2015-06-21T03:00:00-04:00\"},{\"date\":1434956400000,\"value\":0,\"fullDate\":\"2015-06-22T03:00:00-04:00\"},{\"date\":1435042800000,\"value\":0,\"fullDate\":\"2015-06-23T03:00:00-04:00\"},{\"date\":1435129200000,\"value\":0,\"fullDate\":\"2015-06-24T03:00:00-04:00\"},{\"date\":1435215600000,\"value\":0,\"fullDate\":\"2015-06-25T03:00:00-04:00\"},{\"date\":1435302000000,\"value\":0,\"fullDate\":\"2015-06-26T03:00:00-04:00\"},{\"date\":1435388400000,\"value\":0,\"fullDate\":\"2015-06-27T03:00:00-04:00\"},{\"date\":1435474800000,\"value\":0,\"fullDate\":\"2015-06-28T03:00:00-04:00\"},{\"date\":1435561200000,\"value\":0,\"fullDate\":\"2015-06-29T03:00:00-04:00\"},{\"date\":1435647600000,\"value\":0,\"fullDate\":\"2015-06-30T03:00:00-04:00\"},{\"date\":1435734000000,\"value\":0,\"fullDate\":\"2015-07-01T03:00:00-04:00\"},{\"date\":1435820400000,\"value\":0,\"fullDate\":\"2015-07-02T03:00:00-04:00\"},{\"date\":1435906800000,\"value\":0,\"fullDate\":\"2015-07-03T03:00:00-04:00\"},{\"date\":1435993200000,\"value\":0,\"fullDate\":\"2015-07-04T03:00:00-04:00\"},{\"date\":1436079600000,\"value\":0,\"fullDate\":\"2015-07-05T03:00:00-04:00\"},{\"date\":1436166000000,\"value\":0,\"fullDate\":\"2015-07-06T03:00:00-04:00\"},{\"date\":1436252400000,\"value\":0,\"fullDate\":\"2015-07-07T03:00:00-04:00\"},{\"date\":1436338800000,\"value\":0,\"fullDate\":\"2015-07-08T03:00:00-04:00\"},{\"date\":1436425200000,\"value\":0,\"fullDate\":\"2015-07-09T03:00:00-04:00\"},{\"date\":1436511600000,\"value\":0,\"fullDate\":\"2015-07-10T03:00:00-04:00\"},{\"date\":1436598000000,\"value\":0,\"fullDate\":\"2015-07-11T03:00:00-04:00\"},{\"date\":1436684400000,\"value\":0,\"fullDate\":\"2015-07-12T03:00:00-04:00\"},{\"date\":1436770800000,\"value\":0,\"fullDate\":\"2015-07-13T03:00:00-04:00\"},{\"date\":1436857200000,\"value\":0,\"fullDate\":\"2015-07-14T03:00:00-04:00\"},{\"date\":1436943600000,\"value\":0,\"fullDate\":\"2015-07-15T03:00:00-04:00\"},{\"date\":1437030000000,\"value\":0,\"fullDate\":\"2015-07-16T03:00:00-04:00\"},{\"date\":1437116400000,\"value\":0,\"fullDate\":\"2015-07-17T03:00:00-04:00\"},{\"date\":1437202800000,\"value\":0,\"fullDate\":\"2015-07-18T03:00:00-04:00\"},{\"date\":1437289200000,\"value\":0,\"fullDate\":\"2015-07-19T03:00:00-04:00\"},{\"date\":1437375600000,\"value\":0,\"fullDate\":\"2015-07-20T03:00:00-04:00\"},{\"date\":1437462000000,\"value\":0,\"fullDate\":\"2015-07-21T03:00:00-04:00\"},{\"date\":1437548400000,\"value\":0,\"fullDate\":\"2015-07-22T03:00:00-04:00\"},{\"date\":1437634800000,\"value\":0,\"fullDate\":\"2015-07-23T03:00:00-04:00\"},{\"date\":1437721200000,\"value\":0,\"fullDate\":\"2015-07-24T03:00:00-04:00\"},{\"date\":1437807600000,\"value\":0,\"fullDate\":\"2015-07-25T03:00:00-04:00\"},{\"date\":1437894000000,\"value\":0,\"fullDate\":\"2015-07-26T03:00:00-04:00\"},{\"date\":1437980400000,\"value\":0,\"fullDate\":\"2015-07-27T03:00:00-04:00\"},{\"date\":1438066800000,\"value\":0,\"fullDate\":\"2015-07-28T03:00:00-04:00\"},{\"date\":1438153200000,\"value\":0,\"fullDate\":\"2015-07-29T03:00:00-04:00\"},{\"date\":1438239600000,\"value\":0,\"fullDate\":\"2015-07-30T03:00:00-04:00\"},{\"date\":1438326000000,\"value\":0,\"fullDate\":\"2015-07-31T03:00:00-04:00\"},{\"date\":1438412400000,\"value\":0,\"fullDate\":\"2015-08-01T03:00:00-04:00\"},{\"date\":1438498800000,\"value\":0,\"fullDate\":\"2015-08-02T03:00:00-04:00\"},{\"date\":1438585200000,\"value\":0,\"fullDate\":\"2015-08-03T03:00:00-04:00\"},{\"date\":1438671600000,\"value\":0,\"fullDate\":\"2015-08-04T03:00:00-04:00\"},{\"date\":1438758000000,\"value\":0,\"fullDate\":\"2015-08-05T03:00:00-04:00\"},{\"date\":1438844400000,\"value\":0,\"fullDate\":\"2015-08-06T03:00:00-04:00\"},{\"date\":1438930800000,\"value\":0,\"fullDate\":\"2015-08-07T03:00:00-04:00\"},{\"date\":1439017200000,\"value\":0,\"fullDate\":\"2015-08-08T03:00:00-04:00\"},{\"date\":1439103600000,\"value\":0,\"fullDate\":\"2015-08-09T03:00:00-04:00\"},{\"date\":1439190000000,\"value\":0,\"fullDate\":\"2015-08-10T03:00:00-04:00\"},{\"date\":1439276400000,\"value\":0,\"fullDate\":\"2015-08-11T03:00:00-04:00\"},{\"date\":1439362800000,\"value\":0,\"fullDate\":\"2015-08-12T03:00:00-04:00\"},{\"date\":1439449200000,\"value\":0,\"fullDate\":\"2015-08-13T03:00:00-04:00\"},{\"date\":1439535600000,\"value\":0,\"fullDate\":\"2015-08-14T03:00:00-04:00\"},{\"date\":1439622000000,\"value\":0,\"fullDate\":\"2015-08-15T03:00:00-04:00\"},{\"date\":1439708400000,\"value\":0,\"fullDate\":\"2015-08-16T03:00:00-04:00\"},{\"date\":1439794800000,\"value\":0,\"fullDate\":\"2015-08-17T03:00:00-04:00\"},{\"date\":1439881200000,\"value\":0,\"fullDate\":\"2015-08-18T03:00:00-04:00\"},{\"date\":1439967600000,\"value\":0,\"fullDate\":\"2015-08-19T03:00:00-04:00\"},{\"date\":1440054000000,\"value\":0,\"fullDate\":\"2015-08-20T03:00:00-04:00\"},{\"date\":1440140400000,\"value\":0,\"fullDate\":\"2015-08-21T03:00:00-04:00\"},{\"date\":1440226800000,\"value\":0,\"fullDate\":\"2015-08-22T03:00:00-04:00\"},{\"date\":1440313200000,\"value\":0,\"fullDate\":\"2015-08-23T03:00:00-04:00\"},{\"date\":1440399600000,\"value\":0,\"fullDate\":\"2015-08-24T03:00:00-04:00\"},{\"date\":1440486000000,\"value\":0,\"fullDate\":\"2015-08-25T03:00:00-04:00\"},{\"date\":1440572400000,\"value\":0,\"fullDate\":\"2015-08-26T03:00:00-04:00\"},{\"date\":1440658800000,\"value\":0,\"fullDate\":\"2015-08-27T03:00:00-04:00\"},{\"date\":1440745200000,\"value\":0,\"fullDate\":\"2015-08-28T03:00:00-04:00\"},{\"date\":1440831600000,\"value\":0,\"fullDate\":\"2015-08-29T03:00:00-04:00\"},{\"date\":1440918000000,\"value\":0,\"fullDate\":\"2015-08-30T03:00:00-04:00\"},{\"date\":1441004400000,\"value\":0,\"fullDate\":\"2015-08-31T03:00:00-04:00\"},{\"date\":1441090800000,\"value\":0,\"fullDate\":\"2015-09-01T03:00:00-04:00\"},{\"date\":1441177200000,\"value\":0,\"fullDate\":\"2015-09-02T03:00:00-04:00\"},{\"date\":1441263600000,\"value\":0,\"fullDate\":\"2015-09-03T03:00:00-04:00\"},{\"date\":1441350000000,\"value\":0,\"fullDate\":\"2015-09-04T03:00:00-04:00\"},{\"date\":1441436400000,\"value\":0,\"fullDate\":\"2015-09-05T03:00:00-04:00\"},{\"date\":1441522800000,\"value\":0,\"fullDate\":\"2015-09-06T03:00:00-04:00\"},{\"date\":1441609200000,\"value\":0,\"fullDate\":\"2015-09-07T03:00:00-04:00\"},{\"date\":1441695600000,\"value\":0,\"fullDate\":\"2015-09-08T03:00:00-04:00\"},{\"date\":1441782000000,\"value\":0,\"fullDate\":\"2015-09-09T03:00:00-04:00\"},{\"date\":1441868400000,\"value\":0,\"fullDate\":\"2015-09-10T03:00:00-04:00\"},{\"date\":1441954800000,\"value\":0,\"fullDate\":\"2015-09-11T03:00:00-04:00\"},{\"date\":1442041200000,\"value\":0,\"fullDate\":\"2015-09-12T03:00:00-04:00\"},{\"date\":1442127600000,\"value\":0,\"fullDate\":\"2015-09-13T03:00:00-04:00\"},{\"date\":1442214000000,\"value\":0,\"fullDate\":\"2015-09-14T03:00:00-04:00\"},{\"date\":1442300400000,\"value\":0,\"fullDate\":\"2015-09-15T03:00:00-04:00\"},{\"date\":1442386800000,\"value\":0,\"fullDate\":\"2015-09-16T03:00:00-04:00\"},{\"date\":1442473200000,\"value\":0,\"fullDate\":\"2015-09-17T03:00:00-04:00\"},{\"date\":1442559600000,\"value\":0,\"fullDate\":\"2015-09-18T03:00:00-04:00\"},{\"date\":1442646000000,\"value\":0,\"fullDate\":\"2015-09-19T03:00:00-04:00\"},{\"date\":1442732400000,\"value\":0,\"fullDate\":\"2015-09-20T03:00:00-04:00\"},{\"date\":1442818800000,\"value\":0,\"fullDate\":\"2015-09-21T03:00:00-04:00\"},{\"date\":1442905200000,\"value\":0,\"fullDate\":\"2015-09-22T03:00:00-04:00\"},{\"date\":1442991600000,\"value\":0,\"fullDate\":\"2015-09-23T03:00:00-04:00\"},{\"date\":1443078000000,\"value\":0,\"fullDate\":\"2015-09-24T03:00:00-04:00\"},{\"date\":1443164400000,\"value\":0,\"fullDate\":\"2015-09-25T03:00:00-04:00\"},{\"date\":1443250800000,\"value\":0,\"fullDate\":\"2015-09-26T03:00:00-04:00\"},{\"date\":1443337200000,\"value\":0,\"fullDate\":\"2015-09-27T03:00:00-04:00\"},{\"date\":1443423600000,\"value\":0,\"fullDate\":\"2015-09-28T03:00:00-04:00\"},{\"date\":1443510000000,\"value\":0,\"fullDate\":\"2015-09-29T03:00:00-04:00\"},{\"date\":1443596400000,\"value\":0,\"fullDate\":\"2015-09-30T03:00:00-04:00\"},{\"date\":1443682800000,\"value\":0,\"fullDate\":\"2015-10-01T03:00:00-04:00\"},{\"date\":1443769200000,\"value\":0,\"fullDate\":\"2015-10-02T03:00:00-04:00\"},{\"date\":1443855600000,\"value\":0,\"fullDate\":\"2015-10-03T03:00:00-04:00\"},{\"date\":1443942000000,\"value\":0,\"fullDate\":\"2015-10-04T03:00:00-04:00\"},{\"date\":1444028400000,\"value\":0,\"fullDate\":\"2015-10-05T03:00:00-04:00\"},{\"date\":1444114800000,\"value\":0,\"fullDate\":\"2015-10-06T03:00:00-04:00\"},{\"date\":1444201200000,\"value\":0,\"fullDate\":\"2015-10-07T03:00:00-04:00\"},{\"date\":1444287600000,\"value\":0,\"fullDate\":\"2015-10-08T03:00:00-04:00\"},{\"date\":1444374000000,\"value\":0,\"fullDate\":\"2015-10-09T03:00:00-04:00\"},{\"date\":1444460400000,\"value\":0,\"fullDate\":\"2015-10-10T03:00:00-04:00\"},{\"date\":1444546800000,\"value\":0,\"fullDate\":\"2015-10-11T03:00:00-04:00\"},{\"date\":1444633200000,\"value\":0,\"fullDate\":\"2015-10-12T03:00:00-04:00\"},{\"date\":1444719600000,\"value\":0,\"fullDate\":\"2015-10-13T03:00:00-04:00\"},{\"date\":1444806000000,\"value\":0,\"fullDate\":\"2015-10-14T03:00:00-04:00\"},{\"date\":1444892400000,\"value\":0,\"fullDate\":\"2015-10-15T03:00:00-04:00\"},{\"date\":1444978800000,\"value\":0,\"fullDate\":\"2015-10-16T03:00:00-04:00\"},{\"date\":1445065200000,\"value\":0,\"fullDate\":\"2015-10-17T03:00:00-04:00\"},{\"date\":1445151600000,\"value\":0,\"fullDate\":\"2015-10-18T03:00:00-04:00\"},{\"date\":1445238000000,\"value\":0,\"fullDate\":\"2015-10-19T03:00:00-04:00\"},{\"date\":1445324400000,\"value\":0,\"fullDate\":\"2015-10-20T03:00:00-04:00\"},{\"date\":1445410800000,\"value\":0,\"fullDate\":\"2015-10-21T03:00:00-04:00\"},{\"date\":1445497200000,\"value\":0,\"fullDate\":\"2015-10-22T03:00:00-04:00\"},{\"date\":1445583600000,\"value\":0,\"fullDate\":\"2015-10-23T03:00:00-04:00\"},{\"date\":1445670000000,\"value\":0,\"fullDate\":\"2015-10-24T03:00:00-04:00\"},{\"date\":1445756400000,\"value\":0,\"fullDate\":\"2015-10-25T03:00:00-04:00\"},{\"date\":1445842800000,\"value\":0,\"fullDate\":\"2015-10-26T03:00:00-04:00\"},{\"date\":1445929200000,\"value\":0,\"fullDate\":\"2015-10-27T03:00:00-04:00\"},{\"date\":1446015600000,\"value\":0,\"fullDate\":\"2015-10-28T03:00:00-04:00\"},{\"date\":1446102000000,\"value\":0,\"fullDate\":\"2015-10-29T03:00:00-04:00\"},{\"date\":1446188400000,\"value\":0,\"fullDate\":\"2015-10-30T03:00:00-04:00\"},{\"date\":1446274800000,\"value\":0,\"fullDate\":\"2015-10-31T03:00:00-04:00\"},{\"date\":1446361200000,\"value\":0,\"fullDate\":\"2015-11-01T02:00:00-05:00\"},{\"date\":1446361200000,\"value\":0,\"fullDate\":\"2015-11-01T02:00:00-05:00\"},{\"date\":1446451200000,\"value\":0,\"fullDate\":\"2015-11-02T03:00:00-05:00\"},{\"date\":1446537600000,\"value\":0,\"fullDate\":\"2015-11-03T03:00:00-05:00\"},{\"date\":1446624000000,\"value\":0,\"fullDate\":\"2015-11-04T03:00:00-05:00\"},{\"date\":1446710400000,\"value\":0,\"fullDate\":\"2015-11-05T03:00:00-05:00\"},{\"date\":1446796800000,\"value\":0,\"fullDate\":\"2015-11-06T03:00:00-05:00\"},{\"date\":1446883200000,\"value\":0,\"fullDate\":\"2015-11-07T03:00:00-05:00\"},{\"date\":1446969600000,\"value\":0,\"fullDate\":\"2015-11-08T03:00:00-05:00\"},{\"date\":1447056000000,\"value\":0,\"fullDate\":\"2015-11-09T03:00:00-05:00\"},{\"date\":1447142400000,\"value\":0,\"fullDate\":\"2015-11-10T03:00:00-05:00\"},{\"date\":1447228800000,\"value\":0,\"fullDate\":\"2015-11-11T03:00:00-05:00\"},{\"date\":1447315200000,\"value\":0,\"fullDate\":\"2015-11-12T03:00:00-05:00\"},{\"date\":1447401600000,\"value\":0,\"fullDate\":\"2015-11-13T03:00:00-05:00\"},{\"date\":1447488000000,\"value\":0,\"fullDate\":\"2015-11-14T03:00:00-05:00\"},{\"date\":1447574400000,\"value\":0,\"fullDate\":\"2015-11-15T03:00:00-05:00\"},{\"date\":1447660800000,\"value\":0,\"fullDate\":\"2015-11-16T03:00:00-05:00\"},{\"date\":1447747200000,\"value\":0,\"fullDate\":\"2015-11-17T03:00:00-05:00\"},{\"date\":1447833600000,\"value\":0,\"fullDate\":\"2015-11-18T03:00:00-05:00\"},{\"date\":1447920000000,\"value\":0,\"fullDate\":\"2015-11-19T03:00:00-05:00\"},{\"date\":1448006400000,\"value\":0,\"fullDate\":\"2015-11-20T03:00:00-05:00\"},{\"date\":1448092800000,\"value\":0,\"fullDate\":\"2015-11-21T03:00:00-05:00\"},{\"date\":1448179200000,\"value\":0,\"fullDate\":\"2015-11-22T03:00:00-05:00\"},{\"date\":1448265600000,\"value\":0,\"fullDate\":\"2015-11-23T03:00:00-05:00\"},{\"date\":1448352000000,\"value\":0,\"fullDate\":\"2015-11-24T03:00:00-05:00\"},{\"date\":1448438400000,\"value\":0,\"fullDate\":\"2015-11-25T03:00:00-05:00\"},{\"date\":1448524800000,\"value\":0,\"fullDate\":\"2015-11-26T03:00:00-05:00\"},{\"date\":1448611200000,\"value\":0,\"fullDate\":\"2015-11-27T03:00:00-05:00\"},{\"date\":1448697600000,\"value\":0,\"fullDate\":\"2015-11-28T03:00:00-05:00\"},{\"date\":1448784000000,\"value\":0,\"fullDate\":\"2015-11-29T03:00:00-05:00\"},{\"date\":1448870400000,\"value\":0,\"fullDate\":\"2015-11-30T03:00:00-05:00\"},{\"date\":1448956800000,\"value\":0,\"fullDate\":\"2015-12-01T03:00:00-05:00\"},{\"date\":1449043200000,\"value\":0,\"fullDate\":\"2015-12-02T03:00:00-05:00\"},{\"date\":1449129600000,\"value\":0,\"fullDate\":\"2015-12-03T03:00:00-05:00\"},{\"date\":1449216000000,\"value\":0,\"fullDate\":\"2015-12-04T03:00:00-05:00\"},{\"date\":1449302400000,\"value\":0,\"fullDate\":\"2015-12-05T03:00:00-05:00\"},{\"date\":1449388800000,\"value\":0,\"fullDate\":\"2015-12-06T03:00:00-05:00\"},{\"date\":1449475200000,\"value\":0,\"fullDate\":\"2015-12-07T03:00:00-05:00\"},{\"date\":1449561600000,\"value\":0,\"fullDate\":\"2015-12-08T03:00:00-05:00\"},{\"date\":1449648000000,\"value\":0,\"fullDate\":\"2015-12-09T03:00:00-05:00\"},{\"date\":1449734400000,\"value\":0,\"fullDate\":\"2015-12-10T03:00:00-05:00\"},{\"date\":1449820800000,\"value\":0,\"fullDate\":\"2015-12-11T03:00:00-05:00\"},{\"date\":1449907200000,\"value\":0,\"fullDate\":\"2015-12-12T03:00:00-05:00\"},{\"date\":1449993600000,\"value\":0,\"fullDate\":\"2015-12-13T03:00:00-05:00\"},{\"date\":1450080000000,\"value\":0,\"fullDate\":\"2015-12-14T03:00:00-05:00\"},{\"date\":1450166400000,\"value\":0,\"fullDate\":\"2015-12-15T03:00:00-05:00\"},{\"date\":1450252800000,\"value\":0,\"fullDate\":\"2015-12-16T03:00:00-05:00\"},{\"date\":1450339200000,\"value\":0,\"fullDate\":\"2015-12-17T03:00:00-05:00\"},{\"date\":1450425600000,\"value\":0,\"fullDate\":\"2015-12-18T03:00:00-05:00\"},{\"date\":1450512000000,\"value\":0,\"fullDate\":\"2015-12-19T03:00:00-05:00\"},{\"date\":1450598400000,\"value\":0,\"fullDate\":\"2015-12-20T03:00:00-05:00\"},{\"date\":1450684800000,\"value\":0,\"fullDate\":\"2015-12-21T03:00:00-05:00\"},{\"date\":1450771200000,\"value\":0,\"fullDate\":\"2015-12-22T03:00:00-05:00\"},{\"date\":1450857600000,\"value\":0,\"fullDate\":\"2015-12-23T03:00:00-05:00\"},{\"date\":1450944000000,\"value\":0,\"fullDate\":\"2015-12-24T03:00:00-05:00\"},{\"date\":1451030400000,\"value\":0,\"fullDate\":\"2015-12-25T03:00:00-05:00\"},{\"date\":1451116800000,\"value\":0,\"fullDate\":\"2015-12-26T03:00:00-05:00\"},{\"date\":1451203200000,\"value\":0,\"fullDate\":\"2015-12-27T03:00:00-05:00\"},{\"date\":1451289600000,\"value\":0,\"fullDate\":\"2015-12-28T03:00:00-05:00\"},{\"date\":1451376000000,\"value\":0,\"fullDate\":\"2015-12-29T03:00:00-05:00\"},{\"date\":1451462400000,\"value\":0,\"fullDate\":\"2015-12-30T03:00:00-05:00\"},{\"date\":1451548800000,\"value\":0,\"fullDate\":\"2015-12-31T03:00:00-05:00\"},{\"date\":1451635200000,\"value\":0,\"fullDate\":\"2016-01-01T03:00:00-05:00\"},{\"date\":1451721600000,\"value\":0,\"fullDate\":\"2016-01-02T03:00:00-05:00\"},{\"date\":1451808000000,\"value\":0,\"fullDate\":\"2016-01-03T03:00:00-05:00\"},{\"date\":1451894400000,\"value\":0,\"fullDate\":\"2016-01-04T03:00:00-05:00\"},{\"date\":1451980800000,\"value\":0,\"fullDate\":\"2016-01-05T03:00:00-05:00\"},{\"date\":1452067200000,\"value\":0,\"fullDate\":\"2016-01-06T03:00:00-05:00\"},{\"date\":1452153600000,\"value\":0,\"fullDate\":\"2016-01-07T03:00:00-05:00\"},{\"date\":1452240000000,\"value\":0,\"fullDate\":\"2016-01-08T03:00:00-05:00\"},{\"date\":1452326400000,\"value\":0,\"fullDate\":\"2016-01-09T03:00:00-05:00\"},{\"date\":1452412800000,\"value\":0,\"fullDate\":\"2016-01-10T03:00:00-05:00\"},{\"date\":1452499200000,\"value\":0,\"fullDate\":\"2016-01-11T03:00:00-05:00\"},{\"date\":1452585600000,\"value\":0,\"fullDate\":\"2016-01-12T03:00:00-05:00\"},{\"date\":1452672000000,\"value\":0,\"fullDate\":\"2016-01-13T03:00:00-05:00\"},{\"date\":1452758400000,\"value\":0,\"fullDate\":\"2016-01-14T03:00:00-05:00\"},{\"date\":1452844800000,\"value\":0,\"fullDate\":\"2016-01-15T03:00:00-05:00\"},{\"date\":1452931200000,\"value\":0,\"fullDate\":\"2016-01-16T03:00:00-05:00\"},{\"date\":1453017600000,\"value\":0,\"fullDate\":\"2016-01-17T03:00:00-05:00\"},{\"date\":1453104000000,\"value\":0,\"fullDate\":\"2016-01-18T03:00:00-05:00\"},{\"date\":1453190400000,\"value\":0,\"fullDate\":\"2016-01-19T03:00:00-05:00\"},{\"date\":1453276800000,\"value\":0,\"fullDate\":\"2016-01-20T03:00:00-05:00\"},{\"date\":1453363200000,\"value\":0,\"fullDate\":\"2016-01-21T03:00:00-05:00\"},{\"date\":1453449600000,\"value\":0,\"fullDate\":\"2016-01-22T03:00:00-05:00\"},{\"date\":1453536000000,\"value\":0,\"fullDate\":\"2016-01-23T03:00:00-05:00\"},{\"date\":1453622400000,\"value\":0,\"fullDate\":\"2016-01-24T03:00:00-05:00\"},{\"date\":1453708800000,\"value\":0,\"fullDate\":\"2016-01-25T03:00:00-05:00\"},{\"date\":1453795200000,\"value\":0,\"fullDate\":\"2016-01-26T03:00:00-05:00\"},{\"date\":1453881600000,\"value\":0,\"fullDate\":\"2016-01-27T03:00:00-05:00\"},{\"date\":1453968000000,\"value\":0,\"fullDate\":\"2016-01-28T03:00:00-05:00\"},{\"date\":1454054400000,\"value\":0,\"fullDate\":\"2016-01-29T03:00:00-05:00\"},{\"date\":1454140800000,\"value\":0,\"fullDate\":\"2016-01-30T03:00:00-05:00\"},{\"date\":1454227200000,\"value\":0,\"fullDate\":\"2016-01-31T03:00:00-05:00\"},{\"date\":1454313600000,\"value\":0,\"fullDate\":\"2016-02-01T03:00:00-05:00\"},{\"date\":1454400000000,\"value\":0,\"fullDate\":\"2016-02-02T03:00:00-05:00\"},{\"date\":1454486400000,\"value\":0,\"fullDate\":\"2016-02-03T03:00:00-05:00\"},{\"date\":1454572800000,\"value\":0,\"fullDate\":\"2016-02-04T03:00:00-05:00\"},{\"date\":1454659200000,\"value\":0,\"fullDate\":\"2016-02-05T03:00:00-05:00\"},{\"date\":1454745600000,\"value\":0,\"fullDate\":\"2016-02-06T03:00:00-05:00\"},{\"date\":1454832000000,\"value\":0,\"fullDate\":\"2016-02-07T03:00:00-05:00\"},{\"date\":1454918400000,\"value\":0,\"fullDate\":\"2016-02-08T03:00:00-05:00\"},{\"date\":1455004800000,\"value\":0,\"fullDate\":\"2016-02-09T03:00:00-05:00\"},{\"date\":1455091200000,\"value\":0,\"fullDate\":\"2016-02-10T03:00:00-05:00\"},{\"date\":1455177600000,\"value\":0,\"fullDate\":\"2016-02-11T03:00:00-05:00\"},{\"date\":1455264000000,\"value\":0,\"fullDate\":\"2016-02-12T03:00:00-05:00\"},{\"date\":1455350400000,\"value\":0,\"fullDate\":\"2016-02-13T03:00:00-05:00\"},{\"date\":1455523200000,\"value\":10,\"fullDate\":\"2016-02-15T03:00:00-05:00\"},{\"date\":1455523200000,\"value\":0,\"fullDate\":\"2016-02-15T03:00:00-05:00\"},{\"date\":1455609600000,\"value\":0,\"fullDate\":\"2016-02-16T03:00:00-05:00\"},{\"date\":1455696000000,\"value\":0,\"fullDate\":\"2016-02-17T03:00:00-05:00\"},{\"date\":1455868800000,\"value\":1,\"fullDate\":\"2016-02-19T03:00:00-05:00\"},{\"date\":1455868800000,\"value\":0,\"fullDate\":\"2016-02-19T03:00:00-05:00\"},{\"date\":1455955200000,\"value\":0,\"fullDate\":\"2016-02-20T03:00:00-05:00\"},{\"date\":1456041600000,\"value\":0,\"fullDate\":\"2016-02-21T03:00:00-05:00\"},{\"date\":1456214400000,\"value\":4,\"fullDate\":\"2016-02-23T03:00:00-05:00\"},{\"date\":1456214400000,\"value\":0,\"fullDate\":\"2016-02-23T03:00:00-05:00\"},{\"date\":1456300800000,\"value\":0,\"fullDate\":\"2016-02-24T03:00:00-05:00\"},{\"date\":1456387200000,\"value\":0,\"fullDate\":\"2016-02-25T03:00:00-05:00\"},{\"date\":1456473600000,\"value\":0,\"fullDate\":\"2016-02-26T03:00:00-05:00\"},{\"date\":1456560000000,\"value\":0,\"fullDate\":\"2016-02-27T03:00:00-05:00\"},{\"date\":1456646400000,\"value\":0,\"fullDate\":\"2016-02-28T03:00:00-05:00\"},{\"date\":1456732800000,\"value\":0,\"fullDate\":\"2016-02-29T03:00:00-05:00\"},{\"date\":1456819200000,\"value\":0,\"fullDate\":\"2016-03-01T03:00:00-05:00\"},{\"date\":1456905600000,\"value\":0,\"fullDate\":\"2016-03-02T03:00:00-05:00\"},{\"date\":1457078400000,\"value\":1,\"fullDate\":\"2016-03-04T03:00:00-05:00\"},{\"date\":1457164800000,\"value\":1,\"fullDate\":\"2016-03-05T03:00:00-05:00\"},{\"date\":1457164800000,\"value\":0,\"fullDate\":\"2016-03-05T03:00:00-05:00\"},{\"date\":1457251200000,\"value\":0,\"fullDate\":\"2016-03-06T03:00:00-05:00\"},{\"date\":1457337600000,\"value\":0,\"fullDate\":\"2016-03-07T03:00:00-05:00\"},{\"date\":1457424000000,\"value\":0,\"fullDate\":\"2016-03-08T03:00:00-05:00\"},{\"date\":1457510400000,\"value\":0,\"fullDate\":\"2016-03-09T03:00:00-05:00\"},{\"date\":1457596800000,\"value\":0,\"fullDate\":\"2016-03-10T03:00:00-05:00\"},{\"date\":1457683200000,\"value\":0,\"fullDate\":\"2016-03-11T03:00:00-05:00\"},{\"date\":1457769600000,\"value\":0,\"fullDate\":\"2016-03-12T03:00:00-05:00\"},{\"date\":1457938800000,\"value\":0,\"fullDate\":\"2016-03-14T03:00:00-04:00\"},{\"date\":1458025200000,\"value\":0,\"fullDate\":\"2016-03-15T03:00:00-04:00\"},{\"date\":1458111600000,\"value\":0,\"fullDate\":\"2016-03-16T03:00:00-04:00\"},{\"date\":1458198000000,\"value\":0,\"fullDate\":\"2016-03-17T03:00:00-04:00\"},{\"date\":1458284400000,\"value\":0,\"fullDate\":\"2016-03-18T03:00:00-04:00\"},{\"date\":1458370800000,\"value\":1,\"fullDate\":\"2016-03-19T03:00:00-04:00\"},{\"date\":1458457200000,\"value\":0,\"fullDate\":\"2016-03-20T03:00:00-04:00\"},{\"date\":1458543600000,\"value\":0,\"fullDate\":\"2016-03-21T03:00:00-04:00\"},{\"date\":1458630000000,\"value\":0,\"fullDate\":\"2016-03-22T03:00:00-04:00\"},{\"date\":1458716400000,\"value\":0,\"fullDate\":\"2016-03-23T03:00:00-04:00\"},{\"date\":1458802800000,\"value\":0,\"fullDate\":\"2016-03-24T03:00:00-04:00\"},{\"date\":1458889200000,\"value\":0,\"fullDate\":\"2016-03-25T03:00:00-04:00\"},{\"date\":1458975600000,\"value\":0,\"fullDate\":\"2016-03-26T03:00:00-04:00\"},{\"date\":1459062000000,\"value\":0,\"fullDate\":\"2016-03-27T03:00:00-04:00\"},{\"date\":1459148400000,\"value\":0,\"fullDate\":\"2016-03-28T03:00:00-04:00\"},{\"date\":1459234800000,\"value\":4,\"fullDate\":\"2016-03-29T03:00:00-04:00\"},{\"date\":1459321200000,\"value\":0,\"fullDate\":\"2016-03-30T03:00:00-04:00\"},{\"date\":1459407600000,\"value\":0,\"fullDate\":\"2016-03-31T03:00:00-04:00\"},{\"date\":1459494000000,\"value\":2,\"fullDate\":\"2016-04-01T03:00:00-04:00\"},{\"date\":1459580400000,\"value\":0,\"fullDate\":\"2016-04-02T03:00:00-04:00\"},{\"date\":1459666800000,\"value\":0,\"fullDate\":\"2016-04-03T03:00:00-04:00\"},{\"date\":1459753200000,\"value\":0,\"fullDate\":\"2016-04-04T03:00:00-04:00\"},{\"date\":1459839600000,\"value\":0,\"fullDate\":\"2016-04-05T03:00:00-04:00\"},{\"date\":1459926000000,\"value\":0,\"fullDate\":\"2016-04-06T03:00:00-04:00\"},{\"date\":1460012400000,\"value\":0,\"fullDate\":\"2016-04-07T03:00:00-04:00\"},{\"date\":1460098800000,\"value\":2,\"fullDate\":\"2016-04-08T03:00:00-04:00\"},{\"date\":1460185200000,\"value\":0,\"fullDate\":\"2016-04-09T03:00:00-04:00\"},{\"date\":1460271600000,\"value\":1,\"fullDate\":\"2016-04-10T03:00:00-04:00\"},{\"date\":1460358000000,\"value\":0,\"fullDate\":\"2016-04-11T03:00:00-04:00\"},{\"date\":1460444400000,\"value\":1,\"fullDate\":\"2016-04-12T03:00:00-04:00\"},{\"date\":1460530800000,\"value\":0,\"fullDate\":\"2016-04-13T03:00:00-04:00\"},{\"date\":1460617200000,\"value\":1,\"fullDate\":\"2016-04-14T03:00:00-04:00\"},{\"date\":1460703600000,\"value\":0,\"fullDate\":\"2016-04-15T03:00:00-04:00\"},{\"date\":1460790000000,\"value\":0,\"fullDate\":\"2016-04-16T03:00:00-04:00\"},{\"date\":1460876400000,\"value\":0,\"fullDate\":\"2016-04-17T03:00:00-04:00\"},{\"date\":1460962800000,\"value\":0,\"fullDate\":\"2016-04-18T03:00:00-04:00\"},{\"date\":1461049200000,\"value\":0,\"fullDate\":\"2016-04-19T03:00:00-04:00\"},{\"date\":1461135600000,\"value\":0,\"fullDate\":\"2016-04-20T03:00:00-04:00\"},{\"date\":1461222000000,\"value\":0,\"fullDate\":\"2016-04-21T03:00:00-04:00\"},{\"date\":1461308400000,\"value\":0,\"fullDate\":\"2016-04-22T03:00:00-04:00\"},{\"date\":1461394800000,\"value\":0,\"fullDate\":\"2016-04-23T03:00:00-04:00\"},{\"date\":1461481200000,\"value\":0,\"fullDate\":\"2016-04-24T03:00:00-04:00\"},{\"date\":1461567600000,\"value\":0,\"fullDate\":\"2016-04-25T03:00:00-04:00\"},{\"date\":1461654000000,\"value\":0,\"fullDate\":\"2016-04-26T03:00:00-04:00\"},{\"date\":1461740400000,\"value\":0,\"fullDate\":\"2016-04-27T03:00:00-04:00\"},{\"date\":1461826800000,\"value\":0,\"fullDate\":\"2016-04-28T03:00:00-04:00\"},{\"date\":1461913200000,\"value\":0,\"fullDate\":\"2016-04-29T03:00:00-04:00\"},{\"date\":1461999600000,\"value\":0,\"fullDate\":\"2016-04-30T03:00:00-04:00\"},{\"date\":1462086000000,\"value\":0,\"fullDate\":\"2016-05-01T03:00:00-04:00\"},{\"date\":1462172400000,\"value\":0,\"fullDate\":\"2016-05-02T03:00:00-04:00\"},{\"date\":1462258800000,\"value\":0,\"fullDate\":\"2016-05-03T03:00:00-04:00\"},{\"date\":1462345200000,\"value\":0,\"fullDate\":\"2016-05-04T03:00:00-04:00\"},{\"date\":1462431600000,\"value\":0,\"fullDate\":\"2016-05-05T03:00:00-04:00\"},{\"date\":1462518000000,\"value\":0,\"fullDate\":\"2016-05-06T03:00:00-04:00\"},{\"date\":1462604400000,\"value\":0,\"fullDate\":\"2016-05-07T03:00:00-04:00\"},{\"date\":1462690800000,\"value\":0,\"fullDate\":\"2016-05-08T03:00:00-04:00\"},{\"date\":1462777200000,\"value\":0,\"fullDate\":\"2016-05-09T03:00:00-04:00\"},{\"date\":1462863600000,\"value\":0,\"fullDate\":\"2016-05-10T03:00:00-04:00\"},{\"date\":1462950000000,\"value\":0,\"fullDate\":\"2016-05-11T03:00:00-04:00\"},{\"date\":1463036400000,\"value\":0,\"fullDate\":\"2016-05-12T03:00:00-04:00\"},{\"date\":1463122800000,\"value\":0,\"fullDate\":\"2016-05-13T03:00:00-04:00\"},{\"date\":1463209200000,\"value\":0,\"fullDate\":\"2016-05-14T03:00:00-04:00\"},{\"date\":1463295600000,\"value\":0,\"fullDate\":\"2016-05-15T03:00:00-04:00\"},{\"date\":1463382000000,\"value\":0,\"fullDate\":\"2016-05-16T03:00:00-04:00\"},{\"date\":1463468400000,\"value\":0,\"fullDate\":\"2016-05-17T03:00:00-04:00\"},{\"date\":1463554800000,\"value\":0,\"fullDate\":\"2016-05-18T03:00:00-04:00\"},{\"date\":1463641200000,\"value\":0,\"fullDate\":\"2016-05-19T03:00:00-04:00\"},{\"date\":1463727600000,\"value\":0,\"fullDate\":\"2016-05-20T03:00:00-04:00\"},{\"date\":1463814000000,\"value\":0,\"fullDate\":\"2016-05-21T03:00:00-04:00\"},{\"date\":1463900400000,\"value\":0,\"fullDate\":\"2016-05-22T03:00:00-04:00\"},{\"date\":1463986800000,\"value\":0,\"fullDate\":\"2016-05-23T03:00:00-04:00\"},{\"date\":1464073200000,\"value\":0,\"fullDate\":\"2016-05-24T03:00:00-04:00\"},{\"date\":1464159600000,\"value\":0,\"fullDate\":\"2016-05-25T03:00:00-04:00\"},{\"date\":1464246000000,\"value\":0,\"fullDate\":\"2016-05-26T03:00:00-04:00\"},{\"date\":1464332400000,\"value\":0,\"fullDate\":\"2016-05-27T03:00:00-04:00\"},{\"date\":1464418800000,\"value\":0,\"fullDate\":\"2016-05-28T03:00:00-04:00\"},{\"date\":1464505200000,\"value\":0,\"fullDate\":\"2016-05-29T03:00:00-04:00\"},{\"date\":1464591600000,\"value\":0,\"fullDate\":\"2016-05-30T03:00:00-04:00\"},{\"date\":1464678000000,\"value\":0,\"fullDate\":\"2016-05-31T03:00:00-04:00\"},{\"date\":1464764400000,\"value\":0,\"fullDate\":\"2016-06-01T03:00:00-04:00\"},{\"date\":1464850800000,\"value\":0,\"fullDate\":\"2016-06-02T03:00:00-04:00\"},{\"date\":1464937200000,\"value\":0,\"fullDate\":\"2016-06-03T03:00:00-04:00\"},{\"date\":1465023600000,\"value\":0,\"fullDate\":\"2016-06-04T03:00:00-04:00\"},{\"date\":1465110000000,\"value\":0,\"fullDate\":\"2016-06-05T03:00:00-04:00\"},{\"date\":1465196400000,\"value\":0,\"fullDate\":\"2016-06-06T03:00:00-04:00\"},{\"date\":1465282800000,\"value\":0,\"fullDate\":\"2016-06-07T03:00:00-04:00\"},{\"date\":1465369200000,\"value\":0,\"fullDate\":\"2016-06-08T03:00:00-04:00\"},{\"date\":1465455600000,\"value\":0,\"fullDate\":\"2016-06-09T03:00:00-04:00\"},{\"date\":1465542000000,\"value\":0,\"fullDate\":\"2016-06-10T03:00:00-04:00\"},{\"date\":1465628400000,\"value\":0,\"fullDate\":\"2016-06-11T03:00:00-04:00\"},{\"date\":1465714800000,\"value\":0,\"fullDate\":\"2016-06-12T03:00:00-04:00\"},{\"date\":1465801200000,\"value\":0,\"fullDate\":\"2016-06-13T03:00:00-04:00\"},{\"date\":1465887600000,\"value\":0,\"fullDate\":\"2016-06-14T03:00:00-04:00\"},{\"date\":1465974000000,\"value\":0,\"fullDate\":\"2016-06-15T03:00:00-04:00\"},{\"date\":1466060400000,\"value\":0,\"fullDate\":\"2016-06-16T03:00:00-04:00\"},{\"date\":1466146800000,\"value\":0,\"fullDate\":\"2016-06-17T03:00:00-04:00\"},{\"date\":1466233200000,\"value\":0,\"fullDate\":\"2016-06-18T03:00:00-04:00\"},{\"date\":1466319600000,\"value\":0,\"fullDate\":\"2016-06-19T03:00:00-04:00\"},{\"date\":1466406000000,\"value\":0,\"fullDate\":\"2016-06-20T03:00:00-04:00\"},{\"date\":1466492400000,\"value\":0,\"fullDate\":\"2016-06-21T03:00:00-04:00\"},{\"date\":1466578800000,\"value\":0,\"fullDate\":\"2016-06-22T03:00:00-04:00\"},{\"date\":1466665200000,\"value\":0,\"fullDate\":\"2016-06-23T03:00:00-04:00\"},{\"date\":1466751600000,\"value\":0,\"fullDate\":\"2016-06-24T03:00:00-04:00\"},{\"date\":1466838000000,\"value\":0,\"fullDate\":\"2016-06-25T03:00:00-04:00\"},{\"date\":1466924400000,\"value\":0,\"fullDate\":\"2016-06-26T03:00:00-04:00\"},{\"date\":1467010800000,\"value\":0,\"fullDate\":\"2016-06-27T03:00:00-04:00\"},{\"date\":1467097200000,\"value\":0,\"fullDate\":\"2016-06-28T03:00:00-04:00\"},{\"date\":1467183600000,\"value\":0,\"fullDate\":\"2016-06-29T03:00:00-04:00\"},{\"date\":1467270000000,\"value\":0,\"fullDate\":\"2016-06-30T03:00:00-04:00\"},{\"date\":1467356400000,\"value\":0,\"fullDate\":\"2016-07-01T03:00:00-04:00\"},{\"date\":1467442800000,\"value\":0,\"fullDate\":\"2016-07-02T03:00:00-04:00\"},{\"date\":1467529200000,\"value\":0,\"fullDate\":\"2016-07-03T03:00:00-04:00\"},{\"date\":1467615600000,\"value\":0,\"fullDate\":\"2016-07-04T03:00:00-04:00\"},{\"date\":1467702000000,\"value\":0,\"fullDate\":\"2016-07-05T03:00:00-04:00\"},{\"date\":1467788400000,\"value\":0,\"fullDate\":\"2016-07-06T03:00:00-04:00\"},{\"date\":1467874800000,\"value\":0,\"fullDate\":\"2016-07-07T03:00:00-04:00\"},{\"date\":1467961200000,\"value\":0,\"fullDate\":\"2016-07-08T03:00:00-04:00\"},{\"date\":1468047600000,\"value\":0,\"fullDate\":\"2016-07-09T03:00:00-04:00\"},{\"date\":1468134000000,\"value\":0,\"fullDate\":\"2016-07-10T03:00:00-04:00\"},{\"date\":1468220400000,\"value\":0,\"fullDate\":\"2016-07-11T03:00:00-04:00\"},{\"date\":1468306800000,\"value\":0,\"fullDate\":\"2016-07-12T03:00:00-04:00\"},{\"date\":1468393200000,\"value\":0,\"fullDate\":\"2016-07-13T03:00:00-04:00\"},{\"date\":1468479600000,\"value\":0,\"fullDate\":\"2016-07-14T03:00:00-04:00\"},{\"date\":1468566000000,\"value\":0,\"fullDate\":\"2016-07-15T03:00:00-04:00\"},{\"date\":1468652400000,\"value\":0,\"fullDate\":\"2016-07-16T03:00:00-04:00\"},{\"date\":1468738800000,\"value\":0,\"fullDate\":\"2016-07-17T03:00:00-04:00\"},{\"date\":1468825200000,\"value\":0,\"fullDate\":\"2016-07-18T03:00:00-04:00\"},{\"date\":1468911600000,\"value\":0,\"fullDate\":\"2016-07-19T03:00:00-04:00\"},{\"date\":1468998000000,\"value\":0,\"fullDate\":\"2016-07-20T03:00:00-04:00\"},{\"date\":1469084400000,\"value\":0,\"fullDate\":\"2016-07-21T03:00:00-04:00\"},{\"date\":1469170800000,\"value\":0,\"fullDate\":\"2016-07-22T03:00:00-04:00\"},{\"date\":1469257200000,\"value\":0,\"fullDate\":\"2016-07-23T03:00:00-04:00\"},{\"date\":1469343600000,\"value\":0,\"fullDate\":\"2016-07-24T03:00:00-04:00\"},{\"date\":1469430000000,\"value\":0,\"fullDate\":\"2016-07-25T03:00:00-04:00\"},{\"date\":1469516400000,\"value\":0,\"fullDate\":\"2016-07-26T03:00:00-04:00\"},{\"date\":1469602800000,\"value\":0,\"fullDate\":\"2016-07-27T03:00:00-04:00\"},{\"date\":1469689200000,\"value\":0,\"fullDate\":\"2016-07-28T03:00:00-04:00\"},{\"date\":1469775600000,\"value\":0,\"fullDate\":\"2016-07-29T03:00:00-04:00\"},{\"date\":1469862000000,\"value\":0,\"fullDate\":\"2016-07-30T03:00:00-04:00\"},{\"date\":1469948400000,\"value\":0,\"fullDate\":\"2016-07-31T03:00:00-04:00\"},{\"date\":1470034800000,\"value\":0,\"fullDate\":\"2016-08-01T03:00:00-04:00\"},{\"date\":1470121200000,\"value\":0,\"fullDate\":\"2016-08-02T03:00:00-04:00\"},{\"date\":1470207600000,\"value\":0,\"fullDate\":\"2016-08-03T03:00:00-04:00\"},{\"date\":1470294000000,\"value\":0,\"fullDate\":\"2016-08-04T03:00:00-04:00\"},{\"date\":1470380400000,\"value\":0,\"fullDate\":\"2016-08-05T03:00:00-04:00\"},{\"date\":1470466800000,\"value\":0,\"fullDate\":\"2016-08-06T03:00:00-04:00\"},{\"date\":1470553200000,\"value\":0,\"fullDate\":\"2016-08-07T03:00:00-04:00\"},{\"date\":1470639600000,\"value\":0,\"fullDate\":\"2016-08-08T03:00:00-04:00\"},{\"date\":1470726000000,\"value\":0,\"fullDate\":\"2016-08-09T03:00:00-04:00\"},{\"date\":1470812400000,\"value\":0,\"fullDate\":\"2016-08-10T03:00:00-04:00\"},{\"date\":1470898800000,\"value\":0,\"fullDate\":\"2016-08-11T03:00:00-04:00\"},{\"date\":1470985200000,\"value\":0,\"fullDate\":\"2016-08-12T03:00:00-04:00\"},{\"date\":1471071600000,\"value\":0,\"fullDate\":\"2016-08-13T03:00:00-04:00\"},{\"date\":1471158000000,\"value\":0,\"fullDate\":\"2016-08-14T03:00:00-04:00\"},{\"date\":1471244400000,\"value\":0,\"fullDate\":\"2016-08-15T03:00:00-04:00\"},{\"date\":1471330800000,\"value\":0,\"fullDate\":\"2016-08-16T03:00:00-04:00\"},{\"date\":1471417200000,\"value\":0,\"fullDate\":\"2016-08-17T03:00:00-04:00\"},{\"date\":1471503600000,\"value\":0,\"fullDate\":\"2016-08-18T03:00:00-04:00\"},{\"date\":1471590000000,\"value\":0,\"fullDate\":\"2016-08-19T03:00:00-04:00\"},{\"date\":1471676400000,\"value\":0,\"fullDate\":\"2016-08-20T03:00:00-04:00\"},{\"date\":1471762800000,\"value\":0,\"fullDate\":\"2016-08-21T03:00:00-04:00\"},{\"date\":1471849200000,\"value\":0,\"fullDate\":\"2016-08-22T03:00:00-04:00\"},{\"date\":1471935600000,\"value\":0,\"fullDate\":\"2016-08-23T03:00:00-04:00\"},{\"date\":1472022000000,\"value\":0,\"fullDate\":\"2016-08-24T03:00:00-04:00\"},{\"date\":1472108400000,\"value\":0,\"fullDate\":\"2016-08-25T03:00:00-04:00\"},{\"date\":1472194800000,\"value\":0,\"fullDate\":\"2016-08-26T03:00:00-04:00\"},{\"date\":1472281200000,\"value\":0,\"fullDate\":\"2016-08-27T03:00:00-04:00\"},{\"date\":1472367600000,\"value\":0,\"fullDate\":\"2016-08-28T03:00:00-04:00\"},{\"date\":1472454000000,\"value\":0,\"fullDate\":\"2016-08-29T03:00:00-04:00\"},{\"date\":1472540400000,\"value\":0,\"fullDate\":\"2016-08-30T03:00:00-04:00\"},{\"date\":1472626800000,\"value\":0,\"fullDate\":\"2016-08-31T03:00:00-04:00\"},{\"date\":1472713200000,\"value\":0,\"fullDate\":\"2016-09-01T03:00:00-04:00\"},{\"date\":1472799600000,\"value\":0,\"fullDate\":\"2016-09-02T03:00:00-04:00\"},{\"date\":1472886000000,\"value\":0,\"fullDate\":\"2016-09-03T03:00:00-04:00\"},{\"date\":1472972400000,\"value\":0,\"fullDate\":\"2016-09-04T03:00:00-04:00\"},{\"date\":1473058800000,\"value\":0,\"fullDate\":\"2016-09-05T03:00:00-04:00\"},{\"date\":1473145200000,\"value\":0,\"fullDate\":\"2016-09-06T03:00:00-04:00\"},{\"date\":1473231600000,\"value\":0,\"fullDate\":\"2016-09-07T03:00:00-04:00\"},{\"date\":1473318000000,\"value\":0,\"fullDate\":\"2016-09-08T03:00:00-04:00\"},{\"date\":1473404400000,\"value\":0,\"fullDate\":\"2016-09-09T03:00:00-04:00\"},{\"date\":1473490800000,\"value\":0,\"fullDate\":\"2016-09-10T03:00:00-04:00\"},{\"date\":1473577200000,\"value\":0,\"fullDate\":\"2016-09-11T03:00:00-04:00\"},{\"date\":1473663600000,\"value\":0,\"fullDate\":\"2016-09-12T03:00:00-04:00\"},{\"date\":1473750000000,\"value\":0,\"fullDate\":\"2016-09-13T03:00:00-04:00\"},{\"date\":1473836400000,\"value\":0,\"fullDate\":\"2016-09-14T03:00:00-04:00\"},{\"date\":1473922800000,\"value\":0,\"fullDate\":\"2016-09-15T03:00:00-04:00\"},{\"date\":1474009200000,\"value\":0,\"fullDate\":\"2016-09-16T03:00:00-04:00\"},{\"date\":1474095600000,\"value\":0,\"fullDate\":\"2016-09-17T03:00:00-04:00\"},{\"date\":1474182000000,\"value\":0,\"fullDate\":\"2016-09-18T03:00:00-04:00\"},{\"date\":1474268400000,\"value\":0,\"fullDate\":\"2016-09-19T03:00:00-04:00\"},{\"date\":1474354800000,\"value\":0,\"fullDate\":\"2016-09-20T03:00:00-04:00\"},{\"date\":1474441200000,\"value\":0,\"fullDate\":\"2016-09-21T03:00:00-04:00\"},{\"date\":1474527600000,\"value\":0,\"fullDate\":\"2016-09-22T03:00:00-04:00\"},{\"date\":1474614000000,\"value\":0,\"fullDate\":\"2016-09-23T03:00:00-04:00\"},{\"date\":1474700400000,\"value\":0,\"fullDate\":\"2016-09-24T03:00:00-04:00\"},{\"date\":1474786800000,\"value\":0,\"fullDate\":\"2016-09-25T03:00:00-04:00\"},{\"date\":1474873200000,\"value\":0,\"fullDate\":\"2016-09-26T03:00:00-04:00\"},{\"date\":1474959600000,\"value\":0,\"fullDate\":\"2016-09-27T03:00:00-04:00\"},{\"date\":1475046000000,\"value\":0,\"fullDate\":\"2016-09-28T03:00:00-04:00\"},{\"date\":1475132400000,\"value\":0,\"fullDate\":\"2016-09-29T03:00:00-04:00\"},{\"date\":1475218800000,\"value\":0,\"fullDate\":\"2016-09-30T03:00:00-04:00\"},{\"date\":1475305200000,\"value\":0,\"fullDate\":\"2016-10-01T03:00:00-04:00\"},{\"date\":1475391600000,\"value\":0,\"fullDate\":\"2016-10-02T03:00:00-04:00\"},{\"date\":1475478000000,\"value\":0,\"fullDate\":\"2016-10-03T03:00:00-04:00\"},{\"date\":1475564400000,\"value\":0,\"fullDate\":\"2016-10-04T03:00:00-04:00\"},{\"date\":1475650800000,\"value\":0,\"fullDate\":\"2016-10-05T03:00:00-04:00\"},{\"date\":1475737200000,\"value\":0,\"fullDate\":\"2016-10-06T03:00:00-04:00\"},{\"date\":1475823600000,\"value\":0,\"fullDate\":\"2016-10-07T03:00:00-04:00\"},{\"date\":1475910000000,\"value\":0,\"fullDate\":\"2016-10-08T03:00:00-04:00\"},{\"date\":1475996400000,\"value\":0,\"fullDate\":\"2016-10-09T03:00:00-04:00\"},{\"date\":1476082800000,\"value\":0,\"fullDate\":\"2016-10-10T03:00:00-04:00\"},{\"date\":1476169200000,\"value\":0,\"fullDate\":\"2016-10-11T03:00:00-04:00\"},{\"date\":1476255600000,\"value\":0,\"fullDate\":\"2016-10-12T03:00:00-04:00\"},{\"date\":1476342000000,\"value\":0,\"fullDate\":\"2016-10-13T03:00:00-04:00\"},{\"date\":1476428400000,\"value\":0,\"fullDate\":\"2016-10-14T03:00:00-04:00\"},{\"date\":1476514800000,\"value\":0,\"fullDate\":\"2016-10-15T03:00:00-04:00\"},{\"date\":1476601200000,\"value\":0,\"fullDate\":\"2016-10-16T03:00:00-04:00\"},{\"date\":1476687600000,\"value\":0,\"fullDate\":\"2016-10-17T03:00:00-04:00\"},{\"date\":1476774000000,\"value\":0,\"fullDate\":\"2016-10-18T03:00:00-04:00\"},{\"date\":1476860400000,\"value\":0,\"fullDate\":\"2016-10-19T03:00:00-04:00\"},{\"date\":1476946800000,\"value\":0,\"fullDate\":\"2016-10-20T03:00:00-04:00\"},{\"date\":1477033200000,\"value\":0,\"fullDate\":\"2016-10-21T03:00:00-04:00\"},{\"date\":1477119600000,\"value\":0,\"fullDate\":\"2016-10-22T03:00:00-04:00\"},{\"date\":1477206000000,\"value\":0,\"fullDate\":\"2016-10-23T03:00:00-04:00\"},{\"date\":1477292400000,\"value\":0,\"fullDate\":\"2016-10-24T03:00:00-04:00\"},{\"date\":1477378800000,\"value\":0,\"fullDate\":\"2016-10-25T03:00:00-04:00\"},{\"date\":1477465200000,\"value\":0,\"fullDate\":\"2016-10-26T03:00:00-04:00\"},{\"date\":1477551600000,\"value\":0,\"fullDate\":\"2016-10-27T03:00:00-04:00\"},{\"date\":1477638000000,\"value\":0,\"fullDate\":\"2016-10-28T03:00:00-04:00\"},{\"date\":1477724400000,\"value\":0,\"fullDate\":\"2016-10-29T03:00:00-04:00\"},{\"date\":1477810800000,\"value\":0,\"fullDate\":\"2016-10-30T03:00:00-04:00\"},{\"date\":1477897200000,\"value\":0,\"fullDate\":\"2016-10-31T03:00:00-04:00\"},{\"date\":1477983600000,\"value\":0,\"fullDate\":\"2016-11-01T03:00:00-04:00\"},{\"date\":1478070000000,\"value\":0,\"fullDate\":\"2016-11-02T03:00:00-04:00\"},{\"date\":1478156400000,\"value\":0,\"fullDate\":\"2016-11-03T03:00:00-04:00\"},{\"date\":1478242800000,\"value\":0,\"fullDate\":\"2016-11-04T03:00:00-04:00\"},{\"date\":1478329200000,\"value\":0,\"fullDate\":\"2016-11-05T03:00:00-04:00\"},{\"date\":1478415600000,\"value\":0,\"fullDate\":\"2016-11-06T02:00:00-05:00\"},{\"date\":1478415600000,\"value\":0,\"fullDate\":\"2016-11-06T02:00:00-05:00\"},{\"date\":1478505600000,\"value\":0,\"fullDate\":\"2016-11-07T03:00:00-05:00\"},{\"date\":1478592000000,\"value\":0,\"fullDate\":\"2016-11-08T03:00:00-05:00\"},{\"date\":1478678400000,\"value\":0,\"fullDate\":\"2016-11-09T03:00:00-05:00\"},{\"date\":1478764800000,\"value\":0,\"fullDate\":\"2016-11-10T03:00:00-05:00\"},{\"date\":1478851200000,\"value\":0,\"fullDate\":\"2016-11-11T03:00:00-05:00\"},{\"date\":1478937600000,\"value\":0,\"fullDate\":\"2016-11-12T03:00:00-05:00\"},{\"date\":1479024000000,\"value\":0,\"fullDate\":\"2016-11-13T03:00:00-05:00\"},{\"date\":1479110400000,\"value\":0,\"fullDate\":\"2016-11-14T03:00:00-05:00\"},{\"date\":1479196800000,\"value\":0,\"fullDate\":\"2016-11-15T03:00:00-05:00\"},{\"date\":1479283200000,\"value\":0,\"fullDate\":\"2016-11-16T03:00:00-05:00\"},{\"date\":1479369600000,\"value\":0,\"fullDate\":\"2016-11-17T03:00:00-05:00\"},{\"date\":1479456000000,\"value\":0,\"fullDate\":\"2016-11-18T03:00:00-05:00\"},{\"date\":1479542400000,\"value\":0,\"fullDate\":\"2016-11-19T03:00:00-05:00\"},{\"date\":1479628800000,\"value\":0,\"fullDate\":\"2016-11-20T03:00:00-05:00\"},{\"date\":1479715200000,\"value\":0,\"fullDate\":\"2016-11-21T03:00:00-05:00\"},{\"date\":1479801600000,\"value\":0,\"fullDate\":\"2016-11-22T03:00:00-05:00\"},{\"date\":1479888000000,\"value\":0,\"fullDate\":\"2016-11-23T03:00:00-05:00\"},{\"date\":1479974400000,\"value\":0,\"fullDate\":\"2016-11-24T03:00:00-05:00\"},{\"date\":1480060800000,\"value\":0,\"fullDate\":\"2016-11-25T03:00:00-05:00\"},{\"date\":1480147200000,\"value\":0,\"fullDate\":\"2016-11-26T03:00:00-05:00\"},{\"date\":1480233600000,\"value\":0,\"fullDate\":\"2016-11-27T03:00:00-05:00\"},{\"date\":1480320000000,\"value\":0,\"fullDate\":\"2016-11-28T03:00:00-05:00\"},{\"date\":1480406400000,\"value\":0,\"fullDate\":\"2016-11-29T03:00:00-05:00\"},{\"date\":1480492800000,\"value\":0,\"fullDate\":\"2016-11-30T03:00:00-05:00\"},{\"date\":1480579200000,\"value\":0,\"fullDate\":\"2016-12-01T03:00:00-05:00\"},{\"date\":1480665600000,\"value\":0,\"fullDate\":\"2016-12-02T03:00:00-05:00\"},{\"date\":1480752000000,\"value\":0,\"fullDate\":\"2016-12-03T03:00:00-05:00\"},{\"date\":1480838400000,\"value\":0,\"fullDate\":\"2016-12-04T03:00:00-05:00\"},{\"date\":1480924800000,\"value\":0,\"fullDate\":\"2016-12-05T03:00:00-05:00\"},{\"date\":1481011200000,\"value\":0,\"fullDate\":\"2016-12-06T03:00:00-05:00\"},{\"date\":1481097600000,\"value\":0,\"fullDate\":\"2016-12-07T03:00:00-05:00\"},{\"date\":1481184000000,\"value\":0,\"fullDate\":\"2016-12-08T03:00:00-05:00\"},{\"date\":1481270400000,\"value\":0,\"fullDate\":\"2016-12-09T03:00:00-05:00\"},{\"date\":1481356800000,\"value\":0,\"fullDate\":\"2016-12-10T03:00:00-05:00\"},{\"date\":1481443200000,\"value\":0,\"fullDate\":\"2016-12-11T03:00:00-05:00\"},{\"date\":1481529600000,\"value\":0,\"fullDate\":\"2016-12-12T03:00:00-05:00\"},{\"date\":1481616000000,\"value\":0,\"fullDate\":\"2016-12-13T03:00:00-05:00\"},{\"date\":1481702400000,\"value\":0,\"fullDate\":\"2016-12-14T03:00:00-05:00\"},{\"date\":1481788800000,\"value\":0,\"fullDate\":\"2016-12-15T03:00:00-05:00\"},{\"date\":1481875200000,\"value\":0,\"fullDate\":\"2016-12-16T03:00:00-05:00\"},{\"date\":1481961600000,\"value\":0,\"fullDate\":\"2016-12-17T03:00:00-05:00\"},{\"date\":1482048000000,\"value\":0,\"fullDate\":\"2016-12-18T03:00:00-05:00\"},{\"date\":1482134400000,\"value\":0,\"fullDate\":\"2016-12-19T03:00:00-05:00\"},{\"date\":1482220800000,\"value\":0,\"fullDate\":\"2016-12-20T03:00:00-05:00\"},{\"date\":1482307200000,\"value\":0,\"fullDate\":\"2016-12-21T03:00:00-05:00\"},{\"date\":1482393600000,\"value\":0,\"fullDate\":\"2016-12-22T03:00:00-05:00\"},{\"date\":1482480000000,\"value\":0,\"fullDate\":\"2016-12-23T03:00:00-05:00\"},{\"date\":1482566400000,\"value\":0,\"fullDate\":\"2016-12-24T03:00:00-05:00\"},{\"date\":1482652800000,\"value\":0,\"fullDate\":\"2016-12-25T03:00:00-05:00\"},{\"date\":1482739200000,\"value\":0,\"fullDate\":\"2016-12-26T03:00:00-05:00\"},{\"date\":1482825600000,\"value\":0,\"fullDate\":\"2016-12-27T03:00:00-05:00\"},{\"date\":1482912000000,\"value\":0,\"fullDate\":\"2016-12-28T03:00:00-05:00\"},{\"date\":1482998400000,\"value\":0,\"fullDate\":\"2016-12-29T03:00:00-05:00\"},{\"date\":1483084800000,\"value\":0,\"fullDate\":\"2016-12-30T03:00:00-05:00\"},{\"date\":1483171200000,\"value\":0,\"fullDate\":\"2016-12-31T03:00:00-05:00\"},{\"date\":1483257600000,\"value\":0,\"fullDate\":\"2017-01-01T03:00:00-05:00\"},{\"date\":1483344000000,\"value\":0,\"fullDate\":\"2017-01-02T03:00:00-05:00\"},{\"date\":1483430400000,\"value\":0,\"fullDate\":\"2017-01-03T03:00:00-05:00\"},{\"date\":1483516800000,\"value\":0,\"fullDate\":\"2017-01-04T03:00:00-05:00\"},{\"date\":1483603200000,\"value\":0,\"fullDate\":\"2017-01-05T03:00:00-05:00\"},{\"date\":1483689600000,\"value\":0,\"fullDate\":\"2017-01-06T03:00:00-05:00\"},{\"date\":1483776000000,\"value\":0,\"fullDate\":\"2017-01-07T03:00:00-05:00\"},{\"date\":1483862400000,\"value\":0,\"fullDate\":\"2017-01-08T03:00:00-05:00\"},{\"date\":1483948800000,\"value\":0,\"fullDate\":\"2017-01-09T03:00:00-05:00\"},{\"date\":1484035200000,\"value\":0,\"fullDate\":\"2017-01-10T03:00:00-05:00\"},{\"date\":1484121600000,\"value\":0,\"fullDate\":\"2017-01-11T03:00:00-05:00\"},{\"date\":1484208000000,\"value\":0,\"fullDate\":\"2017-01-12T03:00:00-05:00\"},{\"date\":1484294400000,\"value\":0,\"fullDate\":\"2017-01-13T03:00:00-05:00\"},{\"date\":1484380800000,\"value\":0,\"fullDate\":\"2017-01-14T03:00:00-05:00\"},{\"date\":1484467200000,\"value\":0,\"fullDate\":\"2017-01-15T03:00:00-05:00\"},{\"date\":1484553600000,\"value\":0,\"fullDate\":\"2017-01-16T03:00:00-05:00\"},{\"date\":1484640000000,\"value\":0,\"fullDate\":\"2017-01-17T03:00:00-05:00\"},{\"date\":1484726400000,\"value\":0,\"fullDate\":\"2017-01-18T03:00:00-05:00\"},{\"date\":1484812800000,\"value\":0,\"fullDate\":\"2017-01-19T03:00:00-05:00\"},{\"date\":1484899200000,\"value\":0,\"fullDate\":\"2017-01-20T03:00:00-05:00\"},{\"date\":1484985600000,\"value\":0,\"fullDate\":\"2017-01-21T03:00:00-05:00\"},{\"date\":1485072000000,\"value\":0,\"fullDate\":\"2017-01-22T03:00:00-05:00\"},{\"date\":1485158400000,\"value\":0,\"fullDate\":\"2017-01-23T03:00:00-05:00\"}]}],\"dataByDate\":[{\"date\":\"2015-01-23T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-01-24T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-01-25T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-01-26T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-01-27T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-01-28T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-01-29T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-01-30T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-01-31T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-01T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-02T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-03T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-04T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-05T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-06T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-07T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-08T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-09T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-10T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-11T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-12T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-13T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-14T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-15T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-16T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-17T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-18T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-19T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-20T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-21T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-22T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-23T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-24T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-25T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-26T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-27T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-02-28T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-01T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-02T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-03T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-04T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-05T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-06T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-07T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-09T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-10T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-11T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-12T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-13T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-14T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-15T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-16T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-17T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-18T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-19T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-20T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-21T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-22T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-23T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-24T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-25T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-26T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-27T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-28T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-29T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-30T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-03-31T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-01T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-02T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-03T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-04T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-05T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-06T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-07T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-08T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-09T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-10T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-11T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-12T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-13T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-14T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-15T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-16T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-17T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-18T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-19T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-20T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-21T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-22T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-23T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-24T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-25T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-26T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-27T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-28T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-29T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-04-30T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-01T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-02T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-03T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-04T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-05T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-06T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-07T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-08T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-09T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-10T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-11T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-12T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-13T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-14T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-15T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-16T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-17T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-18T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-19T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-20T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-21T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-22T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-23T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-24T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-25T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-26T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-27T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-28T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-29T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-30T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-05-31T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-01T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-02T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-03T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-04T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-05T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-06T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-07T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-08T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-09T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-10T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-11T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-12T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-13T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-14T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-15T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-16T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-17T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-18T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-19T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-20T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-21T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-22T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-23T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-24T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-25T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-26T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-27T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-28T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-29T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-06-30T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-01T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-02T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-03T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-04T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-05T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-06T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-07T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-08T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-09T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-10T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-11T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-12T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-13T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-14T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-15T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-16T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-17T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-18T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-19T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-20T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-21T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-22T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-23T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-24T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-25T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-26T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-27T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-28T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-29T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-30T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-07-31T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-01T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-02T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-03T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-04T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-05T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-06T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-07T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-08T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-09T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-10T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-11T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-12T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-13T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-14T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-15T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-16T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-17T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-18T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-19T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-20T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-21T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-22T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-23T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-24T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-25T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-26T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-27T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-28T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-29T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-30T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-08-31T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-01T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-02T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-03T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-04T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-05T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-06T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-07T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-08T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-09T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-10T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-11T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-12T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-13T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-14T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-15T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-16T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-17T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-18T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-19T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-20T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-21T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-22T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-23T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-24T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-25T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-26T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-27T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-28T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-29T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-09-30T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-01T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-02T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-03T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-04T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-05T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-06T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-07T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-08T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-09T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-10T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-11T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-12T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-13T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-14T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-15T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-16T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-17T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-18T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-19T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-20T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-21T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-22T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-23T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-24T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-25T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-26T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-27T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-28T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-29T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-30T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-10-31T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-01T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-01T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-02T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-03T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-04T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-05T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-06T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-07T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-08T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-09T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-10T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-11T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-12T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-13T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-14T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-15T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-16T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-17T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-18T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-19T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-20T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-21T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-22T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-23T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-24T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-25T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-26T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-27T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-28T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-29T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-11-30T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-01T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-02T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-03T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-04T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-05T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-06T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-07T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-08T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-09T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-10T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-11T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-12T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-13T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-14T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-15T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-16T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-17T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-18T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-19T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-20T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-21T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-22T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-23T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-24T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-25T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-26T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-27T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-28T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-29T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-30T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2015-12-31T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-01T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-02T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-03T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-04T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-05T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-06T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-07T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-08T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-09T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-10T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-11T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-12T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-13T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-14T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-15T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-16T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-17T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-18T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-19T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-20T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-21T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-22T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-23T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-24T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-25T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-26T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-27T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-28T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-29T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-30T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-01-31T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-01T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-02T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-03T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-04T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-05T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-06T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-07T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-08T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-09T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-10T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-11T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-12T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-13T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-15T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":10,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-15T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-16T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-17T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-19T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":1,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-19T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-20T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-21T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-23T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":4,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-23T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-24T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-25T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-26T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-27T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-28T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-02-29T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-01T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-02T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-04T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":1,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-05T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":1,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-05T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-06T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-07T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-08T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-09T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-10T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-11T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-12T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-14T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-15T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-16T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-17T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-18T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-19T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":1,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-20T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-21T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-22T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-23T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-24T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-25T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-26T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-27T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-28T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-29T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":4,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-30T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-03-31T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-01T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":2,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-02T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-03T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-04T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-05T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-06T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-07T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-08T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":2,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-09T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-10T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":1,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-11T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-12T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":1,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-13T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-14T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":1,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-15T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-16T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-17T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-18T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-19T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-20T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-21T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-22T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-23T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-24T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-25T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-26T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-27T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-28T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-29T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-04-30T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-01T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-02T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-03T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-04T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-05T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-06T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-07T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-08T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-09T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-10T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-11T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-12T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-13T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-14T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-15T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-16T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-17T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-18T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-19T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-20T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-21T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-22T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-23T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-24T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-25T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-26T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-27T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-28T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-29T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-30T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-05-31T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-01T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-02T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-03T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-04T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-05T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-06T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-07T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-08T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-09T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-10T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-11T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-12T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-13T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-14T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-15T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-16T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-17T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-18T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-19T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-20T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-21T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-22T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-23T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-24T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-25T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-26T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-27T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-28T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-29T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-06-30T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-01T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-02T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-03T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-04T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-05T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-06T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-07T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-08T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-09T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-10T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-11T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-12T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-13T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-14T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-15T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-16T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-17T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-18T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-19T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-20T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-21T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-22T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-23T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-24T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-25T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-26T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-27T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-28T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-29T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-30T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-07-31T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-01T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-02T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-03T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-04T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-05T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-06T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-07T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-08T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-09T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-10T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-11T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-12T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-13T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-14T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-15T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-16T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-17T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-18T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-19T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-20T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-21T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-22T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-23T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-24T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-25T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-26T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-27T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-28T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-29T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-30T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-08-31T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-01T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-02T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-03T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-04T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-05T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-06T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-07T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-08T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-09T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-10T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-11T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-12T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-13T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-14T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-15T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-16T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-17T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-18T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-19T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-20T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-21T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-22T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-23T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-24T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-25T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-26T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-27T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-28T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-29T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-09-30T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-01T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-02T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-03T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-04T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-05T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-06T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-07T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-08T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-09T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-10T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-11T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-12T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-13T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-14T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-15T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-16T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-17T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-18T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-19T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-20T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-21T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-22T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-23T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-24T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-25T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-26T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-27T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-28T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-29T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-30T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-10-31T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-01T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-02T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-03T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-04T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-05T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-06T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-06T07:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-07T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-08T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-09T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-10T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-11T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-12T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-13T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-14T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-15T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-16T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-17T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-18T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-19T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-20T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-21T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-22T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-23T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-24T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-25T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-26T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-27T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-28T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-29T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-11-30T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-01T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-02T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-03T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-04T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-05T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-06T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-07T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-08T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-09T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-10T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-11T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-12T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-13T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-14T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-15T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-16T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-17T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-18T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-19T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-20T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-21T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-22T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-23T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-24T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-25T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-26T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-27T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-28T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-29T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-30T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2016-12-31T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-01T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-02T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-03T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-04T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-05T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-06T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-07T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-08T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-09T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-10T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-11T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-12T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-13T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-14T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-15T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-16T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-17T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-18T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-19T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-20T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-21T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-22T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-23T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]}]}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 58 */
/***/ (function(module, exports) {

	eval("module.exports = {\"dataByTopic\":[{\"topic\":-1,\"topicName\":\"Quantity\",\"dates\":[{\"date\":\"16-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-16T16:00:00-08:00\"},{\"date\":\"16-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-16T17:00:00-08:00\"},{\"date\":\"16-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-16T18:00:00-08:00\"},{\"date\":\"16-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-16T19:00:00-08:00\"},{\"date\":\"16-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-16T20:00:00-08:00\"},{\"date\":\"16-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-16T21:00:00-08:00\"},{\"date\":\"16-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-16T22:00:00-08:00\"},{\"date\":\"16-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-16T23:00:00-08:00\"},{\"date\":\"17-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-17T00:00:00-08:00\"},{\"date\":\"17-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-17T01:00:00-08:00\"},{\"date\":\"17-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-17T02:00:00-08:00\"},{\"date\":\"17-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-17T03:00:00-08:00\"},{\"date\":\"17-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-17T04:00:00-08:00\"},{\"date\":\"17-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-17T05:00:00-08:00\"},{\"date\":\"17-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-17T06:00:00-08:00\"},{\"date\":\"17-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-17T07:00:00-08:00\"},{\"date\":\"17-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-17T09:00:00-08:00\"},{\"date\":\"17-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-17T10:00:00-08:00\"},{\"date\":\"17-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-17T11:00:00-08:00\"},{\"date\":\"17-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-17T12:00:00-08:00\"},{\"date\":\"17-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-17T13:00:00-08:00\"},{\"date\":\"17-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-17T14:00:00-08:00\"},{\"date\":\"17-Jan-17\",\"value\":0,\"fullDate\":\"2017-01-17T15:00:00-08:00\"},{\"date\":\"17-Jan-17\",\"value\":1,\"fullDate\":\"2017-01-17T16:00:00-08:00\"}]}],\"dataByDate\":[{\"date\":\"2017-01-16T16:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-16T17:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-16T18:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-16T19:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-16T20:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-16T21:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-16T22:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-16T23:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-17T00:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-17T01:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-17T02:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-17T03:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-17T04:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-17T05:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-17T06:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-17T07:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-17T09:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-17T10:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-17T11:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-17T12:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-17T13:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-17T14:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-17T15:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Quantity\"}]},{\"date\":\"2017-01-17T16:00:00-08:00\",\"topics\":[{\"name\":-1,\"value\":1,\"topicName\":\"Quantity\"}]}]}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90ZXN0L2pzb24vbGluZURhdGFPbmVTZXRIb3VybHkuanNvbj80NTUyIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1wiZGF0YUJ5VG9waWNcIjpbe1widG9waWNcIjotMSxcInRvcGljTmFtZVwiOlwiUXVhbnRpdHlcIixcImRhdGVzXCI6W3tcImRhdGVcIjpcIjE2LUphbi0xN1wiLFwidmFsdWVcIjowLFwiZnVsbERhdGVcIjpcIjIwMTctMDEtMTZUMTY6MDA6MDAtMDg6MDBcIn0se1wiZGF0ZVwiOlwiMTYtSmFuLTE3XCIsXCJ2YWx1ZVwiOjAsXCJmdWxsRGF0ZVwiOlwiMjAxNy0wMS0xNlQxNzowMDowMC0wODowMFwifSx7XCJkYXRlXCI6XCIxNi1KYW4tMTdcIixcInZhbHVlXCI6MCxcImZ1bGxEYXRlXCI6XCIyMDE3LTAxLTE2VDE4OjAwOjAwLTA4OjAwXCJ9LHtcImRhdGVcIjpcIjE2LUphbi0xN1wiLFwidmFsdWVcIjowLFwiZnVsbERhdGVcIjpcIjIwMTctMDEtMTZUMTk6MDA6MDAtMDg6MDBcIn0se1wiZGF0ZVwiOlwiMTYtSmFuLTE3XCIsXCJ2YWx1ZVwiOjAsXCJmdWxsRGF0ZVwiOlwiMjAxNy0wMS0xNlQyMDowMDowMC0wODowMFwifSx7XCJkYXRlXCI6XCIxNi1KYW4tMTdcIixcInZhbHVlXCI6MCxcImZ1bGxEYXRlXCI6XCIyMDE3LTAxLTE2VDIxOjAwOjAwLTA4OjAwXCJ9LHtcImRhdGVcIjpcIjE2LUphbi0xN1wiLFwidmFsdWVcIjowLFwiZnVsbERhdGVcIjpcIjIwMTctMDEtMTZUMjI6MDA6MDAtMDg6MDBcIn0se1wiZGF0ZVwiOlwiMTYtSmFuLTE3XCIsXCJ2YWx1ZVwiOjAsXCJmdWxsRGF0ZVwiOlwiMjAxNy0wMS0xNlQyMzowMDowMC0wODowMFwifSx7XCJkYXRlXCI6XCIxNy1KYW4tMTdcIixcInZhbHVlXCI6MCxcImZ1bGxEYXRlXCI6XCIyMDE3LTAxLTE3VDAwOjAwOjAwLTA4OjAwXCJ9LHtcImRhdGVcIjpcIjE3LUphbi0xN1wiLFwidmFsdWVcIjowLFwiZnVsbERhdGVcIjpcIjIwMTctMDEtMTdUMDE6MDA6MDAtMDg6MDBcIn0se1wiZGF0ZVwiOlwiMTctSmFuLTE3XCIsXCJ2YWx1ZVwiOjAsXCJmdWxsRGF0ZVwiOlwiMjAxNy0wMS0xN1QwMjowMDowMC0wODowMFwifSx7XCJkYXRlXCI6XCIxNy1KYW4tMTdcIixcInZhbHVlXCI6MCxcImZ1bGxEYXRlXCI6XCIyMDE3LTAxLTE3VDAzOjAwOjAwLTA4OjAwXCJ9LHtcImRhdGVcIjpcIjE3LUphbi0xN1wiLFwidmFsdWVcIjowLFwiZnVsbERhdGVcIjpcIjIwMTctMDEtMTdUMDQ6MDA6MDAtMDg6MDBcIn0se1wiZGF0ZVwiOlwiMTctSmFuLTE3XCIsXCJ2YWx1ZVwiOjAsXCJmdWxsRGF0ZVwiOlwiMjAxNy0wMS0xN1QwNTowMDowMC0wODowMFwifSx7XCJkYXRlXCI6XCIxNy1KYW4tMTdcIixcInZhbHVlXCI6MCxcImZ1bGxEYXRlXCI6XCIyMDE3LTAxLTE3VDA2OjAwOjAwLTA4OjAwXCJ9LHtcImRhdGVcIjpcIjE3LUphbi0xN1wiLFwidmFsdWVcIjowLFwiZnVsbERhdGVcIjpcIjIwMTctMDEtMTdUMDc6MDA6MDAtMDg6MDBcIn0se1wiZGF0ZVwiOlwiMTctSmFuLTE3XCIsXCJ2YWx1ZVwiOjAsXCJmdWxsRGF0ZVwiOlwiMjAxNy0wMS0xN1QwOTowMDowMC0wODowMFwifSx7XCJkYXRlXCI6XCIxNy1KYW4tMTdcIixcInZhbHVlXCI6MCxcImZ1bGxEYXRlXCI6XCIyMDE3LTAxLTE3VDEwOjAwOjAwLTA4OjAwXCJ9LHtcImRhdGVcIjpcIjE3LUphbi0xN1wiLFwidmFsdWVcIjowLFwiZnVsbERhdGVcIjpcIjIwMTctMDEtMTdUMTE6MDA6MDAtMDg6MDBcIn0se1wiZGF0ZVwiOlwiMTctSmFuLTE3XCIsXCJ2YWx1ZVwiOjAsXCJmdWxsRGF0ZVwiOlwiMjAxNy0wMS0xN1QxMjowMDowMC0wODowMFwifSx7XCJkYXRlXCI6XCIxNy1KYW4tMTdcIixcInZhbHVlXCI6MCxcImZ1bGxEYXRlXCI6XCIyMDE3LTAxLTE3VDEzOjAwOjAwLTA4OjAwXCJ9LHtcImRhdGVcIjpcIjE3LUphbi0xN1wiLFwidmFsdWVcIjowLFwiZnVsbERhdGVcIjpcIjIwMTctMDEtMTdUMTQ6MDA6MDAtMDg6MDBcIn0se1wiZGF0ZVwiOlwiMTctSmFuLTE3XCIsXCJ2YWx1ZVwiOjAsXCJmdWxsRGF0ZVwiOlwiMjAxNy0wMS0xN1QxNTowMDowMC0wODowMFwifSx7XCJkYXRlXCI6XCIxNy1KYW4tMTdcIixcInZhbHVlXCI6MSxcImZ1bGxEYXRlXCI6XCIyMDE3LTAxLTE3VDE2OjAwOjAwLTA4OjAwXCJ9XX1dLFwiZGF0YUJ5RGF0ZVwiOlt7XCJkYXRlXCI6XCIyMDE3LTAxLTE2VDE2OjAwOjAwLTA4OjAwXCIsXCJ0b3BpY3NcIjpbe1wibmFtZVwiOi0xLFwidmFsdWVcIjowLFwidG9waWNOYW1lXCI6XCJRdWFudGl0eVwifV19LHtcImRhdGVcIjpcIjIwMTctMDEtMTZUMTc6MDA6MDAtMDg6MDBcIixcInRvcGljc1wiOlt7XCJuYW1lXCI6LTEsXCJ2YWx1ZVwiOjAsXCJ0b3BpY05hbWVcIjpcIlF1YW50aXR5XCJ9XX0se1wiZGF0ZVwiOlwiMjAxNy0wMS0xNlQxODowMDowMC0wODowMFwiLFwidG9waWNzXCI6W3tcIm5hbWVcIjotMSxcInZhbHVlXCI6MCxcInRvcGljTmFtZVwiOlwiUXVhbnRpdHlcIn1dfSx7XCJkYXRlXCI6XCIyMDE3LTAxLTE2VDE5OjAwOjAwLTA4OjAwXCIsXCJ0b3BpY3NcIjpbe1wibmFtZVwiOi0xLFwidmFsdWVcIjowLFwidG9waWNOYW1lXCI6XCJRdWFudGl0eVwifV19LHtcImRhdGVcIjpcIjIwMTctMDEtMTZUMjA6MDA6MDAtMDg6MDBcIixcInRvcGljc1wiOlt7XCJuYW1lXCI6LTEsXCJ2YWx1ZVwiOjAsXCJ0b3BpY05hbWVcIjpcIlF1YW50aXR5XCJ9XX0se1wiZGF0ZVwiOlwiMjAxNy0wMS0xNlQyMTowMDowMC0wODowMFwiLFwidG9waWNzXCI6W3tcIm5hbWVcIjotMSxcInZhbHVlXCI6MCxcInRvcGljTmFtZVwiOlwiUXVhbnRpdHlcIn1dfSx7XCJkYXRlXCI6XCIyMDE3LTAxLTE2VDIyOjAwOjAwLTA4OjAwXCIsXCJ0b3BpY3NcIjpbe1wibmFtZVwiOi0xLFwidmFsdWVcIjowLFwidG9waWNOYW1lXCI6XCJRdWFudGl0eVwifV19LHtcImRhdGVcIjpcIjIwMTctMDEtMTZUMjM6MDA6MDAtMDg6MDBcIixcInRvcGljc1wiOlt7XCJuYW1lXCI6LTEsXCJ2YWx1ZVwiOjAsXCJ0b3BpY05hbWVcIjpcIlF1YW50aXR5XCJ9XX0se1wiZGF0ZVwiOlwiMjAxNy0wMS0xN1QwMDowMDowMC0wODowMFwiLFwidG9waWNzXCI6W3tcIm5hbWVcIjotMSxcInZhbHVlXCI6MCxcInRvcGljTmFtZVwiOlwiUXVhbnRpdHlcIn1dfSx7XCJkYXRlXCI6XCIyMDE3LTAxLTE3VDAxOjAwOjAwLTA4OjAwXCIsXCJ0b3BpY3NcIjpbe1wibmFtZVwiOi0xLFwidmFsdWVcIjowLFwidG9waWNOYW1lXCI6XCJRdWFudGl0eVwifV19LHtcImRhdGVcIjpcIjIwMTctMDEtMTdUMDI6MDA6MDAtMDg6MDBcIixcInRvcGljc1wiOlt7XCJuYW1lXCI6LTEsXCJ2YWx1ZVwiOjAsXCJ0b3BpY05hbWVcIjpcIlF1YW50aXR5XCJ9XX0se1wiZGF0ZVwiOlwiMjAxNy0wMS0xN1QwMzowMDowMC0wODowMFwiLFwidG9waWNzXCI6W3tcIm5hbWVcIjotMSxcInZhbHVlXCI6MCxcInRvcGljTmFtZVwiOlwiUXVhbnRpdHlcIn1dfSx7XCJkYXRlXCI6XCIyMDE3LTAxLTE3VDA0OjAwOjAwLTA4OjAwXCIsXCJ0b3BpY3NcIjpbe1wibmFtZVwiOi0xLFwidmFsdWVcIjowLFwidG9waWNOYW1lXCI6XCJRdWFudGl0eVwifV19LHtcImRhdGVcIjpcIjIwMTctMDEtMTdUMDU6MDA6MDAtMDg6MDBcIixcInRvcGljc1wiOlt7XCJuYW1lXCI6LTEsXCJ2YWx1ZVwiOjAsXCJ0b3BpY05hbWVcIjpcIlF1YW50aXR5XCJ9XX0se1wiZGF0ZVwiOlwiMjAxNy0wMS0xN1QwNjowMDowMC0wODowMFwiLFwidG9waWNzXCI6W3tcIm5hbWVcIjotMSxcInZhbHVlXCI6MCxcInRvcGljTmFtZVwiOlwiUXVhbnRpdHlcIn1dfSx7XCJkYXRlXCI6XCIyMDE3LTAxLTE3VDA3OjAwOjAwLTA4OjAwXCIsXCJ0b3BpY3NcIjpbe1wibmFtZVwiOi0xLFwidmFsdWVcIjowLFwidG9waWNOYW1lXCI6XCJRdWFudGl0eVwifV19LHtcImRhdGVcIjpcIjIwMTctMDEtMTdUMDk6MDA6MDAtMDg6MDBcIixcInRvcGljc1wiOlt7XCJuYW1lXCI6LTEsXCJ2YWx1ZVwiOjAsXCJ0b3BpY05hbWVcIjpcIlF1YW50aXR5XCJ9XX0se1wiZGF0ZVwiOlwiMjAxNy0wMS0xN1QxMDowMDowMC0wODowMFwiLFwidG9waWNzXCI6W3tcIm5hbWVcIjotMSxcInZhbHVlXCI6MCxcInRvcGljTmFtZVwiOlwiUXVhbnRpdHlcIn1dfSx7XCJkYXRlXCI6XCIyMDE3LTAxLTE3VDExOjAwOjAwLTA4OjAwXCIsXCJ0b3BpY3NcIjpbe1wibmFtZVwiOi0xLFwidmFsdWVcIjowLFwidG9waWNOYW1lXCI6XCJRdWFudGl0eVwifV19LHtcImRhdGVcIjpcIjIwMTctMDEtMTdUMTI6MDA6MDAtMDg6MDBcIixcInRvcGljc1wiOlt7XCJuYW1lXCI6LTEsXCJ2YWx1ZVwiOjAsXCJ0b3BpY05hbWVcIjpcIlF1YW50aXR5XCJ9XX0se1wiZGF0ZVwiOlwiMjAxNy0wMS0xN1QxMzowMDowMC0wODowMFwiLFwidG9waWNzXCI6W3tcIm5hbWVcIjotMSxcInZhbHVlXCI6MCxcInRvcGljTmFtZVwiOlwiUXVhbnRpdHlcIn1dfSx7XCJkYXRlXCI6XCIyMDE3LTAxLTE3VDE0OjAwOjAwLTA4OjAwXCIsXCJ0b3BpY3NcIjpbe1wibmFtZVwiOi0xLFwidmFsdWVcIjowLFwidG9waWNOYW1lXCI6XCJRdWFudGl0eVwifV19LHtcImRhdGVcIjpcIjIwMTctMDEtMTdUMTU6MDA6MDAtMDg6MDBcIixcInRvcGljc1wiOlt7XCJuYW1lXCI6LTEsXCJ2YWx1ZVwiOjAsXCJ0b3BpY05hbWVcIjpcIlF1YW50aXR5XCJ9XX0se1wiZGF0ZVwiOlwiMjAxNy0wMS0xN1QxNjowMDowMC0wODowMFwiLFwidG9waWNzXCI6W3tcIm5hbWVcIjotMSxcInZhbHVlXCI6MSxcInRvcGljTmFtZVwiOlwiUXVhbnRpdHlcIn1dfV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2pzb24tbG9hZGVyIS4vdGVzdC9qc29uL2xpbmVEYXRhT25lU2V0SG91cmx5Lmpzb25cbi8vIG1vZHVsZSBpZCA9IDU4XG4vLyBtb2R1bGUgY2h1bmtzID0gNSJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 59 */
/***/ (function(module, exports) {

	eval("module.exports = {\"dataByTopic\":[{\"topic\":-1,\"dates\":[{\"date\":\"30-Dec-15\",\"value\":0,\"fullDate\":\"2015-12-30T00:00:00-08:00\"},{\"date\":\"31-Dec-15\",\"value\":2,\"fullDate\":\"2015-12-31T00:00:00-08:00\"},{\"date\":\"1-Jan-16\",\"value\":0,\"fullDate\":\"2016-01-01T00:00:00-08:00\"},{\"date\":\"2-Jan-16\",\"value\":0,\"fullDate\":\"2016-01-02T00:00:00-08:00\"},{\"date\":\"3-Jan-16\",\"value\":0,\"fullDate\":\"2016-01-03T00:00:00-08:00\"},{\"date\":\"4-Jan-16\",\"value\":0,\"fullDate\":\"2016-01-04T00:00:00-08:00\"}],\"topicName\":\"Sales\"}],\"dataByDate\":[{\"date\":\"2015-12-30T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Sales\"}]},{\"date\":\"2015-12-31T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":2,\"topicName\":\"Sales\"}]},{\"date\":\"2016-01-01T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Sales\"}]},{\"date\":\"2016-01-02T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Sales\"}]},{\"date\":\"2016-01-03T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Sales\"}]},{\"date\":\"2016-01-04T08:00:00.000Z\",\"topics\":[{\"name\":-1,\"value\":0,\"topicName\":\"Sales\"}]}]}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90ZXN0L2pzb24vbGluZURhdGFTbWFsbFZhbHVlUmFuZ2UuanNvbj8yNGQ1Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1wiZGF0YUJ5VG9waWNcIjpbe1widG9waWNcIjotMSxcImRhdGVzXCI6W3tcImRhdGVcIjpcIjMwLURlYy0xNVwiLFwidmFsdWVcIjowLFwiZnVsbERhdGVcIjpcIjIwMTUtMTItMzBUMDA6MDA6MDAtMDg6MDBcIn0se1wiZGF0ZVwiOlwiMzEtRGVjLTE1XCIsXCJ2YWx1ZVwiOjIsXCJmdWxsRGF0ZVwiOlwiMjAxNS0xMi0zMVQwMDowMDowMC0wODowMFwifSx7XCJkYXRlXCI6XCIxLUphbi0xNlwiLFwidmFsdWVcIjowLFwiZnVsbERhdGVcIjpcIjIwMTYtMDEtMDFUMDA6MDA6MDAtMDg6MDBcIn0se1wiZGF0ZVwiOlwiMi1KYW4tMTZcIixcInZhbHVlXCI6MCxcImZ1bGxEYXRlXCI6XCIyMDE2LTAxLTAyVDAwOjAwOjAwLTA4OjAwXCJ9LHtcImRhdGVcIjpcIjMtSmFuLTE2XCIsXCJ2YWx1ZVwiOjAsXCJmdWxsRGF0ZVwiOlwiMjAxNi0wMS0wM1QwMDowMDowMC0wODowMFwifSx7XCJkYXRlXCI6XCI0LUphbi0xNlwiLFwidmFsdWVcIjowLFwiZnVsbERhdGVcIjpcIjIwMTYtMDEtMDRUMDA6MDA6MDAtMDg6MDBcIn1dLFwidG9waWNOYW1lXCI6XCJTYWxlc1wifV0sXCJkYXRhQnlEYXRlXCI6W3tcImRhdGVcIjpcIjIwMTUtMTItMzBUMDg6MDA6MDAuMDAwWlwiLFwidG9waWNzXCI6W3tcIm5hbWVcIjotMSxcInZhbHVlXCI6MCxcInRvcGljTmFtZVwiOlwiU2FsZXNcIn1dfSx7XCJkYXRlXCI6XCIyMDE1LTEyLTMxVDA4OjAwOjAwLjAwMFpcIixcInRvcGljc1wiOlt7XCJuYW1lXCI6LTEsXCJ2YWx1ZVwiOjIsXCJ0b3BpY05hbWVcIjpcIlNhbGVzXCJ9XX0se1wiZGF0ZVwiOlwiMjAxNi0wMS0wMVQwODowMDowMC4wMDBaXCIsXCJ0b3BpY3NcIjpbe1wibmFtZVwiOi0xLFwidmFsdWVcIjowLFwidG9waWNOYW1lXCI6XCJTYWxlc1wifV19LHtcImRhdGVcIjpcIjIwMTYtMDEtMDJUMDg6MDA6MDAuMDAwWlwiLFwidG9waWNzXCI6W3tcIm5hbWVcIjotMSxcInZhbHVlXCI6MCxcInRvcGljTmFtZVwiOlwiU2FsZXNcIn1dfSx7XCJkYXRlXCI6XCIyMDE2LTAxLTAzVDA4OjAwOjAwLjAwMFpcIixcInRvcGljc1wiOlt7XCJuYW1lXCI6LTEsXCJ2YWx1ZVwiOjAsXCJ0b3BpY05hbWVcIjpcIlNhbGVzXCJ9XX0se1wiZGF0ZVwiOlwiMjAxNi0wMS0wNFQwODowMDowMC4wMDBaXCIsXCJ0b3BpY3NcIjpbe1wibmFtZVwiOi0xLFwidmFsdWVcIjowLFwidG9waWNOYW1lXCI6XCJTYWxlc1wifV19XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vanNvbi1sb2FkZXIhLi90ZXN0L2pzb24vbGluZURhdGFTbWFsbFZhbHVlUmFuZ2UuanNvblxuLy8gbW9kdWxlIGlkID0gNTlcbi8vIG1vZHVsZSBjaHVua3MgPSA1Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ })
]);